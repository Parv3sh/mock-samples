{
  "uuid": "09b4e03a-67db-4140-bd32-a74ba4e97913",
  "lastMigration": 19,
  "name": "AWS Glue",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "6f9731ec-4fd8-4741-bc7f-defa4eba6a9d",
      "documentation": "Creates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchCreatePartition",
      "responses": [
        {
          "uuid": "7dbfee24-aced-4fa2-ba8e-80331cff8fe3",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d82498c7-014d-421b-90d2-8baa8ee1fb91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a83bbb4-02c9-4376-a8c8-8a175958529b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b5bebe5-7c60-41e1-b2ce-8e4780675b96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7aafd62f-8f8d-4d63-9cb2-fd2d9ce37c2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9abb8f-8ddd-4a67-8884-eabeeb3807fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f344ab9e-17ea-4209-bba3-3037fed97ea3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1da2552-025a-4dd0-8a3e-87a9d60c4733",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83d35016-54de-4b7d-a8a8-de127adef7a1",
      "documentation": "Deletes a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteConnection",
      "responses": [
        {
          "uuid": "dabecc58-17ec-4736-be11-347028ef5a17",
          "body": "{\n  \"Succeeded\": [\n    \"\"\n  ],\n  \"Errors\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "273ec94b-ff83-480f-849d-19678ad0b639",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df31ae18-2a44-42f6-8ab3-227d6528e10d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab4710b1-cb69-48e4-a724-bf84d2f9b8ca",
      "documentation": "Deletes one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeletePartition",
      "responses": [
        {
          "uuid": "b20f69d0-da33-4a6c-8db3-e051b19b37f7",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00d4dace-40bb-4951-a9de-af0ca994d57b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "440ad6d3-321e-499f-b19d-63e00c9ebcc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "298ab7b8-b8db-4fee-9119-1529d2a46000",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98ae0c17-8b29-4d77-9e20-7d81c92f2cf6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b8b2499-a204-4642-aff6-7881ced45845",
      "documentation": "<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTable",
      "responses": [
        {
          "uuid": "a03cf845-64b2-4d62-8707-51c27d7b66c4",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0279e9a5-fe49-4ba8-9223-66f88b933c27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2053d819-39bd-41fd-802f-c2ba067dfc37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0cc8463-da4a-4172-9e44-2fb23c284726",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c5a641d-c688-4919-8b6a-9d555611c4c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c94eb152-b406-407a-b4ac-cf3c6827dd64",
      "documentation": "Deletes a specified batch of versions of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTableVersion",
      "responses": [
        {
          "uuid": "102a7af4-f6b4-4780-aba3-1c75da64fbcb",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"VersionId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38d802ff-7a8c-44ae-ac8b-66133ff68fd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c851ba15-2f60-4f0a-805e-5da48c076b13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d1627fa-3d22-4c7b-84f7-23fa4be34b1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beb7f17c-52fc-4ce2-b7cc-4150c9bd46cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf76ede6-97d7-4808-b6d3-b997f4d93e2a",
      "documentation": "Retrieves information about a list of blueprints.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetBlueprints",
      "responses": [
        {
          "uuid": "9da258d7-ee9a-4e8c-b245-74da1351c3c9",
          "body": "{\n  \"Blueprints\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastActiveDefinition\": {\n        \"Description\": \"\",\n        \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n        \"ParameterSpec\": \"\",\n        \"BlueprintLocation\": \"\",\n        \"BlueprintServiceLocation\": \"\"\n      }\n    }\n  ],\n  \"MissingBlueprints\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ff9ce26-5a89-4146-8e7f-27515241a244",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d582b8e-e11a-4055-ab8f-fba9096e37e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad155b0-93d7-4d9b-9d64-ed3a4c1d1d12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "785f1114-b890-4619-9781-152479962219",
      "documentation": "Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetCrawlers",
      "responses": [
        {
          "uuid": "e4c156bc-b1c8-45d5-8a47-bba0821c406d",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'random.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'random.boolean'}},\n            \"scanRate\": {{faker 'random.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'random.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'random.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"CrawlersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7730311d-5a9e-4e93-89da-555752b3dd59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b0df282-4961-454d-8ed3-87562ce6a855",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "399c0318-a9f1-4dbe-831d-50c2540d1662",
      "documentation": "Returns a list of resource metadata for a given list of development endpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetDevEndpoints",
      "responses": [
        {
          "uuid": "60655f6b-5228-4f5d-bc10-9f58a6b6d012",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"NumberOfNodes\": {{faker 'random.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"DevEndpointsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e576be0-958c-4339-9978-552a7edf6b8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e99bb49-54b2-43c1-9808-6db6f49a2ae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d21d7ec7-5c44-4017-b1a9-97789e1511d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a129994-1cf9-4b02-91b6-1929704619a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b4560ba-b82f-4329-9ca0-acbd991ce142",
      "documentation": "Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetJobs",
      "responses": [
        {
          "uuid": "a853dc91-4ca0-4b47-b7b8-4f886c3952b6",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'random.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"JobsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a0ba13d-2f0a-437d-8916-540058748723",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3ff2325-4d76-4295-a7db-8c23652bc28d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cebc7476-1903-4b03-bbbf-2954e774642c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1d84168-fe55-403f-966f-4d98d1b2ac10",
      "documentation": "Retrieves partitions in a batch request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetPartition",
      "responses": [
        {
          "uuid": "c1a6f6f6-f6bf-4080-a612-0d56b6592b56",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"UnprocessedKeys\": [\n    {\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e6db556-9ef1-418c-8834-ff45d21b8fc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2fe88dc-6460-4ec6-b2bd-65271e437fba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b4c425b-f2c6-4783-b6dd-6f1d49296a3c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d9f2731-2893-4477-aece-3dcffcdaf82b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06e31008-ace8-4eb3-a30f-5572506ddc06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71af90fa-3f12-4093-8d71-0cfc678a0429",
      "documentation": "Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetTriggers",
      "responses": [
        {
          "uuid": "c202e87b-f7d6-4775-902d-9d68ffd41505",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'random.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'random.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"TriggersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e3845d0-3a30-485b-80f9-b207d65b2022",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7ebe1da-5785-4020-9278-d8be1cd03ad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3465b494-0c93-4980-8d00-f05dfd6d9500",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "415f4628-5c5b-4ee1-b85f-e448f31f6548",
      "documentation": "Returns a list of resource metadata for a given list of workflow names. After calling the <code>ListWorkflows</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetWorkflows",
      "responses": [
        {
          "uuid": "798d9113-ceca-490e-a9a9-990a6e5d4e65",
          "body": "{\n  \"Workflows\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefaultRunProperties\": {},\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastRun\": {\n        \"Name\": \"\",\n        \"WorkflowRunId\": \"\",\n        \"PreviousRunId\": \"\",\n        \"WorkflowRunProperties\": {},\n        \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n        \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"Statistics\": {\n          \"TotalActions\": {{faker 'random.number'}},\n          \"TimeoutActions\": {{faker 'random.number'}},\n          \"FailedActions\": {{faker 'random.number'}},\n          \"StoppedActions\": {{faker 'random.number'}},\n          \"SucceededActions\": {{faker 'random.number'}},\n          \"RunningActions\": {{faker 'random.number'}}\n        },\n        \"Graph\": {\n          \"Nodes\": [\n            {\n              \"Type\": \"\",\n              \"Name\": \"\",\n              \"UniqueId\": \"\",\n              \"TriggerDetails\": {\n                \"Trigger\": {\n                  \"Name\": \"\",\n                  \"WorkflowName\": \"\",\n                  \"Id\": \"\",\n                  \"Type\": \"\",\n                  \"State\": \"\",\n                  \"Description\": \"\",\n                  \"Schedule\": \"\",\n                  \"Actions\": [\n                    {\n                      \"JobName\": \"\",\n                      \"Arguments\": {},\n                      \"Timeout\": {{faker 'random.number'}},\n                      \"SecurityConfiguration\": \"\",\n                      \"NotificationProperty\": {\n                        \"NotifyDelayAfter\": {{faker 'random.number'}}\n                      },\n                      \"CrawlerName\": \"\"\n                    }\n                  ],\n                  \"Predicate\": {\n                    \"Logical\": \"\",\n                    \"Conditions\": [\n                      {\n                        \"LogicalOperator\": \"\",\n                        \"JobName\": \"\",\n                        \"State\": \"\",\n                        \"CrawlerName\": \"\",\n                        \"CrawlState\": \"\"\n                      }\n                    ]\n                  },\n                  \"EventBatchingCondition\": {\n                    \"BatchSize\": {{faker 'random.number'}},\n                    \"BatchWindow\": {{faker 'random.number'}}\n                  }\n                }\n              },\n              \"JobDetails\": {\n                \"JobRuns\": [\n                  {\n                    \"Id\": \"\",\n                    \"Attempt\": {{faker 'random.number'}},\n                    \"PreviousRunId\": \"\",\n                    \"TriggerName\": \"\",\n                    \"JobName\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"JobRunState\": \"\",\n                    \"Arguments\": {},\n                    \"ErrorMessage\": \"\",\n                    \"PredecessorRuns\": [\n                      {\n                        \"JobName\": \"\",\n                        \"RunId\": \"\"\n                      }\n                    ],\n                    \"AllocatedCapacity\": {{faker 'random.number'}},\n                    \"ExecutionTime\": {{faker 'random.number'}},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"MaxCapacity\": {{faker 'random.float'}},\n                    \"WorkerType\": \"\",\n                    \"NumberOfWorkers\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"LogGroupName\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"GlueVersion\": \"\"\n                  }\n                ]\n              },\n              \"CrawlerDetails\": {\n                \"Crawls\": [\n                  {\n                    \"State\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"ErrorMessage\": \"\",\n                    \"LogGroup\": \"\",\n                    \"LogStream\": \"\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"Edges\": [\n            {\n              \"SourceId\": \"\",\n              \"DestinationId\": \"\"\n            }\n          ]\n        },\n        \"StartingEventBatchCondition\": {\n          \"BatchSize\": {{faker 'random.number'}},\n          \"BatchWindow\": {{faker 'random.number'}}\n        }\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"MaxConcurrentRuns\": {{faker 'random.number'}},\n      \"BlueprintDetails\": {\n        \"BlueprintName\": \"\",\n        \"RunId\": \"\"\n      }\n    }\n  ],\n  \"MissingWorkflows\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93b0981a-995d-4525-924a-3f9649a18df6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e23ca34e-7c50-44a2-8a17-0cb0519b3d27",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f214517-ce32-418f-9270-e99d42f38f9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "558739a5-c463-42db-bab9-6045c5c48c30",
      "documentation": "Stops one or more job runs for a specified job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchStopJobRun",
      "responses": [
        {
          "uuid": "11853175-cdb2-4f43-8c98-0bb8efc95100",
          "body": "{\n  \"SuccessfulSubmissions\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  ],\n  \"Errors\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82aa76ee-ec1a-4d9a-b1db-a599b4728ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43b8dfae-7f71-4c5f-a395-c1b212208973",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05c5ea8d-aaf1-41be-b343-7dcc8e23a1d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4563280c-a446-438e-9d12-1568a2387ae9",
      "documentation": "Updates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchUpdatePartition",
      "responses": [
        {
          "uuid": "f704aead-ab69-473b-8021-4f73ff55f428",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValueList\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "324af915-b675-45f3-991c-d63d50ff3dfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a1fc808-c62a-4c10-9144-ef2529c7e4ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c6d8f6b-4084-4f0e-870c-ecb14fd5e138",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74bc3275-cd15-467e-b87e-8e716b0fb62d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8563a478-b8a8-4cae-8cd4-b07eb8598e25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "60513a97-4433-419d-8965-b0391f136466",
      "documentation": "Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run's parent transform's <code>TransformID</code> and the task run's <code>TaskRunId</code>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CancelMLTaskRun",
      "responses": [
        {
          "uuid": "8f58467a-e466-469f-abe6-79137fea5de1",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ab9879a-c30b-4f68-96c9-a389042d5022",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "067dec6a-21c5-4b49-bdc1-6d5fd607cfc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45d9be70-c40c-4e93-af78-0413b530234a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bd9211b-850b-4ea9-b05f-aaef8cef12fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e94b6cea-2d8c-4ff7-9034-a6174489b3d8",
      "documentation": "Validates the supplied schema. This call has no side effects, it simply validates using the supplied schema using <code>DataFormat</code> as the format. Since it does not take a schema set name, no compatibility checks are performed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CheckSchemaVersionValidity",
      "responses": [
        {
          "uuid": "7d2dedc6-c6f6-4f59-a6a0-303eb452db7c",
          "body": "{\n  \"Valid\": {{faker 'random.boolean'}},\n  \"Error\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e381c6c7-4bd3-4c37-be58-854a9a076230",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cb4ba56-737e-42e8-9b0b-79cfa1a9f0f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f00eac4-ef7e-4ec9-9d9d-6d77fe77e4ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f28395c-f213-4b85-8d5e-db86a2489957",
      "documentation": "Registers a blueprint with Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateBlueprint",
      "responses": [
        {
          "uuid": "0787f685-6b90-4c40-9ec4-40c5ed5494a4",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3de0e4df-757f-4513-9b00-4f1e67bca070",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c6f66c5-459f-4235-bf73-e0b218326088",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d3a25e-d927-4601-ba69-b6f22c58325d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aa5c7c3-4066-4f35-b5e3-f25a486f2927",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b100689b-470d-407a-a570-8af0359bf50c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1d5c64e-a84f-46e9-873c-bdefa902b937",
      "documentation": "Creates a classifier in the user's account. This can be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field of the request is present.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateClassifier",
      "responses": [
        {
          "uuid": "2e142795-2354-42bb-8bf4-c3c78873eb48",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "237ecf33-6ebb-4593-9804-b09a19ed56ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17d971b7-4b38-4c88-b8ac-738235d7628e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b995ae4c-c868-4a7e-b6be-af35ff6bcc52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf916096-b9a2-4375-84b9-c520f7e16941",
      "documentation": "Creates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateConnection",
      "responses": [
        {
          "uuid": "dff86283-efc6-4387-8473-4c3a58211c23",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2ed6730-4e6d-4c77-810f-0729c82c83a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91a0ed9a-eedb-47c6-a855-01c7fde01556",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb725b7-c879-4ba2-8413-80c96c92bfdf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bad3e3fb-d691-4ffd-a611-e51d54d94d53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8286397-eedf-4f9f-bb18-88b798b23657",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "40254db0-7182-4aba-ae40-d202e4022fed",
      "documentation": "Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateCrawler",
      "responses": [
        {
          "uuid": "e56915ab-b9d6-4640-adf3-21daf5a29b10",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af45744f-c3f7-47db-88b7-e61c530d6240",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc956603-7826-455a-abe9-ba37e6aeb985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "765e4eaa-b54a-42b1-b9c2-51198c8c2d34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "691b6e70-0e9b-4d20-8566-7f1943b8d61e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0edf769d-b8de-4aac-b427-9cff3080a84f",
      "documentation": "Creates a new database in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDatabase",
      "responses": [
        {
          "uuid": "fef5eb0f-e835-4b95-ac4e-5e2f0b716693",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "accd7c95-7e3e-48b5-850e-d5e618714a17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54d99447-7aa4-4a29-b611-47f2229a290c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2daabee0-73a6-4d6c-9c2b-34d021b2c5f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8d095d6-912b-4f73-b56a-3480546a3ba8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcf153e1-13c5-406b-9674-8bfd096391c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "913b9375-367f-4cac-bf8f-012d2044cd4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "616d0421-db79-413b-b6d2-46f9b6096705",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "525fff19-cfc6-416b-bc59-fd56d67a398a",
      "documentation": "Creates a new development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDevEndpoint",
      "responses": [
        {
          "uuid": "b646dbf9-a48b-417a-9d90-929e47cf806c",
          "body": "{\n  \"EndpointName\": \"\",\n  \"Status\": \"\",\n  \"SecurityGroupIds\": [\n    \"\"\n  ],\n  \"SubnetId\": \"\",\n  \"RoleArn\": \"\",\n  \"YarnEndpointAddress\": \"\",\n  \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n  \"NumberOfNodes\": {{faker 'random.number'}},\n  \"WorkerType\": \"\",\n  \"GlueVersion\": \"\",\n  \"NumberOfWorkers\": {{faker 'random.number'}},\n  \"AvailabilityZone\": \"\",\n  \"VpcId\": \"\",\n  \"ExtraPythonLibsS3Path\": \"\",\n  \"ExtraJarsS3Path\": \"\",\n  \"FailureReason\": \"\",\n  \"SecurityConfiguration\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"Arguments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "521eca5d-d9db-4806-81c8-d2494edafa53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a46b98e0-b296-4b63-aaa7-27929009a1c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c3fd0a3-641b-4c2f-a903-488eaa6152f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d322e15f-9f52-483c-a74f-b314ead238f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9e51972-629b-4251-bd35-529fddc2ce40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "014fb385-5c38-4a35-b877-19f519299e52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcddccc3-9b5e-452b-8072-b332104310ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87b930a8-4310-493d-bc71-2b2a9abadcfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69a48b2a-07d1-4c29-bbd4-0aa61965dcec",
      "documentation": "Creates a new job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateJob",
      "responses": [
        {
          "uuid": "eeaf6eb0-0bdd-438b-87d6-544b5595ce59",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "436880db-6e8d-4520-badd-441a640724ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53c7e476-3056-4779-8de0-6c71d5c9b6fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e30c4c48-ba8a-4dfc-a295-1aa6b75fbd6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a52947ad-c7d5-4d73-bd2d-0fb22fcfad64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "995cbe50-eb08-49a9-b4b9-9e39e8915149",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8ce6887-2923-45cf-9c23-627e93075555",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4cb4a71-71d4-46b7-8adf-48e0e2c2d996",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "59635877-21b4-4383-9ad3-6c100e652cc3",
      "documentation": "<p>Creates an Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.</p> <p>Call this operation as the first step in the process of using a machine learning transform (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide an optional <code>Description</code>, in addition to the parameters that you want to use for your algorithm.</p> <p>You must also specify certain parameters for the tasks that Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html\">Jobs</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateMLTransform",
      "responses": [
        {
          "uuid": "359e0175-a3c3-4345-9eca-30e47564c32a",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c07655d-d358-4250-837d-ec7dbcfc30e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4d39a38-4ef0-4852-8de8-fad7eb3b7d71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "727d3177-6897-48d6-8226-7d1dd4fabed7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9caaefef-a059-411a-80cc-b747f8716439",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b0bae6d-2b9f-4a5b-9ebc-35e3f0c8263d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "309dd38a-47fa-41cc-8e40-3c5b676b43b3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45ced5c8-d4da-4912-b0e9-698635809d18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb14e6f1-9175-4dc1-a248-f4f4b284962f",
      "documentation": "Creates a new partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartition",
      "responses": [
        {
          "uuid": "05e5272b-d7af-4425-9704-00aec56e89e9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd6af8a6-75ac-4dfb-ab40-99baee43fe83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd59a2b7-788e-4c34-9a6f-c5f4ef7501ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62fd09bb-2bad-4f50-804f-b92502124cbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4f54a37-ed08-4760-90ad-b03fb140104d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed42e179-dd17-4c7e-b301-8cab0729e02d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "114441cc-fcb6-400e-849b-9475ed0a37af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34738f00-53d1-4855-b0ac-1c85125afd52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db1c8333-816d-4e9b-9693-af191d8f7b50",
      "documentation": "Creates a specified partition index in an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartitionIndex",
      "responses": [
        {
          "uuid": "783bbc6c-31e6-4bb0-9c1e-43c76c511a05",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75fae683-7d8d-40d8-a2e8-9b908d1fbe61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67825427-80c8-467f-bdc5-b382b89b69b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4bc12e6-734a-4194-aeea-c528af51122d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e635f7ba-0fbe-4c84-ad51-b27a33d9149e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b1a856e-e5f0-44f3-bfd3-969d7f16597a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9bed1ed-928a-4c35-9a99-bf9aa07cf871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4feaba3-1e4b-4ef4-ac8f-84ca8ae66708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ee70af09-7e2e-4a4b-84b3-c147a09b12c2",
      "documentation": "Creates a new registry which may be used to hold a collection of schemas.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateRegistry",
      "responses": [
        {
          "uuid": "3af93b0a-a47c-44d2-8945-9d46cd09209c",
          "body": "{\n  \"RegistryArn\": \"\",\n  \"RegistryName\": \"\",\n  \"Description\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b347ec34-43e1-42a4-88e5-501d93ef21c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "875ba17f-83a0-481d-baaf-25f64e41a330",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "462f5f2c-caeb-4e06-bbf0-e6ba3bce0916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbda7ecf-2d5d-43d7-b7b2-9a7315e8b553",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "489619e1-67ec-45d1-9cdd-dd9053d31822",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "233f7bd6-62a4-4890-8be3-c9358af74093",
      "documentation": "<p>Creates a new schema set and registers the schema definition. Returns an error if the schema set already exists without actually registering the version.</p> <p>When the schema set is created, a version checkpoint will be set to the first version. Compatibility mode \"DISABLED\" restricts any additional schema versions from being added after the first schema version. For all other compatibility modes, validation of compatibility settings will be applied only from the second version onwards when the <code>RegisterSchemaVersion</code> API is used.</p> <p>When this API is called without a <code>RegistryId</code>, this will create an entry for a \"default-registry\" in the registry database tables, if it is not already present.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSchema",
      "responses": [
        {
          "uuid": "a430f703-2448-4479-958a-9f827c23966b",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'random.number'}},\n  \"LatestSchemaVersion\": {{faker 'random.number'}},\n  \"NextSchemaVersion\": {{faker 'random.number'}},\n  \"SchemaStatus\": \"\",\n  \"Tags\": {},\n  \"SchemaVersionId\": \"\",\n  \"SchemaVersionStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65362a46-b1a7-4473-a44b-97a20bf4f73d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65f5b87f-c848-4e2f-985f-5afff6878b74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3614aab-cff8-4e68-9b8f-00801b246788",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9bec2af-7fda-4806-ba5d-6916e7b2a64a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c498a8f-7b80-4916-9416-892c88afc817",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5d1015d-1d44-49ff-8f2d-090ea6a830d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e366e78-dbe4-41f5-b8fb-75ca51d5d5af",
      "documentation": "Transforms a directed acyclic graph (DAG) into code.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateScript",
      "responses": [
        {
          "uuid": "da90c487-a7e4-463b-8a3d-e7a8f5bea938",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "781fb758-071d-4042-a3f0-de8de6f4c8ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1ecdd64-0794-4abd-bcfe-731694c54aa1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c4126b6-5856-4b44-8ccf-25e597966782",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e3db76c-07a6-4eae-be9e-ac8b1c9905b2",
      "documentation": "Creates a new security configuration. A security configuration is a set of security properties that can be used by Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html\">Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSecurityConfiguration",
      "responses": [
        {
          "uuid": "97bebf48-bae7-4953-ad36-dd6d5e957949",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "813d5f8e-51f9-4998-8bc3-041b3d0afc89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02b5fa62-8fa8-4935-a668-ca96d66ead87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ab88aa8-d132-4f00-9a62-ffb08b0d7748",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eff9fd87-affd-4fec-a252-5aab585906e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32468c4f-727f-4a7d-83e5-d9c3023c2208",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0236eac8-202b-46a2-bc02-4c488337ab62",
      "documentation": "Creates a new table definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTable",
      "responses": [
        {
          "uuid": "abe7c2df-839f-4191-90f8-237ecd08918e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d06fd54-6e32-4d45-8d06-b10d439055ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21bc54da-1e2e-4d5b-83df-76949991e264",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6460e8f-79a2-4217-863d-90a6cc2947e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39f19402-498d-44a3-81d1-bd0e3ff82032",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a869e333-d3b3-4165-9554-8f250498d990",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37110176-2ec3-4255-936c-d487a6db9bab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68bb0c7a-916a-43ac-9125-3c95ac4ab472",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee629339-cabb-4bfb-b814-c820f502a888",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9ba9414c-4e5e-45d7-abb1-2bf701d61e1c",
      "documentation": "Creates a new trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTrigger",
      "responses": [
        {
          "uuid": "56a59df6-3755-4aba-b408-2cc3971820d2",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95a79a3e-f384-41b4-b49f-bec3879c560b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6657954-7434-41be-bcc5-17130229e7aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71fbaefc-65e1-4803-98cb-8919f63405ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed416902-1362-41f7-9be2-6a6ca6258ca5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "720be507-676a-43e8-b097-802b5e5b4629",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb795de8-6fcd-44fd-b306-6f738db60ab2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8773247-d694-42c5-8a5a-602663f574ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "273c486d-b21a-4bde-b051-c5b061be5d50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c2c2507-5fda-4b6f-aac8-10b73dec8256",
      "documentation": "Creates a new function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateUserDefinedFunction",
      "responses": [
        {
          "uuid": "4372cbcb-c73e-4c90-98d2-699c401bc1a1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70ca43e4-440c-4ef5-982f-85e08d8c893e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afaeba4a-daf5-4500-b902-8c465404d3ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4aa8b428-8282-49b6-884d-c2cb16fc2557",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71d2cc6f-4c94-473c-bec8-184e7f80b5ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a686444-6117-4082-baea-98c03ee9b05f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3185acd0-e4e3-4bd5-a93f-532a922dc034",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce4bc532-d74d-4025-84a0-19fbfaa7f71c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7cddc9c0-2519-4a6c-9716-d9ddc3870fac",
      "documentation": "Creates a new workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateWorkflow",
      "responses": [
        {
          "uuid": "f2ff7c51-8533-4ec3-a5de-1923b5d3cdcf",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "416aaed6-a778-4a3c-bdab-dec96c667890",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ef86b4b-cba5-44a2-b5d8-38e61c17cf25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f86e1a29-4612-4592-8c6f-95d992770b1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d9e6f49-0014-48f5-934a-5e175547911a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b937bfc3-935a-45db-a5f5-480e692902e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2daf8b1f-df26-41a4-80f7-f4f4138b0c43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "139e6c42-9d2a-4cec-b785-f6e27af57dcf",
      "documentation": "Deletes an existing blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteBlueprint",
      "responses": [
        {
          "uuid": "bb6d46b9-e481-46bd-b991-137d6183f097",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2042ec92-bb48-4cf1-91a9-fbf6df95e2aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09f0f1d9-b533-4891-b04d-7a683b8074be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd51a2e1-11f3-4023-9314-1a9c5a1adc19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e099ba8-0294-4030-8848-8ff04121ef3c",
      "documentation": "Removes a classifier from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteClassifier",
      "responses": [
        {
          "uuid": "f476ed61-2fce-461a-a2c3-8f4f8d67a1b8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29699e98-654a-4651-9996-22bc013f9b55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "393c563e-c89a-4914-9d30-4ba00bb09c83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0205b26c-49ca-490f-b9c8-9f0e31e1abb3",
      "documentation": "<p>Delete the partition column statistics of a column.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeletePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "71eaaed4-18f8-4840-8cff-8455ec7bedf2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d30acc6-772a-4088-91b3-783841579d3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd7d2b94-58e7-472f-865c-ec523bce4209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5f7a90e-0fab-4f42-b270-94c6db5e7dde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0b6cc14-9067-4362-910c-d37b7f3f2a50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9051bcc7-abb8-4acb-a678-fc10900df8f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b89db9c-83de-41c6-891b-5301a99b66e6",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeleteTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "6c4ec301-db8d-4a21-81a3-37c44bbbc3cb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee59fc52-1b32-45dd-95ff-c52c5547c513",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "337e49d4-dbd0-46f6-9b69-a7fbe5a5d004",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b79535d6-e9d5-48e5-bd3c-0f55f6aaf985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a4655c9-bc25-4556-ad3d-bc9418f6d3a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f17d8181-7383-4ae8-812d-2a52979a3c77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3afcb64-ef95-446a-b6a4-af3a5d381e72",
      "documentation": "Deletes a connection from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteConnection",
      "responses": [
        {
          "uuid": "ae9a5303-777b-4623-9f16-d63b63588fdb",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0ce8a88-630d-4ca4-892b-b1420f8b70e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d601ac9c-3128-444c-8894-199ed1fd3253",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "14676d4b-34e7-41fd-9c5a-314165122ff5",
      "documentation": "Removes a specified crawler from the Glue Data Catalog, unless the crawler state is <code>RUNNING</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteCrawler",
      "responses": [
        {
          "uuid": "9275acee-ebb8-48de-a733-c8c7a41a0d53",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e892769-d16f-4c62-ac19-8e5ac7dc78df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58438b74-f0fb-4ae4-b377-3e85c4057e62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e86ff45-04c9-4a69-8a30-079ca49490a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b40e37cd-28d4-4164-98a6-ccdddfd5469f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82785ea4-4cc7-4cfd-a52d-ef723a071238",
      "documentation": "<p>Removes a specified database from a Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDatabase",
      "responses": [
        {
          "uuid": "bf3bb1cc-3023-4520-a6bd-a3a09ab4d8dd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cb6d056-86c2-4be7-b07d-0f63301107bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1846151b-2021-4f83-8727-38f6dc1cbae7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d85b9ae8-8a1d-4550-a1a3-127b3010b3e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f07705b7-d71b-4e8b-9aec-94d2cda53083",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b368ae2-9b07-4449-91a6-dcf1a3a1b703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62100a63-66c9-48ad-9414-fe5ba0ded136",
      "documentation": "Deletes a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDevEndpoint",
      "responses": [
        {
          "uuid": "29c2e60a-b5d1-414e-bf04-d1d1944b28a4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c429ea4-b541-402f-9a4b-c757a4b01c94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d618e85e-ff18-484c-8d25-237400801013",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74a71e1a-7d23-4d5a-92aa-4e6087806514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dfe5b54-6bed-4237-ae09-535f4f618252",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa9d7c52-221d-4ff7-98b3-ea8ff31078c1",
      "documentation": "Deletes a specified job definition. If the job definition is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteJob",
      "responses": [
        {
          "uuid": "657da239-e62f-4576-8f66-fe732a96c52b",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b55daa2d-112d-4660-9e69-0f070a179462",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbc0b527-8a87-4f82-b513-4e7fe6c92ba9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c58828b-89a0-4528-bff7-81c28a9acc6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c05c028-1c7a-4786-91ec-5fc9ac3340b3",
      "documentation": "Deletes an Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. If you no longer need a transform, you can delete it by calling <code>DeleteMLTransforms</code>. However, any Glue jobs that still reference the deleted transform will no longer succeed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteMLTransform",
      "responses": [
        {
          "uuid": "0692953c-356f-426a-9a4f-0e511e6b6eb6",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7c75eea-fba3-45e9-9bd2-ca0e9a9a276e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf23958d-d2b2-4307-8d0a-fd91e6521653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d55bc444-c10f-4fe3-902d-9d9c8a63c4ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b5873e9-6360-475c-a113-94781ba515bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69aaa06c-8d32-48b7-89a6-30ebcb6967c4",
      "documentation": "Deletes a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartition",
      "responses": [
        {
          "uuid": "6379acef-5fe1-48ec-9ca4-bf77783e368f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4666d72b-997c-4dbc-a693-f1869d19806c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc0f9cef-5e59-4b39-abcb-8fc77e986059",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ac0856e-8e16-4278-939b-00b414e8eee5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d7d7667-ed76-488f-898e-36340891a46e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bb4cc68-abea-4348-a081-c18edf9d9873",
      "documentation": "Deletes a specified partition index from an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartitionIndex",
      "responses": [
        {
          "uuid": "6daa322d-ce77-4399-9e63-e406c087a3a2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4ab8007-04e5-48ce-a5db-67b73b7aeb8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91edb892-fd45-4d50-bdaf-8c3d369186e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41573f82-4bda-490b-b565-db75893afcf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22046df4-2217-4c1c-b91e-b4ba85b44778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ab6ae85-210e-426e-8216-ab00ad13189e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11f8808e-843f-4341-82f3-8e173edf3692",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "197ff7d4-ae62-488e-84fd-4f07cc9914b9",
      "documentation": "Delete the entire registry including schema and all of its versions. To get the status of the delete operation, you can call the <code>GetRegistry</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the registry such as the <code>UpdateRegistry</code>, <code>CreateSchema</code>, <code>UpdateSchema</code>, and <code>RegisterSchemaVersion</code> APIs. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteRegistry",
      "responses": [
        {
          "uuid": "02cbbc7c-b0a8-4e7f-8da0-72e367eda250",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7b0d3dc-5f01-487c-97d2-5a33df82fd32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac0caf6d-d441-4c06-821e-f93c9523ab12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "684bd793-775a-49ca-bbaf-2ab1b27bb14c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95a7ef85-2095-4531-9997-904fb60d2c5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "196e8021-6cf6-4c45-8e66-483842be0f8e",
      "documentation": "Deletes a specified policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "24593d28-3132-41bf-be57-2b7fbf2a2fcf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b07fd05-5926-4572-b857-6fa54907d592",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f08833f-b1a6-40d5-963d-8bb3dd355219",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3273204-9a10-4567-9fe9-5f9506762294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4908599b-a093-4d92-a66a-8db05ac0d43e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20411421-7ebe-4191-a392-b05d4bfb2f1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e291b5ad-026c-484d-8ebf-1d175f993904",
      "documentation": "Deletes the entire schema set, including the schema set and all of its versions. To get the status of the delete operation, you can call <code>GetSchema</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the schema, such as the <code>GetSchemaByDefinition</code>, and <code>RegisterSchemaVersion</code> APIs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchema",
      "responses": [
        {
          "uuid": "3d4dac7e-cfc1-471d-9f4e-fc18d275a4d9",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "395cc9dc-2012-453a-9700-163ff130a4ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "351a411a-e226-4db1-bdad-6ee735bffd18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9810b3b-5e0e-4eb6-ac92-71169dd60499",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8457ea55-8e3c-4e03-80d9-05748b8ab20a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fbfcdd34-ede7-45b2-a8f2-c99b62b451ab",
      "documentation": "<p>Remove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the <code>GetSchemaVersions</code> API after this call will list the status of the deleted versions.</p> <p>When the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the <code>DeleteSchemaCheckpoint</code> API before using this API.</p> <p>You cannot use the <code>DeleteSchemaVersions</code> API to delete the first schema version in the schema set. The first schema version can only be deleted by the <code>DeleteSchema</code> API. This operation will also delete the attached <code>SchemaVersionMetadata</code> under the schema versions. Hard deletes will be enforced on the database.</p> <p>If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchemaVersions",
      "responses": [
        {
          "uuid": "fc74fb6a-267b-4a9a-9e87-34a1c20ab074",
          "body": "{\n  \"SchemaVersionErrors\": [\n    {\n      \"VersionNumber\": {{faker 'random.number'}},\n      \"ErrorDetails\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd1f8089-2f3c-4177-8717-930defaa3d18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5d8a860-df73-4e8d-b09f-0f1248b7a8af",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8cd2dacb-7edb-44fc-a905-a86fbbd8a7cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aca60631-c3ab-4ae3-aad4-2f715955f529",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9616b03-fe70-47e3-aef1-b156793bc595",
      "documentation": "Deletes a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSecurityConfiguration",
      "responses": [
        {
          "uuid": "7169520e-3c2d-4ac4-b131-20f854ad7e55",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f414f3b0-6171-43da-bd48-536390630f2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e13db7eb-2e23-468c-8788-269cd55d317c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e5479c1-bc24-4c6a-b732-f4bb8addfb8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb7c0696-48fe-46c8-8ad3-27ff6f7b0159",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8700f0c7-c2a8-48a1-bba2-5f3b9e0c318d",
      "documentation": "<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTable",
      "responses": [
        {
          "uuid": "4d355c73-13a1-4477-a6b8-b6811f4f7ac1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da0b05be-beb7-4f6c-bd1c-f731cfd12bb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b41d18dd-98af-4414-968c-31152cf8281d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d0394a5-0d04-4d29-9bd4-12f897a8c186",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "022fe13f-75bb-424a-9651-b9dfb23d8a97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d97ef870-ffa8-45dc-a1ee-bc086ff94e59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7c13209-4b9b-4e24-9e24-024ef72a004d",
      "documentation": "Deletes a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTableVersion",
      "responses": [
        {
          "uuid": "49d6f506-fb8b-4208-ad5b-a34ecccd8991",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16bdfe87-023b-4f7c-b22a-7e57a29c976d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8177d75c-216a-4d88-bbac-c4607e48bf68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adfa53bd-73e6-41d1-a2af-d886041ce7c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85918549-9d7d-44a1-b645-374923c142ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4d2c379-1a09-499d-94ce-ec7d6e94dbcc",
      "documentation": "Deletes a specified trigger. If the trigger is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTrigger",
      "responses": [
        {
          "uuid": "c0e49da4-bca9-495c-aa60-14a6ca99f1eb",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd04c26-da92-47f9-b28b-7960086ffea3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "460fff0d-873a-4b45-912b-a226e21b6158",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe115816-c6c0-4059-b51a-91db6025c995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91f7c57f-1649-4d0a-94b5-f6cc19acde7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12aaef95-bd2f-4958-94c3-dc95b9c38ce8",
      "documentation": "Deletes an existing function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteUserDefinedFunction",
      "responses": [
        {
          "uuid": "5a0150b4-d3e4-4149-935b-a9b8844c8f94",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c714ff19-1bf5-4d70-8797-3009ed7ee481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f68cf33-3b1f-4741-a40d-a51762dab91e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "452853a3-c560-4586-ac10-bc5819b6099a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "291fb66a-cbb7-4459-b523-b2b6dccec2c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f45d9ce2-93c6-453a-b5fd-7b2008355541",
      "documentation": "Deletes a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteWorkflow",
      "responses": [
        {
          "uuid": "7781af78-d3ca-4eaa-bcdc-44390ceb18d2",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9708271b-0420-45c1-b1f1-ea27c967209d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d48cb6c-9c0b-44e0-9cf2-28050e91ae65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0cb0c9a-1b6b-4611-898c-90e5a9840e1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0faf27c3-99db-45f7-a012-fdddb9f1d9e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1932b42-d480-479b-aa55-f097d17f3856",
      "documentation": "Retrieves the details of a blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprint",
      "responses": [
        {
          "uuid": "e70e7f95-cc64-4126-91d3-2a32f1c1c040",
          "body": "{\n  \"Blueprint\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ParameterSpec\": \"\",\n    \"BlueprintLocation\": \"\",\n    \"BlueprintServiceLocation\": \"\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"LastActiveDefinition\": {\n      \"Description\": \"\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23b3c76b-1c27-407d-a3c1-71aadeb207ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4ff0aa6-ae6f-4324-a7c1-c799337c415c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40870a38-f0ca-43af-90ed-320ab0d3aca0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bdb8b9e-b5e9-49b0-bfce-04faab7c0796",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6a69334-5365-4569-ac10-306320293519",
      "documentation": "Retrieves the details of a blueprint run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRun",
      "responses": [
        {
          "uuid": "16889804-8a2c-4789-9084-4781b1745bdb",
          "body": "{\n  \"BlueprintRun\": {\n    \"BlueprintName\": \"\",\n    \"RunId\": \"\",\n    \"WorkflowName\": \"\",\n    \"State\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ErrorMessage\": \"\",\n    \"RollbackErrorMessage\": \"\",\n    \"Parameters\": \"\",\n    \"RoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "978af036-cf66-4c44-a69b-94929faa4dcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bd47999-7133-4577-87c0-26349b656646",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e08a3a08-7ef7-40fb-9abf-4941ece40a7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9323330-cbd3-4a55-807a-4f6a3509dce3",
      "documentation": "Retrieves the details of blueprint runs for a specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRuns",
      "responses": [
        {
          "uuid": "702bacfa-1f37-43b8-9ba9-fc187b3f408f",
          "body": "{\n  \"BlueprintRuns\": [\n    {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\",\n      \"WorkflowName\": \"\",\n      \"State\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ErrorMessage\": \"\",\n      \"RollbackErrorMessage\": \"\",\n      \"Parameters\": \"\",\n      \"RoleArn\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0a2d03d-e894-4cff-b323-585613608671",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d413f799-2065-4e4c-88e4-6e7f40f6a715",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba7f8da2-9f51-4d5b-9628-089cf48d730b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce4030d9-d894-455a-9fa8-1e76221129a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "984667e3-9a9f-481f-9aa6-6a270c36ebf7",
      "documentation": "Retrieves the status of a migration operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCatalogImportStatus",
      "responses": [
        {
          "uuid": "299c3e18-e7ee-47f1-8cdd-8da7fa7a9d7f",
          "body": "{\n  \"ImportStatus\": {\n    \"ImportCompleted\": {{faker 'random.boolean'}},\n    \"ImportTime\": \"{{faker 'date.recent' 365}}\",\n    \"ImportedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e7e3a85-2aca-4d9e-a66d-0d8f9a72882f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19827235-b0f2-4269-ada7-997e2bf4ccf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f7c4e48-4eb6-4dcb-b382-4520e925ebe5",
      "documentation": "Retrieve a classifier by name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifier",
      "responses": [
        {
          "uuid": "ce6240f4-b6b0-4390-a98e-f989eb52b35c",
          "body": "{\n  \"Classifier\": {\n    \"GrokClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"GrokPattern\": \"\",\n      \"CustomPatterns\": \"\"\n    },\n    \"XMLClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"RowTag\": \"\"\n    },\n    \"JsonClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"JsonPath\": \"\"\n    },\n    \"CsvClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"Delimiter\": \"\",\n      \"QuoteSymbol\": \"\",\n      \"ContainsHeader\": \"\",\n      \"Header\": [\n        \"\"\n      ],\n      \"DisableValueTrimming\": {{faker 'random.boolean'}},\n      \"AllowSingleColumn\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4988c810-8f65-44d9-ad37-f7b23da20a66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b83d92ab-b69e-4b35-a1fb-6c73977e6e43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c314c776-ec5c-4951-87d0-0d2d1bcf203d",
      "documentation": "Lists all classifier objects in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifiers",
      "responses": [
        {
          "uuid": "27137231-af12-41c1-9333-032b09e50691",
          "body": "{\n  \"Classifiers\": [\n    {\n      \"GrokClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"GrokPattern\": \"\",\n        \"CustomPatterns\": \"\"\n      },\n      \"XMLClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"RowTag\": \"\"\n      },\n      \"JsonClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"JsonPath\": \"\"\n      },\n      \"CsvClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"Delimiter\": \"\",\n        \"QuoteSymbol\": \"\",\n        \"ContainsHeader\": \"\",\n        \"Header\": [\n          \"\"\n        ],\n        \"DisableValueTrimming\": {{faker 'random.boolean'}},\n        \"AllowSingleColumn\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "766f34b9-69c8-4f50-946d-41fcb6212eb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3816ddbb-a9ec-4f1c-ba79-d2f4bcd41b25",
      "documentation": "<p>Retrieves partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetPartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "c43d9f9e-69a9-45d9-9d84-9e5e62056a79",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'random.number'}},\n          \"NumberOfFalses\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.float'}},\n          \"MaximumValue\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.number'}},\n          \"MaximumValue\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c4fc32d-9e19-4d45-90e6-e7f75e76feaa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7586114c-bf2d-4ac6-9645-986b255d7558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e7d4a8-0e16-4971-9680-2c4ede53caf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf862e82-8f17-484c-89b7-78f92e3cb2d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81e4b4e2-9627-44e5-94cb-78e224e1cfd4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f8345f9-e717-4603-a429-cf39a0840cbe",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "aa04ce0e-79b9-47ab-8dab-deb32c176213",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'random.number'}},\n          \"NumberOfFalses\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.float'}},\n          \"MaximumValue\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.number'}},\n          \"MaximumValue\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc61376c-ddaa-4a4d-a2fa-2ec5aa1c02cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42c106d2-2d54-4869-998f-17d3a3699bc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5556794b-84eb-40ea-a0c8-6a1797ac7a0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c67c32d2-863b-43e6-9475-66b8235db9c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d4a15b9-2be1-4431-a139-aae3544ab7aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c87da131-c458-47c4-9472-73f84e0ca0e8",
      "documentation": "Retrieves a connection definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnection",
      "responses": [
        {
          "uuid": "61ade529-a769-47dc-9f3f-14f8b276d1bb",
          "body": "{\n  \"Connection\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"ConnectionType\": \"\",\n    \"MatchCriteria\": [\n      \"\"\n    ],\n    \"ConnectionProperties\": {},\n    \"PhysicalConnectionRequirements\": {\n      \"SubnetId\": \"\",\n      \"SecurityGroupIdList\": [\n        \"\"\n      ],\n      \"AvailabilityZone\": \"\"\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e088a91-23af-4b9e-b5f9-0fa72cd324ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19367148-a22e-4395-b114-3b1ce1edaf22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b5e5d3a-6439-4b28-9724-2fa2757439c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6767b00-b6e5-4e99-ac19-20a6a8944651",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52382e37-3ee1-4206-b8f1-89760f628c98",
      "documentation": "Retrieves a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnections",
      "responses": [
        {
          "uuid": "8063213e-e2da-4324-a02c-34604f947c02",
          "body": "{\n  \"ConnectionList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"ConnectionType\": \"\",\n      \"MatchCriteria\": [\n        \"\"\n      ],\n      \"ConnectionProperties\": {},\n      \"PhysicalConnectionRequirements\": {\n        \"SubnetId\": \"\",\n        \"SecurityGroupIdList\": [\n          \"\"\n        ],\n        \"AvailabilityZone\": \"\"\n      },\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be350774-d55a-49d4-9244-01601c697cf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f694d7e2-a21e-426f-a9cb-8fcba5872ffb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdb1d71b-a1af-4352-8a4b-701894ff38e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b59d83c-4a49-4949-8977-92b1b4ea49d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16064a54-42b3-4788-9072-2814ea332593",
      "documentation": "Retrieves metadata for a specified crawler.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawler",
      "responses": [
        {
          "uuid": "f3e4a5d0-54b5-46e6-80bf-2f376bccc21a",
          "body": "{\n  \"Crawler\": {\n    \"Name\": \"\",\n    \"Role\": \"\",\n    \"Targets\": {\n      \"S3Targets\": [\n        {\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ],\n          \"ConnectionName\": \"\",\n          \"SampleSize\": {{faker 'random.number'}}\n        }\n      ],\n      \"JdbcTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ]\n        }\n      ],\n      \"MongoDBTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"ScanAll\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"DynamoDBTargets\": [\n        {\n          \"Path\": \"\",\n          \"scanAll\": {{faker 'random.boolean'}},\n          \"scanRate\": {{faker 'random.float'}}\n        }\n      ],\n      \"CatalogTargets\": [\n        {\n          \"DatabaseName\": \"\",\n          \"Tables\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Classifiers\": [\n      \"\"\n    ],\n    \"RecrawlPolicy\": {\n      \"RecrawlBehavior\": \"\"\n    },\n    \"SchemaChangePolicy\": {\n      \"UpdateBehavior\": \"\",\n      \"DeleteBehavior\": \"\"\n    },\n    \"LineageConfiguration\": {\n      \"CrawlerLineageSettings\": \"\"\n    },\n    \"State\": \"\",\n    \"TablePrefix\": \"\",\n    \"Schedule\": {\n      \"ScheduleExpression\": \"\",\n      \"State\": \"\"\n    },\n    \"CrawlElapsedTime\": {{faker 'random.number'}},\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n    \"LastCrawl\": {\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LogGroup\": \"\",\n      \"LogStream\": \"\",\n      \"MessagePrefix\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Version\": {{faker 'random.number'}},\n    \"Configuration\": \"\",\n    \"CrawlerSecurityConfiguration\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "affa4478-a2c2-4560-9771-1dd2553a8bfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07105a33-e03e-4bb0-8d0a-d956a2f2cf12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61a32ee3-45c6-452f-be96-e5a19ad7b7d6",
      "documentation": "Retrieves metrics about specified crawlers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlerMetrics",
      "responses": [
        {
          "uuid": "88090580-0b0c-464e-9f7c-1180ec2d5822",
          "body": "{\n  \"CrawlerMetricsList\": [\n    {\n      \"CrawlerName\": \"\",\n      \"TimeLeftSeconds\": {{faker 'random.float'}},\n      \"StillEstimating\": {{faker 'random.boolean'}},\n      \"LastRuntimeSeconds\": {{faker 'random.float'}},\n      \"MedianRuntimeSeconds\": {{faker 'random.float'}},\n      \"TablesCreated\": {{faker 'random.number'}},\n      \"TablesUpdated\": {{faker 'random.number'}},\n      \"TablesDeleted\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "467b97d7-93ea-4232-b592-2aadb2df858a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24404ac0-cb7b-4105-8418-bfe0723a8f7e",
      "documentation": "Retrieves metadata for all crawlers defined in the customer account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlers",
      "responses": [
        {
          "uuid": "5f9f7e9b-0e08-4d3e-a181-eab4120a0a42",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'random.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'random.boolean'}},\n            \"scanRate\": {{faker 'random.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'random.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'random.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00f82386-05e9-49ae-a684-2c1978e35cf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "33bfc8e3-065f-4892-8b8f-baf56271559e",
      "documentation": "Retrieves the security configuration for a specified catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "7ba1647f-a94b-4f83-a6ca-212acba8abb0",
          "body": "{\n  \"DataCatalogEncryptionSettings\": {\n    \"EncryptionAtRest\": {\n      \"CatalogEncryptionMode\": \"\",\n      \"SseAwsKmsKeyId\": \"\"\n    },\n    \"ConnectionPasswordEncryption\": {\n      \"ReturnConnectionPasswordEncrypted\": {{faker 'random.boolean'}},\n      \"AwsKmsKeyId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d6f548f-6425-47f3-822c-5f49c2ef174e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbcee4d3-6d26-4f5f-bc87-b1b481fa1621",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a41c01-086e-47a1-87b0-e7b6169d5cc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1def881-d82a-4df2-8229-97a3176a1fa4",
      "documentation": "Retrieves the definition of a specified database.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabase",
      "responses": [
        {
          "uuid": "9ade8710-7b27-4449-81e6-537fc2d9ca40",
          "body": "{\n  \"Database\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LocationUri\": \"\",\n    \"Parameters\": {},\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"CreateTableDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n        ]\n      }\n    ],\n    \"TargetDatabase\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "815fdcd7-b526-4c5c-a811-1db503a1691d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48c53498-5354-41da-a6ea-9873339b8f59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29927ec9-edc0-44d5-a64d-e5dcf04cecd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d23d0a18-5c0b-4c55-9952-ebccd48065f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29baf557-b18e-40ea-8513-04ea49c4bafe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c75d9be-65c8-451a-bd8c-1786ffd907dd",
      "documentation": "Retrieves all databases defined in a given Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabases",
      "responses": [
        {
          "uuid": "b61093e6-1476-4374-a0fe-d5d968ea51dd",
          "body": "{\n  \"DatabaseList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LocationUri\": \"\",\n      \"Parameters\": {},\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"CreateTableDefaultPermissions\": [\n        {\n          \"Principal\": {\n            \"DataLakePrincipalIdentifier\": \"\"\n          },\n          \"Permissions\": [\n            \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n          ]\n        }\n      ],\n      \"TargetDatabase\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a0ab43d-1e06-4db1-b40b-72ab52385734",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48ccf68c-d84e-480b-9ac1-7c703aec8a23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75244554-05af-44d8-9e28-e7a8ace104c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ab043a-e48a-4be5-9886-abdbced72659",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "081eb1c8-2513-4f45-80b4-9e3af07f79b3",
      "documentation": "Transforms a Python script into a directed acyclic graph (DAG). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataflowGraph",
      "responses": [
        {
          "uuid": "6e4ea908-305f-4e3c-9656-f676cc993a5c",
          "body": "{\n  \"DagNodes\": [\n    {\n      \"Id\": \"\",\n      \"NodeType\": \"\",\n      \"Args\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\",\n          \"Param\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"LineNumber\": {{faker 'random.number'}}\n    }\n  ],\n  \"DagEdges\": [\n    {\n      \"Source\": \"\",\n      \"Target\": \"\",\n      \"TargetParameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ff0701a-224c-4bd0-9857-7823f7e55587",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12b909b6-e54d-4a63-9e3b-54c72df71d32",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08ff93ef-c80e-47a1-9a64-138eca8989d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf0155d1-23a8-46e4-a4b6-783c2f73edf3",
      "documentation": "<p>Retrieves information about a specified development endpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoint",
      "responses": [
        {
          "uuid": "8250f2d7-ef82-4002-9bee-e0cd3af4765e",
          "body": "{\n  \"DevEndpoint\": {\n    \"EndpointName\": \"\",\n    \"RoleArn\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"SubnetId\": \"\",\n    \"YarnEndpointAddress\": \"\",\n    \"PrivateAddress\": \"\",\n    \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n    \"PublicAddress\": \"\",\n    \"Status\": \"\",\n    \"WorkerType\": \"\",\n    \"GlueVersion\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"NumberOfNodes\": {{faker 'random.number'}},\n    \"AvailabilityZone\": \"\",\n    \"VpcId\": \"\",\n    \"ExtraPythonLibsS3Path\": \"\",\n    \"ExtraJarsS3Path\": \"\",\n    \"FailureReason\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"PublicKey\": \"\",\n    \"PublicKeys\": [\n      \"\"\n    ],\n    \"SecurityConfiguration\": \"\",\n    \"Arguments\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f38dc746-ce0c-46c7-a4b1-743d4c22396b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c40cde8-8cb7-4a3c-8d83-9d827ce5c1ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "818bdf8b-6861-41d2-93d1-0773d7e0c1b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca37c773-db99-49d3-81ef-91d851e5abe2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0eabbe5f-39cd-4621-824b-c673db6de5b6",
      "documentation": "<p>Retrieves all the development endpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoints",
      "responses": [
        {
          "uuid": "8e2c3eb3-6641-41cf-8c5a-ae3cf01aed3f",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"NumberOfNodes\": {{faker 'random.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce19a2c3-c9ed-4311-83da-fba31fae8221",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d557774-8b58-4c39-8f60-212313b2758c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4eab259a-7167-4b0d-9773-f6cdbf4f79a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "600e9bc9-ab08-46e1-b849-95b5a1f890eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9323fd1d-cb25-43c4-af7a-d1ad5d9aa21a",
      "documentation": "Retrieves an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJob",
      "responses": [
        {
          "uuid": "8a476c76-2146-4529-a51d-7c99009f2283",
          "body": "{\n  \"Job\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LogUri\": \"\",\n    \"Role\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionProperty\": {\n      \"MaxConcurrentRuns\": {{faker 'random.number'}}\n    },\n    \"Command\": {\n      \"Name\": \"\",\n      \"ScriptLocation\": \"\",\n      \"PythonVersion\": \"\"\n    },\n    \"DefaultArguments\": {},\n    \"NonOverridableArguments\": {},\n    \"Connections\": {\n      \"Connections\": [\n        \"\"\n      ]\n    },\n    \"MaxRetries\": {{faker 'random.number'}},\n    \"AllocatedCapacity\": {{faker 'random.number'}},\n    \"Timeout\": {{faker 'random.number'}},\n    \"MaxCapacity\": {{faker 'random.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'random.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab3424be-f961-434f-a50c-076f3eba45ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d884ae1-1754-4a20-86b1-9561cde624df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ed21b29-4343-4933-b108-f48538cdd33a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "073fdb1c-10b6-4918-9286-5321d2317705",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cddd0ee4-6e2a-44ee-a81f-41c5b9f7d306",
      "documentation": "Returns information on a job bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobBookmark",
      "responses": [
        {
          "uuid": "49e429d3-9840-4af1-a5f7-1e83b7085ee5",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Run\": {{faker 'random.number'}},\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "085597a8-c3a9-452c-97c1-61597e23b875",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8148590-ec13-4ecc-98d3-b31512e2c612",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dda98bb-4bac-4105-a6b3-447af847e7c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54b35543-c1d4-41f3-a405-98924a8e3a30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ee345dd-8bfb-4350-bce2-dc2163cc86e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c2dbe5c-b771-4749-85cd-fa527760d6c2",
      "documentation": "Retrieves the metadata for a given job run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRun",
      "responses": [
        {
          "uuid": "c2caa6b8-16a5-4895-a846-303268f190d6",
          "body": "{\n  \"JobRun\": {\n    \"Id\": \"\",\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"TriggerName\": \"\",\n    \"JobName\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"JobRunState\": \"\",\n    \"Arguments\": {},\n    \"ErrorMessage\": \"\",\n    \"PredecessorRuns\": [\n      {\n        \"JobName\": \"\",\n        \"RunId\": \"\"\n      }\n    ],\n    \"AllocatedCapacity\": {{faker 'random.number'}},\n    \"ExecutionTime\": {{faker 'random.number'}},\n    \"Timeout\": {{faker 'random.number'}},\n    \"MaxCapacity\": {{faker 'random.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"LogGroupName\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'random.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf67a59c-5a22-4be3-989f-f8c25ce14618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d86b10e-856f-433e-abc0-1d4a63ed842d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d976b23a-ca28-4249-ba1e-5add973feeb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b9a2982-7b1d-405b-8ec7-6d31574f53b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "671558ab-0c13-47d3-bb12-55ee6035e297",
      "documentation": "Retrieves metadata for all runs of a given job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRuns",
      "responses": [
        {
          "uuid": "72840725-756b-4512-bfd8-a11042bff975",
          "body": "{\n  \"JobRuns\": [\n    {\n      \"Id\": \"\",\n      \"Attempt\": {{faker 'random.number'}},\n      \"PreviousRunId\": \"\",\n      \"TriggerName\": \"\",\n      \"JobName\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"JobRunState\": \"\",\n      \"Arguments\": {},\n      \"ErrorMessage\": \"\",\n      \"PredecessorRuns\": [\n        {\n          \"JobName\": \"\",\n          \"RunId\": \"\"\n        }\n      ],\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"ExecutionTime\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"LogGroupName\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f74367d-0f2b-4750-b2f4-bf6d83c9ff97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3046c200-e868-4879-b4bb-840c7f0a7370",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f13b08a2-d26d-44a6-97bb-f8ed1f881309",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5b8ab8b-2f9e-4592-90a1-c71a8ac05963",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23be81f1-ef3a-47fa-88fe-d16489e1931d",
      "documentation": "Retrieves all current job definitions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobs",
      "responses": [
        {
          "uuid": "2b8e0e8e-3ba1-4cb7-8cbe-cd6da21b4860",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'random.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "924d7499-324e-4d84-a26b-ca07db9dafbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf42c01e-2888-4450-ba92-c91ef8bc64b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2f7877c-2ce3-4a3b-abd0-107c3443bae1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97a64f2f-fe80-4e1b-b130-0d20b55a530b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d24fd2c6-d853-489b-aab3-cddceb21fcbb",
      "documentation": "Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRun",
      "responses": [
        {
          "uuid": "f40b0a57-c959-4b50-be66-a5b481f61e44",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\",\n  \"LogGroupName\": \"\",\n  \"Properties\": {\n    \"TaskType\": \"\",\n    \"ImportLabelsTaskRunProperties\": {\n      \"InputS3Path\": \"\",\n      \"Replace\": {{faker 'random.boolean'}}\n    },\n    \"ExportLabelsTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"LabelingSetGenerationTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"FindMatchesTaskRunProperties\": {\n      \"JobId\": \"\",\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  },\n  \"ErrorString\": \"\",\n  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n  \"ExecutionTime\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6929fddc-6a35-44d2-a94c-1d1e61598ad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "871810dc-1556-4100-be2e-0714966acc2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f086ff61-cff5-41be-8bc9-c47d6b77a028",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4170b870-059c-457e-a3dc-bb1ebde64d88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a66bf06-0da2-4bd3-b040-5393c92c4da1",
      "documentation": "<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRuns",
      "responses": [
        {
          "uuid": "92773e92-06c3-41c6-8787-24a836702b54",
          "body": "{\n  \"TaskRuns\": [\n    {\n      \"TransformId\": \"\",\n      \"TaskRunId\": \"\",\n      \"Status\": \"\",\n      \"LogGroupName\": \"\",\n      \"Properties\": {\n        \"TaskType\": \"\",\n        \"ImportLabelsTaskRunProperties\": {\n          \"InputS3Path\": \"\",\n          \"Replace\": {{faker 'random.boolean'}}\n        },\n        \"ExportLabelsTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"LabelingSetGenerationTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"FindMatchesTaskRunProperties\": {\n          \"JobId\": \"\",\n          \"JobName\": \"\",\n          \"JobRunId\": \"\"\n        }\n      },\n      \"ErrorString\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionTime\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c7dfe8e-475a-4572-8068-32cc0aaa27f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3177e29-728f-4c22-b040-938ea89de201",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09671a08-94ce-4000-b1c1-5698d103fd72",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e743650a-de27-4de8-97c3-cc6266542588",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d45b735e-2b3d-4556-a65f-4197ae5aba54",
      "documentation": "Gets an Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransform",
      "responses": [
        {
          "uuid": "01560469-0724-4aa8-967d-7f74bb87f257",
          "body": "{\n  \"TransformId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"InputRecordTables\": [\n    {\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CatalogId\": \"\",\n      \"ConnectionName\": \"\"\n    }\n  ],\n  \"Parameters\": {\n    \"TransformType\": \"\",\n    \"FindMatchesParameters\": {\n      \"PrimaryKeyColumnName\": \"\",\n      \"PrecisionRecallTradeoff\": {{faker 'random.float'}},\n      \"AccuracyCostTradeoff\": {{faker 'random.float'}},\n      \"EnforceProvidedLabels\": {{faker 'random.boolean'}}\n    }\n  },\n  \"EvaluationMetrics\": {\n    \"TransformType\": \"\",\n    \"FindMatchesMetrics\": {\n      \"AreaUnderPRCurve\": {{faker 'random.float'}},\n      \"Precision\": {{faker 'random.float'}},\n      \"Recall\": {{faker 'random.float'}},\n      \"F1\": {{faker 'random.float'}},\n      \"ConfusionMatrix\": {\n        \"NumTruePositives\": {{faker 'random.number'}},\n        \"NumFalsePositives\": {{faker 'random.number'}},\n        \"NumTrueNegatives\": {{faker 'random.number'}},\n        \"NumFalseNegatives\": {{faker 'random.number'}}\n      },\n      \"ColumnImportances\": [\n        {\n          \"ColumnName\": \"\",\n          \"Importance\": {{faker 'random.float'}}\n        }\n      ]\n    }\n  },\n  \"LabelCount\": {{faker 'random.number'}},\n  \"Schema\": [\n    {\n      \"Name\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"Role\": \"\",\n  \"GlueVersion\": \"\",\n  \"MaxCapacity\": {{faker 'random.float'}},\n  \"WorkerType\": \"\",\n  \"NumberOfWorkers\": {{faker 'random.number'}},\n  \"Timeout\": {{faker 'random.number'}},\n  \"MaxRetries\": {{faker 'random.number'}},\n  \"TransformEncryption\": {\n    \"MlUserDataEncryption\": {\n      \"MlUserDataEncryptionMode\": \"\",\n      \"KmsKeyId\": \"\"\n    },\n    \"TaskRunSecurityConfigurationName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13e2bf3b-be76-4c13-be16-728f4dce688a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93583c4-d7c0-4deb-bc81-f4d8ec026737",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cc1a791-62e1-417f-b5f9-a7dd448fc13f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce2fd34c-f25d-470c-a98b-7f40a2fd7e58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7e532e73-ad6d-400f-a4ce-d8875cc9ec6e",
      "documentation": "Gets a sortable, filterable list of existing Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransforms",
      "responses": [
        {
          "uuid": "97a9e08b-c9e7-4019-9320-8cdf01727548",
          "body": "{\n  \"Transforms\": [\n    {\n      \"TransformId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"InputRecordTables\": [\n        {\n          \"DatabaseName\": \"\",\n          \"TableName\": \"\",\n          \"CatalogId\": \"\",\n          \"ConnectionName\": \"\"\n        }\n      ],\n      \"Parameters\": {\n        \"TransformType\": \"\",\n        \"FindMatchesParameters\": {\n          \"PrimaryKeyColumnName\": \"\",\n          \"PrecisionRecallTradeoff\": {{faker 'random.float'}},\n          \"AccuracyCostTradeoff\": {{faker 'random.float'}},\n          \"EnforceProvidedLabels\": {{faker 'random.boolean'}}\n        }\n      },\n      \"EvaluationMetrics\": {\n        \"TransformType\": \"\",\n        \"FindMatchesMetrics\": {\n          \"AreaUnderPRCurve\": {{faker 'random.float'}},\n          \"Precision\": {{faker 'random.float'}},\n          \"Recall\": {{faker 'random.float'}},\n          \"F1\": {{faker 'random.float'}},\n          \"ConfusionMatrix\": {\n            \"NumTruePositives\": {{faker 'random.number'}},\n            \"NumFalsePositives\": {{faker 'random.number'}},\n            \"NumTrueNegatives\": {{faker 'random.number'}},\n            \"NumFalseNegatives\": {{faker 'random.number'}}\n          },\n          \"ColumnImportances\": [\n            {\n              \"ColumnName\": \"\",\n              \"Importance\": {{faker 'random.float'}}\n            }\n          ]\n        }\n      },\n      \"LabelCount\": {{faker 'random.number'}},\n      \"Schema\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"Role\": \"\",\n      \"GlueVersion\": \"\",\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"TransformEncryption\": {\n        \"MlUserDataEncryption\": {\n          \"MlUserDataEncryptionMode\": \"\",\n          \"KmsKeyId\": \"\"\n        },\n        \"TaskRunSecurityConfigurationName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "867cae62-c7ff-4051-af96-6824a62339f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08acab29-46f8-458b-9b3f-7d629147e3e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e9bd80f-0694-4442-ae63-3d5a0957e814",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6d88199-6dcc-441e-9c4c-e82a7f3cb46b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3b85a632-dc59-4314-a07e-d22f27dd3573",
      "documentation": "Creates mappings.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMapping",
      "responses": [
        {
          "uuid": "a861e72f-de5d-4dd5-869c-4222e3668397",
          "body": "{\n  \"Mapping\": [\n    {\n      \"SourceTable\": \"\",\n      \"SourcePath\": \"\",\n      \"SourceType\": \"\",\n      \"TargetTable\": \"\",\n      \"TargetPath\": \"\",\n      \"TargetType\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99e7696a-0d0a-44d1-9a7e-a72344bdaeb5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5e90d91-6d76-4112-b4f7-7872debd4335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af07b9e-7695-450a-b74d-70ffff0d92f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf1dd1d9-dfbe-4f1b-b973-f458b8f8beed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a29c1083-de17-47ec-99fb-16aee248fcbb",
      "documentation": "Retrieves information about a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartition",
      "responses": [
        {
          "uuid": "95f52f53-1c07-459b-ad58-cc8cda5cb334",
          "body": "{\n  \"Partition\": {\n    \"Values\": [\n      \"\"\n    ],\n    \"DatabaseName\": \"\",\n    \"TableName\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'random.boolean'}},\n      \"NumberOfBuckets\": {{faker 'random.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'random.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'random.number'}}\n      }\n    },\n    \"Parameters\": {},\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99c0470b-8b83-41bc-922c-425cddedb0b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8775dc7f-74da-449d-bd2b-70233dccab9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e55bf1ce-37e9-4452-a812-9794b7d1992a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb1485bc-7d10-466b-b91d-f6505d3ba10b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b4144a1-de02-4695-a7bd-31182ddbf448",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5521bc64-c0f9-4a4b-8d12-e59d62705407",
      "documentation": "Retrieves the partition indexes associated with a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitionIndexes",
      "responses": [
        {
          "uuid": "2346bbc9-bea5-4d73-a23b-59efd869ef9b",
          "body": "{\n  \"PartitionIndexDescriptorList\": [\n    {\n      \"IndexName\": \"\",\n      \"Keys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\"\n        }\n      ],\n      \"IndexStatus\": \"\",\n      \"BackfillErrors\": [\n        {\n          \"Code\": \"\",\n          \"Partitions\": [\n            {\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3d26c88-740e-495d-92ff-3f1b65de20dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9eead87-4dbd-4d41-a16a-56236457147f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48123275-013f-4a68-a0e6-81c1c3cdac0d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "985c986c-fe2c-4aac-ad59-cb67b61ca062",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26bf9934-a6fc-41d3-9fac-017d59d75674",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f07f63d0-1aed-49a1-a236-4f9285d249ab",
      "documentation": "Retrieves information about the partitions in a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitions",
      "responses": [
        {
          "uuid": "bf7635b2-8474-4de7-a021-bf0ac4b07a6e",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76fdf451-0d17-4720-8794-3759cbb66488",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59b777e7-c509-49c6-acbf-4e5e2fc09490",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8717378-dfaa-402d-9ceb-0445578fe995",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6acc7b0b-679d-4897-b220-9d35f4244df4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9df1a10-22cf-4886-88e5-b15757b8a6c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a54e9be6-c7b7-4d33-9ea7-f32032a69573",
      "documentation": "Gets code to perform a specified mapping.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPlan",
      "responses": [
        {
          "uuid": "7997b4bb-d165-4ed9-9779-65894f3fc0a6",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afd3cda5-ea39-4e78-8135-ae4be8ddc670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21ea5766-5d65-45aa-b195-8ff8181d598e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d832534d-5fb0-490a-8be6-ff43676c2a0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf00f029-6850-4c6e-98b9-bb2d0af6c733",
      "documentation": "Describes the specified registry in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetRegistry",
      "responses": [
        {
          "uuid": "4ce64481-c042-4b68-98eb-84fe903a46d3",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bac81325-54fd-4753-9fc9-4d8aac675435",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa7d8459-1d7b-411d-89de-4af9f2382deb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ef0d325b-158e-4a81-9321-87d7209bdcae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f742b266-6501-4b4e-867d-0da845842497",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ebc8af6-8a16-45e1-8f2d-217163764d54",
      "documentation": "<p>Retrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants. Also retrieves the Data Catalog resource policy.</p> <p>If you enabled metadata encryption in Data Catalog settings, and you do not have permission on the KMS key, the operation can't return the Data Catalog resource policy.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicies",
      "responses": [
        {
          "uuid": "c8053f1e-dfd1-4f6e-b4e0-77524c713449",
          "body": "{\n  \"GetResourcePoliciesResponseList\": [\n    {\n      \"PolicyInJson\": \"\",\n      \"PolicyHash\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb84b28e-4a67-4957-90d0-5af480ecddac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b8bb46a-b3f9-4df1-b099-64dcd3c461a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce0dccd5-6f4a-457a-9f64-77bf101e8f52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469c8b1d-eba1-448f-ad5c-4fbe4a7644ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dfdb33b7-c920-4d9f-8e1c-44980d09690b",
      "documentation": "Retrieves a specified resource policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicy",
      "responses": [
        {
          "uuid": "e840b453-6778-4550-b402-86c44ad5632a",
          "body": "{\n  \"PolicyInJson\": \"\",\n  \"PolicyHash\": \"\",\n  \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n  \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fe2c8f9-a422-4810-8e54-a5ca0a21d6da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9ff77a7-13c4-4f9e-bd3e-7cfe27283e6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4ea79b2-3600-41f5-bbb5-e30faae18525",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d12a707-ba6f-40e4-904d-8bb656fcf009",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6543779d-9b6b-4128-a8ca-4d92888f1a18",
      "documentation": "Describes the specified schema in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchema",
      "responses": [
        {
          "uuid": "cae1b463-c054-42f6-9891-5393b703b3b0",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'random.number'}},\n  \"LatestSchemaVersion\": {{faker 'random.number'}},\n  \"NextSchemaVersion\": {{faker 'random.number'}},\n  \"SchemaStatus\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94e0376f-10ec-4fd8-9926-c453cf4b5f85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2584acfa-d7fd-48ec-a9fc-518c324f6a44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9996773-25ff-44dd-9799-eb298f81de3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64caff0b-6b63-4185-9195-ccb182bb5947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a111254-fb36-455e-b72f-5cea5e2aa96c",
      "documentation": "Retrieves a schema by the <code>SchemaDefinition</code>. The schema definition is sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within the scope of the <code>SchemaName</code> or ARN (or the default registry, if none is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error is returned. Schema versions in <code>Deleted</code> statuses will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaByDefinition",
      "responses": [
        {
          "uuid": "04c41b5d-9870-4dcd-bb61-c797a1cec184",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaArn\": \"\",\n  \"DataFormat\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fedb3b0b-9a8e-4269-aae1-b4693ba3de37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e72ea525-2e0c-4bd1-90f9-b8c1ed33391f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66052e28-b4e5-4c85-afde-1f362057e969",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e2ec77b-8e31-41ba-b07e-2efdc6c48c86",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "43e3d53e-37c3-42cc-b5cc-5f1707441634",
      "documentation": "Get the specified schema by its unique ID assigned when a version of the schema is created or registered. Schema versions in Deleted status will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersion",
      "responses": [
        {
          "uuid": "45522ac4-4ec1-44f8-acca-26021d45af6a",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaDefinition\": \"\",\n  \"DataFormat\": \"\",\n  \"SchemaArn\": \"\",\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8044bb7-079f-462f-a872-2cc96bce7dca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03c33c2a-826f-40ff-9fe9-af011bfda11f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c4909b7-54f8-445e-b4e3-01b1238cda9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70c3b815-2543-444b-a814-85855857f53b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b9ce9cb2-bd42-4cd6-9a8b-d60290fe3a87",
      "documentation": "<p>Fetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry.</p> <p>This API allows you to compare two schema versions between two schema definitions under the same schema.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersionsDiff",
      "responses": [
        {
          "uuid": "0e1f4b22-a292-45be-b152-ec6797e97402",
          "body": "{\n  \"Diff\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb1cb368-7622-4e9d-877d-61bdb17e726f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22e2c973-0605-4814-a3b7-10bac8162e7c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19177334-8c83-4990-872f-708fc89c492a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49fe3374-9c6d-4ab1-8a32-3a58946162e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "109f1521-5d3b-4dd5-b2b7-fded1caa4d4b",
      "documentation": "Retrieves a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfiguration",
      "responses": [
        {
          "uuid": "8b6c7fa0-89c2-4439-a1c7-12d02068328c",
          "body": "{\n  \"SecurityConfiguration\": {\n    \"Name\": \"\",\n    \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n    \"EncryptionConfiguration\": {\n      \"S3Encryption\": [\n        {\n          \"S3EncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      ],\n      \"CloudWatchEncryption\": {\n        \"CloudWatchEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      },\n      \"JobBookmarksEncryption\": {\n        \"JobBookmarksEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78bfc055-4450-4540-90fb-105c7f49ee3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e515a42-c866-4687-9278-243bfdb070e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1146386-81d3-4fa9-bf19-af90143008f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4592cd1a-2ac2-4bf7-83f0-2a8b85700c88",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "360af08c-8f76-4a0b-9dae-5a84bcced619",
      "documentation": "Retrieves a list of all security configurations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfigurations",
      "responses": [
        {
          "uuid": "898b200d-8faf-4412-b5ce-1d544ad48a1c",
          "body": "{\n  \"SecurityConfigurations\": [\n    {\n      \"Name\": \"\",\n      \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n      \"EncryptionConfiguration\": {\n        \"S3Encryption\": [\n          {\n            \"S3EncryptionMode\": \"\",\n            \"KmsKeyArn\": \"\"\n          }\n        ],\n        \"CloudWatchEncryption\": {\n          \"CloudWatchEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        },\n        \"JobBookmarksEncryption\": {\n          \"JobBookmarksEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "233a5da9-3204-4f1c-8edf-dc256145aa16",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "189513ee-336b-4d53-858f-5b0d875dc392",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab950e8f-662d-4f68-a84d-31711b3912a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a994859e-e27f-461e-afd3-0552baef6a76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "256f856c-6a2b-4ac2-8c3a-d0fe77c6aab7",
      "documentation": "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTable",
      "responses": [
        {
          "uuid": "d73f4021-796b-4cc7-9e48-7da6ee106fe3",
          "body": "{\n  \"Table\": {\n    \"Name\": \"\",\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Retention\": {{faker 'random.number'}},\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'random.boolean'}},\n      \"NumberOfBuckets\": {{faker 'random.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'random.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'random.number'}}\n      }\n    },\n    \"PartitionKeys\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\",\n        \"Parameters\": {}\n      }\n    ],\n    \"ViewOriginalText\": \"\",\n    \"ViewExpandedText\": \"\",\n    \"TableType\": \"\",\n    \"Parameters\": {},\n    \"CreatedBy\": \"\",\n    \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n    \"TargetTable\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\",\n      \"Name\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9adef625-a88a-43a6-ab32-2d79135cb93e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e56d0168-e904-4800-96cd-a37675450d30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3476717-5622-4aba-9159-2d93ce77cd09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53da537c-d2d6-47e0-9ce3-3856629f6487",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64c9b794-0fd0-4859-9280-27bfb1e65cf1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c792233f-71a7-4223-b7bb-8befd4494e61",
      "documentation": "Retrieves a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersion",
      "responses": [
        {
          "uuid": "2c6f4db6-d35f-4f0e-8cf6-58739142ef27",
          "body": "{\n  \"TableVersion\": {\n    \"Table\": {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    },\n    \"VersionId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d64354a-6b06-48e7-9ac9-eed7885e256b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a73dc7a-2f98-4bab-9d56-14ce418a8317",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa896eac-8eba-4493-aa0c-8158fd15b1bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33978f01-1a8a-4ed1-a2d7-8b0a62120223",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "defc96a7-bca3-4c49-92e2-3811b169d1c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03f0f683-422c-445e-ad88-559d8ee21eae",
      "documentation": "Retrieves a list of strings that identify available versions of a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersions",
      "responses": [
        {
          "uuid": "2fe7e352-bfc9-44ff-b3d1-7ffb53296346",
          "body": "{\n  \"TableVersions\": [\n    {\n      \"Table\": {\n        \"Name\": \"\",\n        \"DatabaseName\": \"\",\n        \"Description\": \"\",\n        \"Owner\": \"\",\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Retention\": {{faker 'random.number'}},\n        \"StorageDescriptor\": {\n          \"Columns\": [\n            {\n              \"Name\": \"\",\n              \"Type\": \"\",\n              \"Comment\": \"\",\n              \"Parameters\": {}\n            }\n          ],\n          \"Location\": \"\",\n          \"InputFormat\": \"\",\n          \"OutputFormat\": \"\",\n          \"Compressed\": {{faker 'random.boolean'}},\n          \"NumberOfBuckets\": {{faker 'random.number'}},\n          \"SerdeInfo\": {\n            \"Name\": \"\",\n            \"SerializationLibrary\": \"\",\n            \"Parameters\": {}\n          },\n          \"BucketColumns\": [\n            \"\"\n          ],\n          \"SortColumns\": [\n            {\n              \"Column\": \"\",\n              \"SortOrder\": {{faker 'random.number'}}\n            }\n          ],\n          \"Parameters\": {},\n          \"SkewedInfo\": {\n            \"SkewedColumnNames\": [\n              \"\"\n            ],\n            \"SkewedColumnValues\": [\n              \"\"\n            ],\n            \"SkewedColumnValueLocationMaps\": {}\n          },\n          \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n          \"SchemaReference\": {\n            \"SchemaId\": {\n              \"SchemaArn\": \"\",\n              \"SchemaName\": \"\",\n              \"RegistryName\": \"\"\n            },\n            \"SchemaVersionId\": \"\",\n            \"SchemaVersionNumber\": {{faker 'random.number'}}\n          }\n        },\n        \"PartitionKeys\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"ViewOriginalText\": \"\",\n        \"ViewExpandedText\": \"\",\n        \"TableType\": \"\",\n        \"Parameters\": {},\n        \"CreatedBy\": \"\",\n        \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n        \"TargetTable\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\"\n        },\n        \"CatalogId\": \"\"\n      },\n      \"VersionId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6209a1e-4ecb-49fb-840a-975899112405",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3127e043-0a8d-4b3e-b608-e6f7ef5ddf4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9053fb9-7d08-4b46-8fd2-1904a445cd17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab738ae5-7227-4eb9-8876-2614f6c6cd5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcd94acf-a548-41f2-9ec7-df0e2eeef18d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f444547-eaeb-439e-903c-154094410319",
      "documentation": "Retrieves the definitions of some or all of the tables in a given <code>Database</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTables",
      "responses": [
        {
          "uuid": "b8157403-fb62-44ce-9d28-44ce5ef7cf88",
          "body": "{\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa5a436a-7d74-475f-be96-0fec52cf2dcc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2cf6b26-82a1-4668-957a-c2bce64b6540",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70340c2d-5696-421f-ba39-a91771942e1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59ba82fb-35e7-4c53-850f-eda213db55e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c38e9a3-9293-4c90-b208-4c09535a6431",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8141cea-8407-4f20-bd5c-30c09640dc74",
      "documentation": "Retrieves a list of tags associated with a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTags",
      "responses": [
        {
          "uuid": "b461afdb-7034-404f-8604-d25cf82ea2bc",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcdac611-64f2-46b3-a249-a1c36718e365",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "871a9387-c07a-49bf-9f7e-93c4d3897ecd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09240548-e07e-4e9b-9e80-a72739e00c81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f14d13bb-b7b4-4e42-b82f-d2c3072ce75a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "346f936e-d36b-4789-a074-5f0060277d8e",
      "documentation": "Retrieves the definition of a trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTrigger",
      "responses": [
        {
          "uuid": "181625f4-fe68-4485-b616-a8ebcaba2595",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'random.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'random.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77bd4801-9154-4681-8432-722118c76721",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f4f24f3-5204-4da8-8728-ece036de66da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f01968a4-4e41-43d0-b0e2-da54612c0e52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38ac9774-9baa-44f1-94c6-2d254206a5ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "94c9e5bd-c9f2-4dc4-be79-97ee3afa31b7",
      "documentation": "Gets all the triggers associated with a job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTriggers",
      "responses": [
        {
          "uuid": "4b23b235-3b91-4888-8202-b3503231ad2b",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'random.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'random.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c21fa751-e0da-48af-ac08-d52201e2818c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9bc3c75-ce4b-40ee-b9f5-5545708b6bcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58a81355-9dfd-4b1f-b440-adc484b2b9b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a500172-40b1-44a4-9a86-d823c1d97b85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba654c00-e5a8-4cf2-a472-c6e340003f3a",
      "documentation": "Retrieves a specified function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunction",
      "responses": [
        {
          "uuid": "c88b86a1-cba7-4241-af7c-6c322599eef7",
          "body": "{\n  \"UserDefinedFunction\": {\n    \"FunctionName\": \"\",\n    \"DatabaseName\": \"\",\n    \"ClassName\": \"\",\n    \"OwnerName\": \"\",\n    \"OwnerType\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"ResourceUris\": [\n      {\n        \"ResourceType\": \"\",\n        \"Uri\": \"\"\n      }\n    ],\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa89324a-c5c6-44d4-87c6-89c594c2cd9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "090483b4-85f1-454e-84af-4ca33bec5af1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e3847f3-e4c6-4e66-8532-f581cd57bdea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77feafad-be85-4417-9f44-676220aabb34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43f3bd3c-ce1b-4770-8599-ecf6d9ca3b84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f57e0b3-ebe6-443d-b8f5-c46a7fe88927",
      "documentation": "Retrieves multiple function definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunctions",
      "responses": [
        {
          "uuid": "197e0e74-f92b-420e-a0e0-08a21d78bb73",
          "body": "{\n  \"UserDefinedFunctions\": [\n    {\n      \"FunctionName\": \"\",\n      \"DatabaseName\": \"\",\n      \"ClassName\": \"\",\n      \"OwnerName\": \"\",\n      \"OwnerType\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceUris\": [\n        {\n          \"ResourceType\": \"\",\n          \"Uri\": \"\"\n        }\n      ],\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14fb2fd5-59eb-4e66-98a4-ee4b83ac8679",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84ec7cd3-c31f-4adf-bec6-e494bd29d511",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "720f27d7-5c09-496b-9959-70cd2f8006f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e49189e3-bee9-4545-bdeb-7c1ef28fb71e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cfc5a83-42b4-48cc-b14c-f4c5db7d61eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7acf7758-3e17-4117-bbdf-8af86ee6dbb9",
      "documentation": "Retrieves resource metadata for a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflow",
      "responses": [
        {
          "uuid": "4b45b767-7da2-449b-9aa2-d0f87bba0ec2",
          "body": "{\n  \"Workflow\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"DefaultRunProperties\": {},\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastRun\": {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'random.number'}},\n        \"TimeoutActions\": {{faker 'random.number'}},\n        \"FailedActions\": {{faker 'random.number'}},\n        \"StoppedActions\": {{faker 'random.number'}},\n        \"SucceededActions\": {{faker 'random.number'}},\n        \"RunningActions\": {{faker 'random.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'random.number'}},\n                \"BatchWindow\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'random.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'random.number'}},\n                \"ExecutionTime\": {{faker 'random.number'}},\n                \"Timeout\": {{faker 'random.number'}},\n                \"MaxCapacity\": {{faker 'random.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'random.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'random.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"MaxConcurrentRuns\": {{faker 'random.number'}},\n    \"BlueprintDetails\": {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bfcefc1-ab12-4d02-b728-fdf767621aed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6654b5c-85f9-4079-937d-b9117b0c9da6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b522dc64-9c67-428b-ac6d-ee8b70fd3656",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dfe4b3d-7e40-458e-9fed-350c6650eb7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bcdffeaf-9883-4332-b5c9-2391378ab4e9",
      "documentation": "Retrieves the metadata for a given workflow run. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRun",
      "responses": [
        {
          "uuid": "0359147b-1772-4649-a852-4a1a749f8893",
          "body": "{\n  \"Run\": {\n    \"Name\": \"\",\n    \"WorkflowRunId\": \"\",\n    \"PreviousRunId\": \"\",\n    \"WorkflowRunProperties\": {},\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"Statistics\": {\n      \"TotalActions\": {{faker 'random.number'}},\n      \"TimeoutActions\": {{faker 'random.number'}},\n      \"FailedActions\": {{faker 'random.number'}},\n      \"StoppedActions\": {{faker 'random.number'}},\n      \"SucceededActions\": {{faker 'random.number'}},\n      \"RunningActions\": {{faker 'random.number'}}\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'random.number'}},\n                \"BatchWindow\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'random.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'random.number'}},\n                \"ExecutionTime\": {{faker 'random.number'}},\n                \"Timeout\": {{faker 'random.number'}},\n                \"MaxCapacity\": {{faker 'random.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'random.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'random.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"StartingEventBatchCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fb470e6-e5e1-4c2b-8d68-a088d3591b10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "daf3176a-65f0-4e1b-8a3e-4a70c62f5ba6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75e62f1a-f120-4086-953c-e149527cf422",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0944b949-d0fe-402e-89c9-c12e90fdfb1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00eaabaa-dc3b-4729-814d-27d087ca45f9",
      "documentation": "Retrieves the workflow run properties which were set during the run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRunProperties",
      "responses": [
        {
          "uuid": "3ef35494-9724-4852-b7f8-797755d6bd4d",
          "body": "{\n  \"RunProperties\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4edb9ec-b289-408c-a1f9-ba8105459a3a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afc1fccb-6f54-420b-85a3-caca2511dbcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55657fa9-0704-47cc-a1cf-d6d4ebcd28ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d754b57-90ae-4e61-a31d-554fa8f8ec23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "480c3097-3efd-4617-9f33-06662a5e4eb2",
      "documentation": "Retrieves metadata for all runs of a given workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRuns",
      "responses": [
        {
          "uuid": "15c40879-940d-4e2e-8d82-785abf98369a",
          "body": "{\n  \"Runs\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'random.number'}},\n        \"TimeoutActions\": {{faker 'random.number'}},\n        \"FailedActions\": {{faker 'random.number'}},\n        \"StoppedActions\": {{faker 'random.number'}},\n        \"SucceededActions\": {{faker 'random.number'}},\n        \"RunningActions\": {{faker 'random.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f56c05d0-a735-4806-be4c-ab11c14bd322",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b3bdc2c-4c3f-4c44-a49b-42a787581db6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d73f046-fa41-4510-ae06-4d0f3150d320",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4751080-b67e-436b-a21a-de6ab0aafc03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "184bed93-3dd2-4ce8-b73e-51fd6815af83",
      "documentation": "Imports an existing Amazon Athena Data Catalog to Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ImportCatalogToGlue",
      "responses": [
        {
          "uuid": "2026b9cc-a46c-4795-9a3d-d26b6e4a3cf6",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2a7e49a-eaea-4b6d-86a8-2fa55f5ec519",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b3ceed1-e341-42bd-962c-67657fd3ca24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6dd9eb55-cada-4b89-a513-830343e87838",
      "documentation": "Lists all the blueprint names in an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListBlueprints",
      "responses": [
        {
          "uuid": "bcf1314e-a61a-4ae3-b5d1-cded13e0d0ba",
          "body": "{\n  \"Blueprints\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b5e3a2a-f65e-435b-a10e-e3215f68e3fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e0d0d57-da7f-4a5e-9fb4-2694e7373892",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b13cc64c-a823-4f1f-88e7-2f1206691d48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39823472-c9b4-4b8e-902e-c85f8cf47f08",
      "documentation": "<p>Retrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListCrawlers",
      "responses": [
        {
          "uuid": "d3ca220c-44f2-43cd-9d15-50a38b87ca23",
          "body": "{\n  \"CrawlerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "151f6712-b2a1-42fb-864d-82dc2c1a8678",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6eaeb6e-e350-4f34-94eb-f055625240da",
      "documentation": "<p>Retrieves the names of all <code>DevEndpoint</code> resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListDevEndpoints",
      "responses": [
        {
          "uuid": "2d5497a3-f6c6-4e6c-9a3d-d0d3ad599203",
          "body": "{\n  \"DevEndpointNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28024cdb-f6ae-4c6c-a3af-6cbe0328e606",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0efa858c-84af-41d0-918f-0e1f3d45c3fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acac2593-e244-4963-8b71-c0f9644b2ad6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ee5d6d9-8b17-451e-9f07-b067e2454333",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e16a2385-79a0-4cce-bb85-4ed805335962",
      "documentation": "<p>Retrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListJobs",
      "responses": [
        {
          "uuid": "9b6498cb-ef65-44a6-8428-f9e44478972d",
          "body": "{\n  \"JobNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6437f2e4-1348-4dc2-970e-0a6fc01a6a40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d398e21b-4c9b-4618-982c-e6cdb201d831",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d39af15c-20da-46a0-b418-2fa8c9478322",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72c747c4-15f8-4385-a311-a6352aa6afc0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "490a389c-193a-44af-8bf7-1521602547ba",
      "documentation": " Retrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag. This operation takes the optional <code>Tags</code> field, which you can use as a filter of the responses so that tagged resources can be retrieved as a group. If you choose to use tag filtering, only resources with the tags are retrieved. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListMLTransforms",
      "responses": [
        {
          "uuid": "06cc2380-5a3c-426a-8708-ca73a2fce5ba",
          "body": "{\n  \"TransformIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4be349c3-d499-4998-a70e-0d2e111f280f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a682fb1-0f87-4aa9-9e85-6bc6226438ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12f9da90-dd72-4f58-81a6-08a4d6983d44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89d137c9-5422-432b-8d1b-ac694cf36568",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c585a26a-5bc5-444a-bad6-4077d600c85d",
      "documentation": "Returns a list of registries that you have created, with minimal registry information. Registries in the <code>Deleting</code> status will not be included in the results. Empty results will be returned if there are no registries available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListRegistries",
      "responses": [
        {
          "uuid": "0544ea6f-315c-4d8d-8631-9d73cb7007a3",
          "body": "{\n  \"Registries\": [\n    {\n      \"RegistryName\": \"\",\n      \"RegistryArn\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d6e53bc-2283-445b-826a-1b0b565b8be7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76c00bd2-c839-43dc-b899-4382f13bad1a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18bdd085-9e0d-42c4-a6c2-68069053a029",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca4d24b0-c34c-49e6-9935-105ba62399b4",
      "documentation": "Returns a list of schema versions that you have created, with minimal information. Schema versions in Deleted status will not be included in the results. Empty results will be returned if there are no schema versions available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemaVersions",
      "responses": [
        {
          "uuid": "2175183c-4301-4e62-afdc-9c67212b5008",
          "body": "{\n  \"Schemas\": [\n    {\n      \"SchemaArn\": \"\",\n      \"SchemaVersionId\": \"\",\n      \"VersionNumber\": {{faker 'random.number'}},\n      \"Status\": \"\",\n      \"CreatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "781780a1-6711-4fac-980e-fffa4af24d0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b61c67-e457-4399-8141-ffd73bdffd5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14d3a717-017a-46d9-a6a8-fd0cb3bbf007",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c174600c-fd4c-474d-b109-614afd53d677",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae3180d0-77e7-4ebe-a185-3e1908ce7150",
      "documentation": "<p>Returns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code> is not provided, all the schemas across registries will be part of the API response.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemas",
      "responses": [
        {
          "uuid": "6af6b488-5956-4d78-9c37-c258a4781142",
          "body": "{\n  \"Schemas\": [\n    {\n      \"RegistryName\": \"\",\n      \"SchemaName\": \"\",\n      \"SchemaArn\": \"\",\n      \"Description\": \"\",\n      \"SchemaStatus\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a327015-43b2-4212-abf2-b7c66922c932",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9ba02b5-b1d1-40ee-a70e-8bea5ed6d1a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "791b9478-5da6-468a-8b7b-4ad81a26e06e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3c9009e-0eae-44f1-8c29-5341a27cd456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a932bd33-90cf-4ba9-af19-7ab7e4b84251",
      "documentation": "<p>Retrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListTriggers",
      "responses": [
        {
          "uuid": "91bb1d6d-6fe1-4945-8598-6f4ec775bffb",
          "body": "{\n  \"TriggerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fbacae8-a717-417b-87e1-6786039fd8d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88710d7b-b26d-42f0-8bca-77daf8a4f43a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e4c3ec7-0001-4c62-bcbc-9f147f13ab6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21f8e9fa-8917-4f2a-88ed-49c5763b56da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd634f45-6ecb-447b-8af8-79590bd21f74",
      "documentation": "Lists names of workflows created in the account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListWorkflows",
      "responses": [
        {
          "uuid": "8ce58628-7e14-4188-bed5-e00f06c98616",
          "body": "{\n  \"Workflows\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa5f4ad1-a63a-44f9-9998-bba0e4540ad8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3f25abf-fdc9-48f1-b1ec-388f3bcf8024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "493eaa07-a360-487a-94df-60e1da06b474",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "56b0b661-918a-4d1f-99f5-1928ebb4bf00",
      "documentation": "Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "43999f88-4b45-48ab-a2e6-f5c98970047b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c9cdca8-b63d-4b62-a0f6-f75e7fd63664",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8513575-5b81-47ce-9c53-4126fe9785ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f14cd66c-d455-43b4-9731-c78aa31d36e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f312ac10-b9c6-4204-a39a-5071f526e6bb",
      "documentation": "Sets the Data Catalog resource policy for access control.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutResourcePolicy",
      "responses": [
        {
          "uuid": "ac3d8736-f3a8-4694-b8d9-797e64fd8394",
          "body": "{\n  \"PolicyHash\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bc5c2d3-1e03-4457-91aa-ae0c2a8bdf50",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34c19aa5-fd7a-49ed-8612-a3ffa5800619",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd505663-a0c4-4da3-8cbb-e53e7a6ec4e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9df185b-6715-4cd3-8e91-114736f2b10f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "598b3c5e-58e6-40f1-b82f-826fe2c76335",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "89f297a3-dfba-4abe-8a35-1febbbf19993",
      "documentation": "Puts the metadata key value pair for a specified schema version ID. A maximum of 10 key value pairs will be allowed per schema version. They can be added over one or more calls.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "1818578e-027d-49ff-9f8a-16a6841bec99",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'random.boolean'}},\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "920ad630-b0b3-431e-a5db-f5ea2446e787",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a02c8041-e33c-425c-a574-ba1667a5727e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6fb8912-ef4a-4e7a-b29c-2354ef4b2fbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71903f74-84e8-4295-ab5f-357a61c97653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85c115e2-0ed0-4f8c-968e-8e48a348b945",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82425e5f-8951-4ae6-b8f7-cc22f75a72c6",
      "documentation": "Puts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutWorkflowRunProperties",
      "responses": [
        {
          "uuid": "0caf80bc-da5d-4100-a86c-e128c631010b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18c9f7a3-0b81-4d99-8072-ada9757d1d52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1549c36-2a4c-44b8-84f9-a3f1de405835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baa9c829-6f66-4557-97dd-c995382e7f53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2849609f-153b-4047-a0ae-ec30695b80de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "069cea5b-a1eb-4bb4-8b45-96952bcb4f77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e510bbc-efa7-415f-81cb-33b1d4921011",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c3f65fe-4b55-4542-a202-ea062db106a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6b25099c-48ec-452a-9ed7-f1447b9b1012",
      "documentation": "Queries for the schema version metadata information. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.QuerySchemaVersionMetadata",
      "responses": [
        {
          "uuid": "93d74e12-de34-4fb3-bf18-ab1254923915",
          "body": "{\n  \"MetadataInfoMap\": {},\n  \"SchemaVersionId\": \"\",\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dbfe742-26dc-48b7-88f4-e40a8e6f8c46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18e75895-d401-43aa-be6f-0e59947506ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a685a4-67fb-4e69-9f3e-a70cd8c0f7a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d295d8d6-eff2-4833-9efa-454b9ebd5d8c",
      "documentation": "<p>Adds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.</p> <p>If this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the <code>GetSchemaVersion</code> API with the <code>SchemaVersionId</code> to check compatibility modes.</p> <p>If the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RegisterSchemaVersion",
      "responses": [
        {
          "uuid": "1498d696-4448-49fc-b032-21966f12baca",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3da54146-e84f-4921-b2df-832add7aa7ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "203f23b4-814c-47c4-a720-4fa731c71a2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6754478-4391-4096-bdfb-89d64c45831d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dde5f8d-cfff-47a2-8803-a48a9f6565b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2ee82b6-e540-4cbe-bba2-76566eeed326",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3712f5bf-2f16-4821-8cc4-f10f3d406337",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1b1d93b-c3f0-460a-99ad-5493e4a52742",
      "documentation": "Removes a key value pair from the schema version metadata for the specified schema version ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RemoveSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "d85c50e7-e5f9-4a57-b7f0-a689bfff9b8c",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'random.boolean'}},\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff2ccb9e-0d9d-4ff0-ad68-9d9cf2574e11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5c51cc3-bd52-4988-83ef-a50ebfd356a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b0d51ca-25df-420f-b03f-0f1e94fa9328",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dec6fa00-ac87-44a0-8043-ab806e6fe5b6",
      "documentation": "Resets a bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResetJobBookmark",
      "responses": [
        {
          "uuid": "2c19daaa-5372-48ca-9029-c84344910cbb",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Run\": {{faker 'random.number'}},\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f03bf568-8a21-453a-bc10-a4d551ee0ceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3187048-87a4-4496-a2d8-46d842402af3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80300890-4eee-477e-ad75-5df405f64341",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3019823-5867-4f9c-bc57-b628bbe40742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34ed13b3-0745-4166-8ab8-7ef95884062b",
      "documentation": "Restarts selected nodes of a previous partially completed workflow run and resumes the workflow run. The selected nodes and all nodes that are downstream from the selected nodes are run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResumeWorkflowRun",
      "responses": [
        {
          "uuid": "6e2fbfcd-2880-4485-92cc-1ffab61ff62b",
          "body": "{\n  \"RunId\": \"\",\n  \"NodeIds\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c408617f-6296-44d3-82f5-f24b22116a68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a47a91d-79c9-4596-bc99-349c1b6a1e40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82884625-9c89-4049-ab18-ceff81e987bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9565f01b-02bd-4237-9937-6a9cbc90abf4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e2ea292-0238-4c19-8868-88fd13c082db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "423daf64-dc9b-41ce-b9ae-58642e729b8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "349a220e-3999-43cc-b2dd-63e1c8de3df2",
      "documentation": "<p>Searches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions. </p> <p>You can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.SearchTables",
      "responses": [
        {
          "uuid": "dd32de82-72a5-46c1-89dc-ccf1d7cf2af0",
          "body": "{\n  \"NextToken\": \"\",\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10bace88-9f9c-461e-b4e7-602120eb5cc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50c70814-b291-433d-ace3-a399ad2e3708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e684454a-4985-4b45-9961-fe679a814c84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c4518f5-2019-4ec6-8ed4-544b8333c01e",
      "documentation": "Starts a new run of the specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartBlueprintRun",
      "responses": [
        {
          "uuid": "c8c3420f-6abb-4482-9e38-a35e2406c98a",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6c9a47a-e012-4001-a923-4ce77c6edb21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8016bf83-1ad4-4de2-b222-b2b8fce1b39e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b969ce73-301a-4f17-9452-52da4f8544ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "501e3ba0-2bbf-43aa-89ca-b08a639b1958",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b81d0f32-b04e-4c20-bbac-c647e02884e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acfdee18-60a9-435c-9e2a-9230995d0bff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d159851-efdb-498b-a441-ad75bb0eea33",
      "documentation": "Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawler",
      "responses": [
        {
          "uuid": "29353e07-a7d1-4d11-86fe-1531fcdafec0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cf2e8df-9797-4a2c-9289-7763d2ab5eba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "932699d3-ba0b-433a-b00c-6d0fd7770c96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9888d440-de04-4272-953d-67b5881687c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "35be8478-2e95-4042-be1c-a2183d1500d6",
      "documentation": "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawlerSchedule",
      "responses": [
        {
          "uuid": "4cf76dd5-a0d7-4280-b537-5f2a85ba0fc9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "204e5908-5f39-4c3a-b6eb-a10d1e9d6708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b2c524a-4fad-47fd-9bab-247ce674be63",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d501e778-b208-4fce-acda-25fe3a82cc1c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4395a98f-f448-4a3a-9a0a-fc7c3dc97774",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoScheduleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2803f1b9-05f1-46ee-b97c-20ddd05a1806",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca0d3277-097d-4883-96e5-33a041ccd93e",
      "documentation": "Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartExportLabelsTaskRun",
      "responses": [
        {
          "uuid": "94b4279c-02f4-499f-bff0-990219004334",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e3fc681-cc28-4654-ab60-21562e6e5a75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e88c991-7fcb-401b-bcc6-c7ddc8b790aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53762140-5bce-49b9-a2e0-3dd9ec5d5a1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b199305-ba81-4714-a756-3d0a11f5632b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "240ecaf1-704f-415d-a4ee-679dd8fb2094",
      "documentation": "<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called 'labeling' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartImportLabelsTaskRun",
      "responses": [
        {
          "uuid": "94c73204-a8fa-482f-8346-0cc23910ecfb",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b57ddd4-2292-4951-86e4-8713477437f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dff16afe-c83a-4d89-b774-edcd23f81fac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5814097-2bfb-421c-b39b-129ce8965ece",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "deb4b8af-587a-4520-aaa7-1587702dc027",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a402ea5b-3574-4ba2-8ab7-34eddede2510",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ac33c659-a363-43f8-8ece-98c35f7cf9c6",
      "documentation": "Starts a job run using a job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartJobRun",
      "responses": [
        {
          "uuid": "d406596f-f870-4ad4-b618-03c4113a5d65",
          "body": "{\n  \"JobRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa4d3f3d-8e6b-45ae-96ee-b7cbb29a25f0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d7cdb79-9c7e-489e-a4b9-2896360dab9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28e80229-00f9-4b03-adb6-06ae220a4b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "199807b5-624f-44d0-aefa-8359b3ff9649",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba9f8dc2-9651-4336-9a10-67ff3b6ece43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d744b1-ce1b-4bfe-86a7-dbbc9f2a8d24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c5b05ca-9034-47fe-8d89-c0aaf4f74bad",
      "documentation": "<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLEvaluationTaskRun",
      "responses": [
        {
          "uuid": "e536845a-a11b-47fa-b20c-1ef53f9dcf19",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ad6f3fe-f997-4a48-aa2d-4e92927e6bd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e1fccb4-0b9e-4288-8d10-ad0ea3931ba2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a41ccb0-9535-4928-a6f6-4574c02a6523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb31a1e4-1615-4293-a097-4ebb3542b466",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9ae88fa-1934-4951-84f8-dcbfbc5ed63b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2585b9be-64be-40fe-8ad6-841d4957d559",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MLTransformNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a635a76b-8057-4b78-9b14-26cbfdd04327",
      "documentation": "<p>Starts the active learning workflow for your machine learning transform to improve the transform's quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have generated a \"labeling set\" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLLabelingSetGenerationTaskRun",
      "responses": [
        {
          "uuid": "381f3a00-94ed-41a5-9491-f567f054f7a4",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa3ac958-655f-4012-9a29-3d1d277eecf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a40fbaa7-c00d-448a-ba42-513f1af34475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed73d2e9-da9d-4cd3-9618-ece231fdfd22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e61444f3-e222-4239-8c9a-07b3e0892294",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "481e03ea-b816-461b-b0c4-ff7685608c02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8bceeb7-469d-4c39-9c91-834ecc318ab0",
      "documentation": "Starts an existing trigger. See <a href=\"https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html\">Triggering Jobs</a> for information about how different types of trigger are started.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartTrigger",
      "responses": [
        {
          "uuid": "f3befee9-f62f-40e6-ad69-44fabc0908d7",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c96a0c4f-5533-4b93-a90e-88d3cc6ac28d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a569a65-699c-42da-a1e5-bc165c6923dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6ac2d57-355d-4214-84ef-66b8543d0050",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9d36eab-4856-41d6-beef-f267d7219551",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bec996c5-0374-47a1-a159-d38edd67be41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2879a9dc-8ef2-4353-8a7f-e8073415f40b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef64f2ee-9030-4b93-b7bd-eb5e2d05a933",
      "documentation": "Starts a new run of the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartWorkflowRun",
      "responses": [
        {
          "uuid": "d1468294-81b8-4b85-8e68-75b2a4eb578e",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd886f4a-3b0c-4490-bf9b-8decada18860",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3b298b8-8b29-4a3a-9fb5-9dd460f6413b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ac91cfc-d45a-4cd4-8584-359538be7b89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e76ec253-81bf-4714-b39c-6ef47005c82b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6945d6dc-aaae-4f66-9430-8694cd45829f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10185e42-dea6-4b0b-91fb-19cbe62f7b37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4024f6fe-be06-4429-9d94-230bef6685a8",
      "documentation": "If the specified crawler is running, stops the crawl.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawler",
      "responses": [
        {
          "uuid": "004daddb-491c-405d-a240-d481e5ecdcb0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b947635-a103-4172-9452-df49fe4daa22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e58ecd7c-fccc-4b22-9684-37c3ae9e405f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87af5603-080c-44d5-a05b-3e6dcc2797ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CrawlerStoppingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31fa1ada-7b66-4d91-8905-e5531a8529b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8d924ea1-b6f7-4b99-8d3f-431aa7e11b3a",
      "documentation": "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawlerSchedule",
      "responses": [
        {
          "uuid": "e22a76dd-3da4-48ba-86e7-8060d4536ee1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18c4c283-49cc-4c65-a072-32e4f238adb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1a7757b-c446-4be9-a276-becf526d4c28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e92cde6-4772-4ca3-9584-3c6e57f639ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cdbeaf59-e852-4714-948e-46f0edf0cb47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58438a43-bd89-42d3-a3bf-81bd7831264a",
      "documentation": "Stops a specified trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopTrigger",
      "responses": [
        {
          "uuid": "f46e0604-d059-476c-9f0c-11042383a4b3",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db790adf-2252-456d-ba01-f5238e98dc6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8bcbc6a-76bf-4f74-8475-8f72c4cebb49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2eb789b1-4a14-4033-b906-0f5246497588",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5fe05fe-e91d-4511-91c6-6bf3acc4b13b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0746cfd-519d-48a5-80b8-81fdcb3fbf12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bd795973-4603-4c97-9b58-5bdc503abe9e",
      "documentation": "Stops the execution of the specified workflow run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopWorkflowRun",
      "responses": [
        {
          "uuid": "522a4ff1-4b84-497c-a86f-0b3d4daa8ea0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba857ab6-0ca4-47a0-b5c4-cc2e8ab4e9f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fda17a9e-581d-4f2a-83a1-1a8e4afc7b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da365164-683c-4d1b-9dd3-d8e18fb2e949",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07fd9fd6-87d7-4de1-b945-6ff60bee313b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85558026-0cb1-42ce-8619-38181ffe44d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1e9a8b3-78b8-4778-acf8-8a30ccb3f823",
      "documentation": "Adds tags to a resource. A tag is a label you can assign to an Amazon Web Services resource. In Glue, you can tag only certain resources. For information about what resources you can tag, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">Amazon Web Services Tags in Glue</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.TagResource",
      "responses": [
        {
          "uuid": "2ca3924c-1fb3-4946-a7e9-e4309b138c7d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf25f0c2-0d4e-414e-b214-93e68417d5c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39a17ca8-b50d-41c8-b20b-b78407d88697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a33f137b-e7d6-400d-93af-88335965909a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2758345-8de1-4617-a124-3bb5fb2da725",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd5bf4f8-8e29-4b56-a24e-776440c682c3",
      "documentation": "Removes tags from a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UntagResource",
      "responses": [
        {
          "uuid": "0aa4313f-f706-48a0-9ff4-a0de4417a434",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b122162f-e98a-48fd-8303-556a466593d6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95bf4022-b717-499d-92de-23a7bc8ea7ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a431c064-f704-4e64-9369-12e97a1f8b5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d3e1407-b0cc-43e8-8b32-14a334b9d189",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c11d0b0-dcf1-4463-a7b9-065a9bb3413b",
      "documentation": "Updates a registered blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateBlueprint",
      "responses": [
        {
          "uuid": "cd636f2e-0f0e-458f-b3c5-489e91b2dc61",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af19b56e-18e6-4b52-b664-e645b80dff37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9a61602-ce6d-4fb3-91fd-94dc62faaeac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86874034-bf04-436c-9484-6735019d101b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3846c216-5ce2-444e-8db6-37518c847a28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd4cefb1-b8cb-42da-8910-8b6aced2a8a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9a05b1a-513c-46bb-8d8c-2dafc40a1eae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd1f8db4-54f9-4bf0-b5c2-c2db412d1936",
      "documentation": "Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateClassifier",
      "responses": [
        {
          "uuid": "e688ab07-9399-491e-9069-820b3a7f0cd7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c63b023-c093-417f-b3bd-1a28c2bac716",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec0a27a4-1205-446f-9dea-c8b5909418e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cafa1017-e83a-46d9-ab9f-27388644511a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99748ee4-133e-4e74-9526-ec8ae07ae6f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cf20d598-0006-4020-bece-1e368936960a",
      "documentation": "<p>Creates or updates partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdatePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "79727b32-1976-4f5c-ac57-dbfc8a28f019",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'random.number'}},\n            \"NumberOfFalses\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.float'}},\n            \"MaximumValue\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.number'}},\n            \"MaximumValue\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d49ef0e4-0b04-434f-a81a-b6a7221ef55b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c58b47c-b375-4bb6-a9b9-fb9ab3d26f8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c696c1b-5956-4b82-927a-03f1df7c9fb4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39ea60aa-ba90-4955-8606-9cc506b84b53",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "041142f9-111c-437d-b440-7ba77dc1d660",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0da242de-9671-47d4-854f-05625b7f89a5",
      "documentation": "<p>Creates or updates table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdateTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "02477fb7-01f0-44d4-a8a7-be9e1feba3f2",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'random.number'}},\n            \"NumberOfFalses\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.float'}},\n            \"MaximumValue\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.number'}},\n            \"MaximumValue\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9681842c-3f8c-4c8e-967d-6e117f35b942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0597a1bd-89f4-4179-9a3a-56de272d9835",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a4016b-cd00-4635-81ee-437c099422e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4cd6ac5-eb2f-4afe-941e-fc7b37da9f65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63d3581e-9a05-4eb9-9cda-8f4f70bc1c8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7c9afd3-5c49-4eb5-a0cc-d088a1bdd496",
      "documentation": "Updates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateConnection",
      "responses": [
        {
          "uuid": "e14ed6ff-73ad-4a01-83d3-ac6aa351ead8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40889e47-ef47-44b8-86b9-5e0cd17cac8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4025ff78-95a2-46e7-ad03-cee8e481f302",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28f1db65-5a2c-4e82-90af-e1d8b8b72a07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94ff2ce3-3ec7-400b-9eb4-e62faacd31da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bcab2e6-c5ef-4028-bf6b-99090a282704",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b39e5d5c-76aa-4077-8bbe-a7fb6d99c4df",
      "documentation": "Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawler",
      "responses": [
        {
          "uuid": "114a7c56-0042-4aef-a465-f7ba809f1f66",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "260e4694-7bbc-4d2b-94fb-a0968eb49228",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a5e2455-1eb2-4739-9a53-9f050d0d26fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a141a81-18fc-48df-b2d3-7945b29f5640",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71348373-8922-405e-872f-8a1c9efef767",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b30b67ae-58a0-4d5b-8058-e9e62085a4f4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f964028f-8ada-4025-8bf6-4764b4bb1628",
      "documentation": "Updates the schedule of a crawler using a <code>cron</code> expression. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawlerSchedule",
      "responses": [
        {
          "uuid": "ee871714-c3ec-4b8f-a68f-f1e69d60a727",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3e8c9a6-b501-4a4d-9944-c3db8ffddd11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08e9c5e7-3711-4ea2-8fbb-7e836b124312",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16ef8968-5168-4717-86b4-b57ac77a9fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "586890d4-6e78-4c70-be7a-1acfd4526703",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b950a6e-7557-450d-9277-54133c335d3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2447b2f0-df24-4220-b3f9-fd00173183d5",
      "documentation": "Updates an existing database definition in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDatabase",
      "responses": [
        {
          "uuid": "5ea88ec2-782f-483c-a911-c1a2a06d4594",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4006da9-8f5b-44a2-a832-3c998e99827d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cd9f4aa-cf4c-4e6b-a26b-e9a265ed0cf3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4b081cf-ac45-45eb-a689-f8c922966991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79e52839-7bb2-4ab9-9e20-40a35c839aff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e928682-42f4-4569-b551-788c5236c4ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb44a7d8-91c7-462f-8ae9-e92be2f85ec0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dcb5b245-ae74-4236-953b-a4145d84e605",
      "documentation": "Updates a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDevEndpoint",
      "responses": [
        {
          "uuid": "2c732e72-1549-4a00-814c-254e227bd009",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33064bbc-a7be-42f1-9527-f857b9f2c46b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ebe1fd1-5555-465d-a049-ed84bbd573e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e56247ab-e027-499c-98e6-02507ce22aaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a70c699-5561-47c9-a24d-dc48e305e3d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92176c5a-587e-4f92-ae26-4d3618aceaff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e74de66a-9d7e-45a0-81a4-98fb17e8ddf1",
      "documentation": "Updates an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateJob",
      "responses": [
        {
          "uuid": "a02c5e49-4f91-43a0-be8b-e91e11bf0b8d",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b4fdcd2-9805-43f2-bf0f-b1808196353a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eedbb3a-5046-4a65-a0a1-90ddb86acc70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b40aab-0eb8-4c9d-b738-73c43b9ca00a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fd8ef47-41f7-4731-9bce-9be76cf00a68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0306a55c-10e2-41ce-b14e-b8b275ce34d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "89be9e2d-3686-4049-9920-cdc6bdcfd461",
      "documentation": "<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateMLTransform",
      "responses": [
        {
          "uuid": "ca0e504a-b6a2-4c78-8059-11ea3bd65f03",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0cf6439-98be-4986-87fe-68a8c270189c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd9c8255-6fc8-4099-9353-8e2db40c9714",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5d7daa0-82dd-435c-b0ec-8b24f14e8075",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78a48b17-d9eb-485a-9b1a-f693f1814a52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "774aaad4-6f71-437d-a4eb-bc0bca4c36de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4eb7cfd7-7683-4a45-8173-b1145a529569",
      "documentation": "Updates a partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdatePartition",
      "responses": [
        {
          "uuid": "e17aac68-b12d-4fc3-b285-4f5a0ecc0cc9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87a248e7-9398-4e92-aa4e-b1cb2a901939",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35d80e05-e811-40b6-8f78-18862e038618",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afa8e4cc-bb92-4bf2-99d8-8e226bd21b1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f707830d-1f06-4cd9-9705-d5ff88e40af5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "984c4ef8-15bf-4c2e-96d8-83013970d042",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ea904f2d-7338-489d-a453-f84b708e2d76",
      "documentation": "Updates an existing registry which is used to hold a collection of schemas. The updated properties relate to the registry, and do not modify any of the schemas within the registry. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateRegistry",
      "responses": [
        {
          "uuid": "08e448f1-0d7f-4753-aacf-614c5c76d27b",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49517de2-f5fe-4434-a270-a9603d4e9377",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1e91c56-11f8-4ae5-b320-4603b3ec6597",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39acf7fe-2985-45fe-8e22-0f6e6ba42fc3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf785eba-557a-4b4e-a805-9b15d15dcd28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47f441b4-8e2c-4de2-8b58-7cc47894287a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1021930-079d-4ac4-9a8a-2d607496cbf9",
      "documentation": "<p>Updates the description, compatibility setting, or version checkpoint for a schema set.</p> <p>For updating the compatibility setting, the call will not validate compatibility for the entire set of schema versions with the new compatibility setting. If the value for <code>Compatibility</code> is provided, the <code>VersionNumber</code> (a checkpoint) is also required. The API will validate the checkpoint version number for consistency.</p> <p>If the value for the <code>VersionNumber</code> (checkpoint) is provided, <code>Compatibility</code> is optional and this can be used to set/reset a checkpoint for the schema.</p> <p>This update will happen only if the schema is in the AVAILABLE state.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateSchema",
      "responses": [
        {
          "uuid": "69ebce50-5bb5-4de5-8af2-69c1e19bc6ec",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d71491c2-5dff-4cf8-8fd0-70807411c61b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "969ed03b-7157-486b-894c-3e818aa00604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76eaa2c5-d721-4904-91f5-f3b8633aaca4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b738b30-2983-4ff4-86a1-e9b1fa4bfc76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a84c1fa-0f6a-43db-9cbe-09e55bbc186c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11f8bd9e-a3f0-4461-9e3b-c479f7abc7a5",
      "documentation": "Updates a metadata table in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTable",
      "responses": [
        {
          "uuid": "40ebc13b-3fad-4ca3-9bc6-483ac75094ac",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34e1420d-0ecd-407a-8fb7-cc387b966cf7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a088776f-6a12-4434-b47c-869ccdc8d0bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63fce992-0b1f-4e3e-9a60-3946f7b81f04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9285ced4-1cad-440b-b142-fab67b5daf9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e79d0b-fccd-4b88-be66-dac48002ca19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e16789cb-302e-4157-aec0-6281875da4a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8fba493-ccf0-414f-842b-566651211138",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a7113c8-fef1-4ac8-8dbd-3ca336e3b14a",
      "documentation": "Updates a trigger definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTrigger",
      "responses": [
        {
          "uuid": "49199ad8-344a-43f1-98cb-84270863e8c9",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'random.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'random.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e142d6e-5314-4530-9639-5d37b1ff6392",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9655c82f-8ba2-4872-a6f5-9c491ab7979e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62490d1e-0475-4827-8757-a743aaca1d39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f407880-7a9c-4c82-9ee8-fc4c1e877e7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46504e1a-d719-4038-9cbc-5e7c1461c48a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "92bacfb4-f642-41f3-8deb-3d2d39e1dae5",
      "documentation": "Updates an existing function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateUserDefinedFunction",
      "responses": [
        {
          "uuid": "3fe3fc1f-2578-4ed0-baf3-2e28d2852177",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71f84c1a-14a9-4310-8f46-8d2da39fc182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb3a2c79-d657-4fe1-86ce-2850956e8b60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf38c818-63a0-4b6f-a608-2e1f54a0c8cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67eec1a9-a0e4-4e24-8fee-da2795456118",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5460155-a9cc-4b0f-be1f-9d000191aca2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a802986b-5f1e-4917-8b54-1626aec5c62a",
      "documentation": "Updates an existing workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateWorkflow",
      "responses": [
        {
          "uuid": "88dedc01-a5a9-4226-9494-ee2c449d1432",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8c3c9f33-ae39-491d-bc1d-6c51ae3bbb80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d855768-4c17-42df-97a2-7c3312c06c9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72000927-5970-4d19-8203-1cec5ff8a7e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ba47d1e-5133-40c1-b0d8-f2f65ab9baf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1eeea465-946b-494d-a926-74609f1d4667",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}