{
  "uuid": "d8f0fcd6-f78e-43a7-a853-be22df7ec335",
  "lastMigration": 19,
  "name": "AWS Glue",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "59012c17-aacc-4888-837d-f24c3d09d0fe",
      "documentation": "Creates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchCreatePartition",
      "responses": [
        {
          "uuid": "0730f641-b064-41b2-880c-e09cccb9946f",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da767f83-e631-4b56-9c10-86fcf7cd5d17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86189d5d-9024-45c8-a875-f9f0abdedec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "611a0702-3e0d-4ef4-8cf8-5ebd0c19a9c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d65c503d-4172-4249-9193-b9e2be5d0f81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc033ec1-b519-4d55-b931-1b5557c3b88f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e2899404-6743-4a35-af8c-9169f7fb5a93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c00620-2fff-46de-81e0-29c09e517b23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a45167a-7686-438a-a3bb-5da312812f2f",
      "documentation": "Deletes a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteConnection",
      "responses": [
        {
          "uuid": "37b7b853-a446-4311-999a-d964d4928c8a",
          "body": "{\n  \"Succeeded\": [\n    \"\"\n  ],\n  \"Errors\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bada6ac-36a0-4048-97a3-86ac696ebf91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c63b6e2-97b3-4cf4-a433-721ba3393e5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61c417a7-5f3c-43d1-9f5a-b680383a8df7",
      "documentation": "Deletes one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeletePartition",
      "responses": [
        {
          "uuid": "36a792cc-84b6-4159-9eb6-c04acef89a01",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValues\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4c3d229-15df-4c69-b137-2ba4bd4d390b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6419ddeb-e68a-429b-ac84-b77a874906ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4994d538-fbe5-4d91-86e4-f5ee86f74a39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50bcb5e8-fb3b-475d-9b29-8fc8f3ef367a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6b41a6c-6b90-41ed-8a4e-95b6164de106",
      "documentation": "<p>Deletes multiple tables at once.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>BatchDeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTable",
      "responses": [
        {
          "uuid": "50f9a50a-4e60-43b3-b216-6a54faa2ab4a",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "594e45d2-dbaa-456a-af01-30fe9336f142",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fc485e7-e3d6-42c8-b90f-77ad5ceaa3f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59508814-defa-4079-8aed-29c47253376d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4d7caf3-10d2-462a-9b93-87e9a3920a10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0591225-24f7-4d2a-a4b7-b190df10ebd0",
      "documentation": "Deletes a specified batch of versions of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchDeleteTableVersion",
      "responses": [
        {
          "uuid": "bb1c4ff5-85c1-47bf-acd1-303597e74d7d",
          "body": "{\n  \"Errors\": [\n    {\n      \"TableName\": \"\",\n      \"VersionId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1bcaa02-2579-4c7e-b2c7-41ebfe28b687",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b50df5a9-78d4-4030-bea4-f3d9e0c1eee8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eaa8b93-673e-4c62-98c7-6727399f5014",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "018caa8f-d586-4720-a531-ec1be8ff344c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f84e5104-96ed-41cf-a067-73ea1067b4e7",
      "documentation": "Retrieves information about a list of blueprints.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetBlueprints",
      "responses": [
        {
          "uuid": "8d178946-7317-4f18-83fb-14103d0e5176",
          "body": "{\n  \"Blueprints\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LastActiveDefinition\": {\n        \"Description\": \"\",\n        \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n        \"ParameterSpec\": \"\",\n        \"BlueprintLocation\": \"\",\n        \"BlueprintServiceLocation\": \"\"\n      }\n    }\n  ],\n  \"MissingBlueprints\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9857ade-7fba-45a1-8ac4-d054e7cebc98",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0313aa6e-f90d-4053-b4e1-ca75cef4c9e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0175a58-24de-4883-beb3-01e2b376c377",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "326b5f9a-50bd-419d-b99e-5faa150afbef",
      "documentation": "Returns a list of resource metadata for a given list of crawler names. After calling the <code>ListCrawlers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetCrawlers",
      "responses": [
        {
          "uuid": "90f6176b-49a4-476e-bca5-df83f5163bb1",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'random.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'random.boolean'}},\n            \"scanRate\": {{faker 'random.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'random.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'random.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"CrawlersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47f399ba-f30f-4f1a-ade7-8d7809b37281",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11eadd9c-7446-4f06-9e11-1fae87cd6dd5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80799bf4-82cc-4aff-a36d-a06d93bc67f6",
      "documentation": "Returns a list of resource metadata for a given list of development endpoint names. After calling the <code>ListDevEndpoints</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetDevEndpoints",
      "responses": [
        {
          "uuid": "7e6166e8-8abe-4cba-979f-ab212c63d85c",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"NumberOfNodes\": {{faker 'random.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"DevEndpointsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32788c49-3d9e-4638-b044-7c41a6a1bef2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77b3890e-e3ed-4bf4-b60d-59e6b998898a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd97d00e-fdcf-40c1-b4c0-166f8ec57c34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feb058bf-f96c-450e-8ab6-202dc5de5aa8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0ecf7b7-12f2-4498-8108-1672cafa5ccf",
      "documentation": "Returns a list of resource metadata for a given list of job names. After calling the <code>ListJobs</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetJobs",
      "responses": [
        {
          "uuid": "e6d764d2-826b-4085-8fc3-83bb46969440",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'random.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"JobsNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ecdcdf1-d28d-4fea-94b9-b887848f4ee5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bf26937-525e-4324-be01-9b5cc8c95ca9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1494dc4-057a-4a47-bebe-a157b17cb9e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d1da26d7-daa9-4466-8224-2c7e4e8d62c4",
      "documentation": "Retrieves partitions in a batch request.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetPartition",
      "responses": [
        {
          "uuid": "78d1b0d1-8f6d-4f8c-802f-fc26cda33694",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"UnprocessedKeys\": [\n    {\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "295b74bf-b0f5-45f9-80e7-99fef9464ebd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9a36d06-cb54-4ca7-ae43-f9e3f3dce5a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b92a1f7f-a630-48a9-86e6-89ab1bac92ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4e3c57f-01e8-47d1-b8f8-0acf3b445c26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587f4d73-9fac-4cf3-92c8-5338c68949e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "08af50cf-6e06-433f-a21f-c4bd964ca858",
      "documentation": "Returns a list of resource metadata for a given list of trigger names. After calling the <code>ListTriggers</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetTriggers",
      "responses": [
        {
          "uuid": "e65749a5-7a72-44d6-b1eb-2312729e3a54",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'random.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'random.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"TriggersNotFound\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c35fd78f-e121-4e8d-886b-bc086afb22a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4386420b-1328-4274-bb13-90e9f2fc73ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b8d6ae2-d5bd-494c-a4c9-e3fbcaf16558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1e4bf79-a8c7-4f30-b26c-a36e42e94445",
      "documentation": "Returns a list of resource metadata for a given list of workflow names. After calling the <code>ListWorkflows</code> operation, you can call this operation to access the data to which you have been granted permissions. This operation supports all IAM permissions, including permission conditions that uses tags.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchGetWorkflows",
      "responses": [
        {
          "uuid": "d6ace427-78fd-484f-9ccf-3add35c6ce2a",
          "body": "{\n  \"Workflows\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefaultRunProperties\": {},\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastRun\": {\n        \"Name\": \"\",\n        \"WorkflowRunId\": \"\",\n        \"PreviousRunId\": \"\",\n        \"WorkflowRunProperties\": {},\n        \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n        \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"Statistics\": {\n          \"TotalActions\": {{faker 'random.number'}},\n          \"TimeoutActions\": {{faker 'random.number'}},\n          \"FailedActions\": {{faker 'random.number'}},\n          \"StoppedActions\": {{faker 'random.number'}},\n          \"SucceededActions\": {{faker 'random.number'}},\n          \"RunningActions\": {{faker 'random.number'}}\n        },\n        \"Graph\": {\n          \"Nodes\": [\n            {\n              \"Type\": \"\",\n              \"Name\": \"\",\n              \"UniqueId\": \"\",\n              \"TriggerDetails\": {\n                \"Trigger\": {\n                  \"Name\": \"\",\n                  \"WorkflowName\": \"\",\n                  \"Id\": \"\",\n                  \"Type\": \"\",\n                  \"State\": \"\",\n                  \"Description\": \"\",\n                  \"Schedule\": \"\",\n                  \"Actions\": [\n                    {\n                      \"JobName\": \"\",\n                      \"Arguments\": {},\n                      \"Timeout\": {{faker 'random.number'}},\n                      \"SecurityConfiguration\": \"\",\n                      \"NotificationProperty\": {\n                        \"NotifyDelayAfter\": {{faker 'random.number'}}\n                      },\n                      \"CrawlerName\": \"\"\n                    }\n                  ],\n                  \"Predicate\": {\n                    \"Logical\": \"\",\n                    \"Conditions\": [\n                      {\n                        \"LogicalOperator\": \"\",\n                        \"JobName\": \"\",\n                        \"State\": \"\",\n                        \"CrawlerName\": \"\",\n                        \"CrawlState\": \"\"\n                      }\n                    ]\n                  },\n                  \"EventBatchingCondition\": {\n                    \"BatchSize\": {{faker 'random.number'}},\n                    \"BatchWindow\": {{faker 'random.number'}}\n                  }\n                }\n              },\n              \"JobDetails\": {\n                \"JobRuns\": [\n                  {\n                    \"Id\": \"\",\n                    \"Attempt\": {{faker 'random.number'}},\n                    \"PreviousRunId\": \"\",\n                    \"TriggerName\": \"\",\n                    \"JobName\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"JobRunState\": \"\",\n                    \"Arguments\": {},\n                    \"ErrorMessage\": \"\",\n                    \"PredecessorRuns\": [\n                      {\n                        \"JobName\": \"\",\n                        \"RunId\": \"\"\n                      }\n                    ],\n                    \"AllocatedCapacity\": {{faker 'random.number'}},\n                    \"ExecutionTime\": {{faker 'random.number'}},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"MaxCapacity\": {{faker 'random.float'}},\n                    \"WorkerType\": \"\",\n                    \"NumberOfWorkers\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"LogGroupName\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"GlueVersion\": \"\"\n                  }\n                ]\n              },\n              \"CrawlerDetails\": {\n                \"Crawls\": [\n                  {\n                    \"State\": \"\",\n                    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                    \"ErrorMessage\": \"\",\n                    \"LogGroup\": \"\",\n                    \"LogStream\": \"\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"Edges\": [\n            {\n              \"SourceId\": \"\",\n              \"DestinationId\": \"\"\n            }\n          ]\n        },\n        \"StartingEventBatchCondition\": {\n          \"BatchSize\": {{faker 'random.number'}},\n          \"BatchWindow\": {{faker 'random.number'}}\n        }\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"MaxConcurrentRuns\": {{faker 'random.number'}},\n      \"BlueprintDetails\": {\n        \"BlueprintName\": \"\",\n        \"RunId\": \"\"\n      }\n    }\n  ],\n  \"MissingWorkflows\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91894340-ab4e-4949-a9f5-b04b43f6c13c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b773150-2803-4d18-93cd-b0ca337ab187",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25f514be-6c2e-4b6b-b5f2-48e0c862dec0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f1167d44-d7b5-46ce-9d2b-1f9038732e6a",
      "documentation": "Stops one or more job runs for a specified job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchStopJobRun",
      "responses": [
        {
          "uuid": "1b977070-fbac-4e41-bf71-32c67c90ff06",
          "body": "{\n  \"SuccessfulSubmissions\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  ],\n  \"Errors\": [\n    {\n      \"JobName\": \"\",\n      \"JobRunId\": \"\",\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3df91e9b-faa3-4fc5-b941-0531c2bfce5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de9e277e-3f82-4e82-b769-efe5b5e8628e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27acfb3a-334d-49d6-bfe8-028ad9119569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "763bef1c-5d7b-4ddc-a8a4-2d828b2043a2",
      "documentation": "Updates one or more partitions in a batch operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.BatchUpdatePartition",
      "responses": [
        {
          "uuid": "ac299236-a447-4c65-86e2-eeb3885bbd4a",
          "body": "{\n  \"Errors\": [\n    {\n      \"PartitionValueList\": [\n        \"\"\n      ],\n      \"ErrorDetail\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18b27478-e5f3-4ff6-a2e5-c29dca2c96dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd262a0f-b296-4524-856d-94f3c1653c54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cc0b759-12c3-40c7-99de-864ea5f86673",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9aaf209-4f87-4257-a7dd-c64dcef64d99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca81fe6c-4e49-4201-8524-2f31e3a4f3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e029b82-5894-41c9-a32a-a0ca286c2bc3",
      "documentation": "Cancels (stops) a task run. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can cancel a machine learning task run at any time by calling <code>CancelMLTaskRun</code> with a task run's parent transform's <code>TransformID</code> and the task run's <code>TaskRunId</code>. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CancelMLTaskRun",
      "responses": [
        {
          "uuid": "9fa6561d-4f89-44f0-a336-999a60667daa",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f594cce9-2357-435f-accb-88db5774b864",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0eab4efa-5b0d-4276-a7e0-b2579780a47d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbb9e9e2-07e4-4357-a357-a6ff6970e446",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9125934e-e3db-47fb-a851-01fe425a48fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b3441388-2ddf-4fc1-a1e4-eda0d2abbc72",
      "documentation": "Validates the supplied schema. This call has no side effects, it simply validates using the supplied schema using <code>DataFormat</code> as the format. Since it does not take a schema set name, no compatibility checks are performed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CheckSchemaVersionValidity",
      "responses": [
        {
          "uuid": "b0cf3ec8-ec58-4cd7-9b4a-4aac2f45a9d3",
          "body": "{\n  \"Valid\": {{faker 'random.boolean'}},\n  \"Error\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4859d42b-5e2b-4aec-a057-b6db5ae0c5ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "059c5367-3be4-4737-ac76-289c1bc1b9dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e0dbc92-3d14-40eb-a9e0-bbb238a5e9e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "97f6d053-0980-4bf9-8f7f-22ed2dd97ef2",
      "documentation": "Registers a blueprint with Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateBlueprint",
      "responses": [
        {
          "uuid": "ee89420d-4044-4b40-9790-fb30a31891f2",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "587fa704-ddfa-45da-8549-133a3e0bcac4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2706ca56-2ce7-444e-895d-981e6511c07a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61fa9217-676f-42e4-8270-dd23a8cc23d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f23c2989-e471-4618-b978-9cab63288fdd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72437f38-d682-4a5a-8939-2fb62dc8e8ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b63ef9e2-a508-45df-aa97-7d265d7ffae3",
      "documentation": "Creates a classifier in the user's account. This can be a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field of the request is present.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateClassifier",
      "responses": [
        {
          "uuid": "842dc77d-ace2-431f-8231-0409c7b62eab",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fa91e37-9ade-4ca7-8209-553f6dfcd067",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e59a0de8-35d4-4241-bdd7-5774e3f40e78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b17ba28d-c8cc-443b-a87c-78b87aa18adb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b77418d6-9690-4c72-bfee-fd44bf29934d",
      "documentation": "Creates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateConnection",
      "responses": [
        {
          "uuid": "613297d2-67fe-40e9-840e-49b0ba8bb8e2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbf4f93e-23c2-429c-afe6-f3643f10d471",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc992e75-a220-48c0-8674-d596c654eebb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be245776-ddc5-470d-a5b9-8d65a450a3ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89e95415-2b07-488f-8e99-2fdf5267af55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e7da44b-483c-4221-9119-cd6875053bca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1883d58-5b0b-4a7c-9b5a-57193611fb86",
      "documentation": "Creates a new crawler with specified targets, role, configuration, and optional schedule. At least one crawl target must be specified, in the <code>s3Targets</code> field, the <code>jdbcTargets</code> field, or the <code>DynamoDBTargets</code> field.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateCrawler",
      "responses": [
        {
          "uuid": "72d0680d-8844-4663-834c-0023627aae8c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e0ab806-b432-46d2-8f7f-85c70fee9443",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a321ec3-6b15-4612-a619-c3883bcbdb59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1e212ce-a013-4f27-beea-7658937a48cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "363ef354-ce84-4b64-bd5b-2726f7b22de4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e8a3b5b-988b-4df7-b510-a1daec67b0fe",
      "documentation": "Creates a new database in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDatabase",
      "responses": [
        {
          "uuid": "5a48fb40-7684-4ad1-b1b4-22866da0521c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e66b474c-eb4e-4e5e-add7-827d49cf5530",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d343618f-332a-4073-a831-7bd227fa167a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8eb832e-afb4-4691-856d-0af940b955c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39f9b877-f583-42a6-835c-8375113c1871",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f8b147c-4c14-417d-b167-fa355a970cd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da8047d3-252c-4192-9de3-4b2481586722",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c31634c1-da33-4f59-aa3c-0417554b44ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e058b578-1be2-476e-86a7-59710b8e96f4",
      "documentation": "Creates a new development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateDevEndpoint",
      "responses": [
        {
          "uuid": "50771976-a147-42da-8353-43b2131be113",
          "body": "{\n  \"EndpointName\": \"\",\n  \"Status\": \"\",\n  \"SecurityGroupIds\": [\n    \"\"\n  ],\n  \"SubnetId\": \"\",\n  \"RoleArn\": \"\",\n  \"YarnEndpointAddress\": \"\",\n  \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n  \"NumberOfNodes\": {{faker 'random.number'}},\n  \"WorkerType\": \"\",\n  \"GlueVersion\": \"\",\n  \"NumberOfWorkers\": {{faker 'random.number'}},\n  \"AvailabilityZone\": \"\",\n  \"VpcId\": \"\",\n  \"ExtraPythonLibsS3Path\": \"\",\n  \"ExtraJarsS3Path\": \"\",\n  \"FailureReason\": \"\",\n  \"SecurityConfiguration\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n  \"Arguments\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80354f0e-3a7d-405c-8b86-f8ecf704650f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61f109a1-21be-4f92-8994-810b327c8d60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e19faf8a-48f7-40fe-a250-0941db59529e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3e2eafa-e2fa-4259-bf11-d1203b997ce3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a910df48-4228-4c73-b359-1d940b574a1d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88c302dd-dd29-42be-92f6-14f9407a445b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77343fcd-fcba-4e32-8db9-bb6724545c59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f7e8e51-89c2-42cd-9c01-4783c60a8dce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86795b53-0e46-4368-ba41-3b5982048296",
      "documentation": "Creates a new job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateJob",
      "responses": [
        {
          "uuid": "97ba7bce-25f8-4f79-8b4d-9ab7634d515e",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cf5d39a-c7c2-4246-b803-51b5d68e5a4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89f10b25-9348-47ab-bde4-1a36cbc5d479",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87ab1ade-fb8f-4f67-9860-8a2d541dddff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3887fa64-0ad9-49da-a388-ed0c7c402cd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ae336ad-98cf-4cd6-802f-9e45822a9977",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9eee87f-f290-478b-b31e-c2368b3d6eeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b1158a1-17aa-402c-b592-9e2840579fe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1b38bd71-8fee-4a2b-99ad-6046d2fd440a",
      "documentation": "<p>Creates an Glue machine learning transform. This operation creates the transform and all the necessary parameters to train it.</p> <p>Call this operation as the first step in the process of using a machine learning transform (such as the <code>FindMatches</code> transform) for deduplicating data. You can provide an optional <code>Description</code>, in addition to the parameters that you want to use for your algorithm.</p> <p>You must also specify certain parameters for the tasks that Glue runs on your behalf as part of learning from your data and creating a high-quality machine learning transform. These parameters include <code>Role</code>, and optionally, <code>AllocatedCapacity</code>, <code>Timeout</code>, and <code>MaxRetries</code>. For more information, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-job.html\">Jobs</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateMLTransform",
      "responses": [
        {
          "uuid": "ef4d79ad-379e-4805-a9e8-98ec26d9642c",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2583c02-941a-4dd0-a65d-0918d1cd3b74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2444fcb1-c872-4a6c-af13-6d227d0bde62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa09de19-bdac-4dcd-a753-017f90e6f10b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15a2fa1d-8786-41fb-98c4-d34b1aee9a04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18005d7d-fc36-43ae-a07a-e05b992ee471",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77dec47d-2f5b-4d03-843a-e83b2cf713be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "658b8da6-8296-43f0-8677-c30352ff0d93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "424a05db-f56f-4399-b40b-822bbc943d42",
      "documentation": "Creates a new partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartition",
      "responses": [
        {
          "uuid": "ada53074-90bc-42d7-80df-6dfe69c4c9b0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f334847-4c7b-484e-907f-123189fa2ee8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a6fe1e9-9cbf-4ddd-8897-14a73bfa3bb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19637967-4e08-417b-ac0d-c071976159b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1de07ae-66c1-4314-a107-c7ea2a2ba836",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12283eb3-1a49-41f2-a265-df39dc89de81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15b1a626-d339-4745-9575-d3ef999754fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb38f9fd-a947-417d-9f94-e0a75e307b87",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "253742b7-b5e3-4b1b-b928-9149d0b9389e",
      "documentation": "Creates a specified partition index in an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreatePartitionIndex",
      "responses": [
        {
          "uuid": "9bbff93e-97ce-4788-8af6-21c7bdf9b767",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e858697-7e9f-4397-ae0f-a1b87d3048ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c65655a-2feb-4cdb-a769-37e8e8b4433c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6053be70-7196-45ba-938b-43e2cf643b1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "117b2f4d-d08c-4c49-90ed-1b328898609e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78547b93-8825-47f8-801c-fe53ca39fdec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8d525da-1158-42e4-82ea-c409cbebb166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "721d9f80-5f2a-4a0c-b1e7-4166b609721c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d0982ef-48af-46e5-a196-fb2d3ab6e1a6",
      "documentation": "Creates a new registry which may be used to hold a collection of schemas.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateRegistry",
      "responses": [
        {
          "uuid": "fa1d0eb7-72bb-4771-9731-6828a98ecd12",
          "body": "{\n  \"RegistryArn\": \"\",\n  \"RegistryName\": \"\",\n  \"Description\": \"\",\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b628bbf-a1da-4747-8253-e76d57a90c5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5a93a03-e704-45b4-b3b9-19229355ee6b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f304ea-83b2-4903-82db-a614dda333ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165b5fcc-7170-4797-b635-1a8da0f297ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24ead284-4c6d-425d-9290-a055c84a58bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e1fca887-7289-4552-b27b-044a2b70fb98",
      "documentation": "<p>Creates a new schema set and registers the schema definition. Returns an error if the schema set already exists without actually registering the version.</p> <p>When the schema set is created, a version checkpoint will be set to the first version. Compatibility mode \"DISABLED\" restricts any additional schema versions from being added after the first schema version. For all other compatibility modes, validation of compatibility settings will be applied only from the second version onwards when the <code>RegisterSchemaVersion</code> API is used.</p> <p>When this API is called without a <code>RegistryId</code>, this will create an entry for a \"default-registry\" in the registry database tables, if it is not already present.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSchema",
      "responses": [
        {
          "uuid": "766bbfaf-94ca-406b-b852-bba4edda4715",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'random.number'}},\n  \"LatestSchemaVersion\": {{faker 'random.number'}},\n  \"NextSchemaVersion\": {{faker 'random.number'}},\n  \"SchemaStatus\": \"\",\n  \"Tags\": {},\n  \"SchemaVersionId\": \"\",\n  \"SchemaVersionStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ea9eaba-a656-4888-8450-07a1289e9f79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22c7e864-fb5c-4a32-9be5-0c94b44eead0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87492dbd-f445-47d4-b151-b60aa91da4e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b76002a-7a1d-4ccb-bb86-bc96148deba5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0f96e8a-eb2a-428b-b94b-1424e50f2c24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ac8c59e-b519-47db-9875-edc5c1383486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "477d00b6-e605-4607-aa92-800827833266",
      "documentation": "Transforms a directed acyclic graph (DAG) into code.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateScript",
      "responses": [
        {
          "uuid": "b5c8c3c3-74bb-4ae5-a6e7-ae734ea3b010",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "451df9c9-9845-4643-94f7-6800e7589d44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a99d9af6-56e9-4498-8358-b67e531d3988",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad37243-2e1d-47ba-b080-2ae99e73dbc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13bfdd7d-d8cf-4890-b124-faa3722d8ad9",
      "documentation": "Creates a new security configuration. A security configuration is a set of security properties that can be used by Glue. You can use a security configuration to encrypt data at rest. For information about using security configurations in Glue, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/encryption-security-configuration.html\">Encrypting Data Written by Crawlers, Jobs, and Development Endpoints</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateSecurityConfiguration",
      "responses": [
        {
          "uuid": "2d40126e-a877-4c1f-a526-1994e72be076",
          "body": "{\n  \"Name\": \"\",\n  \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91e55c36-c4f3-44d9-93a1-ad1161cb6194",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5bc676f-3454-4775-acbf-35b28c1cd0d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c37588a3-73e9-467d-a4c7-6747280a65e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "852358aa-712d-486d-9498-d59ee1ea21eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2be8ff7-797f-44af-9a2b-3455085fa5dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "916e74fb-9c63-4da1-9a25-0c54427571ac",
      "documentation": "Creates a new table definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTable",
      "responses": [
        {
          "uuid": "18e62a51-63cd-4f96-a45e-41c55f75fc8e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5177d0aa-6deb-46c6-b260-e931df2f302f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad992f55-3b6b-4abd-a863-c7ae537dc1ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3f73630-5e1e-400e-8019-d5fee7427db2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "881de4a2-f470-4567-a561-f59c5bd6482d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33c513e7-0098-4d29-93c4-d79080d751d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0175427c-16cd-4cfc-8158-a2bc4b613fa0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7e3d5540-1d0d-4c1c-bb8d-0d1030a4851d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8fbe9e6-838c-4228-967b-c5bbe0e5721a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfce9737-476a-4e6d-b5d2-b82452f648de",
      "documentation": "Creates a new trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateTrigger",
      "responses": [
        {
          "uuid": "810151f5-3b66-4a8f-bac5-afbe66926fda",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5346b0ca-4579-4b73-9a2c-84ba1dabf2c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dabd3fe-ff36-40a1-a405-9657875563f8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb9007c8-36e7-49dd-8ba4-f159f08f97ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01cfa433-ea8f-443f-a767-05eb61d4082b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "IdempotentParameterMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a618c9d-d20d-4cc7-b2a2-4213f242e762",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42368223-ba39-4451-9c58-b00de8543805",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b079b72-89bf-484b-9034-ac1f901e39dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b5eee3f-1631-487b-9b95-58bf474c8ec3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 487,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5107f5da-cc9a-414c-a623-9faec90823f2",
      "documentation": "Creates a new function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateUserDefinedFunction",
      "responses": [
        {
          "uuid": "28c70a0a-db6c-4a37-94ef-3195e8731114",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "370f710d-ca29-4dbe-8b9b-eb37dbf258c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44bdb389-6867-49fd-acaf-dc29aadc8d48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c1df7d9-8451-4535-bda9-113c05414d66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3dfc3ee-6571-4fcc-8fda-87593e7ad9ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3923e8d6-7d03-4c28-8380-6c15e47035da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c8ec062-7c85-427f-9c1a-8798e9bcbea9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bea6a966-f590-477d-a6a1-ed29ea394a7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7896b3e0-74a5-4b8c-b84d-797f23425f62",
      "documentation": "Creates a new workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.CreateWorkflow",
      "responses": [
        {
          "uuid": "3b679c1b-57f0-481c-9b3e-f7799886e186",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f32fc24-4565-4a7e-b44a-167733a01040",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7ea2cf8-3598-4513-95f3-26e999a66456",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4e7194c-8946-4448-bfc1-c338c30edef1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a79956-cf5d-40cd-9552-dab253c05694",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72de388d-0147-44a8-8693-d5d54457968e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bc88738-b7c8-4d55-bdec-3f994711e5d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3e8691e-eadc-4127-9533-db8b079668da",
      "documentation": "Deletes an existing blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteBlueprint",
      "responses": [
        {
          "uuid": "190aa17f-31a7-411f-843f-b52865420e74",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "162ca839-504c-4066-8dcd-31e8c4b501ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bdf93d2-6689-4b86-b8ed-5512979c5476",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c92fb684-b564-4af7-8fc3-24019ab04afc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cf869c7-2fae-4b6f-b3a2-483bc1ef8e5c",
      "documentation": "Removes a classifier from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteClassifier",
      "responses": [
        {
          "uuid": "8996955b-c0e5-4072-9f33-2111bdf4cab4",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35db7793-a4e3-4241-ab6a-7544510999b0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "862368a9-de02-4a99-b94f-e137794fc589",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d6ee198-f8ab-42ee-a441-9273c1f9db35",
      "documentation": "<p>Delete the partition column statistics of a column.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeletePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "51b8d395-6449-4e3c-9a3f-9e3317265b8b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1013a99-fa77-4cc7-b577-8532e4390749",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e3dd0e6-9fac-42f1-bd5d-41af020b7ef8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfe3caae-eb70-446e-b620-6109a7a01d9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a13e40f2-250a-44a4-ab37-2b1cda42c55a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc66528a-f80f-4423-b672-184b5404165b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4154e059-6337-422d-9fad-a8c7aacd30c4",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>DeleteTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "b5f7a70d-87df-4da7-9ca3-3a24901db02c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4754d3f2-fd32-4232-be18-4169d1797d10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50949095-1579-4d5c-9faf-edba13bfb89b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba367481-b264-473f-962e-ee995319bc1b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0689f25b-438f-4ef9-b07e-dbf7f527a938",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abc4abdc-570b-4376-b9e7-f4f0cc684e57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70ea49e5-d703-4c8f-a682-6ef8726440d3",
      "documentation": "Deletes a connection from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteConnection",
      "responses": [
        {
          "uuid": "df5babdf-939f-49ad-84c0-c14517008b73",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2598d4eb-31ca-402f-84fe-554cdd42d99d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27455e37-1901-4cd7-a12f-67ed9951345d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7099ee9c-8aa2-4bd7-8762-87aa84fd29e3",
      "documentation": "Removes a specified crawler from the Glue Data Catalog, unless the crawler state is <code>RUNNING</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteCrawler",
      "responses": [
        {
          "uuid": "cfc89cad-9490-497c-ba38-7bc702bf64f2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdd470b7-9b1d-476d-8f1b-db7a8b8dbc2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2de75cb-7270-4f32-9380-fd1fe1494d08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c041c7cf-8e7e-40ba-a63e-da70085f7804",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f7ca94a-8eec-4bc4-91c5-dad8329560c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f72ef1c-6488-48a7-b83e-fd20e828bda5",
      "documentation": "<p>Removes a specified database from a Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the tables (and all table versions and partitions that might belong to the tables) and the user-defined functions in the deleted database. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteDatabase</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, <code>DeletePartition</code> or <code>BatchDeletePartition</code>, <code>DeleteUserDefinedFunction</code>, and <code>DeleteTable</code> or <code>BatchDeleteTable</code>, to delete any resources that belong to the database.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDatabase",
      "responses": [
        {
          "uuid": "3772be73-b37b-40fd-8470-09e0e041b43d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aa5b1a7-d6c7-4def-8b6e-ce31ddc63b5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8bf1431-bd61-45da-a6a6-4dc14bda1868",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b48ceeb9-98a0-4b72-912d-32fd4346669a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "375e40fa-04a5-43d2-bf5a-cd92b85ce7b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b744e62-0674-401c-83ba-c8c4baf68942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "25d3b037-57ea-4275-8ad3-3438a52bad11",
      "documentation": "Deletes a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteDevEndpoint",
      "responses": [
        {
          "uuid": "1603f688-17f7-427a-914d-ccb9ff1cd306",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8920951-6a68-4b7c-9491-9d76a4fb6e43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6058b4e-f16f-48fe-a704-e574bc6a469f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bbd9d70-2452-4c59-958a-07fdb7e914b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa500991-d8b7-48dd-abff-2ed320051adc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "27b92e85-3f09-48d5-86f2-150fb3ae2ba8",
      "documentation": "Deletes a specified job definition. If the job definition is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteJob",
      "responses": [
        {
          "uuid": "5a13cd70-c526-4142-b241-1db661b04c37",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28756467-81f5-40a4-8c07-b59a1b93ce9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90f9ba93-7eb2-43a0-a053-ccab720c4f59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02a394d6-27d9-46f1-9768-7f28956095fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d03c47ec-c172-4c10-86a8-543a2a4f6f60",
      "documentation": "Deletes an Glue machine learning transform. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. If you no longer need a transform, you can delete it by calling <code>DeleteMLTransforms</code>. However, any Glue jobs that still reference the deleted transform will no longer succeed.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteMLTransform",
      "responses": [
        {
          "uuid": "2ffedbfb-f205-4cf0-a563-422132da8511",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5124a32-400c-4388-8d51-d189fdbc5738",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8650fad-cb53-4068-829f-870d76fb31dd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f12571d-53d0-4ae8-86ef-7ebec992fa0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d59d330b-9d79-45e4-9019-0e3dc9c037c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e0224a7d-2b07-4afa-a4e6-aad9d9b5f2d3",
      "documentation": "Deletes a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartition",
      "responses": [
        {
          "uuid": "499f2678-7c95-4f57-8ffe-3b76633c8d25",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "999bcb5f-edd9-40f8-a236-87d4ef398737",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6c1d7b0-b0f3-47db-b5af-e4914efe3e33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e38c59c-2435-403c-8751-053d595251aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebcc721d-8569-4cf0-b564-957f6fb9ebb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f8ca9b7c-b292-41f8-8936-d09f6378093c",
      "documentation": "Deletes a specified partition index from an existing table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeletePartitionIndex",
      "responses": [
        {
          "uuid": "1308021c-3e28-48ec-9486-3fad35e79dd2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a74b3e2-442c-4ad8-942f-b30303497565",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a24eee95-35ee-416d-a677-43bd6e58ffbf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "255e3672-823d-4313-9517-a495db17945d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "178db609-29ee-4e32-9f5f-d13e0010b82f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41acd099-83eb-4651-8cea-fc1e7274c1ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec79af8f-f225-4e82-92cf-e9517464c2fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81e7deee-bfe4-4f73-a0e6-a5e04d12bab8",
      "documentation": "Delete the entire registry including schema and all of its versions. To get the status of the delete operation, you can call the <code>GetRegistry</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the registry such as the <code>UpdateRegistry</code>, <code>CreateSchema</code>, <code>UpdateSchema</code>, and <code>RegisterSchemaVersion</code> APIs. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteRegistry",
      "responses": [
        {
          "uuid": "f2b8986a-9adb-4b53-b910-6a3dad57633a",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aa7b6fa-4342-422c-98d9-accb97b5bbaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5f5d660-7413-4a36-9c8a-b0021b44a33c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f7479f-3ff7-405d-9929-e70500a6dea9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "757a7f47-7157-4226-8cbe-dc0f67427d5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b7a27cc-92a2-4469-b31a-83e85653c11a",
      "documentation": "Deletes a specified policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteResourcePolicy",
      "responses": [
        {
          "uuid": "6d3a569b-a71e-447a-9975-5786275b8f80",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e07e2fa5-a834-459e-abf4-d442052e0387",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce3fe25a-c364-4279-a61b-893da922f12d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab1c79ec-8097-4380-a76a-fbe175a32cab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "166d98c6-ff17-4176-98ec-3b196800d8b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d6c3c2d-4ce7-4fe4-8c19-34f495117630",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd72bbe5-c0a1-4db4-b76d-5e4e5808f010",
      "documentation": "Deletes the entire schema set, including the schema set and all of its versions. To get the status of the delete operation, you can call <code>GetSchema</code> API after the asynchronous call. Deleting a registry will deactivate all online operations for the schema, such as the <code>GetSchemaByDefinition</code>, and <code>RegisterSchemaVersion</code> APIs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchema",
      "responses": [
        {
          "uuid": "8af74bac-7ba2-450f-91c5-adb018d91b9b",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "400a8aeb-cd91-44bc-9e29-0b60fc7b0ba1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5263977-7cf4-4dad-bd67-05e6fe32a0a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a6094a6-63ea-4ada-b3fa-ecdd961e3cf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b863279b-e5ba-4efa-8092-386c9d0e87e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84ecf8c5-ad5e-49ad-bcfa-63a783ebd1ed",
      "documentation": "<p>Remove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the <code>GetSchemaVersions</code> API after this call will list the status of the deleted versions.</p> <p>When the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the <code>DeleteSchemaCheckpoint</code> API before using this API.</p> <p>You cannot use the <code>DeleteSchemaVersions</code> API to delete the first schema version in the schema set. The first schema version can only be deleted by the <code>DeleteSchema</code> API. This operation will also delete the attached <code>SchemaVersionMetadata</code> under the schema versions. Hard deletes will be enforced on the database.</p> <p>If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSchemaVersions",
      "responses": [
        {
          "uuid": "913f788e-e2b7-4613-bb10-818cb5cdc7bc",
          "body": "{\n  \"SchemaVersionErrors\": [\n    {\n      \"VersionNumber\": {{faker 'random.number'}},\n      \"ErrorDetails\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0900d74-aa3a-4532-829f-d1bf762586ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0472a9bb-aff5-4c3e-9fb7-9de06c8766ed",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "736b31d7-9115-47fa-9178-01cb3c662636",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f8e3f35-015a-4f67-9727-152fd07c5146",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "209c22be-4203-44cb-8bce-bd38d4a11863",
      "documentation": "Deletes a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteSecurityConfiguration",
      "responses": [
        {
          "uuid": "0cff3b59-58fa-4562-a58e-722e4fe799de",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66a460c5-9504-4312-b5a6-5f97581e014e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b700b2ea-a600-4ecb-8308-4e1db85d3b0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12d656ab-ce6d-46f8-bf66-3269368d1306",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "469ad718-8039-4a78-be53-c597af86b99c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4cad2aad-f0a6-4b12-b9c8-52a579a96a1a",
      "documentation": "<p>Removes a table definition from the Data Catalog.</p> <note> <p>After completing this operation, you no longer have access to the table versions and partitions that belong to the deleted table. Glue deletes these \"orphaned\" resources asynchronously in a timely manner, at the discretion of the service.</p> <p>To ensure the immediate deletion of all related resources, before calling <code>DeleteTable</code>, use <code>DeleteTableVersion</code> or <code>BatchDeleteTableVersion</code>, and <code>DeletePartition</code> or <code>BatchDeletePartition</code>, to delete any resources that belong to the table.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTable",
      "responses": [
        {
          "uuid": "b7f28b2f-7b4a-4c6c-971f-560147d511b3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "40cd1ef1-a927-46de-8dbd-74523d871ce4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8b7c109-f96a-40f2-90b8-4797d2c350c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2871b865-48e5-41d3-b6c1-5c7f95ea7b35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0ccfc8f-9f6d-46f0-a7b6-278bb2b183cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76a19d1f-802c-4f16-85c6-152c3c38c803",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2632a75d-e861-47b7-9ef1-ccda014d08f4",
      "documentation": "Deletes a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTableVersion",
      "responses": [
        {
          "uuid": "14beeb23-7e28-453b-b907-fdfed2d455ac",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bf130f9-7c0d-41cd-b246-33c535eaa7e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2c9c440f-a81b-430c-87e8-31ceb5e0131c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e979ff50-edde-4bed-94e1-a59727a6fbbd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bffe985-0299-4bfb-9c35-f1538542e8b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e6a4a1b7-d2a9-4443-9962-883e3068a01b",
      "documentation": "Deletes a specified trigger. If the trigger is not found, no exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteTrigger",
      "responses": [
        {
          "uuid": "c6435755-b2e0-4e26-b4ca-7172e8d68bde",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25273e8e-4564-4d57-940e-aae95a41cd31",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "528da07b-412b-4e86-90c2-547d162178d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d17b0c7f-673e-42fe-995b-3ec7701a4d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "943ecd2b-7a95-4abb-baab-575ba38845b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9525bc9e-6417-4a96-ad13-6acbbb6cc0ff",
      "documentation": "Deletes an existing function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteUserDefinedFunction",
      "responses": [
        {
          "uuid": "c88d1148-2173-4ff9-ba30-6323859a90a2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1755fb84-fc11-43f0-8a79-06a319880f74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a2a78c8-2bff-472f-b112-305445f71fa5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d1af7a-ea8d-4644-9e92-bea622034814",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77c831bd-d4bc-47f6-8a78-14a1ecc569d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0e4b54e-f187-4948-8c0d-99f100d73f44",
      "documentation": "Deletes a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.DeleteWorkflow",
      "responses": [
        {
          "uuid": "d8d6c71d-07c7-4b8a-b74f-78b58b8390f2",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1e193c5-f7fc-4976-9e7f-6e8cf79ba99d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a86f82d2-866e-41e0-9643-6b63cb3c37ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d8c09b0-b886-4b31-afec-786afe877fd3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59868e46-1712-45a8-aaca-b62627797561",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0de6143c-0969-41f9-9805-86f5ba4b0aa1",
      "documentation": "Retrieves the details of a blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprint",
      "responses": [
        {
          "uuid": "4954a016-29b4-44f5-b381-249c8071d937",
          "body": "{\n  \"Blueprint\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ParameterSpec\": \"\",\n    \"BlueprintLocation\": \"\",\n    \"BlueprintServiceLocation\": \"\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"LastActiveDefinition\": {\n      \"Description\": \"\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ParameterSpec\": \"\",\n      \"BlueprintLocation\": \"\",\n      \"BlueprintServiceLocation\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4391171a-9dfc-4ee2-a4e5-1a2257a22880",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d5c1072-77e1-42d7-972b-4a662d95d1c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85bc2114-3ac8-4518-9489-896ff055ec5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20444b6e-a812-4c59-8538-da34ce8df3ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce96145e-9e2c-4612-9d85-40dbc4b46369",
      "documentation": "Retrieves the details of a blueprint run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRun",
      "responses": [
        {
          "uuid": "b1a35322-9d85-4dd8-b47a-cc34f86694d0",
          "body": "{\n  \"BlueprintRun\": {\n    \"BlueprintName\": \"\",\n    \"RunId\": \"\",\n    \"WorkflowName\": \"\",\n    \"State\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ErrorMessage\": \"\",\n    \"RollbackErrorMessage\": \"\",\n    \"Parameters\": \"\",\n    \"RoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45f816b9-16fe-47a1-a16c-debb62ab7c64",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "419bef58-a955-4905-bd2d-10ffb710697e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "018f7f24-a797-49c5-9cef-c882fafb6a77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ce91416-b557-4f2a-a1a3-7f4f3f43010e",
      "documentation": "Retrieves the details of blueprint runs for a specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetBlueprintRuns",
      "responses": [
        {
          "uuid": "eba059c0-330c-4092-94a2-103b8837adfc",
          "body": "{\n  \"BlueprintRuns\": [\n    {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\",\n      \"WorkflowName\": \"\",\n      \"State\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ErrorMessage\": \"\",\n      \"RollbackErrorMessage\": \"\",\n      \"Parameters\": \"\",\n      \"RoleArn\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fe60d91-a7de-4b87-a4c6-e27977e17256",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25892d6b-7e87-4073-86ce-283c0d79122b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56803a40-f54c-4aba-a64f-d5d82323d1db",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4ac86f6-cf3b-47fc-b370-e90d6383022c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "956121c0-e839-4a10-8145-355ec08408ba",
      "documentation": "Retrieves the status of a migration operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCatalogImportStatus",
      "responses": [
        {
          "uuid": "4e823bb0-9874-4962-97e3-5174b4412c55",
          "body": "{\n  \"ImportStatus\": {\n    \"ImportCompleted\": {{faker 'random.boolean'}},\n    \"ImportTime\": \"{{faker 'date.recent' 365}}\",\n    \"ImportedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "509755c6-747a-466c-857b-6c8333c69e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f5babd4-fdb7-421d-9ab3-f6459a323b77",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "daef0d37-16e9-4da8-a4bb-d638d7cb8471",
      "documentation": "Retrieve a classifier by name.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifier",
      "responses": [
        {
          "uuid": "317f16ad-b1d9-4363-971d-642791499c86",
          "body": "{\n  \"Classifier\": {\n    \"GrokClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"GrokPattern\": \"\",\n      \"CustomPatterns\": \"\"\n    },\n    \"XMLClassifier\": {\n      \"Name\": \"\",\n      \"Classification\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"RowTag\": \"\"\n    },\n    \"JsonClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"JsonPath\": \"\"\n    },\n    \"CsvClassifier\": {\n      \"Name\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"Version\": {{faker 'random.number'}},\n      \"Delimiter\": \"\",\n      \"QuoteSymbol\": \"\",\n      \"ContainsHeader\": \"\",\n      \"Header\": [\n        \"\"\n      ],\n      \"DisableValueTrimming\": {{faker 'random.boolean'}},\n      \"AllowSingleColumn\": {{faker 'random.boolean'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0454da9-9187-4f1a-8e54-6a9d52b6a514",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da706542-b7f7-444f-816a-3c199bcf11bc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f807b562-8f6f-4cb3-826a-a567cadb8cd9",
      "documentation": "Lists all classifier objects in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetClassifiers",
      "responses": [
        {
          "uuid": "5a4537f5-688b-4dd6-acb2-5603fa0146c0",
          "body": "{\n  \"Classifiers\": [\n    {\n      \"GrokClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"GrokPattern\": \"\",\n        \"CustomPatterns\": \"\"\n      },\n      \"XMLClassifier\": {\n        \"Name\": \"\",\n        \"Classification\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"RowTag\": \"\"\n      },\n      \"JsonClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"JsonPath\": \"\"\n      },\n      \"CsvClassifier\": {\n        \"Name\": \"\",\n        \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n        \"Version\": {{faker 'random.number'}},\n        \"Delimiter\": \"\",\n        \"QuoteSymbol\": \"\",\n        \"ContainsHeader\": \"\",\n        \"Header\": [\n          \"\"\n        ],\n        \"DisableValueTrimming\": {{faker 'random.boolean'}},\n        \"AllowSingleColumn\": {{faker 'random.boolean'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2876bea7-886b-4910-bcfd-bcf1694c60da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "24289a45-9465-4525-b823-7e866f6c86e7",
      "documentation": "<p>Retrieves partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetPartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "758495a7-4e38-4101-b5af-025e44667965",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'random.number'}},\n          \"NumberOfFalses\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.float'}},\n          \"MaximumValue\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.number'}},\n          \"MaximumValue\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e27e8eec-5fbb-4a07-abd3-b6a6db29bc0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f04a263d-6b09-4774-b9f7-f18a633865bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5f400ea-a610-41d7-9293-33ef431e3f3d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b3e11ff-260b-4c44-8ba1-8a99d73c658d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d68c1dff-c305-41d6-8027-0c5740f18894",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54950baf-cf8a-45a9-8c43-3f331369e117",
      "documentation": "<p>Retrieves table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>GetTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "cecf0309-1f6c-4207-b682-3e7ca1d1bdf2",
          "body": "{\n  \"ColumnStatisticsList\": [\n    {\n      \"ColumnName\": \"\",\n      \"ColumnType\": \"\",\n      \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"StatisticsData\": {\n        \"Type\": \"\",\n        \"BooleanColumnStatisticsData\": {\n          \"NumberOfTrues\": {{faker 'random.number'}},\n          \"NumberOfFalses\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        },\n        \"DateColumnStatisticsData\": {\n          \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n          \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DecimalColumnStatisticsData\": {\n          \"MinimumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"MaximumValue\": {\n            \"UnscaledValue\": \"\",\n            \"Scale\": {{faker 'random.number'}}\n          },\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"DoubleColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.float'}},\n          \"MaximumValue\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"LongColumnStatisticsData\": {\n          \"MinimumValue\": {{faker 'random.number'}},\n          \"MaximumValue\": {{faker 'random.number'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"StringColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}},\n          \"NumberOfDistinctValues\": {{faker 'random.number'}}\n        },\n        \"BinaryColumnStatisticsData\": {\n          \"MaximumLength\": {{faker 'random.number'}},\n          \"AverageLength\": {{faker 'random.float'}},\n          \"NumberOfNulls\": {{faker 'random.number'}}\n        }\n      }\n    }\n  ],\n  \"Errors\": [\n    {\n      \"ColumnName\": \"\",\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2e49d34-e418-4101-9f86-8bae49c0b5a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fea414f2-0497-4370-b5b1-8d66aa335286",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ba3fa3e-b95c-406b-846c-4d8befa1ed37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25574fd8-70f5-403d-ae7f-39dd2e1bab14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "afb05739-d04d-40db-a412-f46d2e00fe28",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b3a8e89-b4cc-41c7-a919-58cfa6d809ee",
      "documentation": "Retrieves a connection definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnection",
      "responses": [
        {
          "uuid": "2f3cd788-d0d9-43c5-8834-44680a87a1ae",
          "body": "{\n  \"Connection\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"ConnectionType\": \"\",\n    \"MatchCriteria\": [\n      \"\"\n    ],\n    \"ConnectionProperties\": {},\n    \"PhysicalConnectionRequirements\": {\n      \"SubnetId\": \"\",\n      \"SecurityGroupIdList\": [\n        \"\"\n      ],\n      \"AvailabilityZone\": \"\"\n    },\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdatedBy\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e68bf7c1-0c77-4bd7-b55d-a9f85e7f1397",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f7e0483a-d805-4a06-8b0f-26606965d6d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c01c8a-aa2a-4411-92c8-ab106e44bac9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bd19025-5f57-4603-bf87-ee3314a96670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6371cab7-da50-4b27-ab9e-cf1c7d25ed9a",
      "documentation": "Retrieves a list of connection definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetConnections",
      "responses": [
        {
          "uuid": "99c87289-6fc5-4e00-bd32-40be1ad49d8d",
          "body": "{\n  \"ConnectionList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"ConnectionType\": \"\",\n      \"MatchCriteria\": [\n        \"\"\n      ],\n      \"ConnectionProperties\": {},\n      \"PhysicalConnectionRequirements\": {\n        \"SubnetId\": \"\",\n        \"SecurityGroupIdList\": [\n          \"\"\n        ],\n        \"AvailabilityZone\": \"\"\n      },\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdatedBy\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f987305-5594-46fe-889d-34cd72b41d39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "308736e8-7144-40e6-becb-16c8ded668ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13fbb74b-f2bb-420f-986b-130b0ddae801",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0939a69-9c0e-4bf6-af71-5f63dc116821",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d6621391-9a09-4437-ae77-9a31bf88592a",
      "documentation": "Retrieves metadata for a specified crawler.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawler",
      "responses": [
        {
          "uuid": "5c1331ca-89fa-4640-adf2-8611436c02a5",
          "body": "{\n  \"Crawler\": {\n    \"Name\": \"\",\n    \"Role\": \"\",\n    \"Targets\": {\n      \"S3Targets\": [\n        {\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ],\n          \"ConnectionName\": \"\",\n          \"SampleSize\": {{faker 'random.number'}}\n        }\n      ],\n      \"JdbcTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"Exclusions\": [\n            \"\"\n          ]\n        }\n      ],\n      \"MongoDBTargets\": [\n        {\n          \"ConnectionName\": \"\",\n          \"Path\": \"\",\n          \"ScanAll\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"DynamoDBTargets\": [\n        {\n          \"Path\": \"\",\n          \"scanAll\": {{faker 'random.boolean'}},\n          \"scanRate\": {{faker 'random.float'}}\n        }\n      ],\n      \"CatalogTargets\": [\n        {\n          \"DatabaseName\": \"\",\n          \"Tables\": [\n            \"\"\n          ]\n        }\n      ]\n    },\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Classifiers\": [\n      \"\"\n    ],\n    \"RecrawlPolicy\": {\n      \"RecrawlBehavior\": \"\"\n    },\n    \"SchemaChangePolicy\": {\n      \"UpdateBehavior\": \"\",\n      \"DeleteBehavior\": \"\"\n    },\n    \"LineageConfiguration\": {\n      \"CrawlerLineageSettings\": \"\"\n    },\n    \"State\": \"\",\n    \"TablePrefix\": \"\",\n    \"Schedule\": {\n      \"ScheduleExpression\": \"\",\n      \"State\": \"\"\n    },\n    \"CrawlElapsedTime\": {{faker 'random.number'}},\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n    \"LastCrawl\": {\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"LogGroup\": \"\",\n      \"LogStream\": \"\",\n      \"MessagePrefix\": \"\",\n      \"StartTime\": \"{{faker 'date.recent' 365}}\"\n    },\n    \"Version\": {{faker 'random.number'}},\n    \"Configuration\": \"\",\n    \"CrawlerSecurityConfiguration\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bdc8ace-ac0f-4251-8d7b-1d0de1c56dea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f6508f5-acf9-40fb-b1f3-f91f56539e11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cb91ed75-6f94-4f27-a3f3-5e9e2cf3ed90",
      "documentation": "Retrieves metrics about specified crawlers.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlerMetrics",
      "responses": [
        {
          "uuid": "1da5a586-f73a-4dd4-b25b-f93ef16e1667",
          "body": "{\n  \"CrawlerMetricsList\": [\n    {\n      \"CrawlerName\": \"\",\n      \"TimeLeftSeconds\": {{faker 'random.float'}},\n      \"StillEstimating\": {{faker 'random.boolean'}},\n      \"LastRuntimeSeconds\": {{faker 'random.float'}},\n      \"MedianRuntimeSeconds\": {{faker 'random.float'}},\n      \"TablesCreated\": {{faker 'random.number'}},\n      \"TablesUpdated\": {{faker 'random.number'}},\n      \"TablesDeleted\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9b88ad7-53b0-4ce7-b253-35e1ad75c9e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2caff730-be90-4dfe-8680-d0b3e54572e3",
      "documentation": "Retrieves metadata for all crawlers defined in the customer account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetCrawlers",
      "responses": [
        {
          "uuid": "109397f5-6dac-4f95-8bc8-ad86186a7cb2",
          "body": "{\n  \"Crawlers\": [\n    {\n      \"Name\": \"\",\n      \"Role\": \"\",\n      \"Targets\": {\n        \"S3Targets\": [\n          {\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ],\n            \"ConnectionName\": \"\",\n            \"SampleSize\": {{faker 'random.number'}}\n          }\n        ],\n        \"JdbcTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"Exclusions\": [\n              \"\"\n            ]\n          }\n        ],\n        \"MongoDBTargets\": [\n          {\n            \"ConnectionName\": \"\",\n            \"Path\": \"\",\n            \"ScanAll\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"DynamoDBTargets\": [\n          {\n            \"Path\": \"\",\n            \"scanAll\": {{faker 'random.boolean'}},\n            \"scanRate\": {{faker 'random.float'}}\n          }\n        ],\n        \"CatalogTargets\": [\n          {\n            \"DatabaseName\": \"\",\n            \"Tables\": [\n              \"\"\n            ]\n          }\n        ]\n      },\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Classifiers\": [\n        \"\"\n      ],\n      \"RecrawlPolicy\": {\n        \"RecrawlBehavior\": \"\"\n      },\n      \"SchemaChangePolicy\": {\n        \"UpdateBehavior\": \"\",\n        \"DeleteBehavior\": \"\"\n      },\n      \"LineageConfiguration\": {\n        \"CrawlerLineageSettings\": \"\"\n      },\n      \"State\": \"\",\n      \"TablePrefix\": \"\",\n      \"Schedule\": {\n        \"ScheduleExpression\": \"\",\n        \"State\": \"\"\n      },\n      \"CrawlElapsedTime\": {{faker 'random.number'}},\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastUpdated\": \"{{faker 'date.recent' 365}}\",\n      \"LastCrawl\": {\n        \"Status\": \"\",\n        \"ErrorMessage\": \"\",\n        \"LogGroup\": \"\",\n        \"LogStream\": \"\",\n        \"MessagePrefix\": \"\",\n        \"StartTime\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"Version\": {{faker 'random.number'}},\n      \"Configuration\": \"\",\n      \"CrawlerSecurityConfiguration\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f9b1a26-10d2-43a2-be16-9dce0d9ecea9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afda64a1-0ec3-4d0d-8776-6ea2556fc422",
      "documentation": "Retrieves the security configuration for a specified catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "a7df507b-9297-4c83-b41e-da0df9aec4a5",
          "body": "{\n  \"DataCatalogEncryptionSettings\": {\n    \"EncryptionAtRest\": {\n      \"CatalogEncryptionMode\": \"\",\n      \"SseAwsKmsKeyId\": \"\"\n    },\n    \"ConnectionPasswordEncryption\": {\n      \"ReturnConnectionPasswordEncrypted\": {{faker 'random.boolean'}},\n      \"AwsKmsKeyId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18deacdf-47ba-4275-8ffb-db49fe83830b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a429fcb-cf14-40e9-bbd0-46dc99212569",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eef4408a-68ea-48bd-9649-dda6a8b0d9fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bb08e5f-57fb-4c2b-9f96-5eea5e7f45a9",
      "documentation": "Retrieves the definition of a specified database.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabase",
      "responses": [
        {
          "uuid": "0f68697f-a6ea-45ab-974b-79fed5cd1bfc",
          "body": "{\n  \"Database\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LocationUri\": \"\",\n    \"Parameters\": {},\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"CreateTableDefaultPermissions\": [\n      {\n        \"Principal\": {\n          \"DataLakePrincipalIdentifier\": \"\"\n        },\n        \"Permissions\": [\n          \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n        ]\n      }\n    ],\n    \"TargetDatabase\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "300df782-fe33-4562-b515-225054c68523",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "516331c2-aecc-4aae-a381-911ecc7e1a9f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59aebae9-1447-499b-986b-9f2debc907cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6de69f79-c342-40b5-aae3-10629d0ff39e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04e31ef2-fc2f-4909-8621-c7f7b0f73574",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba7d3e67-bce6-4184-b469-005aee841ff6",
      "documentation": "Retrieves all databases defined in a given Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDatabases",
      "responses": [
        {
          "uuid": "e97b4b40-a5db-4654-86ee-180a76b3b55c",
          "body": "{\n  \"DatabaseList\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LocationUri\": \"\",\n      \"Parameters\": {},\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"CreateTableDefaultPermissions\": [\n        {\n          \"Principal\": {\n            \"DataLakePrincipalIdentifier\": \"\"\n          },\n          \"Permissions\": [\n            \"{{oneOf (array 'ALL' 'SELECT' 'ALTER' 'DROP' 'DELETE' 'INSERT' 'CREATE_DATABASE' 'CREATE_TABLE' 'DATA_LOCATION_ACCESS')}}\"\n          ]\n        }\n      ],\n      \"TargetDatabase\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af20ea4a-cccc-4847-85bb-b947dd61b268",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f761673a-2c0b-4a82-8e39-7a73edd23860",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4e8386c-3de1-455a-9d5c-27bc0f96129c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9faafb40-3494-4b25-9fba-6f0c4084e1ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b69bfec-aea9-4f7c-9322-35a4af658ae2",
      "documentation": "Transforms a Python script into a directed acyclic graph (DAG). ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDataflowGraph",
      "responses": [
        {
          "uuid": "8b02b8c2-03d0-47eb-b029-b67d1d3035c3",
          "body": "{\n  \"DagNodes\": [\n    {\n      \"Id\": \"\",\n      \"NodeType\": \"\",\n      \"Args\": [\n        {\n          \"Name\": \"\",\n          \"Value\": \"\",\n          \"Param\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"LineNumber\": {{faker 'random.number'}}\n    }\n  ],\n  \"DagEdges\": [\n    {\n      \"Source\": \"\",\n      \"Target\": \"\",\n      \"TargetParameter\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26645a15-6f01-452f-a96a-70fd3bfc720b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb3210d6-598d-40cd-88fb-b08b7f1df4dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64ab2145-ca1b-4e86-8529-9c4bfebc83ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8c23ef2-fb6d-4e1c-8cf8-fa80d874b538",
      "documentation": "<p>Retrieves information about a specified development endpoint.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address, and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoint",
      "responses": [
        {
          "uuid": "ff3ae213-5977-49a3-8f8c-fe722f4a055d",
          "body": "{\n  \"DevEndpoint\": {\n    \"EndpointName\": \"\",\n    \"RoleArn\": \"\",\n    \"SecurityGroupIds\": [\n      \"\"\n    ],\n    \"SubnetId\": \"\",\n    \"YarnEndpointAddress\": \"\",\n    \"PrivateAddress\": \"\",\n    \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n    \"PublicAddress\": \"\",\n    \"Status\": \"\",\n    \"WorkerType\": \"\",\n    \"GlueVersion\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"NumberOfNodes\": {{faker 'random.number'}},\n    \"AvailabilityZone\": \"\",\n    \"VpcId\": \"\",\n    \"ExtraPythonLibsS3Path\": \"\",\n    \"ExtraJarsS3Path\": \"\",\n    \"FailureReason\": \"\",\n    \"LastUpdateStatus\": \"\",\n    \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n    \"PublicKey\": \"\",\n    \"PublicKeys\": [\n      \"\"\n    ],\n    \"SecurityConfiguration\": \"\",\n    \"Arguments\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0fba1277-b699-44a4-83ae-d5fc161ef3a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27ef3a0b-0137-420a-a79d-413e95f8f4c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85e53055-1822-46a2-9222-925b8dfb31b1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d495677-bc4e-42df-8ab2-b089fee93857",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "48a8558f-af6f-483e-8c5f-e95866ea5d6b",
      "documentation": "<p>Retrieves all the development endpoints in this AWS account.</p> <note> <p>When you create a development endpoint in a virtual private cloud (VPC), Glue returns only a private IP address and the public IP address field is not populated. When you create a non-VPC development endpoint, Glue returns only a public IP address.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetDevEndpoints",
      "responses": [
        {
          "uuid": "ecabc06b-8dc8-4102-bfc3-104f7afad5f2",
          "body": "{\n  \"DevEndpoints\": [\n    {\n      \"EndpointName\": \"\",\n      \"RoleArn\": \"\",\n      \"SecurityGroupIds\": [\n        \"\"\n      ],\n      \"SubnetId\": \"\",\n      \"YarnEndpointAddress\": \"\",\n      \"PrivateAddress\": \"\",\n      \"ZeppelinRemoteSparkInterpreterPort\": {{faker 'random.number'}},\n      \"PublicAddress\": \"\",\n      \"Status\": \"\",\n      \"WorkerType\": \"\",\n      \"GlueVersion\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"NumberOfNodes\": {{faker 'random.number'}},\n      \"AvailabilityZone\": \"\",\n      \"VpcId\": \"\",\n      \"ExtraPythonLibsS3Path\": \"\",\n      \"ExtraJarsS3Path\": \"\",\n      \"FailureReason\": \"\",\n      \"LastUpdateStatus\": \"\",\n      \"CreatedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedTimestamp\": \"{{faker 'date.recent' 365}}\",\n      \"PublicKey\": \"\",\n      \"PublicKeys\": [\n        \"\"\n      ],\n      \"SecurityConfiguration\": \"\",\n      \"Arguments\": {}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "744f0f17-5d3a-4291-bcb2-ec4fd98874c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3905d185-fec8-4794-85d2-7e52358ababc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63494ac5-e74b-403e-82de-55e5fd40b5ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1a33bc4-fb8b-4a94-9215-dc2521213e08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a4c773f-3433-4503-be98-0d270ad8f2e8",
      "documentation": "Retrieves an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJob",
      "responses": [
        {
          "uuid": "bb7e56c1-dc42-4dbf-87b4-8bdfb7698566",
          "body": "{\n  \"Job\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"LogUri\": \"\",\n    \"Role\": \"\",\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"ExecutionProperty\": {\n      \"MaxConcurrentRuns\": {{faker 'random.number'}}\n    },\n    \"Command\": {\n      \"Name\": \"\",\n      \"ScriptLocation\": \"\",\n      \"PythonVersion\": \"\"\n    },\n    \"DefaultArguments\": {},\n    \"NonOverridableArguments\": {},\n    \"Connections\": {\n      \"Connections\": [\n        \"\"\n      ]\n    },\n    \"MaxRetries\": {{faker 'random.number'}},\n    \"AllocatedCapacity\": {{faker 'random.number'}},\n    \"Timeout\": {{faker 'random.number'}},\n    \"MaxCapacity\": {{faker 'random.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'random.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb679d3d-c865-4826-b47c-1c2bbb38c953",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9246b42d-689d-4dd3-8cef-a7c94c9a401a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79cf808a-f4c6-460f-a557-38733999d35b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d71bfeb-db56-4a1a-8447-d538358d6e57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cfa566f6-6559-4129-9d4b-ea816b59bc68",
      "documentation": "Returns information on a job bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobBookmark",
      "responses": [
        {
          "uuid": "27806f2d-0315-4915-ba76-2a07763d0f0b",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Run\": {{faker 'random.number'}},\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee3bedfd-c2a2-499b-aadb-7b27e9d3cda3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b15e65aa-91c6-4733-8796-56659f25d486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43159bb3-036d-4c24-bdfa-c964bff4470d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d148bf6a-59a1-4153-a368-9e36e36db6a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a1296a5-73a8-4875-af06-90592b8d9da7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1f08812e-fcc6-4014-aefa-e58d8585a095",
      "documentation": "Retrieves the metadata for a given job run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRun",
      "responses": [
        {
          "uuid": "ba2b4e09-ed3b-468a-9b9d-bf344930a97b",
          "body": "{\n  \"JobRun\": {\n    \"Id\": \"\",\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"TriggerName\": \"\",\n    \"JobName\": \"\",\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"JobRunState\": \"\",\n    \"Arguments\": {},\n    \"ErrorMessage\": \"\",\n    \"PredecessorRuns\": [\n      {\n        \"JobName\": \"\",\n        \"RunId\": \"\"\n      }\n    ],\n    \"AllocatedCapacity\": {{faker 'random.number'}},\n    \"ExecutionTime\": {{faker 'random.number'}},\n    \"Timeout\": {{faker 'random.number'}},\n    \"MaxCapacity\": {{faker 'random.float'}},\n    \"WorkerType\": \"\",\n    \"NumberOfWorkers\": {{faker 'random.number'}},\n    \"SecurityConfiguration\": \"\",\n    \"LogGroupName\": \"\",\n    \"NotificationProperty\": {\n      \"NotifyDelayAfter\": {{faker 'random.number'}}\n    },\n    \"GlueVersion\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20553c3a-b11f-4898-82eb-409d6babd4d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "338d333d-fb55-47f5-be96-bb6fa29caa40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f498ef19-99d7-4054-aa7c-3670a41eaefb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7ce5673-df0a-4cac-8b13-7daaff017917",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82c1d418-0cc5-4b35-9f2e-07549f43674a",
      "documentation": "Retrieves metadata for all runs of a given job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobRuns",
      "responses": [
        {
          "uuid": "347ce95f-588e-4e79-ade0-0587d6233536",
          "body": "{\n  \"JobRuns\": [\n    {\n      \"Id\": \"\",\n      \"Attempt\": {{faker 'random.number'}},\n      \"PreviousRunId\": \"\",\n      \"TriggerName\": \"\",\n      \"JobName\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"JobRunState\": \"\",\n      \"Arguments\": {},\n      \"ErrorMessage\": \"\",\n      \"PredecessorRuns\": [\n        {\n          \"JobName\": \"\",\n          \"RunId\": \"\"\n        }\n      ],\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"ExecutionTime\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"LogGroupName\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e54d2e6f-9ff7-46cd-bbc7-f4c1fb1c4c97",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "517ef713-03e3-48a8-9973-b9ba9f5dba8e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5c23dae-0b42-4ea1-b979-1e37aae50162",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbdcf1b0-1f0b-42fc-9794-aafaf5cc02f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71ffee6a-4644-4e0e-a66f-215e304ba3fa",
      "documentation": "Retrieves all current job definitions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetJobs",
      "responses": [
        {
          "uuid": "a3636f48-276b-4294-a234-4e1ec993a9c8",
          "body": "{\n  \"Jobs\": [\n    {\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"LogUri\": \"\",\n      \"Role\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionProperty\": {\n        \"MaxConcurrentRuns\": {{faker 'random.number'}}\n      },\n      \"Command\": {\n        \"Name\": \"\",\n        \"ScriptLocation\": \"\",\n        \"PythonVersion\": \"\"\n      },\n      \"DefaultArguments\": {},\n      \"NonOverridableArguments\": {},\n      \"Connections\": {\n        \"Connections\": [\n          \"\"\n        ]\n      },\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"AllocatedCapacity\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"SecurityConfiguration\": \"\",\n      \"NotificationProperty\": {\n        \"NotifyDelayAfter\": {{faker 'random.number'}}\n      },\n      \"GlueVersion\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a48c2b3-5cae-47cf-9798-0406743e7834",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b8f491f-72ae-4d5b-82dd-6ae7623ff465",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f238b69-8b57-49e0-99cd-d318604aed46",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "beb76e75-7a27-4713-a55a-1f82ec14bad5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22dd1525-2f1c-4016-ac86-044ac4ce4c67",
      "documentation": "Gets details for a specific task run on a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can check the stats of any task run by calling <code>GetMLTaskRun</code> with the <code>TaskRunID</code> and its parent transform's <code>TransformID</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRun",
      "responses": [
        {
          "uuid": "29a40d6b-3c20-45e7-994b-cdaa820d8570",
          "body": "{\n  \"TransformId\": \"\",\n  \"TaskRunId\": \"\",\n  \"Status\": \"\",\n  \"LogGroupName\": \"\",\n  \"Properties\": {\n    \"TaskType\": \"\",\n    \"ImportLabelsTaskRunProperties\": {\n      \"InputS3Path\": \"\",\n      \"Replace\": {{faker 'random.boolean'}}\n    },\n    \"ExportLabelsTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"LabelingSetGenerationTaskRunProperties\": {\n      \"OutputS3Path\": \"\"\n    },\n    \"FindMatchesTaskRunProperties\": {\n      \"JobId\": \"\",\n      \"JobName\": \"\",\n      \"JobRunId\": \"\"\n    }\n  },\n  \"ErrorString\": \"\",\n  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n  \"ExecutionTime\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f87e21c9-2678-4a6a-8f8f-c8d8c0a9932c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1361166-8a1a-4934-9e39-d1ef74a91c2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e41155c7-7190-4042-b914-def4d41302eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cd81546-7247-42a6-8710-1cc153e0a208",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "712e2420-cbd4-4f4b-977e-9b997513b1fe",
      "documentation": "<p>Gets a list of runs for a machine learning transform. Machine learning task runs are asynchronous tasks that Glue runs on your behalf as part of various machine learning workflows. You can get a sortable, filterable list of machine learning task runs by calling <code>GetMLTaskRuns</code> with their parent transform's <code>TransformID</code> and other optional parameters as documented in this section.</p> <p>This operation returns a list of historic runs and must be paginated.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTaskRuns",
      "responses": [
        {
          "uuid": "4016d6f3-1281-4755-b809-7a176701e885",
          "body": "{\n  \"TaskRuns\": [\n    {\n      \"TransformId\": \"\",\n      \"TaskRunId\": \"\",\n      \"Status\": \"\",\n      \"LogGroupName\": \"\",\n      \"Properties\": {\n        \"TaskType\": \"\",\n        \"ImportLabelsTaskRunProperties\": {\n          \"InputS3Path\": \"\",\n          \"Replace\": {{faker 'random.boolean'}}\n        },\n        \"ExportLabelsTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"LabelingSetGenerationTaskRunProperties\": {\n          \"OutputS3Path\": \"\"\n        },\n        \"FindMatchesTaskRunProperties\": {\n          \"JobId\": \"\",\n          \"JobName\": \"\",\n          \"JobRunId\": \"\"\n        }\n      },\n      \"ErrorString\": \"\",\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"ExecutionTime\": {{faker 'random.number'}}\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d4e73b6-64c6-4bcb-884b-2a93e20bd820",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "197f8c02-570a-412e-999b-19f7c8e5b63b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd8ed26a-e75b-434b-b6d5-1d6c51190d01",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3a31258-f3a4-495a-8601-f2a26ad24aa7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df10275a-613b-4eea-8f0d-960314e4e54a",
      "documentation": "Gets an Glue machine learning transform artifact and all its corresponding metadata. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue. You can retrieve their metadata by calling <code>GetMLTransform</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransform",
      "responses": [
        {
          "uuid": "63fc9459-404c-445c-9d60-2ecd813cf418",
          "body": "{\n  \"TransformId\": \"\",\n  \"Name\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n  \"InputRecordTables\": [\n    {\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CatalogId\": \"\",\n      \"ConnectionName\": \"\"\n    }\n  ],\n  \"Parameters\": {\n    \"TransformType\": \"\",\n    \"FindMatchesParameters\": {\n      \"PrimaryKeyColumnName\": \"\",\n      \"PrecisionRecallTradeoff\": {{faker 'random.float'}},\n      \"AccuracyCostTradeoff\": {{faker 'random.float'}},\n      \"EnforceProvidedLabels\": {{faker 'random.boolean'}}\n    }\n  },\n  \"EvaluationMetrics\": {\n    \"TransformType\": \"\",\n    \"FindMatchesMetrics\": {\n      \"AreaUnderPRCurve\": {{faker 'random.float'}},\n      \"Precision\": {{faker 'random.float'}},\n      \"Recall\": {{faker 'random.float'}},\n      \"F1\": {{faker 'random.float'}},\n      \"ConfusionMatrix\": {\n        \"NumTruePositives\": {{faker 'random.number'}},\n        \"NumFalsePositives\": {{faker 'random.number'}},\n        \"NumTrueNegatives\": {{faker 'random.number'}},\n        \"NumFalseNegatives\": {{faker 'random.number'}}\n      },\n      \"ColumnImportances\": [\n        {\n          \"ColumnName\": \"\",\n          \"Importance\": {{faker 'random.float'}}\n        }\n      ]\n    }\n  },\n  \"LabelCount\": {{faker 'random.number'}},\n  \"Schema\": [\n    {\n      \"Name\": \"\",\n      \"DataType\": \"\"\n    }\n  ],\n  \"Role\": \"\",\n  \"GlueVersion\": \"\",\n  \"MaxCapacity\": {{faker 'random.float'}},\n  \"WorkerType\": \"\",\n  \"NumberOfWorkers\": {{faker 'random.number'}},\n  \"Timeout\": {{faker 'random.number'}},\n  \"MaxRetries\": {{faker 'random.number'}},\n  \"TransformEncryption\": {\n    \"MlUserDataEncryption\": {\n      \"MlUserDataEncryptionMode\": \"\",\n      \"KmsKeyId\": \"\"\n    },\n    \"TaskRunSecurityConfigurationName\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e55ab45-694d-4125-b88d-62e5f8cbac4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0823c56-568a-43e3-befc-5b84f3fadf2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7540caea-b895-4f54-8d07-5fff76f8c916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82f495ad-26e7-40c0-b48f-05035e93f471",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d5de258-3278-4fc5-b1c9-0ddb6ed07ae6",
      "documentation": "Gets a sortable, filterable list of existing Glue machine learning transforms. Machine learning transforms are a special type of transform that use machine learning to learn the details of the transformation to be performed by learning from examples provided by humans. These transformations are then saved by Glue, and you can retrieve their metadata by calling <code>GetMLTransforms</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMLTransforms",
      "responses": [
        {
          "uuid": "f8713f36-1923-44fb-9c69-75518264003c",
          "body": "{\n  \"Transforms\": [\n    {\n      \"TransformId\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n      \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n      \"InputRecordTables\": [\n        {\n          \"DatabaseName\": \"\",\n          \"TableName\": \"\",\n          \"CatalogId\": \"\",\n          \"ConnectionName\": \"\"\n        }\n      ],\n      \"Parameters\": {\n        \"TransformType\": \"\",\n        \"FindMatchesParameters\": {\n          \"PrimaryKeyColumnName\": \"\",\n          \"PrecisionRecallTradeoff\": {{faker 'random.float'}},\n          \"AccuracyCostTradeoff\": {{faker 'random.float'}},\n          \"EnforceProvidedLabels\": {{faker 'random.boolean'}}\n        }\n      },\n      \"EvaluationMetrics\": {\n        \"TransformType\": \"\",\n        \"FindMatchesMetrics\": {\n          \"AreaUnderPRCurve\": {{faker 'random.float'}},\n          \"Precision\": {{faker 'random.float'}},\n          \"Recall\": {{faker 'random.float'}},\n          \"F1\": {{faker 'random.float'}},\n          \"ConfusionMatrix\": {\n            \"NumTruePositives\": {{faker 'random.number'}},\n            \"NumFalsePositives\": {{faker 'random.number'}},\n            \"NumTrueNegatives\": {{faker 'random.number'}},\n            \"NumFalseNegatives\": {{faker 'random.number'}}\n          },\n          \"ColumnImportances\": [\n            {\n              \"ColumnName\": \"\",\n              \"Importance\": {{faker 'random.float'}}\n            }\n          ]\n        }\n      },\n      \"LabelCount\": {{faker 'random.number'}},\n      \"Schema\": [\n        {\n          \"Name\": \"\",\n          \"DataType\": \"\"\n        }\n      ],\n      \"Role\": \"\",\n      \"GlueVersion\": \"\",\n      \"MaxCapacity\": {{faker 'random.float'}},\n      \"WorkerType\": \"\",\n      \"NumberOfWorkers\": {{faker 'random.number'}},\n      \"Timeout\": {{faker 'random.number'}},\n      \"MaxRetries\": {{faker 'random.number'}},\n      \"TransformEncryption\": {\n        \"MlUserDataEncryption\": {\n          \"MlUserDataEncryptionMode\": \"\",\n          \"KmsKeyId\": \"\"\n        },\n        \"TaskRunSecurityConfigurationName\": \"\"\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99bfbfa0-9e5f-4e9b-8fcc-269437398e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ed13e1c9-256b-42ca-9a37-34d6aef5a400",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa84df1f-648e-46ad-a4cc-d4bf088f41dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd3cea9e-2736-4e91-b9be-cbfd5a3170ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ffcec762-cfe3-402a-abea-198849c60640",
      "documentation": "Creates mappings.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetMapping",
      "responses": [
        {
          "uuid": "4c402fd7-79ad-4f02-959d-d893c2cc5a22",
          "body": "{\n  \"Mapping\": [\n    {\n      \"SourceTable\": \"\",\n      \"SourcePath\": \"\",\n      \"SourceType\": \"\",\n      \"TargetTable\": \"\",\n      \"TargetPath\": \"\",\n      \"TargetType\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "347d7d8d-8196-4a7f-b049-0e9cc164c06f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8128d1c2-ead5-40ee-b0fd-2316cc18fc25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ac4f92c-ff58-49f9-9fcd-e3cd298a6741",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b5e6846-505e-4f45-866b-1fb8662f7c41",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19c18628-b289-4b30-abfd-6756f974f4d4",
      "documentation": "Retrieves information about a specified partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartition",
      "responses": [
        {
          "uuid": "c2be857d-b03c-4371-a291-0e09b4d14e10",
          "body": "{\n  \"Partition\": {\n    \"Values\": [\n      \"\"\n    ],\n    \"DatabaseName\": \"\",\n    \"TableName\": \"\",\n    \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'random.boolean'}},\n      \"NumberOfBuckets\": {{faker 'random.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'random.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'random.number'}}\n      }\n    },\n    \"Parameters\": {},\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66a7e0e6-3dce-4a0d-b609-8a86c4823375",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c171dcde-d02a-4cd9-8a66-53304227ded2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f4c575a-050b-4c9e-b529-85f357fa483e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e984e15-be6e-45ec-ace1-09d65e868458",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dec5e9b3-2221-45a9-adeb-cb1dce769c79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "653d8ef5-7aea-4d87-a913-dd8127c5a130",
      "documentation": "Retrieves the partition indexes associated with a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitionIndexes",
      "responses": [
        {
          "uuid": "f84be568-ab8e-4253-9c2e-02dad1a28774",
          "body": "{\n  \"PartitionIndexDescriptorList\": [\n    {\n      \"IndexName\": \"\",\n      \"Keys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\"\n        }\n      ],\n      \"IndexStatus\": \"\",\n      \"BackfillErrors\": [\n        {\n          \"Code\": \"\",\n          \"Partitions\": [\n            {\n              \"Values\": [\n                \"\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6400202a-3dc3-4d4a-8907-5cd3f206fadf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eef754f6-9868-4d18-8c89-94886c67ac0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bd0a121-edb4-489d-8d3a-562daf4515a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce791b8-a64a-4577-9671-6f4cf5593b8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53490da5-8461-411f-9ca6-2fcbf38838b2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75025434-66a9-462d-82db-9d744ad5975a",
      "documentation": "Retrieves information about the partitions in a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPartitions",
      "responses": [
        {
          "uuid": "d84143c3-609d-4e33-8571-3d30d540ba44",
          "body": "{\n  \"Partitions\": [\n    {\n      \"Values\": [\n        \"\"\n      ],\n      \"DatabaseName\": \"\",\n      \"TableName\": \"\",\n      \"CreationTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"Parameters\": {},\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9af83841-078f-40d7-850c-4a46e5fbe4b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37b60b34-93e6-4b24-9061-dff0fccb50c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c8e3eab-4202-4436-a091-c5f26f60ca2e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02b5579f-365e-445c-98cd-8cb7ef00d1cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a637d801-2bdf-4c10-9294-f451c545d33d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0edda323-7444-4ce4-b881-6212eb17d42d",
      "documentation": "Gets code to perform a specified mapping.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetPlan",
      "responses": [
        {
          "uuid": "5e261d0a-d494-481c-bd17-db9024ff03a1",
          "body": "{\n  \"PythonScript\": \"\",\n  \"ScalaCode\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a844455-a813-4a03-b800-3ba486a59690",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3f70ef4-ce12-465a-99b9-04bbe4815b82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3108418c-b2c1-4694-885d-c267ec6c944b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "513961ba-f423-4738-8b6c-1860425d4da9",
      "documentation": "Describes the specified registry in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetRegistry",
      "responses": [
        {
          "uuid": "71e33089-d1e1-4c10-9537-b973b49b8f38",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"Description\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8882a5d3-ce8a-4075-ade7-6e99f57b4827",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd8b3d8a-4ab7-432e-8f6e-c5efc4482057",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bc068e6-d8e4-4b6c-a7e5-51b9472da8d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bcca991-f99e-42ff-9f6d-0c0412cafbac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bf92dd72-4101-4e42-9a0d-25af4d48dd91",
      "documentation": "<p>Retrieves the resource policies set on individual resources by Resource Access Manager during cross-account permission grants. Also retrieves the Data Catalog resource policy.</p> <p>If you enabled metadata encryption in Data Catalog settings, and you do not have permission on the KMS key, the operation can't return the Data Catalog resource policy.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicies",
      "responses": [
        {
          "uuid": "cf01c74a-5999-456d-b7f8-c1f240621077",
          "body": "{\n  \"GetResourcePoliciesResponseList\": [\n    {\n      \"PolicyInJson\": \"\",\n      \"PolicyHash\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1e3c37ad-0c7a-4316-9660-c11801562ae5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46c07a0a-d417-4688-99be-fbe0bcefdd04",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1470a97-5e0e-4d63-8077-e745edfca35b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0f21ced-b6cf-440e-ae4a-c956b5e6644d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "664e9717-feef-43e2-bc55-16c99d601fc0",
      "documentation": "Retrieves a specified resource policy.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetResourcePolicy",
      "responses": [
        {
          "uuid": "4be64965-3dd1-4a8b-b39d-14b225ff336d",
          "body": "{\n  \"PolicyInJson\": \"\",\n  \"PolicyHash\": \"\",\n  \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n  \"UpdateTime\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aaba792d-845e-4394-8da8-5b6ef7fa2033",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d59db139-67f2-4446-8847-0e77944f2f67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c6f77e7-51d2-469d-a4a3-3e38d2e935fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21f4f7bd-6047-46b7-8943-d04704e8a642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19b87ea5-40d2-400c-b6fb-c01e3df1a6bc",
      "documentation": "Describes the specified schema in detail.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchema",
      "responses": [
        {
          "uuid": "40b637c5-1989-4ad3-be96-e9867e8eb111",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\",\n  \"SchemaName\": \"\",\n  \"SchemaArn\": \"\",\n  \"Description\": \"\",\n  \"DataFormat\": \"\",\n  \"Compatibility\": \"\",\n  \"SchemaCheckpoint\": {{faker 'random.number'}},\n  \"LatestSchemaVersion\": {{faker 'random.number'}},\n  \"NextSchemaVersion\": {{faker 'random.number'}},\n  \"SchemaStatus\": \"\",\n  \"CreatedTime\": \"\",\n  \"UpdatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc247068-b7e7-4e0b-813e-58e69716fb62",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "956c05d1-28c4-4fb1-826b-345729982462",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24a68456-f297-4d4b-9f24-317d57907312",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f2335a-0b8a-400f-b762-5adff1c14f9b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d83b8ef-6157-4510-a392-4d59d1fe19e9",
      "documentation": "Retrieves a schema by the <code>SchemaDefinition</code>. The schema definition is sent to the Schema Registry, canonicalized, and hashed. If the hash is matched within the scope of the <code>SchemaName</code> or ARN (or the default registry, if none is supplied), that schema’s metadata is returned. Otherwise, a 404 or NotFound error is returned. Schema versions in <code>Deleted</code> statuses will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaByDefinition",
      "responses": [
        {
          "uuid": "fbb6f1f7-93cb-409e-a96a-a7fcaf22c2a1",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaArn\": \"\",\n  \"DataFormat\": \"\",\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c829e1a-ac98-40a9-954a-58b9b695b86b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf199bde-42f6-4e21-999f-3cdac770e711",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a04ee72-0d7e-4387-8171-e87f01228ffd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c38d94d7-2bb2-4465-9393-e288f5c6cc29",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f644a54-6cca-4049-b16d-f9269a3a653c",
      "documentation": "Get the specified schema by its unique ID assigned when a version of the schema is created or registered. Schema versions in Deleted status will not be included in the results.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersion",
      "responses": [
        {
          "uuid": "a2195e4b-1aa5-4722-bacf-a81b90ba1356",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"SchemaDefinition\": \"\",\n  \"DataFormat\": \"\",\n  \"SchemaArn\": \"\",\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"Status\": \"\",\n  \"CreatedTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da6e7b27-5918-4180-9ac3-6927a3ac2dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "119e3fb6-83e2-49b0-a275-aa99a2b181f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcef86c4-0810-4cb5-a325-67cdbbe781c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac105959-c9db-456e-941a-aedac958ea8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72937dc0-4c67-4d7a-9812-08da0c4c37e6",
      "documentation": "<p>Fetches the schema version difference in the specified difference type between two stored schema versions in the Schema Registry.</p> <p>This API allows you to compare two schema versions between two schema definitions under the same schema.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSchemaVersionsDiff",
      "responses": [
        {
          "uuid": "94521f1a-9dc6-4f06-a88e-a7fc5eb329e4",
          "body": "{\n  \"Diff\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b91fbfd-c8bb-4c48-96af-720f046856ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c717c27-9234-4ed3-a64a-2a6426e269e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d19f9d61-482c-4a9d-bd1b-9c315cf95e9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d58b9468-e198-4dc0-b305-90fa8a8854ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61302d8a-8b40-4ba7-806d-67cc6434755e",
      "documentation": "Retrieves a specified security configuration.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfiguration",
      "responses": [
        {
          "uuid": "b9646182-116b-44ce-9666-72281fdc2bcb",
          "body": "{\n  \"SecurityConfiguration\": {\n    \"Name\": \"\",\n    \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n    \"EncryptionConfiguration\": {\n      \"S3Encryption\": [\n        {\n          \"S3EncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      ],\n      \"CloudWatchEncryption\": {\n        \"CloudWatchEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      },\n      \"JobBookmarksEncryption\": {\n        \"JobBookmarksEncryptionMode\": \"\",\n        \"KmsKeyArn\": \"\"\n      }\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06d5db72-b9d9-41bc-9754-77c676d26612",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c2e87cc-4779-430f-abe8-c194d37b6350",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8103ead3-2fcc-4588-83b3-b467e91e16bb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69d64379-f658-4241-ae3d-411a3736602e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ff2117c-015b-4f78-8c4d-1a1d97cfbfd0",
      "documentation": "Retrieves a list of all security configurations.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetSecurityConfigurations",
      "responses": [
        {
          "uuid": "5cf7ebac-c8c6-47d9-9cdd-b9d07a41dc7b",
          "body": "{\n  \"SecurityConfigurations\": [\n    {\n      \"Name\": \"\",\n      \"CreatedTimeStamp\": \"{{faker 'date.recent' 365}}\",\n      \"EncryptionConfiguration\": {\n        \"S3Encryption\": [\n          {\n            \"S3EncryptionMode\": \"\",\n            \"KmsKeyArn\": \"\"\n          }\n        ],\n        \"CloudWatchEncryption\": {\n          \"CloudWatchEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        },\n        \"JobBookmarksEncryption\": {\n          \"JobBookmarksEncryptionMode\": \"\",\n          \"KmsKeyArn\": \"\"\n        }\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1be6585-08da-47ad-8ad0-2d5bf168b417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4f5a8e1-47b0-4d36-8cc7-b2ef90495e8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c354dfce-ae35-41c1-ac78-fe3bd0c98b92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "805a50c1-fe6b-4c95-80d9-9c7b8ee17e79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26aa51c4-b5e6-4981-ba39-55de81ed114e",
      "documentation": "Retrieves the <code>Table</code> definition in a Data Catalog for a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTable",
      "responses": [
        {
          "uuid": "97761b87-abc9-437b-8c4b-e2da21ee7836",
          "body": "{\n  \"Table\": {\n    \"Name\": \"\",\n    \"DatabaseName\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n    \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Retention\": {{faker 'random.number'}},\n    \"StorageDescriptor\": {\n      \"Columns\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"Location\": \"\",\n      \"InputFormat\": \"\",\n      \"OutputFormat\": \"\",\n      \"Compressed\": {{faker 'random.boolean'}},\n      \"NumberOfBuckets\": {{faker 'random.number'}},\n      \"SerdeInfo\": {\n        \"Name\": \"\",\n        \"SerializationLibrary\": \"\",\n        \"Parameters\": {}\n      },\n      \"BucketColumns\": [\n        \"\"\n      ],\n      \"SortColumns\": [\n        {\n          \"Column\": \"\",\n          \"SortOrder\": {{faker 'random.number'}}\n        }\n      ],\n      \"Parameters\": {},\n      \"SkewedInfo\": {\n        \"SkewedColumnNames\": [\n          \"\"\n        ],\n        \"SkewedColumnValues\": [\n          \"\"\n        ],\n        \"SkewedColumnValueLocationMaps\": {}\n      },\n      \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n      \"SchemaReference\": {\n        \"SchemaId\": {\n          \"SchemaArn\": \"\",\n          \"SchemaName\": \"\",\n          \"RegistryName\": \"\"\n        },\n        \"SchemaVersionId\": \"\",\n        \"SchemaVersionNumber\": {{faker 'random.number'}}\n      }\n    },\n    \"PartitionKeys\": [\n      {\n        \"Name\": \"\",\n        \"Type\": \"\",\n        \"Comment\": \"\",\n        \"Parameters\": {}\n      }\n    ],\n    \"ViewOriginalText\": \"\",\n    \"ViewExpandedText\": \"\",\n    \"TableType\": \"\",\n    \"Parameters\": {},\n    \"CreatedBy\": \"\",\n    \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n    \"TargetTable\": {\n      \"CatalogId\": \"\",\n      \"DatabaseName\": \"\",\n      \"Name\": \"\"\n    },\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48ead936-1bab-4c3b-b3e9-c25f54fcceeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c77b0ddd-d36f-4fe9-932a-43ca3b100ad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e323ef-0714-4b44-b144-5c73fc0efe49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d98d20e2-e805-459a-98c9-47de7b085696",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3c1b1c5-1a74-4bcf-860a-4af519459cb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23a8ea8e-efd5-4042-b2e0-c9ce63a9a5e2",
      "documentation": "Retrieves a specified version of a table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersion",
      "responses": [
        {
          "uuid": "b40bc1bb-6653-4a3c-9a11-f32cbaa02997",
          "body": "{\n  \"TableVersion\": {\n    \"Table\": {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    },\n    \"VersionId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5ea865e-1c0d-4a5a-9bc0-6015b9ef9cde",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41d18b08-3cab-4fd8-a9a7-43cbe76ef27a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2497f987-8087-467d-a187-b33b2e1d0c6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7675027-b8fd-44cb-81ac-a7983bf47004",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edc0e208-1f00-45a8-baae-f470eda32db0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c5faebe-0abd-46e0-8749-8ac460e30e8e",
      "documentation": "Retrieves a list of strings that identify available versions of a specified table.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTableVersions",
      "responses": [
        {
          "uuid": "25733429-30ad-48db-b37a-4c82b0fed27e",
          "body": "{\n  \"TableVersions\": [\n    {\n      \"Table\": {\n        \"Name\": \"\",\n        \"DatabaseName\": \"\",\n        \"Description\": \"\",\n        \"Owner\": \"\",\n        \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n        \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n        \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Retention\": {{faker 'random.number'}},\n        \"StorageDescriptor\": {\n          \"Columns\": [\n            {\n              \"Name\": \"\",\n              \"Type\": \"\",\n              \"Comment\": \"\",\n              \"Parameters\": {}\n            }\n          ],\n          \"Location\": \"\",\n          \"InputFormat\": \"\",\n          \"OutputFormat\": \"\",\n          \"Compressed\": {{faker 'random.boolean'}},\n          \"NumberOfBuckets\": {{faker 'random.number'}},\n          \"SerdeInfo\": {\n            \"Name\": \"\",\n            \"SerializationLibrary\": \"\",\n            \"Parameters\": {}\n          },\n          \"BucketColumns\": [\n            \"\"\n          ],\n          \"SortColumns\": [\n            {\n              \"Column\": \"\",\n              \"SortOrder\": {{faker 'random.number'}}\n            }\n          ],\n          \"Parameters\": {},\n          \"SkewedInfo\": {\n            \"SkewedColumnNames\": [\n              \"\"\n            ],\n            \"SkewedColumnValues\": [\n              \"\"\n            ],\n            \"SkewedColumnValueLocationMaps\": {}\n          },\n          \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n          \"SchemaReference\": {\n            \"SchemaId\": {\n              \"SchemaArn\": \"\",\n              \"SchemaName\": \"\",\n              \"RegistryName\": \"\"\n            },\n            \"SchemaVersionId\": \"\",\n            \"SchemaVersionNumber\": {{faker 'random.number'}}\n          }\n        },\n        \"PartitionKeys\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"ViewOriginalText\": \"\",\n        \"ViewExpandedText\": \"\",\n        \"TableType\": \"\",\n        \"Parameters\": {},\n        \"CreatedBy\": \"\",\n        \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n        \"TargetTable\": {\n          \"CatalogId\": \"\",\n          \"DatabaseName\": \"\",\n          \"Name\": \"\"\n        },\n        \"CatalogId\": \"\"\n      },\n      \"VersionId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a956f341-cb3a-42b5-8720-124f88fb9023",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "151de183-acd8-444b-a5fc-a3d6f66613ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22243422-6a98-45e2-93dc-50e068a641ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05ef38fd-e596-4895-ad38-09adab6446ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b4f4053-3494-4566-9af4-09bb791654ce",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bfcb3158-788e-4cb3-a384-27ca4b01ee69",
      "documentation": "Retrieves the definitions of some or all of the tables in a given <code>Database</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTables",
      "responses": [
        {
          "uuid": "02b40356-cf86-48f9-b562-5e9d0c4f3040",
          "body": "{\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd0a4ff6-85c9-4fd2-8ba8-e37600090360",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7509f353-ce56-4e4f-8789-73fed4acdb0b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad2b723-5126-482a-b3b2-2added246738",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47e30941-aa56-4e07-9eb9-bbe48ba9cd6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d5e72e2-c2cb-45a7-8d24-cc9eb52efe39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0618558a-a88f-4524-82a6-6ebbea7dbf58",
      "documentation": "Retrieves a list of tags associated with a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTags",
      "responses": [
        {
          "uuid": "648d4648-43d5-49b6-bde0-790dfa98897e",
          "body": "{\n  \"Tags\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4dee0422-9a6b-4564-ad68-13a58447102f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b95086f-58e7-40a4-ba81-e5c051a6c8cb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3f3350a9-86ce-48e0-97e4-747281c10c2a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e415c8a1-b19f-4afe-9b89-2463d273b32b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "381d1837-e060-498c-9dd3-2117c7b048f4",
      "documentation": "Retrieves the definition of a trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTrigger",
      "responses": [
        {
          "uuid": "b004c8e6-1b1c-4328-8dc3-a326d0abdd08",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'random.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'random.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc824dc7-28d9-4416-9bd0-4de8a9acafef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddc0a1b2-94f5-4d15-97c0-c8df68099c79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c593e7e-c553-451d-ac51-2b4654053b78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98683989-fb72-4da8-8ad1-12afcff67dd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5843d43d-53b7-429c-a665-52ff7208a737",
      "documentation": "Gets all the triggers associated with a job.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetTriggers",
      "responses": [
        {
          "uuid": "f0e6a8e3-983b-41fb-9459-9ab361dcc304",
          "body": "{\n  \"Triggers\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowName\": \"\",\n      \"Id\": \"\",\n      \"Type\": \"\",\n      \"State\": \"\",\n      \"Description\": \"\",\n      \"Schedule\": \"\",\n      \"Actions\": [\n        {\n          \"JobName\": \"\",\n          \"Arguments\": {},\n          \"Timeout\": {{faker 'random.number'}},\n          \"SecurityConfiguration\": \"\",\n          \"NotificationProperty\": {\n            \"NotifyDelayAfter\": {{faker 'random.number'}}\n          },\n          \"CrawlerName\": \"\"\n        }\n      ],\n      \"Predicate\": {\n        \"Logical\": \"\",\n        \"Conditions\": [\n          {\n            \"LogicalOperator\": \"\",\n            \"JobName\": \"\",\n            \"State\": \"\",\n            \"CrawlerName\": \"\",\n            \"CrawlState\": \"\"\n          }\n        ]\n      },\n      \"EventBatchingCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82955d2c-eea7-48a9-9916-a0411c963501",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b5432d3-3ab8-4a33-a72f-1d7a1b9be58c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbac5a00-4557-47ce-976b-b58f15d0feff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12652853-ef45-49a6-a8bb-2f8a6ea912c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b8db9055-b9ee-4ea1-91ff-ffecce2e0e51",
      "documentation": "Retrieves a specified function definition from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunction",
      "responses": [
        {
          "uuid": "ae367229-46c4-4c34-936b-1c8013eed6db",
          "body": "{\n  \"UserDefinedFunction\": {\n    \"FunctionName\": \"\",\n    \"DatabaseName\": \"\",\n    \"ClassName\": \"\",\n    \"OwnerName\": \"\",\n    \"OwnerType\": \"\",\n    \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n    \"ResourceUris\": [\n      {\n        \"ResourceType\": \"\",\n        \"Uri\": \"\"\n      }\n    ],\n    \"CatalogId\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43970b3c-fe26-40e8-b9a3-bcdb926333c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "527e2414-ea3c-4a8c-9b58-10bfcb036cca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31804a5d-1e14-4982-b69a-541afaa8d5ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6cd76630-50bf-477f-abd8-b66a6f25f7a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76f663f4-3d6e-4a8b-8d67-ecd3898a2e90",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0efc758-d024-4073-9616-f55ded6c68ef",
      "documentation": "Retrieves multiple function definitions from the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetUserDefinedFunctions",
      "responses": [
        {
          "uuid": "077d70c6-6fea-4e46-8a83-f782e6c81f8d",
          "body": "{\n  \"UserDefinedFunctions\": [\n    {\n      \"FunctionName\": \"\",\n      \"DatabaseName\": \"\",\n      \"ClassName\": \"\",\n      \"OwnerName\": \"\",\n      \"OwnerType\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"ResourceUris\": [\n        {\n          \"ResourceType\": \"\",\n          \"Uri\": \"\"\n        }\n      ],\n      \"CatalogId\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "315cb531-0226-4320-9dfa-ec650d06f09e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4b28a6c-e7e6-4195-bb66-4db1ddfc887d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fb8eba9-e6a5-4076-bf78-7182ecee3633",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f621b64-623b-4583-b4c3-1dd48577433a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c89a9a80-d64f-4b01-b695-a4430b381697",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e8fa74d-3776-4831-abdc-dce4e9867f28",
      "documentation": "Retrieves resource metadata for a workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflow",
      "responses": [
        {
          "uuid": "e7b585eb-828f-421a-87c3-2de61b244084",
          "body": "{\n  \"Workflow\": {\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"DefaultRunProperties\": {},\n    \"CreatedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n    \"LastRun\": {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'random.number'}},\n        \"TimeoutActions\": {{faker 'random.number'}},\n        \"FailedActions\": {{faker 'random.number'}},\n        \"StoppedActions\": {{faker 'random.number'}},\n        \"SucceededActions\": {{faker 'random.number'}},\n        \"RunningActions\": {{faker 'random.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'random.number'}},\n                \"BatchWindow\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'random.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'random.number'}},\n                \"ExecutionTime\": {{faker 'random.number'}},\n                \"Timeout\": {{faker 'random.number'}},\n                \"MaxCapacity\": {{faker 'random.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'random.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'random.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"MaxConcurrentRuns\": {{faker 'random.number'}},\n    \"BlueprintDetails\": {\n      \"BlueprintName\": \"\",\n      \"RunId\": \"\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61850883-d4ae-4db2-b6e1-e99730f2cf43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be270a7e-9d28-4b2b-9de9-391fb792cae6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b25ac8eb-55f5-49cc-80cd-0f9f22d2e328",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a51e5a39-9a2e-48a7-b23b-4e7b30d0fb5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f508acd9-0abb-4567-8fce-0db04eb62a0c",
      "documentation": "Retrieves the metadata for a given workflow run. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRun",
      "responses": [
        {
          "uuid": "2646e7a3-4f30-44e5-a9ec-5d397c3ec53e",
          "body": "{\n  \"Run\": {\n    \"Name\": \"\",\n    \"WorkflowRunId\": \"\",\n    \"PreviousRunId\": \"\",\n    \"WorkflowRunProperties\": {},\n    \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n    \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n    \"Status\": \"\",\n    \"ErrorMessage\": \"\",\n    \"Statistics\": {\n      \"TotalActions\": {{faker 'random.number'}},\n      \"TimeoutActions\": {{faker 'random.number'}},\n      \"FailedActions\": {{faker 'random.number'}},\n      \"StoppedActions\": {{faker 'random.number'}},\n      \"SucceededActions\": {{faker 'random.number'}},\n      \"RunningActions\": {{faker 'random.number'}}\n    },\n    \"Graph\": {\n      \"Nodes\": [\n        {\n          \"Type\": \"\",\n          \"Name\": \"\",\n          \"UniqueId\": \"\",\n          \"TriggerDetails\": {\n            \"Trigger\": {\n              \"Name\": \"\",\n              \"WorkflowName\": \"\",\n              \"Id\": \"\",\n              \"Type\": \"\",\n              \"State\": \"\",\n              \"Description\": \"\",\n              \"Schedule\": \"\",\n              \"Actions\": [\n                {\n                  \"JobName\": \"\",\n                  \"Arguments\": {},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"CrawlerName\": \"\"\n                }\n              ],\n              \"Predicate\": {\n                \"Logical\": \"\",\n                \"Conditions\": [\n                  {\n                    \"LogicalOperator\": \"\",\n                    \"JobName\": \"\",\n                    \"State\": \"\",\n                    \"CrawlerName\": \"\",\n                    \"CrawlState\": \"\"\n                  }\n                ]\n              },\n              \"EventBatchingCondition\": {\n                \"BatchSize\": {{faker 'random.number'}},\n                \"BatchWindow\": {{faker 'random.number'}}\n              }\n            }\n          },\n          \"JobDetails\": {\n            \"JobRuns\": [\n              {\n                \"Id\": \"\",\n                \"Attempt\": {{faker 'random.number'}},\n                \"PreviousRunId\": \"\",\n                \"TriggerName\": \"\",\n                \"JobName\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"JobRunState\": \"\",\n                \"Arguments\": {},\n                \"ErrorMessage\": \"\",\n                \"PredecessorRuns\": [\n                  {\n                    \"JobName\": \"\",\n                    \"RunId\": \"\"\n                  }\n                ],\n                \"AllocatedCapacity\": {{faker 'random.number'}},\n                \"ExecutionTime\": {{faker 'random.number'}},\n                \"Timeout\": {{faker 'random.number'}},\n                \"MaxCapacity\": {{faker 'random.float'}},\n                \"WorkerType\": \"\",\n                \"NumberOfWorkers\": {{faker 'random.number'}},\n                \"SecurityConfiguration\": \"\",\n                \"LogGroupName\": \"\",\n                \"NotificationProperty\": {\n                  \"NotifyDelayAfter\": {{faker 'random.number'}}\n                },\n                \"GlueVersion\": \"\"\n              }\n            ]\n          },\n          \"CrawlerDetails\": {\n            \"Crawls\": [\n              {\n                \"State\": \"\",\n                \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                \"ErrorMessage\": \"\",\n                \"LogGroup\": \"\",\n                \"LogStream\": \"\"\n              }\n            ]\n          }\n        }\n      ],\n      \"Edges\": [\n        {\n          \"SourceId\": \"\",\n          \"DestinationId\": \"\"\n        }\n      ]\n    },\n    \"StartingEventBatchCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a45251c-2a66-4367-8977-9a60c4d26414",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02fe7f39-24d5-4a45-8b0c-ae52f5b87ff3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0cf3eba-5e9b-4fca-88b3-269d99b2c3a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa4b0d88-4157-481e-bca7-6e8bd519b638",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b95d0283-22ce-4aa6-8c22-c8bb2175a52e",
      "documentation": "Retrieves the workflow run properties which were set during the run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRunProperties",
      "responses": [
        {
          "uuid": "b2887086-f8b5-4d1f-b45a-0388f2d1f295",
          "body": "{\n  \"RunProperties\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4e83639-c067-4230-be98-ebcd9a52df43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3cfb3fd-ea47-48a3-9d71-5d387ae71d6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "885ac6b6-669c-4f17-a521-1ced5ab8f756",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1db4a878-f3b0-4bc0-9a88-a3c4d50a9777",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8892fa8-f61e-4b09-91eb-5f3e849ecc28",
      "documentation": "Retrieves metadata for all runs of a given workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.GetWorkflowRuns",
      "responses": [
        {
          "uuid": "d561f4de-01c4-483b-904f-63713e1e112f",
          "body": "{\n  \"Runs\": [\n    {\n      \"Name\": \"\",\n      \"WorkflowRunId\": \"\",\n      \"PreviousRunId\": \"\",\n      \"WorkflowRunProperties\": {},\n      \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n      \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n      \"Status\": \"\",\n      \"ErrorMessage\": \"\",\n      \"Statistics\": {\n        \"TotalActions\": {{faker 'random.number'}},\n        \"TimeoutActions\": {{faker 'random.number'}},\n        \"FailedActions\": {{faker 'random.number'}},\n        \"StoppedActions\": {{faker 'random.number'}},\n        \"SucceededActions\": {{faker 'random.number'}},\n        \"RunningActions\": {{faker 'random.number'}}\n      },\n      \"Graph\": {\n        \"Nodes\": [\n          {\n            \"Type\": \"\",\n            \"Name\": \"\",\n            \"UniqueId\": \"\",\n            \"TriggerDetails\": {\n              \"Trigger\": {\n                \"Name\": \"\",\n                \"WorkflowName\": \"\",\n                \"Id\": \"\",\n                \"Type\": \"\",\n                \"State\": \"\",\n                \"Description\": \"\",\n                \"Schedule\": \"\",\n                \"Actions\": [\n                  {\n                    \"JobName\": \"\",\n                    \"Arguments\": {},\n                    \"Timeout\": {{faker 'random.number'}},\n                    \"SecurityConfiguration\": \"\",\n                    \"NotificationProperty\": {\n                      \"NotifyDelayAfter\": {{faker 'random.number'}}\n                    },\n                    \"CrawlerName\": \"\"\n                  }\n                ],\n                \"Predicate\": {\n                  \"Logical\": \"\",\n                  \"Conditions\": [\n                    {\n                      \"LogicalOperator\": \"\",\n                      \"JobName\": \"\",\n                      \"State\": \"\",\n                      \"CrawlerName\": \"\",\n                      \"CrawlState\": \"\"\n                    }\n                  ]\n                },\n                \"EventBatchingCondition\": {\n                  \"BatchSize\": {{faker 'random.number'}},\n                  \"BatchWindow\": {{faker 'random.number'}}\n                }\n              }\n            },\n            \"JobDetails\": {\n              \"JobRuns\": [\n                {\n                  \"Id\": \"\",\n                  \"Attempt\": {{faker 'random.number'}},\n                  \"PreviousRunId\": \"\",\n                  \"TriggerName\": \"\",\n                  \"JobName\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"LastModifiedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"JobRunState\": \"\",\n                  \"Arguments\": {},\n                  \"ErrorMessage\": \"\",\n                  \"PredecessorRuns\": [\n                    {\n                      \"JobName\": \"\",\n                      \"RunId\": \"\"\n                    }\n                  ],\n                  \"AllocatedCapacity\": {{faker 'random.number'}},\n                  \"ExecutionTime\": {{faker 'random.number'}},\n                  \"Timeout\": {{faker 'random.number'}},\n                  \"MaxCapacity\": {{faker 'random.float'}},\n                  \"WorkerType\": \"\",\n                  \"NumberOfWorkers\": {{faker 'random.number'}},\n                  \"SecurityConfiguration\": \"\",\n                  \"LogGroupName\": \"\",\n                  \"NotificationProperty\": {\n                    \"NotifyDelayAfter\": {{faker 'random.number'}}\n                  },\n                  \"GlueVersion\": \"\"\n                }\n              ]\n            },\n            \"CrawlerDetails\": {\n              \"Crawls\": [\n                {\n                  \"State\": \"\",\n                  \"StartedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"CompletedOn\": \"{{faker 'date.recent' 365}}\",\n                  \"ErrorMessage\": \"\",\n                  \"LogGroup\": \"\",\n                  \"LogStream\": \"\"\n                }\n              ]\n            }\n          }\n        ],\n        \"Edges\": [\n          {\n            \"SourceId\": \"\",\n            \"DestinationId\": \"\"\n          }\n        ]\n      },\n      \"StartingEventBatchCondition\": {\n        \"BatchSize\": {{faker 'random.number'}},\n        \"BatchWindow\": {{faker 'random.number'}}\n      }\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6247cf55-091d-474b-853b-6a4b978bfe5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aecb748-276a-4a90-b4e4-2f37745e3566",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "687f2fef-4fdb-432b-8e7c-3bba878218df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f8a4379-5816-4b88-bab6-3b8709601e06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04c6c5a1-381c-4596-9314-5bbba65d9ea7",
      "documentation": "Imports an existing Amazon Athena Data Catalog to Glue.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ImportCatalogToGlue",
      "responses": [
        {
          "uuid": "ca00b537-41ce-4f85-97a4-ae8b08deb4fa",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd1b530a-0b3e-4b27-9102-da7fa6800166",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34d950ba-49f2-43b4-9a89-fc98ff3501e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a8248b5-f8f9-4202-97bf-a637cff6a948",
      "documentation": "Lists all the blueprint names in an account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListBlueprints",
      "responses": [
        {
          "uuid": "c4910ec2-959a-401f-b59e-4a12cc286325",
          "body": "{\n  \"Blueprints\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d38c75e-80dd-4dcd-8d11-65e66da7517d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22dfe95c-16e2-46ee-a6af-16cf60b1cb44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0913390c-9ee8-41b2-be63-2bff34ad2a2d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0c447bb1-4944-4b1d-8f65-2651ad01d734",
      "documentation": "<p>Retrieves the names of all crawler resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListCrawlers",
      "responses": [
        {
          "uuid": "6c00fceb-63b9-4d9c-98ed-bbe5a71e4639",
          "body": "{\n  \"CrawlerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0b44c52-196c-4484-9adf-3f29d9a499f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e8137cd-7f1e-4861-9450-cb13a319bd77",
      "documentation": "<p>Retrieves the names of all <code>DevEndpoint</code> resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListDevEndpoints",
      "responses": [
        {
          "uuid": "d54a8615-79c0-4658-aabc-663030f52d52",
          "body": "{\n  \"DevEndpointNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96571f6b-80bd-4952-95cf-5645288ca67b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42690b78-3e7b-42b4-a839-e33f816c7dc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "780c095c-53f7-404f-b347-6aee954f651d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab2ead01-5f80-4290-9e08-268162c86c21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4e1d54e-6761-4830-9446-2bad94714f76",
      "documentation": "<p>Retrieves the names of all job resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListJobs",
      "responses": [
        {
          "uuid": "19d9fd64-bdb5-4783-a01a-68a3c041a68d",
          "body": "{\n  \"JobNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6d81d63-2dc0-4fe7-b142-b875260c1c06",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6858b30c-d1c4-4fa8-bf1a-9e59660eb3f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b36fe94a-0ef5-4581-be10-c15c7986ff96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0081a27a-b8df-4d0b-96b8-4bd610ae8391",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a96e941d-3bdb-448c-b3b1-220184ba7aad",
      "documentation": " Retrieves a sortable, filterable list of existing Glue machine learning transforms in this Amazon Web Services account, or the resources with the specified tag. This operation takes the optional <code>Tags</code> field, which you can use as a filter of the responses so that tagged resources can be retrieved as a group. If you choose to use tag filtering, only resources with the tags are retrieved. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListMLTransforms",
      "responses": [
        {
          "uuid": "6ea41ce2-c287-47c7-851c-e5a60cc44d9f",
          "body": "{\n  \"TransformIds\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3a51427-cc52-4305-8aed-1bea618e9c08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "676e5574-24fe-4b30-9b5d-a798c3d7fad7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c12ddbe3-e11a-4282-a3e3-0ffde5cc5d03",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "166de609-f113-41f6-8c26-25d890fedde8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a7a18c40-a223-46f0-bed8-e05b648fdba5",
      "documentation": "Returns a list of registries that you have created, with minimal registry information. Registries in the <code>Deleting</code> status will not be included in the results. Empty results will be returned if there are no registries available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListRegistries",
      "responses": [
        {
          "uuid": "79f0fb94-855b-4d41-9c46-b25048e78d5b",
          "body": "{\n  \"Registries\": [\n    {\n      \"RegistryName\": \"\",\n      \"RegistryArn\": \"\",\n      \"Description\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ec7c69b-1679-498f-b5b1-96a12a650ee9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "747114fb-efdb-4e5b-86c7-4a93e7549ace",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c70c9f0c-a80f-4890-a8ab-0daa523efdc5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "268f6505-d826-4bae-9577-4cdd02f31edc",
      "documentation": "Returns a list of schema versions that you have created, with minimal information. Schema versions in Deleted status will not be included in the results. Empty results will be returned if there are no schema versions available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemaVersions",
      "responses": [
        {
          "uuid": "65afc7b4-0477-41e9-86bd-ca68ef41ff50",
          "body": "{\n  \"Schemas\": [\n    {\n      \"SchemaArn\": \"\",\n      \"SchemaVersionId\": \"\",\n      \"VersionNumber\": {{faker 'random.number'}},\n      \"Status\": \"\",\n      \"CreatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ba31301-0b73-4542-b8dc-66db69fdec66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a5120a3-65e4-4cfb-a3da-5ec15535036e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50af8adb-4961-459a-87a2-6dcef6d27c9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6185b560-a342-4184-abe0-45e1190d40b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "30b2b465-1805-4267-b4ba-2f6d3408cfb6",
      "documentation": "<p>Returns a list of schemas with minimal details. Schemas in Deleting status will not be included in the results. Empty results will be returned if there are no schemas available.</p> <p>When the <code>RegistryId</code> is not provided, all the schemas across registries will be part of the API response.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListSchemas",
      "responses": [
        {
          "uuid": "6d11fe9b-e86b-4762-ae2a-493ebc3fe8ea",
          "body": "{\n  \"Schemas\": [\n    {\n      \"RegistryName\": \"\",\n      \"SchemaName\": \"\",\n      \"SchemaArn\": \"\",\n      \"Description\": \"\",\n      \"SchemaStatus\": \"\",\n      \"CreatedTime\": \"\",\n      \"UpdatedTime\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8966056b-61e0-41c0-a178-3c794a4cc98d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "960c8ec6-b194-4c8b-9b39-8c80e2896648",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6ca9e1b-cbe6-4f4b-8f9a-0a6b9d4c7196",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f069aa9-be94-430e-a1ad-6209c31df42a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1c8e9e81-c670-459e-93b1-aab16af1c82a",
      "documentation": "<p>Retrieves the names of all trigger resources in this Amazon Web Services account, or the resources with the specified tag. This operation allows you to see which resources are available in your account, and their names.</p> <p>This operation takes the optional <code>Tags</code> field, which you can use as a filter on the response so that tagged resources can be retrieved as a group. If you choose to use tags filtering, only resources with the tag are retrieved.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListTriggers",
      "responses": [
        {
          "uuid": "f58c64a9-77c0-4846-b26e-03008a503341",
          "body": "{\n  \"TriggerNames\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83e94f27-dec7-4994-a5c1-a7abfe93ca9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a18c12a-eeb1-4806-93c6-a1b7be89fd38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9eed8be-ac08-4f02-b6b8-fc5c95ac7233",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14e97856-ad2c-4230-bbc5-59a4194d668c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dad069f6-508b-40a0-8b65-eca56a04f8c3",
      "documentation": "Lists names of workflows created in the account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ListWorkflows",
      "responses": [
        {
          "uuid": "608cfffd-5442-4236-b086-d41418224ce9",
          "body": "{\n  \"Workflows\": [\n    \"\"\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "130c3c2e-0f5b-4651-935d-9e429f1f187b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09b05818-93e5-467e-af12-90660887184f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e43aedb4-bc3c-4df0-ac8a-481a9bc62d0f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0db3393b-484a-4f6d-8621-d4171310c60e",
      "documentation": "Sets the security configuration for a specified catalog. After the configuration has been set, the specified encryption is applied to every catalog write thereafter.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutDataCatalogEncryptionSettings",
      "responses": [
        {
          "uuid": "474c967c-89b2-43c7-9495-d37e6f555fd9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c67f4e52-637d-42c4-bba1-159bf5162c0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53a32b9b-0a6c-48cd-8965-eb0522af979d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "129f837c-edd8-418b-95a1-83b094766c82",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed8a30c2-4a0e-4b92-9a3e-cb44798813b7",
      "documentation": "Sets the Data Catalog resource policy for access control.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutResourcePolicy",
      "responses": [
        {
          "uuid": "16180987-2ebf-4b7e-95e2-df16458c4551",
          "body": "{\n  \"PolicyHash\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65ebd67f-f20a-4f00-ac4a-17bac4368d49",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d26d699-9cd7-4c4e-a27e-301d08b44971",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f58dc358-e631-47bb-984b-177080dced80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cc9c3e3-88bb-448a-ac13-8f3d8aaa6d05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3833b6ba-3ddf-4bdc-97b4-8ca75e9fdc08",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConditionCheckFailureException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ecaea0ef-93b8-428d-a630-496d20d6a25a",
      "documentation": "Puts the metadata key value pair for a specified schema version ID. A maximum of 10 key value pairs will be allowed per schema version. They can be added over one or more calls.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "be154b0f-7d37-4e40-9a3a-891e947bd705",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'random.boolean'}},\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5990c9b8-965a-4cc3-9b51-ff228c2e5493",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f35ff14c-e224-4b5f-af27-f77ef87aff05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71406812-bb39-47cc-a014-51d215f69e0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8af2ddd-ce86-4526-bc55-fd5c6337cc8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe40c07b-daf8-4be2-9774-ad4a6a3a884a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99f19bd1-a60c-4ddc-9be8-c0de286085d6",
      "documentation": "Puts the specified workflow run properties for the given workflow run. If a property already exists for the specified run, then it overrides the value otherwise adds the property to existing properties.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.PutWorkflowRunProperties",
      "responses": [
        {
          "uuid": "c7d89095-913d-4f60-b61b-d2f01946b9a0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "63d2b4e0-9d32-4f11-92ff-f17a0188074e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "AlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b31f111e-7f82-46a5-8941-ae7381de81ab",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d8044fb-d934-4543-ba17-8828f293adb8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a685cc6f-dae6-44b1-a7dc-6cea72013d42",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eee64dce-ddac-40cb-a96c-776e51b76ea0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "124ad300-8272-4945-8b55-cdbcc401ad21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a35a7d89-cad9-4fcb-a012-f40a3fc0ec1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5298a38b-42d9-4cca-b7b8-bc9402129e8d",
      "documentation": "Queries for the schema version metadata information. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.QuerySchemaVersionMetadata",
      "responses": [
        {
          "uuid": "2b5c8214-d6ca-4eac-85cf-608a0fb07e29",
          "body": "{\n  \"MetadataInfoMap\": {},\n  \"SchemaVersionId\": \"\",\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efb3f7fa-7658-4634-81a8-4f68af67b639",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8b0d7bc-5417-4b7b-b6c2-b84aca6d25ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "161eb8a3-0f4a-4bb1-8050-d0d3fa8a9850",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d614610-d2bd-4b0d-b0d7-852cc0000bc0",
      "documentation": "<p>Adds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.</p> <p>If this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the <code>GetSchemaVersion</code> API with the <code>SchemaVersionId</code> to check compatibility modes.</p> <p>If the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RegisterSchemaVersion",
      "responses": [
        {
          "uuid": "44aee4eb-715e-4d30-b610-9136fdfd75df",
          "body": "{\n  \"SchemaVersionId\": \"\",\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f88da3b-508c-4efc-9518-be036fb27167",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6263b586-0370-4386-b555-a4f62f54e947",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f8553e-3faa-4347-91f0-e2fbda416bd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28b272ee-2030-465f-960e-660809cf096a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cab4a70-fc52-480f-8b41-f345aaf14628",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6be0b7e5-1a8a-477f-b9c3-a609f4778e51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "544b8ee8-51f4-4897-8003-b3115998605a",
      "documentation": "Removes a key value pair from the schema version metadata for the specified schema version ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.RemoveSchemaVersionMetadata",
      "responses": [
        {
          "uuid": "c00d93aa-d3fa-45db-bc87-6a49099e6c0a",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\",\n  \"LatestVersion\": {{faker 'random.boolean'}},\n  \"VersionNumber\": {{faker 'random.number'}},\n  \"SchemaVersionId\": \"\",\n  \"MetadataKey\": \"\",\n  \"MetadataValue\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74cede11-6c65-466f-a328-beed4c7d6df0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "195f5dbc-0196-451f-b7db-13f459e56b75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae1aa463-5bc6-4fb0-b2c3-7b8732cb29f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0b9d546-e731-4d88-9194-b072e54ed7d0",
      "documentation": "Resets a bookmark entry.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResetJobBookmark",
      "responses": [
        {
          "uuid": "2fc652a8-0aae-4d13-b4f0-84642b2762ab",
          "body": "{\n  \"JobBookmarkEntry\": {\n    \"JobName\": \"\",\n    \"Version\": {{faker 'random.number'}},\n    \"Run\": {{faker 'random.number'}},\n    \"Attempt\": {{faker 'random.number'}},\n    \"PreviousRunId\": \"\",\n    \"RunId\": \"\",\n    \"JobBookmark\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "396534a5-0271-4ef5-b41d-e215da7450e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d9a1674-a0d4-4e51-bb14-a302ae6c123f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86893818-f304-4d5e-b510-2f915d4db79c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ec3ff4f-9e5d-48c9-9acb-dae532f3330e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "db018477-9046-417e-931c-f5b387ddbb45",
      "documentation": "Restarts selected nodes of a previous partially completed workflow run and resumes the workflow run. The selected nodes and all nodes that are downstream from the selected nodes are run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.ResumeWorkflowRun",
      "responses": [
        {
          "uuid": "c3182f47-e8a4-4354-abb3-7ded43cbe43f",
          "body": "{\n  \"RunId\": \"\",\n  \"NodeIds\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c76d7b54-c286-4c1b-bcd3-29e5cb91b37d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5e97a874-c0fc-43db-8531-abe26bd9ea45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae7d5c68-f1e9-42b8-a7cf-5735c0a7a590",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02a2408f-b82c-4827-867b-16030a6f53f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49bfde9f-122a-48e9-b1cd-64be88d5d9c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aeae8346-5b9a-47ab-a4eb-e54f9efa1bdb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0261c8ca-56b7-460a-a88c-571e5d0593b8",
      "documentation": "<p>Searches a set of tables based on properties in the table metadata as well as on the parent database. You can search against text or filter conditions. </p> <p>You can only get tables that you have access to based on the security policies defined in Lake Formation. You need at least a read-only access to the table for it to be returned. If you do not have access to all the columns in the table, these columns will not be searched against when returning the list of tables back to you. If you have access to the columns but not the data in the columns, those columns and the associated metadata for those columns will be included in the search. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.SearchTables",
      "responses": [
        {
          "uuid": "d428250c-284b-44da-b072-1dad48f2ced3",
          "body": "{\n  \"NextToken\": \"\",\n  \"TableList\": [\n    {\n      \"Name\": \"\",\n      \"DatabaseName\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"CreateTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAccessTime\": \"{{faker 'date.recent' 365}}\",\n      \"LastAnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Retention\": {{faker 'random.number'}},\n      \"StorageDescriptor\": {\n        \"Columns\": [\n          {\n            \"Name\": \"\",\n            \"Type\": \"\",\n            \"Comment\": \"\",\n            \"Parameters\": {}\n          }\n        ],\n        \"Location\": \"\",\n        \"InputFormat\": \"\",\n        \"OutputFormat\": \"\",\n        \"Compressed\": {{faker 'random.boolean'}},\n        \"NumberOfBuckets\": {{faker 'random.number'}},\n        \"SerdeInfo\": {\n          \"Name\": \"\",\n          \"SerializationLibrary\": \"\",\n          \"Parameters\": {}\n        },\n        \"BucketColumns\": [\n          \"\"\n        ],\n        \"SortColumns\": [\n          {\n            \"Column\": \"\",\n            \"SortOrder\": {{faker 'random.number'}}\n          }\n        ],\n        \"Parameters\": {},\n        \"SkewedInfo\": {\n          \"SkewedColumnNames\": [\n            \"\"\n          ],\n          \"SkewedColumnValues\": [\n            \"\"\n          ],\n          \"SkewedColumnValueLocationMaps\": {}\n        },\n        \"StoredAsSubDirectories\": {{faker 'random.boolean'}},\n        \"SchemaReference\": {\n          \"SchemaId\": {\n            \"SchemaArn\": \"\",\n            \"SchemaName\": \"\",\n            \"RegistryName\": \"\"\n          },\n          \"SchemaVersionId\": \"\",\n          \"SchemaVersionNumber\": {{faker 'random.number'}}\n        }\n      },\n      \"PartitionKeys\": [\n        {\n          \"Name\": \"\",\n          \"Type\": \"\",\n          \"Comment\": \"\",\n          \"Parameters\": {}\n        }\n      ],\n      \"ViewOriginalText\": \"\",\n      \"ViewExpandedText\": \"\",\n      \"TableType\": \"\",\n      \"Parameters\": {},\n      \"CreatedBy\": \"\",\n      \"IsRegisteredWithLakeFormation\": {{faker 'random.boolean'}},\n      \"TargetTable\": {\n        \"CatalogId\": \"\",\n        \"DatabaseName\": \"\",\n        \"Name\": \"\"\n      },\n      \"CatalogId\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "320e7bd8-3b73-4d2a-bea8-6bd36696d517",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "caf16c0a-05e6-4c8a-a84a-d320f38a42d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53d1b329-89af-44a1-ab50-a6be2be0c955",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ec7ac47c-4019-4a59-b2ab-5a65aba42520",
      "documentation": "Starts a new run of the specified blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartBlueprintRun",
      "responses": [
        {
          "uuid": "c3a4cb0a-1774-4cca-887e-36a02ea129f1",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc32f2f5-df5e-42af-af07-42783dbe5425",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd23c14e-92d0-47de-9854-2b15b787fd66",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22d65721-b420-4e09-bd75-c2dc5ef0e016",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6bbf33c1-215b-474f-80ae-97f4b73e5419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7476cba5-96d4-431c-b514-23b657daee5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c66ddfef-3079-48ad-81a5-a2aa90a8b7ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b12ee12-b958-4316-88a4-ab86cb1d4dd0",
      "documentation": "Starts a crawl using the specified crawler, regardless of what is scheduled. If the crawler is already running, returns a <a href=\"https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-exceptions.html#aws-glue-api-exceptions-CrawlerRunningException\">CrawlerRunningException</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawler",
      "responses": [
        {
          "uuid": "ddf58b02-eb47-4b95-a3a4-53d352d0d022",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65be5d14-a920-49a9-9c15-238307630554",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "630cfe7d-176a-4204-901d-b88f557726ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2408b7a-5100-4d15-a69a-c45de3168e84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f96be4c-8dee-43ee-9963-078eb6f0d1ce",
      "documentation": "Changes the schedule state of the specified crawler to <code>SCHEDULED</code>, unless the crawler is already running or the schedule state is already <code>SCHEDULED</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartCrawlerSchedule",
      "responses": [
        {
          "uuid": "811dd752-cbcd-4783-95cd-f293bcec71b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e62a7695-b13a-485a-a3fa-f736e2282f5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9605830f-8e4c-410c-bf11-de76f6000fcf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d297b871-e345-49f1-8fb4-fc4a49fbec5c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21d2a079-c415-49a9-b876-6a1b9cbee21f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "NoScheduleException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fbc8373-d8a1-4bef-bc33-ae39cf2efc19",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "930d9157-301d-4d71-b229-e422dfb74f50",
      "documentation": "Begins an asynchronous task to export all labeled data for a particular transform. This task is the only label-related API call that is not part of the typical active learning workflow. You typically use <code>StartExportLabelsTaskRun</code> when you want to work with all of your existing labels at the same time, such as when you want to remove or change labels that were previously submitted as truth. This API operation accepts the <code>TransformId</code> whose labels you want to export and an Amazon Simple Storage Service (Amazon S3) path to export the labels to. The operation returns a <code>TaskRunId</code>. You can check on the status of your task run by calling the <code>GetMLTaskRun</code> API.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartExportLabelsTaskRun",
      "responses": [
        {
          "uuid": "df7c79e6-6688-4a6c-a60a-06a24e3afc38",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37031fbf-63c1-4165-9fc1-52f806e28ec2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c0209f6-287f-4bd1-99c6-65302a6b12c8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a76ed34-82e2-4609-9a93-39db027126f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3afa4dd0-c184-4fba-a7f7-12c6d7534aea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b6d36e51-60bf-45f5-9d89-7f716846615e",
      "documentation": "<p>Enables you to provide additional labels (examples of truth) to be used to teach the machine learning transform and improve its quality. This API operation is generally used as part of the active learning workflow that starts with the <code>StartMLLabelingSetGenerationTaskRun</code> call and that ultimately results in improving the quality of your machine learning transform. </p> <p>After the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue machine learning will have generated a series of questions for humans to answer. (Answering these questions is often called 'labeling' in the machine learning workflows). In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” After the labeling process is finished, users upload their answers/labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform use the new and improved labels and perform a higher-quality transformation.</p> <p>By default, <code>StartMLLabelingSetGenerationTaskRun</code> continually learns from and combines all labels that you upload unless you set <code>Replace</code> to true. If you set <code>Replace</code> to true, <code>StartImportLabelsTaskRun</code> deletes and forgets all previously uploaded labels and learns only from the exact set that you upload. Replacing labels can be helpful if you realize that you previously uploaded incorrect labels, and you believe that they are having a negative effect on your transform quality.</p> <p>You can check on the status of your task run by calling the <code>GetMLTaskRun</code> operation. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartImportLabelsTaskRun",
      "responses": [
        {
          "uuid": "147bbaec-3650-4166-ba46-705f40bfb969",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6952039-df54-4116-83ce-931fd154e999",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db3bd9e-21e4-47d7-99f9-c26eb0680ba4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d9e520-fb07-43ef-976a-5655de717b99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05eb2c94-2cc0-4752-ab65-1f7d14ab45a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2df9749c-9b48-4705-a21e-b3caa5aa5cff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6fcf4356-dd50-4b01-9d32-1216b42367a2",
      "documentation": "Starts a job run using a job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartJobRun",
      "responses": [
        {
          "uuid": "9b1cda02-43d1-4a5e-8e61-96076eed3a74",
          "body": "{\n  \"JobRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b359abaf-24ca-4b8b-a93e-68bf59fd89ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58d29454-9ba9-4ce2-baf6-d64be65dfcf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f05cf5ff-7f74-4b84-87dc-1f7776c1078b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c423dcb2-9ebd-42b2-a66f-d100bc2a18bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1a65162-92f7-4549-b77b-ff60608bfeaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c0d56cd-99ae-4a70-93de-7e5323e3e99f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8202daa0-d1ca-4316-9a51-c99ce91b87b8",
      "documentation": "<p>Starts a task to estimate the quality of the transform. </p> <p>When you provide label sets as examples of truth, Glue machine learning uses some of those examples to learn from them. The rest of the labels are used as a test to estimate quality.</p> <p>Returns a unique identifier for the run. You can call <code>GetMLTaskRun</code> to get more information about the stats of the <code>EvaluationTaskRun</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLEvaluationTaskRun",
      "responses": [
        {
          "uuid": "a67287fe-10c2-4af5-b5ae-13e9d92a2de7",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5ddcb93-dc25-41a9-baff-7218b8799fd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27177705-46ad-4571-ad4b-16f8e8d8d2c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e09ae845-01a1-4f29-b27a-d4740290fd84",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ceb0b84e-1f4f-49a6-8ead-9d3f9fa601cd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0db0fe3-89f4-4cca-8725-1e164dd64743",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "388644a9-99f8-4357-b6d9-4d00e55c7e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "MLTransformNotReadyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7237a994-dcb9-429d-a26d-df421478733b",
      "documentation": "<p>Starts the active learning workflow for your machine learning transform to improve the transform's quality by generating label sets and adding labels.</p> <p>When the <code>StartMLLabelingSetGenerationTaskRun</code> finishes, Glue will have generated a \"labeling set\" or a set of questions for humans to answer.</p> <p>In the case of the <code>FindMatches</code> transform, these questions are of the form, “What is the correct way to group these rows together into groups composed entirely of matching records?” </p> <p>After the labeling process is finished, you can upload your labels with a call to <code>StartImportLabelsTaskRun</code>. After <code>StartImportLabelsTaskRun</code> finishes, all future runs of the machine learning transform will use the new and improved labels and perform a higher-quality transformation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartMLLabelingSetGenerationTaskRun",
      "responses": [
        {
          "uuid": "4adbe3d5-b3cf-425f-ba1b-a49e32140089",
          "body": "{\n  \"TaskRunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bca4e47-0124-4501-a867-c4f944faead8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7728a523-9b8c-4dc2-905e-ecd269f48f79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43a5ea4b-d955-42df-adca-69c0b140c419",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ae004bb-ea43-4a39-b228-03f90c6c3c5a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b8e6ae-aea6-4f15-867d-e36a902f11d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a0472e2d-7789-4211-b646-2dbe21b0c1b3",
      "documentation": "Starts an existing trigger. See <a href=\"https://docs.aws.amazon.com/glue/latest/dg/trigger-job.html\">Triggering Jobs</a> for information about how different types of trigger are started.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartTrigger",
      "responses": [
        {
          "uuid": "04c284d6-0d8d-477c-a061-c7b911107aed",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b1273a6-c3bd-4a42-b408-8c37faf7bd12",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b3d59f5-316f-4130-93f1-13b4344031e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "967c25ab-7957-4d96-bd80-a27ae42e81cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a525b63-6256-4b68-b433-215960399ac1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb98fa54-d8df-46f2-b027-bc20932a91df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a084275-6901-44da-9ecc-e44f6e8fbbf9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a6bcb9dc-da3a-4fed-8c9b-c7f25a9013fa",
      "documentation": "Starts a new run of the specified workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StartWorkflowRun",
      "responses": [
        {
          "uuid": "fcc330c3-d7fa-4d1f-87ee-c67340dd4dc1",
          "body": "{\n  \"RunId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2fcf58c1-c973-4a6d-b4e7-597835e13e5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60345597-b57b-4a30-aa17-9ff5756ba69b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4119013c-913b-4652-a4a3-fb3515ab2b67",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d180d72-de35-4148-b403-d721f97928c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89042795-a988-4e9a-ba0c-b7ac5a92031f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feca8490-aa43-418d-828b-addc16c2f0ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentRunsExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0980553-741c-4be0-9691-59997623fb6f",
      "documentation": "If the specified crawler is running, stops the crawl.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawler",
      "responses": [
        {
          "uuid": "9e0d72cc-9cc8-4545-8b3e-b3c426e71397",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fab1096c-bd11-4e2c-a9a0-8f6de7530c5e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f31a65b-7f64-4e93-8906-85d29ff09082",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "CrawlerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a054d4bc-86db-4bd8-bba4-4e255a721f9d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "CrawlerStoppingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bc68207-738d-4617-94f2-3749aca3f6a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1d4ee50-83d5-49d1-9ed7-fbd5db0fa76a",
      "documentation": "Sets the schedule state of the specified crawler to <code>NOT_SCHEDULED</code>, but does not stop the crawler if it is already running.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopCrawlerSchedule",
      "responses": [
        {
          "uuid": "159e3526-1d50-4fa6-a0a7-7bd5860fe549",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbbc150e-d009-4f12-90f4-f83a8206622e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17850987-94b6-405f-8f53-e6ddde73fa17",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "SchedulerNotRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbe95416-c568-463f-9482-586b8d0cbdd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c03ad5f1-71ce-4e3b-97f9-c0393ee820f2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47e236ce-8159-49d4-87af-76e6c9ed3f80",
      "documentation": "Stops a specified trigger.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopTrigger",
      "responses": [
        {
          "uuid": "3b6c76ea-4813-4385-bf2c-5dad76dcd8b6",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6452f5a3-0a8d-466e-9b70-4551bde73dcd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af8794d6-7f8b-456b-86f8-39e0ad10132a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3403a9b8-a94f-4d56-89f2-d671b24b7b93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41a613c5-2527-44d3-931b-120547354933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d74b4333-125c-46a0-966e-8daa4542184b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2405e4a-527d-47c8-b1f9-14bd0e87d4a5",
      "documentation": "Stops the execution of the specified workflow run.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.StopWorkflowRun",
      "responses": [
        {
          "uuid": "a9a6c505-d20f-4d82-a8ad-ddb036e425c9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12970ae4-fc4d-4e5b-8522-667665585a6a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f8b0b60f-3eb6-4b47-a3ff-6bd67d099f51",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d212c4ae-9dcc-46f3-ba19-00d51cd57304",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57ba6fe0-46e1-422f-8c50-c48c13bc20f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "169febdd-b0fa-45e1-85fe-5f95953c199e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "IllegalWorkflowStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "19d742b8-6395-4226-ab19-351fe148da5e",
      "documentation": "Adds tags to a resource. A tag is a label you can assign to an Amazon Web Services resource. In Glue, you can tag only certain resources. For information about what resources you can tag, see <a href=\"https://docs.aws.amazon.com/glue/latest/dg/monitor-tags.html\">Amazon Web Services Tags in Glue</a>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.TagResource",
      "responses": [
        {
          "uuid": "24409109-63d0-4c82-9587-b13d37cd5e95",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62c7184d-cc98-4fa6-a009-42a98ba195f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a05d5cf5-aece-49a9-8868-a9557462fab0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a06086df-4104-4294-bf98-82f5d8365fea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a6addfd-8930-4e1c-9226-64f0295fd9a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7ea886ee-84ff-4c3a-9c91-d4f85840af73",
      "documentation": "Removes tags from a resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UntagResource",
      "responses": [
        {
          "uuid": "42ac6c58-e00c-4205-97ce-6dc647f1c0d0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba39e794-b521-43f7-bc6a-8c760d20d9ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e76d00d1-0dd2-4518-9dc3-d6951943f1f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e18080e-fb93-4078-a532-dbd72a130264",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b8baa49-b363-4da1-b483-7926542489fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dfdb3ac-7eca-43c3-b636-f562fb012c08",
      "documentation": "Updates a registered blueprint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateBlueprint",
      "responses": [
        {
          "uuid": "e6a5f455-5d01-434d-a077-bf5ffec86559",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "126d681e-1ff8-40e1-ab75-1f1f9e1cc008",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ceb0403-0148-4c95-a8c4-3def21e03904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3bd3cd5-daf3-41c2-b8c8-c709ceb4676e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1a0dda0-a247-4a43-9bd3-a90f466c3ce1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e11dda5d-9a31-476d-985f-d31b2c090f13",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9944445c-b35b-4480-99cb-0fcea9af15d7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "IllegalBlueprintStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afb4e257-5b8b-4dc6-824f-31b4f30de7d3",
      "documentation": "Modifies an existing classifier (a <code>GrokClassifier</code>, an <code>XMLClassifier</code>, a <code>JsonClassifier</code>, or a <code>CsvClassifier</code>, depending on which field is present).",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateClassifier",
      "responses": [
        {
          "uuid": "f5982214-d208-4456-ac69-a96120b793a8",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f3122c86-e2e1-430e-a6de-ecb1221f1f69",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de4ffa06-a46f-48c9-9c6d-be90a9fbe3e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f26b0269-ec8d-4088-820e-88f010dade38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93785ecf-4567-4a0a-ad00-44a1e935c322",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74fae0c0-2ebe-41c5-b55d-2e8d454aa787",
      "documentation": "<p>Creates or updates partition statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdatePartition</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForPartition",
      "responses": [
        {
          "uuid": "b6b52462-4471-4ecd-aa31-530589b4e8b2",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'random.number'}},\n            \"NumberOfFalses\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.float'}},\n            \"MaximumValue\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.number'}},\n            \"MaximumValue\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee37237f-36ec-465c-9704-264d9fe0ff58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9994406-1da6-4062-b2bc-26d8f7d74f81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "833f3ba7-1fa3-4ad7-896a-5de772d821c2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9223fc43-38e3-4892-a31c-6f1a7c950a8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "843f0b78-92b5-4d53-9c32-b5558cab3972",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "52ee5878-27e6-4a8d-8264-a1808dbe1a7d",
      "documentation": "<p>Creates or updates table statistics of columns.</p> <p>The Identity and Access Management (IAM) permission required for this operation is <code>UpdateTable</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateColumnStatisticsForTable",
      "responses": [
        {
          "uuid": "f7913001-09a0-4151-8507-87f9ce216457",
          "body": "{\n  \"Errors\": [\n    {\n      \"ColumnStatistics\": {\n        \"ColumnName\": \"\",\n        \"ColumnType\": \"\",\n        \"AnalyzedTime\": \"{{faker 'date.recent' 365}}\",\n        \"StatisticsData\": {\n          \"Type\": \"\",\n          \"BooleanColumnStatisticsData\": {\n            \"NumberOfTrues\": {{faker 'random.number'}},\n            \"NumberOfFalses\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          },\n          \"DateColumnStatisticsData\": {\n            \"MinimumValue\": \"{{faker 'date.recent' 365}}\",\n            \"MaximumValue\": \"{{faker 'date.recent' 365}}\",\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DecimalColumnStatisticsData\": {\n            \"MinimumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"MaximumValue\": {\n              \"UnscaledValue\": \"\",\n              \"Scale\": {{faker 'random.number'}}\n            },\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"DoubleColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.float'}},\n            \"MaximumValue\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"LongColumnStatisticsData\": {\n            \"MinimumValue\": {{faker 'random.number'}},\n            \"MaximumValue\": {{faker 'random.number'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"StringColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}},\n            \"NumberOfDistinctValues\": {{faker 'random.number'}}\n          },\n          \"BinaryColumnStatisticsData\": {\n            \"MaximumLength\": {{faker 'random.number'}},\n            \"AverageLength\": {{faker 'random.float'}},\n            \"NumberOfNulls\": {{faker 'random.number'}}\n          }\n        }\n      },\n      \"Error\": {\n        \"ErrorCode\": \"\",\n        \"ErrorMessage\": \"\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc23a8a0-20db-4e50-87ef-05d53e081293",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e8ed53e-7b16-4946-ba50-3053775c99fc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b37c4793-1c03-4d39-bf0f-ea871ba799a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb397b89-12f5-4371-a0c0-2bdfe49afbc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e31ee209-8026-47fd-bf2e-fa36d51c6ac7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "362795c5-f3fa-4835-ad87-ce9062bc10f1",
      "documentation": "Updates a connection definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateConnection",
      "responses": [
        {
          "uuid": "8866c871-fd1c-4bf8-a48a-6c70137b8477",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "feed7a77-0523-4bcd-8256-c1f82a021b8d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd7935d7-2da2-4cff-8806-ffe029a1da89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47bd78f3-0cb1-4581-9723-7611be9a6627",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04464baf-8c4f-4d55-a0cc-9fd5ba09a4a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f30b83e9-7b1d-4087-98f7-781113bb9c7e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0676dcfd-9dc0-4533-b8ee-5776a5bfb30d",
      "documentation": "Updates a crawler. If a crawler is running, you must stop it using <code>StopCrawler</code> before updating it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawler",
      "responses": [
        {
          "uuid": "06246802-7e6b-45f8-8d50-ba65f01180a7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "908adf4d-90f7-4006-979f-70fe8c67ec30",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a564891b-8c76-4292-b62e-b66b0f734454",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa3f8876-0511-4af1-a3a2-0b32a5f54019",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a796a6c5-4d8c-478d-b308-1b410e9a30f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "CrawlerRunningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf17fb36-811c-462a-880e-1c905ed16571",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c49f6eb-c1da-4cde-bdfd-33cf5bf3c1d0",
      "documentation": "Updates the schedule of a crawler using a <code>cron</code> expression. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateCrawlerSchedule",
      "responses": [
        {
          "uuid": "10f3488e-d848-4dd3-a9a1-5402126d963a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcfd5c4e-d01c-4d40-b9d7-3fb36b05ebb7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96f5451b-5bdd-432c-9ca1-234a06579a96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72de812b-82ed-40e6-a81e-65b2fbfabf80",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "VersionMismatchException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9a89a14e-9852-49c7-ba9b-7d523fbbf8da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "SchedulerTransitioningException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0d32274-dc84-4d78-818c-e316a8f7d8a3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c52f0805-22b0-474a-907a-50f23226c429",
      "documentation": "Updates an existing database definition in a Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDatabase",
      "responses": [
        {
          "uuid": "7de88941-93ca-4171-a828-50daf2a316ca",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdbc28a7-fab0-4bd3-a372-e05fae1edc5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "009bd1a5-b2bd-4b09-92fd-a2e878644cbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e0fafe2-d549-4c4b-b284-b51b83b63670",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54bd39a9-2c80-4fa2-9724-11960d3bfbc7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "686c1677-ff40-4b39-8c50-f2d2b339e7ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c3e4a5f-8d6e-4edb-b6f9-5bbe5af32b6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aed45dc3-388e-4d06-81fe-6749edb82db7",
      "documentation": "Updates a specified development endpoint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateDevEndpoint",
      "responses": [
        {
          "uuid": "83d0f009-e048-4f16-ae1f-552c809c25fd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9bc9ba3-65fe-48d1-8c45-d1a2cd432825",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae19a83d-0183-4e75-9115-a71e94716886",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "def22dd9-93e3-4b75-8598-913ff57ea936",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89689226-8415-4d34-9a7a-0d59c0625c71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b6c3635-e2aa-4b3b-a9e8-73e616784a9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bef84d91-41bd-47b6-9411-c5d76f2bebea",
      "documentation": "Updates an existing job definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateJob",
      "responses": [
        {
          "uuid": "fefa1087-fb4f-47c8-a72b-421a86209a87",
          "body": "{\n  \"JobName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01119ef0-6f05-47eb-8233-8068289ea42b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d109ed22-299a-443d-9a20-7de91ef945d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "267f1fda-4618-4dfd-a3aa-e9cbffba5954",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3f03058-0f52-4693-bbdd-24610107f93c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a051f0a6-4b96-46af-bedf-ac48c7e4b981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f019f0e-33db-4a47-8760-21e375a76649",
      "documentation": "<p>Updates an existing machine learning transform. Call this operation to tune the algorithm parameters to achieve better results.</p> <p>After calling this operation, you can call the <code>StartMLEvaluationTaskRun</code> operation to assess how well your new parameters achieved your goals (such as improving the quality of your machine learning transform, or making it more cost-effective).</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateMLTransform",
      "responses": [
        {
          "uuid": "cddb349f-597b-4bcd-9b28-ef5c1cb1bb36",
          "body": "{\n  \"TransformId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23985cbf-13f3-4e51-ab9a-dc740efd960e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a31fc39-259c-4400-b12d-d4e0f88f0abf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eebff7e-2ab5-4306-b7f9-2f488afd1520",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8769f2f4-b79a-4325-9f75-61748c56d5e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "602684e2-d8ba-4caa-aa95-edf5509602a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5f08bdb4-a033-4618-88bc-cdfd5630d426",
      "documentation": "Updates a partition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdatePartition",
      "responses": [
        {
          "uuid": "06290185-77f2-4cc9-83ad-b2923371fbf7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbcde708-6bce-45fb-85a1-b1d6807fd280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "172bc54c-d015-4ee9-beba-a68b3d2211e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5b566d8-47b9-41e1-b1d6-15fcaa6fe1e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33a3e65f-7cba-4df5-9b43-7e0d1d124bf0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a62b979-c03e-4d96-913a-2196f19c8111",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f578592e-a29b-4223-8796-94d1745d9944",
      "documentation": "Updates an existing registry which is used to hold a collection of schemas. The updated properties relate to the registry, and do not modify any of the schemas within the registry. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateRegistry",
      "responses": [
        {
          "uuid": "10946f11-39f7-434c-96fb-49decad4255a",
          "body": "{\n  \"RegistryName\": \"\",\n  \"RegistryArn\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "181d36d6-5c55-4ff5-87ea-0620bef69ebb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bc941a0-a6c3-4648-be08-d0b3b3fe44e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc6e1c4b-346c-4c60-a138-fe93f8706980",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0f25f26-7790-4d46-b423-13c4531ab635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1c75ab3-ee87-4915-9110-d3dc47f67e45",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "02b10325-4373-434c-9287-519511a9b218",
      "documentation": "<p>Updates the description, compatibility setting, or version checkpoint for a schema set.</p> <p>For updating the compatibility setting, the call will not validate compatibility for the entire set of schema versions with the new compatibility setting. If the value for <code>Compatibility</code> is provided, the <code>VersionNumber</code> (a checkpoint) is also required. The API will validate the checkpoint version number for consistency.</p> <p>If the value for the <code>VersionNumber</code> (checkpoint) is provided, <code>Compatibility</code> is optional and this can be used to set/reset a checkpoint for the schema.</p> <p>This update will happen only if the schema is in the AVAILABLE state.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateSchema",
      "responses": [
        {
          "uuid": "89b6e7ed-de94-4bc6-a76c-6d6d705b63a4",
          "body": "{\n  \"SchemaArn\": \"\",\n  \"SchemaName\": \"\",\n  \"RegistryName\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f37954f0-225c-4cf5-bf0c-7ae5744c3691",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3dabdce-4781-470c-8dca-405b07885830",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "AccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c48001-445a-4686-b873-a9383a302b3f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "423deea3-74f4-417b-b45c-c454be7600c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68fbaba3-f440-4981-a7e0-f20580971e91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbd70069-877f-4117-91c9-97216de0283e",
      "documentation": "Updates a metadata table in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTable",
      "responses": [
        {
          "uuid": "ce83b1fa-eb22-4ed6-9601-5ace1c21e24e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1df4f28d-c658-48ad-8682-e21cf49dbd05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5eb3bb12-b062-4739-b70d-2f9f6fcf7cf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ad606fb-8f88-461a-a0d9-bd70d309d403",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9c2c18e-9791-4617-a909-b6f60e1cd4f5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f46c4ce-db66-426b-82fc-dde4291d630a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4d5c4909-e436-4d79-b498-576fa038c6fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "ResourceNumberLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccf9578e-4b81-4e96-a3b1-10bfadea25eb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 486,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5975df60-4f20-4560-bb37-119b8798d6a6",
      "documentation": "Updates a trigger definition.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateTrigger",
      "responses": [
        {
          "uuid": "25eecae7-44ae-4966-9bc1-6843c84da276",
          "body": "{\n  \"Trigger\": {\n    \"Name\": \"\",\n    \"WorkflowName\": \"\",\n    \"Id\": \"\",\n    \"Type\": \"\",\n    \"State\": \"\",\n    \"Description\": \"\",\n    \"Schedule\": \"\",\n    \"Actions\": [\n      {\n        \"JobName\": \"\",\n        \"Arguments\": {},\n        \"Timeout\": {{faker 'random.number'}},\n        \"SecurityConfiguration\": \"\",\n        \"NotificationProperty\": {\n          \"NotifyDelayAfter\": {{faker 'random.number'}}\n        },\n        \"CrawlerName\": \"\"\n      }\n    ],\n    \"Predicate\": {\n      \"Logical\": \"\",\n      \"Conditions\": [\n        {\n          \"LogicalOperator\": \"\",\n          \"JobName\": \"\",\n          \"State\": \"\",\n          \"CrawlerName\": \"\",\n          \"CrawlState\": \"\"\n        }\n      ]\n    },\n    \"EventBatchingCondition\": {\n      \"BatchSize\": {{faker 'random.number'}},\n      \"BatchWindow\": {{faker 'random.number'}}\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5eaf6e6-32d0-4e52-9df3-eca9a43961ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "248cd633-fdde-4b7d-b33c-99b5abc8bb10",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "896b694f-b483-4905-be75-5eb3d581536c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77036074-919a-4734-a4b0-6b564112cc0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7c5245b-f4d1-4396-ab31-7c41524a3a4f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e2705f2b-6ac1-45a2-affa-ab7268b8e60c",
      "documentation": "Updates an existing function definition in the Data Catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateUserDefinedFunction",
      "responses": [
        {
          "uuid": "f2b4c323-9a79-4102-86f4-a85aff1a1ec5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "359d62c6-c3d0-48e8-89b9-9fb4476ae101",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "444e3ba5-3712-4952-8a8e-deda54990182",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21122ad0-ac87-4262-84b4-09fc3de9909e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ad5ffe5-70ff-4518-883c-d624b7e0ad5b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f46431cf-90d2-4883-b88a-a6ea27f2314a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "GlueEncryptionException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3d6298f2-e9f6-4533-8add-fdf880b99145",
      "documentation": "Updates an existing workflow.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSGlue.UpdateWorkflow",
      "responses": [
        {
          "uuid": "928515ed-b99f-4957-be45-55af939dc28f",
          "body": "{\n  \"Name\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e54838a-0419-4fa5-95b3-7805e2eb0224",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidInputException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74cbb6cd-2863-4a51-b643-7777b33af539",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "EntityNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "029a4f6a-38fe-440b-9ba7-a9658dfae070",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalServiceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1267da2-0f73-40f5-a18a-7c066384e0ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationTimeoutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c54fbeb8-699f-4f27-8f61-dde850bce742",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentModificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}