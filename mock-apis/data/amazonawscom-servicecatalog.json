{
  "uuid": "17328436-79a0-4bd2-af36-22a5bf33b958",
  "lastMigration": 19,
  "name": "AWS Service Catalog",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "4ad82e21-79c4-4500-8e13-4739b8b2038f",
      "documentation": "Accepts an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare",
      "responses": [
        {
          "uuid": "8a4de0c5-4970-46de-9e5b-844034fcd8f1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9486912-03e2-43d8-a4ba-8f9535d55b15",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a488f861-f171-4c2f-98ce-3486a03f0449",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec4980e1-c790-49de-9106-1ec4233425ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eac9a0fa-149d-4006-b0d8-598d3798bfdc",
      "documentation": "Associates the specified budget with the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource",
      "responses": [
        {
          "uuid": "1636cb13-dd89-4210-bcc8-3fa82870080d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec9c1597-218d-49ae-8da5-d9784a2da635",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3137aa9b-4328-4f94-8fb4-6c8885945393",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22cea02d-7887-404a-8834-3e2a9568f78c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "089b5f57-61e6-44b1-bafb-6acdd62dde9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "031094b0-e5a5-42e8-b87e-ad52f17eccca",
      "documentation": "Associates the specified principal ARN with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio",
      "responses": [
        {
          "uuid": "c9e19631-389b-43a0-8bf5-356508aae772",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c72e116d-f2a0-451b-899a-dd29e99d391f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a7b98d5-85d8-4439-8ca8-69c6c4e4afc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "065b2915-bffd-472c-bb72-4fe254f210da",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8468fbe1-b416-4348-82bf-f9bbb2d2447f",
      "documentation": "<p>Associates the specified product with the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio",
      "responses": [
        {
          "uuid": "a6d96a52-3600-4894-bd8b-173325e18d1a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fedff8bb-5be0-40fa-a17b-cced5982c296",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "460bf247-66c9-4933-87e6-8ef19e8f8107",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd42453e-4be6-4e5d-96b0-ea4f0ed306d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13933aec-a287-41ef-8142-2364c750dc17",
      "documentation": "Associates a self-service action with a provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "4781f90b-8ba9-4086-b314-2360ccda19a3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43a55add-a5cf-42a5-9789-f0fa61502918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d71fb576-7a6c-45fd-a067-d44837348abf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39958c8c-da49-4dea-a6b4-b5f0ce3705e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34547a43-8552-47d5-ad83-010eb55c21c1",
      "documentation": "Associate the specified TagOption with the specified portfolio or product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource",
      "responses": [
        {
          "uuid": "daf43dd2-1950-4866-b51f-2cd1f21c4a15",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0537a0a5-9b76-4739-8ad9-601bf35d2d57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfd8514e-dd22-4622-8e99-79f9ac547079",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6753f861-5927-4915-8b4b-e005b7e6ccc6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "417578c0-4f90-4801-953e-625e569006ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd782d6c-344d-4e44-8602-68a2b775e549",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c119f868-0da7-41a8-9c88-df7e1a124b55",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c88e0d28-15af-46b2-8300-0a5e9cda50f3",
      "documentation": "Associates multiple self-service actions with provisioning artifacts.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "dcd00c97-b25e-4ee0-bdb5-7d7962560674",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b08e4c37-dd0d-43da-8b17-c5c9b276c1c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca2735da-85ff-46d7-ab55-7878eb08261c",
      "documentation": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "de7825e5-e3f5-4e8b-9528-3fee046ccd87",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbcf6d8f-099b-425d-bfda-05b413323130",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "127066ed-ff4c-4afb-b71a-9e3c93facbe2",
      "documentation": "<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct",
      "responses": [
        {
          "uuid": "cd80918f-6005-46e9-8694-8d748a1f5676",
          "body": "{\n  \"CopyProductToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a258212-d385-485b-a537-2c1f7023ad75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd70e518-6aee-46d9-a6c6-b9ac203ef17b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34716ee3-bc7c-476a-8e81-bf947a3ab34c",
      "documentation": "<p>Creates a constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint",
      "responses": [
        {
          "uuid": "b78bf3fc-0a57-47f7-b9d5-ff99c80bfc39",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "359a833d-2cbb-482e-999d-38226d4b386e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e23d3f26-9d8f-4355-a273-8148a9c115a8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3631570c-8925-4056-b84b-8914c16ddf21",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f013604a-f698-4d92-822b-b2fe5acbc0de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9269113c-c3fb-4195-b944-0c8d5e61c19d",
      "documentation": "<p>Creates a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio",
      "responses": [
        {
          "uuid": "e71099e8-bbcf-467c-ad1d-40eb5a906381",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bc2368b-c7ca-4952-ba60-4fe03c6834ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd162d3e-b008-41f7-b581-9e08e3f78646",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a5f6eb4-f5af-42e8-a27b-863ffeb2e170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c9a177b-d8ba-46fa-a8da-3f441fffa7c1",
      "documentation": "<p>Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the management account of an organization or by a delegated administrator. You can share portfolios to an organization, an organizational unit, or a specific account.</p> <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p> <p> <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p> <p>You can't share a shared resource, including portfolios that contain a shared product.</p> <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare",
      "responses": [
        {
          "uuid": "5aa4ed0c-c9fd-4fe1-9dd0-95e0d3b7eb0e",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43e2bb94-d369-45b2-9ac3-d412d60b4c2c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92cc2ab4-03f9-4da4-8de6-ce4cc575e91e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "137a4f0b-60a1-43a3-adb8-9d6de6c6580f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3833db8-ed48-4704-abe4-8868b340527b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea6e1102-9a65-4ef7-b14a-efb0c20eb254",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f776f7c8-056c-404c-8046-5d6cdd43160b",
      "documentation": "<p>Creates a product.</p> <p>A delegated admin is authorized to invoke this command.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct",
      "responses": [
        {
          "uuid": "9f9ac6f1-6987-4057-bbfe-2ed82805917a",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f390912c-03f1-4d9e-8787-6d0cbaeb1f81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "831ab1ec-0c2f-43e9-ab9e-8e57a8d3e5d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e42cebfd-54b7-4600-a520-b16f72ee546b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d34963c1-9702-4879-b40a-511d889c8311",
      "documentation": "<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan",
      "responses": [
        {
          "uuid": "ee9ac4f7-ea06-44da-ba7c-40ddd6870a9c",
          "body": "{\n  \"PlanName\": \"\",\n  \"PlanId\": \"\",\n  \"ProvisionProductId\": \"\",\n  \"ProvisionedProductName\": \"\",\n  \"ProvisioningArtifactId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "746260cf-949f-47e0-b905-2af2c78b301e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ab68c8e-aeb0-4831-9d98-a8a8f1d4d724",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91c1236a-0430-4452-b82d-af82831def34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cd829039-996f-4077-b14c-146a24e9c8ff",
      "documentation": "<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact",
      "responses": [
        {
          "uuid": "0fdeacb7-7b89-4240-926e-762158653c63",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a072394-c64b-44b9-8240-8a5f896a3aee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46c4f587-0a44-495a-8318-f934b6c79b14",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84ffb8ab-6cb2-4763-8077-d7e68c389c68",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe302973-28ec-4f95-952f-dd8d04bd9d63",
      "documentation": "Creates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction",
      "responses": [
        {
          "uuid": "07adaf0e-feca-4738-8e65-27c3a045f9b3",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b73d072-0aed-4dec-a9c5-0d30788a9ab0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e445ccf7-0ec4-4425-99b2-ad08c00d95a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f050b081-ca5f-49cc-83e5-d3f360dfaee6",
      "documentation": "Creates a TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption",
      "responses": [
        {
          "uuid": "3c514838-4425-46b7-87d0-dd8bd5770331",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c21397f6-12e8-45ff-a22e-4e527226c1ba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6218884-965e-4676-9fba-97b47e303475",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69d5144c-ca78-44d7-84a4-3a8089f866dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5cead394-e6c7-41f2-aef3-3182df83c938",
      "documentation": "<p>Deletes the specified constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint",
      "responses": [
        {
          "uuid": "05cf186b-6fb9-465a-b1ce-a21b8b3e7aa3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b697b8-97a4-438b-be21-56774ecef978",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30b6984a-07d1-4349-80b8-f79ace88d8a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5d5487b5-c067-4e1f-800f-363991c22d06",
      "documentation": "<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio",
      "responses": [
        {
          "uuid": "45fb1f92-1eb5-4aac-93f8-aacc9c10b819",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9cf19d2f-1589-4ddc-9dfd-c75d1ba6bca9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e9af815-2eab-4fa7-9f05-aac6aca033fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "329fb626-a271-48ea-b123-6db43fc9bb18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ae415e4-dfed-431e-a8b4-898582da583d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bbc3b845-cabb-4c0c-a2d3-4f6ffb050d87",
      "documentation": "<p>Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the management account of an organization or by a delegated administrator.</p> <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare",
      "responses": [
        {
          "uuid": "ec033f11-13fb-4e90-8c7b-eafa7ab0ebc0",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "912250b8-988c-4f4f-afb1-620ba7a57c65",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "18d8f98f-b0f1-43d2-a427-49da0f0b0095",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6360a2b9-850b-494e-944c-215cccaf8eff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "313cf29c-2940-4c71-babd-dcbcf74e40df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c83e903-78e1-4baf-8240-75bfcb98b9e2",
      "documentation": "<p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct",
      "responses": [
        {
          "uuid": "e5f379c8-09cb-48a8-9e3a-f1a0197bed5c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7db980c3-92f8-4d3d-a338-70aca256b505",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "634f8167-0bc0-483c-93b9-6ca6451e7d44",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70e01bfb-835c-40ae-a232-468a512598e8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28f6b173-05c1-4fa1-9ba8-f71a61a31150",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb567c73-dc4e-432d-8ace-2a95f327716e",
      "documentation": "Deletes the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "e93cb14a-dd55-4c85-930e-79b0cb5c77ad",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56b6c1a-a491-4984-9597-3ef247dbf6f6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2bcd276-b816-4823-9e09-246f3c3371a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0f5e0897-c38b-42c7-a7a7-ef90044cb4d3",
      "documentation": "<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact",
      "responses": [
        {
          "uuid": "4ceab1d3-c3b3-45c1-bae2-3127b38a31ac",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "551813b9-c311-45df-82c8-bce77d872a36",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7531014-0857-4b58-b596-505a845ba57c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1b03af7-9565-4da6-8449-d3df826ae504",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "47a24e1b-d929-4aa5-8df7-5e2129f5cee8",
      "documentation": "Deletes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction",
      "responses": [
        {
          "uuid": "f64da55d-2655-4432-bfa4-40396091468c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "234408a4-de1b-4477-9c78-53994f39a62b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f1a76c-2fab-4fca-96f5-99f9dddd850b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a212e9d4-117b-4d1a-b3ed-a592f3f66d5b",
      "documentation": "<p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption",
      "responses": [
        {
          "uuid": "9b003267-257b-4886-a200-77de663977bc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2577d08-b0a0-41c5-bb51-808d93c06e47",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baddb3bb-1c0a-48ab-bead-dc46e016aa4a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97d2b3fb-d3bb-46b2-94a4-017847eaf959",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "51ab1d8e-d670-43d6-8098-5744e273f422",
      "documentation": "Gets information about the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint",
      "responses": [
        {
          "uuid": "a2f0ea82-aac9-4b2e-a573-6082f372707f",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97d370cf-6a96-4aa4-8773-e429387fee70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8865b13e-1af9-4c76-bae2-58d5a21659ab",
      "documentation": "Gets the status of the specified copy product operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus",
      "responses": [
        {
          "uuid": "aba60c3b-8bd6-47fa-b79d-42896f5833c8",
          "body": "{\n  \"CopyProductStatus\": \"\",\n  \"TargetProductId\": \"\",\n  \"StatusDetail\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11849d72-29f2-4053-8043-6c3ed1092981",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a1b65e1f-fd36-43dd-9b95-01afa93eb3e9",
      "documentation": "<p>Gets information about the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio",
      "responses": [
        {
          "uuid": "cb146e4e-4a43-425e-893f-72f7f046ea70",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d5cdb77-661d-4c9e-b4b1-53d62da795b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fe088d39-7e6f-482b-b8e0-7109351e109b",
      "documentation": "Gets the status of the specified portfolio share operation. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus",
      "responses": [
        {
          "uuid": "d403c964-0269-469a-94f2-ef0169f82915",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"PortfolioId\": \"\",\n  \"OrganizationNodeValue\": \"\",\n  \"Status\": \"\",\n  \"ShareDetails\": {\n    \"SuccessfulShares\": [\n      \"\"\n    ],\n    \"ShareErrors\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Message\": \"\",\n        \"Error\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a69c341c-9054-40c4-8df8-2b10a9a7f476",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bf2919a-172c-43c0-bb8e-78d77f706949",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a8aeb55-fd31-4c0b-9aed-be62dc49257c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1a6e1b46-622f-4cae-b1a0-c98951bae302",
      "documentation": "<p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p> <p>You can use this API to determine which accounts or organizational nodes this portfolio have been shared, whether the recipient entity has imported the share, and whether TagOptions are included with the share.</p> <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShares",
      "responses": [
        {
          "uuid": "4b26b31f-1db7-4efe-9fd1-9e5a613ac1be",
          "body": "{\n  \"NextPageToken\": \"\",\n  \"PortfolioShareDetails\": [\n    {\n      \"PrincipalId\": \"\",\n      \"Type\": \"\",\n      \"Accepted\": {{faker 'random.boolean'}},\n      \"ShareTagOptions\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9b57b4e-35d7-4612-a378-d5af6f50032e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd126578-a8ea-4942-acfa-7d97aabad8ff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fd17c110-b2d4-4918-92b3-af355d90e58d",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct",
      "responses": [
        {
          "uuid": "9fc75721-c901-4f7d-8200-69562f20a41b",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'random.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"LaunchPaths\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01c31102-35bf-4cd6-906c-be6fd615b695",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bc5d556-8ec1-4df4-b3ea-f618c2d12fd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "169dec80-3b02-4ff1-b071-d515dea42ac9",
      "documentation": "Gets information about the specified product. This operation is run with administrator access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin",
      "responses": [
        {
          "uuid": "1a06ccfc-b941-4e9f-979e-b65dd99c61cf",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisioningArtifactMetadata\": {}\n    }\n  ],\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "265f4375-4a9d-493e-b4f4-1289c43dc50e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38d788df-60e1-402e-840f-fa3b71a572c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "266048df-13ca-46d1-8cec-d94c5f1e5f77",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView",
      "responses": [
        {
          "uuid": "10458d1a-9c29-411d-b6a5-6fb8b9e575a1",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'random.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86f75aca-7826-41db-88e3-74c7baba7da8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af06f1e1-34df-4df0-9c54-a9899d09efef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "136c7475-41fe-486a-9865-2e7c9a9d42be",
      "documentation": "Gets information about the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct",
      "responses": [
        {
          "uuid": "56219c80-e10a-4f12-9541-fca905f5c25f",
          "body": "{\n  \"ProvisionedProductDetail\": {\n    \"Name\": \"\",\n    \"Arn\": \"\",\n    \"Type\": \"\",\n    \"Id\": \"\",\n    \"Status\": \"\",\n    \"StatusMessage\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"IdempotencyToken\": \"\",\n    \"LastRecordId\": \"\",\n    \"LastProvisioningRecordId\": \"\",\n    \"LastSuccessfulProvisioningRecordId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"LaunchRoleArn\": \"\"\n  },\n  \"CloudWatchDashboards\": [\n    {\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86fa0a27-db9c-4ac0-a3dc-3f53106f2f35",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c463bd8-2212-4e4a-973e-e8b1421be072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8c53da35-4ffd-49ba-94b1-cfb3e6513ed2",
      "documentation": "Gets information about the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan",
      "responses": [
        {
          "uuid": "9da26eac-7135-426d-9d29-9e66ac273db6",
          "body": "{\n  \"ProvisionedProductPlanDetails\": {\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"PathId\": \"\",\n    \"ProductId\": \"\",\n    \"PlanName\": \"\",\n    \"PlanId\": \"\",\n    \"ProvisionProductId\": \"\",\n    \"ProvisionProductName\": \"\",\n    \"PlanType\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"Status\": \"\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"NotificationArns\": [\n      \"\"\n    ],\n    \"ProvisioningParameters\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\",\n        \"UsePreviousValue\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"StatusMessage\": \"\"\n  },\n  \"ResourceChanges\": [\n    {\n      \"Action\": \"\",\n      \"LogicalResourceId\": \"\",\n      \"PhysicalResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Replacement\": \"\",\n      \"Scope\": [\n        \"{{oneOf (array 'PROPERTIES' 'METADATA' 'CREATIONPOLICY' 'UPDATEPOLICY' 'DELETIONPOLICY' 'TAGS')}}\"\n      ],\n      \"Details\": [\n        {\n          \"Target\": {\n            \"Attribute\": \"\",\n            \"Name\": \"\",\n            \"RequiresRecreation\": \"\"\n          },\n          \"Evaluation\": \"\",\n          \"CausingEntity\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e95aa5fc-a4e3-46b8-842e-a13cc9877c09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9b1b40eb-c162-4b44-925a-f04875d64998",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "96aff4df-5224-402e-927b-f22e79de6bbb",
      "documentation": "Gets information about the specified provisioning artifact (also known as a version) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact",
      "responses": [
        {
          "uuid": "83d99e5d-23c8-4ab8-bf61-8b0aa1c0a3a0",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da4a0895-dd6c-449c-83c8-4a28fe6e25c3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7c61ffa-10e1-47cc-9ee8-f3443a584d0a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b7a497a9-3f38-4c52-be4d-61ebe4005efd",
      "documentation": "<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters",
      "responses": [
        {
          "uuid": "521d35b9-1e3d-48cf-96a7-4e935bcdcf39",
          "body": "{\n  \"ProvisioningArtifactParameters\": [\n    {\n      \"ParameterKey\": \"\",\n      \"DefaultValue\": \"\",\n      \"ParameterType\": \"\",\n      \"IsNoEcho\": {{faker 'random.boolean'}},\n      \"Description\": \"\",\n      \"ParameterConstraints\": {\n        \"AllowedValues\": [\n          \"\"\n        ],\n        \"AllowedPattern\": \"\",\n        \"ConstraintDescription\": \"\",\n        \"MaxLength\": \"\",\n        \"MinLength\": \"\",\n        \"MaxValue\": \"\",\n        \"MinValue\": \"\"\n      }\n    }\n  ],\n  \"ConstraintSummaries\": [\n    {\n      \"Type\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"UsageInstructions\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"ProvisioningArtifactPreferences\": {\n    \"StackSetAccounts\": [\n      \"\"\n    ],\n    \"StackSetRegions\": [\n      \"\"\n    ]\n  },\n  \"ProvisioningArtifactOutputs\": [\n    {\n      \"Key\": \"\",\n      \"Description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e1bcecc-930f-4c6a-bf77-9675cbcd9698",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6a54566-88ec-4522-b009-39da8690a361",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed646ff5-a362-4bb6-a888-4c12846b707b",
      "documentation": "<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord",
      "responses": [
        {
          "uuid": "7b92de60-3af3-4d67-bff3-c550c4d7921d",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  },\n  \"RecordOutputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3306b05a-5048-438e-99b0-0b2ddbec44aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d0a580b0-e364-4c07-9f0c-0e5b2db4a707",
      "documentation": "Describes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction",
      "responses": [
        {
          "uuid": "1381d25a-68f9-4e39-b2dc-87a16a96764b",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade9ac2b-698c-43e9-80d7-726c1138f4e1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "54a9ead8-ea84-4dc8-84fa-d9c72e2a7a45",
      "documentation": "Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters",
      "responses": [
        {
          "uuid": "1ad562e4-8b08-4ce7-8555-9c1b0953a013",
          "body": "{\n  \"ServiceActionParameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"DefaultValues\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baad979e-15c4-411b-8569-90af3674eae2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26d74d60-c9ae-43de-9d41-044a7c644d2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "87400b35-07e4-4009-8256-1cbd7dab02db",
      "documentation": "Gets information about the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption",
      "responses": [
        {
          "uuid": "3fb695ca-b1f0-4959-a173-3fdc5a325c9d",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0c761f5-6300-494c-ac02-cd90ac5f05c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0737b40-b0ca-48d8-aa7f-1b770c316b07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4a60a06-c972-432e-a4a2-23eaaea25b77",
      "documentation": "<p>Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the management account in the organization.</p> <p>This API can't be invoked if there are active delegated administrators in the organization.</p> <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "6dd4adbf-2108-4623-befa-ffcad2bd1e80",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "861b0169-51d2-4d8d-a241-d0c8e946473f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff5f2ef7-8bf3-439e-afc6-834ff95f99e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "229a8dc3-edc9-422d-8fbc-52a67d5c0d25",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6c5344e9-4fcf-4e1a-90fa-d028ee0e5eda",
      "documentation": "Disassociates the specified budget from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource",
      "responses": [
        {
          "uuid": "d3abec9d-f5d1-4d40-a267-2e734af4cb56",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c1549f0d-8835-4c57-8315-ed3350c3dfe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7cb1ab2-e34e-46e0-a93e-58fbb6a5abce",
      "documentation": "Disassociates a previously associated principal ARN from a specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio",
      "responses": [
        {
          "uuid": "32412458-f2e9-42fa-8589-01b5d9bcbc80",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8c1d49a-fbd4-414d-9d98-39550ec624b7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06a49eb9-58d8-4e29-88df-017a72b48245",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fe3c5a9-f2d8-4835-abcf-d30679d179c3",
      "documentation": "<p>Disassociates the specified product from the specified portfolio. </p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio",
      "responses": [
        {
          "uuid": "3881dd0c-2d4f-4325-9b70-185455b9038a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6c792d6-f99b-49a1-af27-d9a574a67dc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0de2dafe-6758-4d2e-9846-e376d570757b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f93f5c22-ab89-482a-b342-c78bc9d602fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c912e79c-ae2f-4ad7-9745-5520352eae05",
      "documentation": "Disassociates the specified self-service action association from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "99198b21-811b-41bd-a312-37d7c2acb550",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00af23bf-003b-45f1-b2b7-bca4c3af4280",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99dd94f3-7456-41a6-bc68-c79f392fc8d5",
      "documentation": "Disassociates the specified TagOption from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource",
      "responses": [
        {
          "uuid": "0a25a353-b6c3-46af-959d-2af36cbbc194",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c04915-be20-4209-ad09-d1cd5d8ebe96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e89be0b9-015e-4821-b6f8-d2f3a2fc6014",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62acc2e6-d0a7-48e5-9c54-7da175e38136",
      "documentation": "<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the management account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p> <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "c0e07962-24ba-4400-9050-43f95ffb21e9",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e165a6a-b731-47c6-914c-28d6e30daf00",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b27c4777-3414-46b6-9035-604682fc489a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "435e3b1a-0dec-4635-beb3-28aaf60ebd02",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a3c0a242-0bcd-4d34-a169-a23190a5042d",
      "documentation": "Provisions or modifies a product based on the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "14edd1e8-4d40-40b2-93c4-f164dc158a0d",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a90bc63-58ab-44f7-b561-f22966b0ec95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b042464-743f-40c5-9d6f-cc17a9c8ad6c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3eaa917b-ad3e-4adb-b4db-1fa7bff50e43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "22767f42-53ef-4b00-9aec-eabc26366b92",
      "documentation": "Executes a self-service action against a provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction",
      "responses": [
        {
          "uuid": "97c2c9d7-3994-4297-bc17-e0a1b9852129",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fbc2f7a2-8216-4942-b25a-dbaa74fe2ab6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68310358-1fc8-4013-91c6-abd180a65bb6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "790ea851-559e-4d24-9def-da18b2ca2652",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ceb67aae-69a3-4393-b209-a0ce10c5de99",
      "documentation": "Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus",
      "responses": [
        {
          "uuid": "d217e2ae-6f60-4448-96ae-fd35bcd85a45",
          "body": "{\n  \"AccessStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "262a08bb-40f6-43de-b28f-91191c0d869f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea241084-2657-4cac-a0bb-7724a31ee339",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2d54d87f-1baa-4ef7-9f58-5d64723fc422",
      "documentation": "This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetProvisionedProductOutputs",
      "responses": [
        {
          "uuid": "d67df466-eaed-42c9-b4eb-1f3751474f06",
          "body": "{\n  \"Outputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fda04bd-b23d-4c42-8fc8-5ab6b917c483",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e4b892d-3cfc-4cd8-81db-da6ccc4fe0ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "abe74d33-3a1c-466f-94f7-1a9b3cb7c8f4",
      "documentation": "<p>Requests the import of a resource as a Service Catalog provisioned product that is associated to a Service Catalog product and provisioning artifact. Once imported, all supported Service Catalog governance actions are supported on the provisioned product.</p> <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and non-root nested stacks are not supported.</p> <p>The CloudFormation stack must have one of the following statuses to be imported: <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>, <code>IMPORT_ROLLBACK_COMPLETE</code>.</p> <p>Import of the resource requires that the CloudFormation stack template matches the associated Service Catalog product provisioning artifact. </p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ImportAsProvisionedProduct",
      "responses": [
        {
          "uuid": "73f3f333-a2f6-4768-af99-436205116841",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a771b6b-926f-4601-b234-59d52d34e67e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77ecdcf9-b574-48ec-82b5-52cc0b744fd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f29f1197-40c5-466b-ada3-9cdbcb554847",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30cb2d89-a96e-421e-acc5-257bacae33fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5518368-1965-44e2-a6fe-67a4802baa69",
      "documentation": "Lists all portfolios for which sharing was accepted by this account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares",
      "responses": [
        {
          "uuid": "fac97fa0-d7a0-4234-9616-b0f293f839f6",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb642f12-b649-425e-8d23-34fc52cebf76",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d2e1c01-eff0-490b-88b0-2a7acd316370",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8b1465c2-f20c-4fd0-86a3-5f7f12d25b2e",
      "documentation": "Lists all the budgets associated to the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource",
      "responses": [
        {
          "uuid": "d92bd23a-dfc6-4ed5-a5dd-6c1a6ae075ee",
          "body": "{\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27b719f9-b086-4035-bf3b-29fa82ef71e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a43de9e-a338-4ca0-af04-084bcf468f54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4b5146ac-8d47-4277-b1f4-ffa9921a041c",
      "documentation": "Lists the constraints for the specified portfolio and product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio",
      "responses": [
        {
          "uuid": "39193d31-aa66-4984-8fe5-3b88f2fe614c",
          "body": "{\n  \"ConstraintDetails\": [\n    {\n      \"ConstraintId\": \"\",\n      \"Type\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"ProductId\": \"\",\n      \"PortfolioId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "454b53a8-3407-4ba1-ba99-e16db5026915",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19991a58-2976-44d0-ab73-3a666db67be8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f8e251f-2b27-4411-9f39-7dbed78eea46",
      "documentation": "Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths",
      "responses": [
        {
          "uuid": "3545cc34-a3c0-457b-aa8e-8ad6f344e4c5",
          "body": "{\n  \"LaunchPathSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ConstraintSummaries\": [\n        {\n          \"Type\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Name\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa6c758a-ddf1-429c-8bc0-4475026e3b38",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acdc26a8-9df6-4dd3-985d-6c8a7607b6f1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "257b942e-be73-4a6f-afd7-50b4fd011976",
      "documentation": "<p>Lists the organization nodes that have access to the specified portfolio. This API can only be called by the management account in the organization or by a delegated admin.</p> <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess",
      "responses": [
        {
          "uuid": "e6c5fea7-affc-4579-8634-a1c49ba9fb1a",
          "body": "{\n  \"OrganizationNodes\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "225a9bbd-61b6-40b5-ba76-ae7b2f3df920",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6240f4a9-8b8c-457a-a298-7b7db03dd95f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90d18d6b-295a-4a9b-9ae3-bc80e4fc1718",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d3e0b95-fc8f-4d53-911c-201c980c2522",
      "documentation": "<p>Lists the account IDs that have access to the specified portfolio.</p> <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess",
      "responses": [
        {
          "uuid": "be58cd8e-3875-4220-b7c9-6c670c2e2824",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9c9e7bf-2197-4a89-8e08-0d56e0f8a9c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "854dd3aa-012c-4460-ae21-6943e7ed9d18",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbe90d63-bce0-4059-876a-26896957c3da",
      "documentation": "Lists all portfolios in the catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios",
      "responses": [
        {
          "uuid": "6f291c12-889b-4c02-be59-e8c1beab301e",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59908c65-62f1-4372-b9ac-44e5a2197115",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74b5e2cb-31b6-4978-9c89-74ea648e8aaf",
      "documentation": "Lists all portfolios that the specified product is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct",
      "responses": [
        {
          "uuid": "7d9f0505-6c88-40d0-8431-7f43c8b12f20",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a030654-513b-477e-a410-c657760c4b61",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc99c841-c65b-443f-95d7-f2faa5542a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1deeb1f6-3b90-45c5-bd8c-0d7e855e9863",
      "documentation": "Lists all principal ARNs associated with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio",
      "responses": [
        {
          "uuid": "1dc7600b-7c60-41d8-9de0-cc29c4bd422a",
          "body": "{\n  \"Principals\": [\n    {\n      \"PrincipalARN\": \"\",\n      \"PrincipalType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "376e06b5-a05a-41d0-9440-467a333dff94",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61bbfb9a-bb19-42ea-8442-1f9e39721e58",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e973ed66-0a43-4868-bf36-8575153d221a",
      "documentation": "Lists the plans for the specified provisioned product or all plans to which the user has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans",
      "responses": [
        {
          "uuid": "0679f692-750e-41cc-9a10-23313aced9a6",
          "body": "{\n  \"ProvisionedProductPlans\": [\n    {\n      \"PlanName\": \"\",\n      \"PlanId\": \"\",\n      \"ProvisionProductId\": \"\",\n      \"ProvisionProductName\": \"\",\n      \"PlanType\": \"\",\n      \"ProvisioningArtifactId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1f211d5-6516-4eab-96bd-d0a37a837653",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "636375cc-f7a0-4656-be33-14b5c86c17a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ae27e3cb-892c-4f27-b144-4e81e0d96677",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts",
      "responses": [
        {
          "uuid": "01b4f396-f4aa-44a1-b36f-7b98e17ec5b9",
          "body": "{\n  \"ProvisioningArtifactDetails\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Type\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Guidance\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8af32292-da44-4196-9462-5bd3208895fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c0eb353-9a97-43d8-bf6a-d904d778c3c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3e86080e-78c1-4234-924b-747156009443",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction",
      "responses": [
        {
          "uuid": "b14a66c2-9f93-4d23-8f81-783224602592",
          "body": "{\n  \"ProvisioningArtifactViews\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'random.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"ProvisioningArtifact\": {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Description\": \"\",\n        \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Guidance\": \"\"\n      }\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86ac677b-f6f6-464c-968c-4ec998481042",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "300a6565-7b78-4175-8a39-31fe14d69121",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ad72b378-0c1c-478c-9d7b-c6e163f3237e",
      "documentation": "Lists the specified requests or all performed requests.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory",
      "responses": [
        {
          "uuid": "a23ff1d3-2b4d-40fa-bed9-504d22ec9b45",
          "body": "{\n  \"RecordDetails\": [\n    {\n      \"RecordId\": \"\",\n      \"ProvisionedProductName\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisionedProductType\": \"\",\n      \"RecordType\": \"\",\n      \"ProvisionedProductId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"PathId\": \"\",\n      \"RecordErrors\": [\n        {\n          \"Code\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"RecordTags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f71b11e0-4c8d-466d-95c8-3f84c714dc5d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bacda7bf-16c0-435d-9b61-ce6fc2d3f974",
      "documentation": "Lists the resources associated with the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption",
      "responses": [
        {
          "uuid": "f8f7d96d-1c5c-40c5-947c-4b023fdfc2eb",
          "body": "{\n  \"ResourceDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abbad2be-66f7-44d3-bf21-09dc2cff6fe4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f056d0ce-f9bc-45b1-b9b0-79eeb8e0f098",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aaf1c3c-6e93-4978-89f5-a42697b0fa9e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62a33db5-053c-48ea-91f7-decdfe3f87b4",
      "documentation": "Lists all self-service actions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions",
      "responses": [
        {
          "uuid": "593aeab9-c3a6-4248-84f2-d8fc6bdc8fb4",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dde5d6e5-4206-4cb0-bcba-d2c262f96c91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12535515-12e9-41e4-848a-88714f20fa10",
      "documentation": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact",
      "responses": [
        {
          "uuid": "3f574d5c-bb0d-4601-ae9f-7168cb496909",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e126dcbc-6987-496d-bf56-87c4a539fad4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62d0437b-ec36-420e-9521-c0289a4548e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bb0caae-239e-4876-910e-77082dc8db83",
      "documentation": "Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct",
      "responses": [
        {
          "uuid": "fc9d4309-6d53-45d1-bc89-61aadf58d8ac",
          "body": "{\n  \"StackInstances\": [\n    {\n      \"Account\": \"\",\n      \"Region\": \"\",\n      \"StackInstanceStatus\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f47376f-fa51-48ba-ae28-0a8cb6a709d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "413b58b6-439a-4ae0-8548-65986193548c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fad30fed-9cba-4617-b4c7-4cb388f46867",
      "documentation": "Lists the specified TagOptions or all TagOptions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions",
      "responses": [
        {
          "uuid": "d44130bb-326d-4dc5-af27-dc2fdfa87113",
          "body": "{\n  \"TagOptionDetails\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80281aa6-1f18-412f-98f1-ca9a00047904",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d09c7779-af29-44e0-9414-7df83afe298d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "205ee917-d40a-434d-8f59-3c58ebf099e2",
      "documentation": "<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\".</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct",
      "responses": [
        {
          "uuid": "48e29b62-a54a-4248-a17e-284c350f40d8",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55d223cf-7edb-49c7-9d4d-61d77a6ae1fd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "618fb7fa-5f05-414d-9997-55478bf933f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f8d2f51-1436-41ec-9224-7f716bc315ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5228ce75-cf28-420a-b111-85669bf1f9f5",
      "documentation": "Rejects an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare",
      "responses": [
        {
          "uuid": "165dbdcf-9a26-49f0-a3fd-eb0f4a3f85b0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f78feb83-810c-4240-8c46-605d802ce55f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8559855b-faa0-421b-84b6-43cdf8564d99",
      "documentation": "<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts",
      "responses": [
        {
          "uuid": "0b8debd5-941b-4f55-87b6-0923cab504ae",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76698614-b7e8-40b0-8b6d-24162a3f8384",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e42f1a91-76d6-4f0a-b3aa-99b2689c29a8",
      "documentation": "Gets information about the products to which the caller has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts",
      "responses": [
        {
          "uuid": "3e9ff470-7044-4fca-95f0-b6b719920551",
          "body": "{\n  \"ProductViewSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    }\n  ],\n  \"ProductViewAggregations\": {},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29140b5f-7398-4a5a-ba85-740cf0b16061",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "69a53372-d6c7-4dcc-84bd-28d9da1ff9f2",
      "documentation": "Gets information about the products for the specified portfolio or all products.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin",
      "responses": [
        {
          "uuid": "8add52d7-509c-4fb0-a481-68657e0203ef",
          "body": "{\n  \"ProductViewDetails\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'random.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"Status\": \"\",\n      \"ProductARN\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "718a9017-4d1a-4b5e-a9f2-0836efa6d6ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "141b06a1-3f64-46fd-9a89-938b610af481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6346a56e-3651-4311-b092-0c47e7ca3ed6",
      "documentation": "Gets information about the provisioned products that meet the specified criteria.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts",
      "responses": [
        {
          "uuid": "a67447b7-cf84-468f-85df-c4e97e355a5f",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"PhysicalId\": \"\",\n      \"ProductId\": \"\",\n      \"ProductName\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ProvisioningArtifactName\": \"\",\n      \"UserArn\": \"\",\n      \"UserArnSession\": \"\"\n    }\n  ],\n  \"TotalResultsCount\": {{faker 'random.number'}},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c929352c-bfd4-420f-9bd6-337938267f05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f53737e7-f859-4166-8e94-c568a9f01aed",
      "documentation": "<p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct",
      "responses": [
        {
          "uuid": "718bd6b7-c557-4b02-811c-88dbd109d7ef",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1cb9577d-b8cc-44e9-930c-3008bf89c50b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6bf6d313-ef2a-4acb-af97-caa1f6bb08fe",
      "documentation": "Updates the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint",
      "responses": [
        {
          "uuid": "9135c9d8-78bd-4cff-88bf-a06db51c11a4",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74d6e21e-4bbc-49c9-9a5d-0e1b035247bd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a98a2d4-875b-40b5-b35a-3498a776b0a4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "934e3b50-b2e8-4428-9556-a3a78888b6b3",
      "documentation": "<p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio",
      "responses": [
        {
          "uuid": "9de7934a-5660-4a01-b763-15f448e4d38e",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d88e0f7-4ced-498d-ba37-4f228356777a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45065cf9-b9bd-4dab-b7c6-7cdb03440aaf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd2bc3bc-3f4c-4e5d-9891-6b411fb43163",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "584a4f84-7c30-49f8-8eef-187006095327",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "013a2c5f-ca4a-433d-a55b-143a10379bbe",
      "documentation": "<p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p> <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p> <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p> <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p> <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolioShare",
      "responses": [
        {
          "uuid": "2e169714-7c7b-4579-802a-712cbda3d7f2",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ebb92c-4f79-4b30-95e6-4eaf55e16aeb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5207670-1855-47cf-9284-27a090d75170",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4cf5a73b-1200-489e-a1ee-fcc12eecf991",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5281f8f5-bd8a-48b7-adce-68c52f51e1d2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d020e933-f30c-4377-a711-2ec81b0ca301",
      "documentation": "Updates the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct",
      "responses": [
        {
          "uuid": "b0eefb32-aae3-4623-ba59-01cfa22389b8",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc5ed24f-09b6-430c-b3d7-94fbe1bc2969",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a1b8063-a7eb-4d31-8e6d-4785c6ba42b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff24d3ba-dc12-496d-886a-362ea7305db8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8906b6e9-8ca3-45e1-bce8-668111642645",
      "documentation": "<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct",
      "responses": [
        {
          "uuid": "745dd87c-ad5c-4b50-8234-fbc1cbfd3313",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7031bc06-7d50-43b8-a1bd-3d1bfe0635cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d5a325a4-6169-4ac2-a3f9-df63840f0411",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2be4a8ac-29fb-4705-8ca4-5decbebdbe26",
      "documentation": "Requests updates to the properties of the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties",
      "responses": [
        {
          "uuid": "06ebd77c-d054-4672-818f-556d565ac779",
          "body": "{\n  \"ProvisionedProductId\": \"\",\n  \"ProvisionedProductProperties\": {},\n  \"RecordId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4712113-e917-4f0e-81b2-5173bb51d916",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "919eb348-a887-4b01-82cc-e189828d8937",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1633d61-494f-41b5-b0cc-2c849e06e4d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "410f6b04-a86d-434a-acf1-1fb423956802",
      "documentation": "<p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact",
      "responses": [
        {
          "uuid": "544043ab-6e6c-4f22-a314-4e694b7ff81e",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2e24205-66f4-4e41-8d95-454a3d93fa3e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f1d5c64-5625-4158-9900-a4cd85913896",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81b6e6be-0595-46cc-afdd-8ebb96996d13",
      "documentation": "Updates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction",
      "responses": [
        {
          "uuid": "e34fb08f-571f-4882-a848-5780d5aba605",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3de04237-7b62-4bd6-8936-d17e44c2fbe9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "152db2c8-ceee-4bae-bee9-452f8825b6c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5567d93c-5c85-451f-9d71-f12d35c81f87",
      "documentation": "Updates the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption",
      "responses": [
        {
          "uuid": "1fa87fa0-f2b3-4994-ac36-037aedd8e526",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c28ab2a0-2c6e-428e-8e22-4c72865fb3d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a80c733c-a502-44ba-aebb-1ca0d6825049",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97a06926-3ecd-4833-b3be-2f6a9e108db3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd513053-af39-4a3f-9862-1804b8953f11",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}