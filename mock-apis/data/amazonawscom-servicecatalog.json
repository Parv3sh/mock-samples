{
  "uuid": "3411b7a1-86ed-41fc-a9a1-6b90ec407d74",
  "lastMigration": 19,
  "name": "AWS Service Catalog",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "30408467-c03d-44df-a32f-a5072102756b",
      "documentation": "Accepts an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AcceptPortfolioShare",
      "responses": [
        {
          "uuid": "eb8d5a45-8b39-4418-9f21-e0ac4bd1f5b1",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0f36de9-dc74-4263-a9ad-780cbc1aeb43",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b37e4ed0-c9ef-4afe-a62e-63bf0c6315aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4734ca71-3ab7-4c5c-a191-18cec2b8fd9a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "349dc5d2-3a96-4347-bf7b-2072b9cc782d",
      "documentation": "Associates the specified budget with the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateBudgetWithResource",
      "responses": [
        {
          "uuid": "356efbfc-ee43-430e-b25f-2097da1ceb86",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6df87b26-7f0c-4d4f-a6cf-f2d371785594",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6125f81d-daa2-4144-9ebc-c1a0ba9626a9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30062e6a-d4a8-4926-a1ce-8dece67741c1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "606dfe08-ac50-4860-aeeb-66f6e6839efe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "329bc40e-88ae-4e93-93b2-5f15c376a7ea",
      "documentation": "Associates the specified principal ARN with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociatePrincipalWithPortfolio",
      "responses": [
        {
          "uuid": "e4049397-0697-4052-b142-43be0a35ed5d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abf419b6-839d-4bfe-bd39-b742ec2d81d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ead6ce86-e547-421d-8a6e-c075c4f9ab22",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "06782f4e-7c5b-4c9a-8226-a69e870a3fd7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0b859a34-4d76-483c-9a7a-0cf7d45792c4",
      "documentation": "<p>Associates the specified product with the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateProductWithPortfolio",
      "responses": [
        {
          "uuid": "272fcb32-73c3-4512-9131-5852f2ff76fd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec5c9939-9956-42c0-895c-04a8667c635c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0da5a894-c48c-4292-b55e-9ddbb0536d8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "550d112e-f0c7-429d-9233-c6800b249591",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3648f108-01be-4b3e-bf03-823b8a6f8336",
      "documentation": "Associates a self-service action with a provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "c8be6f39-e2de-4e6d-8107-65e8cc76ad73",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc581fac-ed51-41b2-87f2-4b3854b75e8a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d99fce7d-28db-47d3-aca5-65b1baf2fdbe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1ceafc4-784a-4996-9549-cc1cc5d69252",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9e00ff9-fccd-44bc-ac7c-8d28fa11443f",
      "documentation": "Associate the specified TagOption with the specified portfolio or product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.AssociateTagOptionWithResource",
      "responses": [
        {
          "uuid": "560a11a8-aabc-4249-990e-6a08b3f37291",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bd7cb48-a135-4916-bc0a-e9f865e8c557",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b0662a6-13c4-4d43-8394-c3eea34335d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56ccf1ab-b598-4ae7-89db-6560c20773dc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "960b7f3b-69b6-416f-a8b2-942fae43858a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "610cb4f1-d077-42c3-892a-d82cdef4d6ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d0ec511-930b-471b-aa88-eefa12dfa918",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4036951f-6690-451d-97da-fdc70147a893",
      "documentation": "Associates multiple self-service actions with provisioning artifacts.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchAssociateServiceActionWithProvisioningArtifact",
      "responses": [
        {
          "uuid": "84e769ad-29cc-45e0-80b6-0f87fda9cbcc",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf97a2fc-398b-4ed6-863f-e5b1ac40c7a0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d9e87b1-f2cf-4e41-8833-2932b21ddaad",
      "documentation": "Disassociates a batch of self-service actions from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.BatchDisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "5d638044-bf35-49de-bc73-7079aea0bb4d",
          "body": "{\n  \"FailedServiceActionAssociations\": [\n    {\n      \"ServiceActionId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ErrorCode\": \"\",\n      \"ErrorMessage\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac447861-0e63-4995-86fb-ac1c3c295e2f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e123d8c-cc84-43d5-aaa1-ca0825ba7263",
      "documentation": "<p>Copies the specified source product to the specified target product or a new product.</p> <p>You can copy a product to the same account or another account. You can copy a product to the same region or another region.</p> <p>This operation is performed asynchronously. To track the progress of the operation, use <a>DescribeCopyProductStatus</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CopyProduct",
      "responses": [
        {
          "uuid": "4c5c917f-1452-45db-895f-53b1b06157d4",
          "body": "{\n  \"CopyProductToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a1325af-5f78-468c-8fb6-d740cf4b9f8b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca70871c-cee0-4904-a691-b32101f3c70c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "64a663c5-474a-481b-8403-0adb0c25c546",
      "documentation": "<p>Creates a constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateConstraint",
      "responses": [
        {
          "uuid": "8e9f379e-d41b-498d-9a27-ffa97c4ca05d",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bb589fd-29d9-4808-a542-b51c097d7301",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42231624-ada0-492a-a5aa-555b51be40c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "32a8d280-0638-4acd-98e3-53ae17a1845b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddc1f2d9-0fa7-4c34-bf5e-18d88ceadd52",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a24c83-f8cc-493a-8550-e98a75051b7d",
      "documentation": "<p>Creates a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolio",
      "responses": [
        {
          "uuid": "c4eb955d-543c-48a4-bd23-c73358479b10",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "841ceda5-322f-4edb-869f-4c8b701ef284",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22cabeeb-29eb-48cd-91d2-59a5de662a8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6aceb1f8-e12a-4c4c-9972-cbae49dc3642",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "703ad223-e45f-4cf0-a6ac-b076bd74c379",
      "documentation": "<p>Shares the specified portfolio with the specified account or organization node. Shares to an organization node can only be created by the management account of an organization or by a delegated administrator. You can share portfolios to an organization, an organizational unit, or a specific account.</p> <p>Note that if a delegated admin is de-registered, they can no longer create portfolio shares.</p> <p> <code>AWSOrganizationsAccess</code> must be enabled in order to create a portfolio share to an organization node.</p> <p>You can't share a shared resource, including portfolios that contain a shared product.</p> <p>If the portfolio share with the specified account or organization node already exists, this action will have no effect and will not return an error. To update an existing share, you must use the <code> UpdatePortfolioShare</code> API instead.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreatePortfolioShare",
      "responses": [
        {
          "uuid": "68763e7f-716f-4129-a88f-571382b5d97a",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8790518-082b-4a94-89a1-f3f9e495e0df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15d715cb-a724-4074-a5d0-7dd1a5def545",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "414025e0-f57c-4939-ab73-0d009dc6cab9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfdf251d-b85c-4fbd-81e9-39d211cbd7ca",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9a247eb-f24d-4a45-b6c8-c34eb0863ecf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "941b9891-6352-428f-808d-8d21aa2fec2f",
      "documentation": "<p>Creates a product.</p> <p>A delegated admin is authorized to invoke this command.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProduct",
      "responses": [
        {
          "uuid": "ac55837d-efff-42d8-933f-2d18b2ea37f8",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b93d9a01-5aa4-4b5c-b79b-f61c814eb25c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80943a3d-5c85-4b3b-be37-98844f84f275",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fc1a6a2-fcfb-4da7-891b-54294253f12b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3f70daa9-4288-4c98-92ec-86e6e23b068a",
      "documentation": "<p>Creates a plan. A plan includes the list of resources to be created (when provisioning a new product) or modified (when updating a provisioned product) when the plan is executed.</p> <p>You can create one plan per provisioned product. To create a plan for an existing provisioned product, the product status must be AVAILBLE or TAINTED.</p> <p>To view the resource changes in the change set, use <a>DescribeProvisionedProductPlan</a>. To create or modify the provisioned product, use <a>ExecuteProvisionedProductPlan</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisionedProductPlan",
      "responses": [
        {
          "uuid": "de9ad95e-10e2-4219-9f6d-a4642e9b871a",
          "body": "{\n  \"PlanName\": \"\",\n  \"PlanId\": \"\",\n  \"ProvisionProductId\": \"\",\n  \"ProvisionedProductName\": \"\",\n  \"ProvisioningArtifactId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a655611a-2b6d-4541-892b-b2826c05789d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ae34f5e-1fb4-44c8-87e1-97abe4e33cd2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5b792e02-9429-498e-9d40-2a31709c376f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c4c4362-dedc-4e17-9fa8-339bb6e21d1f",
      "documentation": "<p>Creates a provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot create a provisioning artifact for a product that was shared with you.</p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> IAM policy permission. This policy permission is required when using the <code>ImportFromPhysicalId</code> template source in the information data section.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateProvisioningArtifact",
      "responses": [
        {
          "uuid": "d85169a5-45a6-411f-9fce-67616f55e1cf",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d834665-86d1-44f2-80d0-cebb917e6c5f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3fd6cf5-181f-421b-b227-315e6eb4818c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "999d2325-2e70-446d-9675-6549a7094581",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "523b81a7-633b-4cdb-87f1-c01b37c853b3",
      "documentation": "Creates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateServiceAction",
      "responses": [
        {
          "uuid": "29036c54-2e67-4e03-8374-c8bf6bf17ba8",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00d5a051-6f33-4615-9cce-be3e87e06bff",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "704dd0ae-a92e-44f4-acc4-373be839debd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0439507-28cb-41ec-a6b3-9ad10acfdba0",
      "documentation": "Creates a TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.CreateTagOption",
      "responses": [
        {
          "uuid": "e6137f36-8a08-4250-9b63-206d0884fd25",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a0afad-369d-4714-ad52-f25c9a210702",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29ae7320-a9c9-4ae0-93c4-666c4097fd37",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2458f327-d0ec-4a09-930a-aa4bfa6964d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fd6d17d-bb37-47cc-9790-1575af5eee77",
      "documentation": "<p>Deletes the specified constraint.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteConstraint",
      "responses": [
        {
          "uuid": "ef473c4c-b1e6-4b36-adb6-1d42af02ea8c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a74f9fc7-35d6-4fa6-a08d-6067bcf2020d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7630291-057b-4fce-9411-5d7000e8f573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b1381f8c-ba03-4617-9a34-afa8ae01f3e9",
      "documentation": "<p>Deletes the specified portfolio.</p> <p>You cannot delete a portfolio if it was shared with you or if it has associated products, users, constraints, or shared accounts.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolio",
      "responses": [
        {
          "uuid": "fde06ec4-f76d-43c3-a266-7591cadbd90e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4c7fffe-20d8-4072-8473-912157541d99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ea0aeba-6dc1-4511-8e3d-67d5e4cd0ddb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e941bf1-c313-427d-a094-a9081215701b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b5c3cc2-d754-430e-832f-1e4ba4f541ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "38309c35-73af-441d-b736-12cdd3f7abf0",
      "documentation": "<p>Stops sharing the specified portfolio with the specified account or organization node. Shares to an organization node can only be deleted by the management account of an organization or by a delegated administrator.</p> <p>Note that if a delegated admin is de-registered, portfolio shares created from that account are removed.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeletePortfolioShare",
      "responses": [
        {
          "uuid": "3aecd652-c32f-43df-8d29-f98adbe26249",
          "body": "{\n  \"PortfolioShareToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97c3c6c6-3932-4f56-b6df-5960a018e5aa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "320a65cc-66a0-4efe-8ee4-145548ea8d59",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bffb2a1-237d-4023-86a0-e769af0f4017",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b9ae300-d91a-4e84-a523-5c23b8d35c8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d625d561-3f27-4588-84bb-7f64f7244045",
      "documentation": "<p>Deletes the specified product.</p> <p>You cannot delete a product if it was shared with you or is associated with a portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProduct",
      "responses": [
        {
          "uuid": "d28e6ba3-8a3f-43b2-93ff-e1bfaae92f1b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5868b48a-55d9-4a4c-879f-d1aa0ca42f6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "33b4739c-7d05-405e-886d-7ced3df1f915",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "761bf2d5-a0e5-405d-b0af-98ea300df376",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e934d42-4f38-484d-a050-470ca57abaf8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62616ec7-57e8-40dc-99e6-bd91515d3e50",
      "documentation": "Deletes the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "b5e20124-384b-492c-b541-de28d120cf99",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7886d4de-231f-414d-925f-df479be5bcc2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1741632-138b-413d-a885-18b35fb3d9f3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d316d9f-1ebf-42ad-9d0f-5e99f29a6c07",
      "documentation": "<p>Deletes the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot delete a provisioning artifact associated with a product that was shared with you. You cannot delete the last provisioning artifact for a product, because a product must have at least one provisioning artifact.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteProvisioningArtifact",
      "responses": [
        {
          "uuid": "b229554f-ffad-4fca-b191-eea28aee11f3",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd9fb5d7-ac63-40a4-b789-732e1004b0ee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aea8b17f-5c75-4c6c-a2c6-7740e4d09942",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2676e58c-f9e8-46a1-9b74-fedc4174b3a1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71d1f1e3-92e9-4130-84ad-ba2d0d6bf631",
      "documentation": "Deletes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteServiceAction",
      "responses": [
        {
          "uuid": "6481e804-cff3-49a4-9e31-b0c3d79cfa49",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b76a3248-3f84-4422-b716-e323cccc82e3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3733500c-9c44-467e-b1bc-49f1d3b590c0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a57ceb96-bafb-4373-b472-65252f61db44",
      "documentation": "<p>Deletes the specified TagOption.</p> <p>You cannot delete a TagOption if it is associated with a product or portfolio.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DeleteTagOption",
      "responses": [
        {
          "uuid": "be15cbaa-6176-4180-af7a-063462093097",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31119f04-fefd-4921-8b72-183245a19e74",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34c1ed37-8a7a-4db7-a240-765c4bf3be48",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a95bd88-91dd-4e07-97c3-664e00337920",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0e62d4f-46fc-4e37-96ce-cf7722014190",
      "documentation": "Gets information about the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeConstraint",
      "responses": [
        {
          "uuid": "8071999b-c52f-4908-9fc6-411635e9134d",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ba752a85-0f2c-4646-a02a-5ccab448dd2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fc4fd7d-ecd6-46ce-b6da-f9b3d2757c55",
      "documentation": "Gets the status of the specified copy product operation.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeCopyProductStatus",
      "responses": [
        {
          "uuid": "18c4af85-c00c-4c71-9399-551aa4066ec4",
          "body": "{\n  \"CopyProductStatus\": \"\",\n  \"TargetProductId\": \"\",\n  \"StatusDetail\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b2a939-420d-4e2d-ac0c-55ed643984d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "63d7d4b5-9ed0-4262-99cc-5f8ee9d05871",
      "documentation": "<p>Gets information about the specified portfolio.</p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolio",
      "responses": [
        {
          "uuid": "100a5a83-b3b1-4a3d-86d0-78b4d0c6f32e",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1ff90df-85bd-4187-8031-e4634ff3cf4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "00bbb67a-fbfd-4113-96ff-43cf0f5110b3",
      "documentation": "Gets the status of the specified portfolio share operation. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShareStatus",
      "responses": [
        {
          "uuid": "7913e2ed-f234-40b5-83cc-8df5f296c4f6",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"PortfolioId\": \"\",\n  \"OrganizationNodeValue\": \"\",\n  \"Status\": \"\",\n  \"ShareDetails\": {\n    \"SuccessfulShares\": [\n      \"\"\n    ],\n    \"ShareErrors\": [\n      {\n        \"Accounts\": [\n          \"\"\n        ],\n        \"Message\": \"\",\n        \"Error\": \"\"\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49d55fdb-ad07-47d9-b076-6beb8bd22c4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5944e921-6510-4799-9210-cec1443097a7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "000f7be5-db49-45c7-af9e-f75cdff81983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "66b0eb32-1cc6-444d-8616-551ee5de230a",
      "documentation": "<p>Returns a summary of each of the portfolio shares that were created for the specified portfolio.</p> <p>You can use this API to determine which accounts or organizational nodes this portfolio have been shared, whether the recipient entity has imported the share, and whether TagOptions are included with the share.</p> <p>The <code>PortfolioId</code> and <code>Type</code> parameters are both required.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribePortfolioShares",
      "responses": [
        {
          "uuid": "a7ae30fa-784f-4b3e-912b-9d51effd5b39",
          "body": "{\n  \"NextPageToken\": \"\",\n  \"PortfolioShareDetails\": [\n    {\n      \"PrincipalId\": \"\",\n      \"Type\": \"\",\n      \"Accepted\": {{faker 'random.boolean'}},\n      \"ShareTagOptions\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0d504ff-5411-4068-b87b-cc8bb344139a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16a15287-595a-467f-83da-9d89805b8f71",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3613fb0-c72f-4e1c-b141-a2e74abf916a",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProduct",
      "responses": [
        {
          "uuid": "841ed278-b6f2-4c8e-9d32-e5d986ef6a6e",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'random.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"LaunchPaths\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e4f050ae-71b9-4607-9079-69343ffe1bfb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b505692-71b5-44ea-bed7-2753c61af9d3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67b503ee-bf24-4d88-a03f-6144bfea5210",
      "documentation": "Gets information about the specified product. This operation is run with administrator access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductAsAdmin",
      "responses": [
        {
          "uuid": "1cc88155-0dd6-4fa2-9af7-9a9affeba60c",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"ProvisioningArtifactSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisioningArtifactMetadata\": {}\n    }\n  ],\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "597c630d-0210-48d1-8235-f8988875eed0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f871d73-a453-4457-8486-355ff23f4d6f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d2b577d0-8fec-4b8e-a13e-a2af612a85b5",
      "documentation": "Gets information about the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProductView",
      "responses": [
        {
          "uuid": "54f32b6f-b1c3-424d-b6cc-db60189d3250",
          "body": "{\n  \"ProductViewSummary\": {\n    \"Id\": \"\",\n    \"ProductId\": \"\",\n    \"Name\": \"\",\n    \"Owner\": \"\",\n    \"ShortDescription\": \"\",\n    \"Type\": \"\",\n    \"Distributor\": \"\",\n    \"HasDefaultPath\": {{faker 'random.boolean'}},\n    \"SupportEmail\": \"\",\n    \"SupportDescription\": \"\",\n    \"SupportUrl\": \"\"\n  },\n  \"ProvisioningArtifacts\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Guidance\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc29f51f-944a-4f2b-a53c-9eb0337bbc24",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f6f023c-f9a3-4bfc-bed6-581de60014e5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06c66b70-efca-4d79-a4c8-74a53490b3cb",
      "documentation": "Gets information about the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProduct",
      "responses": [
        {
          "uuid": "b7ebc8fe-28e8-4d35-b199-06d359b50463",
          "body": "{\n  \"ProvisionedProductDetail\": {\n    \"Name\": \"\",\n    \"Arn\": \"\",\n    \"Type\": \"\",\n    \"Id\": \"\",\n    \"Status\": \"\",\n    \"StatusMessage\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"IdempotencyToken\": \"\",\n    \"LastRecordId\": \"\",\n    \"LastProvisioningRecordId\": \"\",\n    \"LastSuccessfulProvisioningRecordId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"LaunchRoleArn\": \"\"\n  },\n  \"CloudWatchDashboards\": [\n    {\n      \"Name\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a908974-2c35-42fd-86c7-a62b991d21d8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "54df464d-7123-4050-9401-22ac3dfd9eac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "80ea1772-06f1-49de-b771-c4bfdae50ffa",
      "documentation": "Gets information about the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisionedProductPlan",
      "responses": [
        {
          "uuid": "c597725a-3428-4f11-be09-9e7a5bd07dfd",
          "body": "{\n  \"ProvisionedProductPlanDetails\": {\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"PathId\": \"\",\n    \"ProductId\": \"\",\n    \"PlanName\": \"\",\n    \"PlanId\": \"\",\n    \"ProvisionProductId\": \"\",\n    \"ProvisionProductName\": \"\",\n    \"PlanType\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"Status\": \"\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"NotificationArns\": [\n      \"\"\n    ],\n    \"ProvisioningParameters\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\",\n        \"UsePreviousValue\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"Tags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"StatusMessage\": \"\"\n  },\n  \"ResourceChanges\": [\n    {\n      \"Action\": \"\",\n      \"LogicalResourceId\": \"\",\n      \"PhysicalResourceId\": \"\",\n      \"ResourceType\": \"\",\n      \"Replacement\": \"\",\n      \"Scope\": [\n        \"{{oneOf (array 'PROPERTIES' 'METADATA' 'CREATIONPOLICY' 'UPDATEPOLICY' 'DELETIONPOLICY' 'TAGS')}}\"\n      ],\n      \"Details\": [\n        {\n          \"Target\": {\n            \"Attribute\": \"\",\n            \"Name\": \"\",\n            \"RequiresRecreation\": \"\"\n          },\n          \"Evaluation\": \"\",\n          \"CausingEntity\": \"\"\n        }\n      ]\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fec3204-7bf9-4db6-a7e1-a1bce82fe2fb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b37dc48c-cb33-433b-9363-9e6bd21fd3e6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4de8684-e926-4440-9d5d-8b8869a5e17a",
      "documentation": "Gets information about the specified provisioning artifact (also known as a version) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningArtifact",
      "responses": [
        {
          "uuid": "f6e26690-6dae-4db6-a977-d6c85939d469",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b01bd661-8bad-4a41-ad91-0f956ca78394",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fde24914-2ed3-4c5b-844f-95f882564398",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ac92bac-aa28-44e2-9345-d85c54f6da24",
      "documentation": "<p>Gets information about the configuration required to provision the specified product using the specified provisioning artifact.</p> <p>If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to <a>ProvisionProduct</a>, do not include conflicted TagOption keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\". Tag the provisioned product with the value <code>sc-tagoption-conflict-portfolioId-productId</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeProvisioningParameters",
      "responses": [
        {
          "uuid": "d89481db-c2e4-475c-bb9b-42ba0eb008b5",
          "body": "{\n  \"ProvisioningArtifactParameters\": [\n    {\n      \"ParameterKey\": \"\",\n      \"DefaultValue\": \"\",\n      \"ParameterType\": \"\",\n      \"IsNoEcho\": {{faker 'random.boolean'}},\n      \"Description\": \"\",\n      \"ParameterConstraints\": {\n        \"AllowedValues\": [\n          \"\"\n        ],\n        \"AllowedPattern\": \"\",\n        \"ConstraintDescription\": \"\",\n        \"MaxLength\": \"\",\n        \"MinLength\": \"\",\n        \"MaxValue\": \"\",\n        \"MinValue\": \"\"\n      }\n    }\n  ],\n  \"ConstraintSummaries\": [\n    {\n      \"Type\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"UsageInstructions\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"TagOptions\": [\n    {\n      \"Key\": \"\",\n      \"Values\": [\n        \"\"\n      ]\n    }\n  ],\n  \"ProvisioningArtifactPreferences\": {\n    \"StackSetAccounts\": [\n      \"\"\n    ],\n    \"StackSetRegions\": [\n      \"\"\n    ]\n  },\n  \"ProvisioningArtifactOutputs\": [\n    {\n      \"Key\": \"\",\n      \"Description\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9da3bc48-b74e-4257-bac0-061d1bb5db81",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "503d0145-ccbe-4e9a-9169-250e0561c577",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d3c12df-c668-469d-87bb-8a18e1a59858",
      "documentation": "<p>Gets information about the specified request operation.</p> <p>Use this operation after calling a request operation (for example, <a>ProvisionProduct</a>, <a>TerminateProvisionedProduct</a>, or <a>UpdateProvisionedProduct</a>). </p> <note> <p>If a provisioned product was transferred to a new owner using <a>UpdateProvisionedProductProperties</a>, the new owner will be able to describe all past records for that product. The previous owner will no longer be able to describe the records, but will be able to use <a>ListRecordHistory</a> to see the product's history from when he was the owner.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeRecord",
      "responses": [
        {
          "uuid": "82d7983e-b0ae-4839-b39a-e7d018188d9d",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  },\n  \"RecordOutputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f464a855-6c04-4f8c-a6a7-3c193030fa73",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ef57cce-ba27-48b1-84d3-6db35ef81dbd",
      "documentation": "Describes a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceAction",
      "responses": [
        {
          "uuid": "2647ca6f-154c-4282-aa50-7ca6385af361",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81681d74-a5ee-473f-adac-5268f395b6de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3bbdc8f6-04e4-40e3-a266-324536cf715f",
      "documentation": "Finds the default parameters for a specific self-service action on a specific provisioned product and returns a map of the results to the user.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeServiceActionExecutionParameters",
      "responses": [
        {
          "uuid": "d6011894-ef85-4c71-bf72-bc68d44456c0",
          "body": "{\n  \"ServiceActionParameters\": [\n    {\n      \"Name\": \"\",\n      \"Type\": \"\",\n      \"DefaultValues\": [\n        \"\"\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "36132df9-7626-4ae1-a4dd-5d41ef8843d0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa966dc7-6e74-442e-834e-45df15a0c5b4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca73bfe1-cda9-4b96-b22e-19bcc404b3c1",
      "documentation": "Gets information about the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DescribeTagOption",
      "responses": [
        {
          "uuid": "6c3bbeb8-bbcd-4d91-8953-ee0929f9930d",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ef09d00-fdf7-409c-b1ff-04f19161af05",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3de5344f-67cc-480f-b05f-00b785bcd1fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "84ad295e-5b8d-436f-a6bd-164d207ef4bb",
      "documentation": "<p>Disable portfolio sharing through AWS Organizations feature. This feature will not delete your current shares but it will prevent you from creating new shares throughout your organization. Current shares will not be in sync with your organization structure if it changes after calling this API. This API can only be called by the management account in the organization.</p> <p>This API can't be invoked if there are active delegated administrators in the organization.</p> <p>Note that a delegated administrator is not authorized to invoke <code>DisableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "7b069b12-984e-42cc-b9fa-1968b20219af",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6edc548-b206-4bf3-81cd-678bacf11b9c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61252da3-4449-46b2-adf6-93e669268146",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f38e2666-fee5-4914-bfc9-290701a8797c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "af0282c9-29dc-40d5-9302-eea731980e42",
      "documentation": "Disassociates the specified budget from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateBudgetFromResource",
      "responses": [
        {
          "uuid": "da2d16b3-ac84-438c-ab4a-fea63c896e51",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f597be9c-a933-4150-9f68-ea8ce8fa3463",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9b2989f2-73a1-4cea-aa33-f5539e677f92",
      "documentation": "Disassociates a previously associated principal ARN from a specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociatePrincipalFromPortfolio",
      "responses": [
        {
          "uuid": "074282da-d805-43f6-92fb-23b8bca83930",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d768f783-c3a5-49f8-a451-3c2bef84824c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8abdcee5-fbb6-44e8-a95e-37835f75ab95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1846081e-aca3-4e72-ad99-44c1bf089ca7",
      "documentation": "<p>Disassociates the specified product from the specified portfolio. </p> <p>A delegated admin is authorized to invoke this command.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateProductFromPortfolio",
      "responses": [
        {
          "uuid": "033f1c25-d302-4d9f-a782-bd775eee4b02",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97abadbe-f23b-447a-b8c5-6970c202f9e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a375b84-64fb-4e53-b823-f05556e271ae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceInUseException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "565cdc47-5703-48e4-b063-538c89c8533e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb8790f0-f41d-412b-a4e1-024f88c14781",
      "documentation": "Disassociates the specified self-service action association from the specified provisioning artifact.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateServiceActionFromProvisioningArtifact",
      "responses": [
        {
          "uuid": "621227cc-4de9-412a-b428-71bb07e556af",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "451163a9-d19e-49e6-92e4-802d7e202197",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06196742-4278-47e2-b576-ce9114f69f22",
      "documentation": "Disassociates the specified TagOption from the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.DisassociateTagOptionFromResource",
      "responses": [
        {
          "uuid": "eeec2ede-3586-4a6c-b1eb-f841295f7b3a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9825a080-57ac-41f2-a2e1-21683c2ea1df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91599f98-40c1-47bf-8f24-314fddc8b625",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "041a4a36-9f00-4725-aa5d-4f9e89027e20",
      "documentation": "<p>Enable portfolio sharing feature through AWS Organizations. This API will allow Service Catalog to receive updates on your organization in order to sync your shares with the current structure. This API can only be called by the management account in the organization.</p> <p>By calling this API Service Catalog will make a call to organizations:EnableAWSServiceAccess on your behalf so that your shares can be in sync with any changes in your AWS Organizations structure.</p> <p>Note that a delegated administrator is not authorized to invoke <code>EnableAWSOrganizationsAccess</code>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.EnableAWSOrganizationsAccess",
      "responses": [
        {
          "uuid": "f2cbf563-d2f1-430d-aa2a-7c969cd15378",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "027ccf12-858e-4668-88f2-d1e52509d73e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df65f74b-0da9-47ec-a821-28d735a59941",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d0f91ec-51e7-4bf9-8800-7a4abb6409ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "aa528982-cd74-42fe-87d9-0808e2ec5f46",
      "documentation": "Provisions or modifies a product based on the resource changes for the specified plan.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductPlan",
      "responses": [
        {
          "uuid": "2a87adf6-42f9-4985-84d1-8f24ccce0c05",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3b8447d-89fc-4c76-80af-690934488a6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d3420c5-8ede-4280-bb70-a651ce9d37c5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bee1aa25-7d78-4f47-8c7c-045eb9b0dceb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "73a954e2-0a78-4bbc-b94d-3fd3afd965c4",
      "documentation": "Executes a self-service action against a provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ExecuteProvisionedProductServiceAction",
      "responses": [
        {
          "uuid": "9e26e446-a4dc-41ef-9b8b-b705a35cdee7",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28b69ee8-fc91-4f8e-9419-6e40e455c4e4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df3cc808-cfd8-46c0-b98c-04352bc6bfdc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9d96438-27a4-4034-8403-1be2a2a773de",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "901a4f09-c0d3-41e3-a936-86fdc490a703",
      "documentation": "Get the Access Status for AWS Organization portfolio share feature. This API can only be called by the management account in the organization or by a delegated admin.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetAWSOrganizationsAccessStatus",
      "responses": [
        {
          "uuid": "c3badc7e-3c1c-4c28-bad4-69c223740f27",
          "body": "{\n  \"AccessStatus\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bbe40401-3c85-4b30-820d-624763edf989",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccfebcb7-e963-46f3-a5a4-8486402da2c6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "74851ec8-58ed-49ff-bc7c-f0bfda6e12dc",
      "documentation": "This API takes either a <code>ProvisonedProductId</code> or a <code>ProvisionedProductName</code>, along with a list of one or more output keys, and responds with the key/value pairs of those outputs.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.GetProvisionedProductOutputs",
      "responses": [
        {
          "uuid": "c8498cd3-164f-41f2-8961-67f5bd5f1a3f",
          "body": "{\n  \"Outputs\": [\n    {\n      \"OutputKey\": \"\",\n      \"OutputValue\": \"\",\n      \"Description\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bb85c55-410e-468d-bb36-e918f3d05985",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acf3014f-5ee6-48d2-b97e-dcebf51d0aa2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a85b2fc-c92a-401d-873f-ce3f02d520c3",
      "documentation": "<p>Requests the import of a resource as a Service Catalog provisioned product that is associated to a Service Catalog product and provisioning artifact. Once imported, all supported Service Catalog governance actions are supported on the provisioned product.</p> <p>Resource import only supports CloudFormation stack ARNs. CloudFormation StackSets and non-root nested stacks are not supported.</p> <p>The CloudFormation stack must have one of the following statuses to be imported: <code>CREATE_COMPLETE</code>, <code>UPDATE_COMPLETE</code>, <code>UPDATE_ROLLBACK_COMPLETE</code>, <code>IMPORT_COMPLETE</code>, <code>IMPORT_ROLLBACK_COMPLETE</code>.</p> <p>Import of the resource requires that the CloudFormation stack template matches the associated Service Catalog product provisioning artifact. </p> <p>The user or role that performs this operation must have the <code>cloudformation:GetTemplate</code> and <code>cloudformation:DescribeStacks</code> IAM policy permissions. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ImportAsProvisionedProduct",
      "responses": [
        {
          "uuid": "b5d1e922-f9e5-4bf9-975b-2de9702a0bd5",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee859250-b2dc-4370-b3c8-f23d3573034e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e21fb56-035a-41ec-988b-aae901367c26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7841e416-57e2-4e65-ba55-be3c6f2ed209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dcb8c5b0-7e88-45b3-bba0-d9153730d531",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ffc6051-0d3e-4ea3-9867-7d74b98589b4",
      "documentation": "Lists all portfolios for which sharing was accepted by this account.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListAcceptedPortfolioShares",
      "responses": [
        {
          "uuid": "c1373f90-b709-4805-ae41-f1cb3cb4e2f8",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7030020-81f5-497b-89f5-8f5cce1bec40",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5b79cd3-0a8b-46af-9b55-89488e74af7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cac8de09-922f-4ae6-b683-02df2043b244",
      "documentation": "Lists all the budgets associated to the specified resource.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListBudgetsForResource",
      "responses": [
        {
          "uuid": "6d6566bd-bb13-4bc9-a089-e144bee4c990",
          "body": "{\n  \"Budgets\": [\n    {\n      \"BudgetName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d47821ed-774a-448f-a00e-69b762a9eefd",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f46a9316-5fa5-4845-b39a-d90ba25b4a56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fb31cf48-6b30-475c-8871-d3aa109df3f3",
      "documentation": "Lists the constraints for the specified portfolio and product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListConstraintsForPortfolio",
      "responses": [
        {
          "uuid": "7512e1f9-13a4-4e32-a183-b7562c4f5e76",
          "body": "{\n  \"ConstraintDetails\": [\n    {\n      \"ConstraintId\": \"\",\n      \"Type\": \"\",\n      \"Description\": \"\",\n      \"Owner\": \"\",\n      \"ProductId\": \"\",\n      \"PortfolioId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1722d51-de44-4d9f-bcc4-8703e45ef8e7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "50ee757c-2c37-4ef2-9e0f-341e2bea93b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b3dafc1-fb8d-44d8-a773-3425a9796bc8",
      "documentation": "Lists the paths to the specified product. A path is how the user has access to a specified product, and is necessary when provisioning a product. A path also determines the constraints put on the product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListLaunchPaths",
      "responses": [
        {
          "uuid": "c97968e1-e20a-43d9-9855-c1d3572bdeb6",
          "body": "{\n  \"LaunchPathSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ConstraintSummaries\": [\n        {\n          \"Type\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"Name\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "245e3de3-1bc8-43c0-b3d8-a77042a32911",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0ee8449-4d0d-467c-a0ba-9b8d2750a116",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c9317e9-da76-4a5c-879d-76e4e25cd938",
      "documentation": "<p>Lists the organization nodes that have access to the specified portfolio. This API can only be called by the management account in the organization or by a delegated admin.</p> <p>If a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListOrganizationPortfolioAccess",
      "responses": [
        {
          "uuid": "258f8655-7a80-4622-b83c-dd6f62f71c7a",
          "body": "{\n  \"OrganizationNodes\": [\n    {\n      \"Type\": \"\",\n      \"Value\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eafece92-93af-484c-b3ab-a21eab1fa604",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8fe2355b-c137-4a0d-9006-77b1bcd2a83b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb80ec25-e0e5-4020-a91f-c513edba2024",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67efd004-7169-4161-a811-272882c5c8b9",
      "documentation": "<p>Lists the account IDs that have access to the specified portfolio.</p> <p>A delegated admin can list the accounts that have access to the shared portfolio. Note that if a delegated admin is de-registered, they can no longer perform this operation.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolioAccess",
      "responses": [
        {
          "uuid": "0da8ba6d-7015-4657-9cfb-14b836ed41c2",
          "body": "{\n  \"AccountIds\": [\n    \"\"\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4fa6deb4-d55b-474b-9c7e-936195c54ee0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82b60837-863a-4735-9107-8ebcb03cfb93",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9a1eb09-79f5-43ee-a71c-d9d5c6d99574",
      "documentation": "Lists all portfolios in the catalog.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfolios",
      "responses": [
        {
          "uuid": "14d22726-81e6-45c6-978a-a7718844ef61",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee1bb6e1-8192-4016-a104-1cfe389973ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f7417601-8b69-4161-b3e6-8d3761837428",
      "documentation": "Lists all portfolios that the specified product is associated with.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPortfoliosForProduct",
      "responses": [
        {
          "uuid": "4a1a4de8-053d-41ab-9742-a0b24d1f9020",
          "body": "{\n  \"PortfolioDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"DisplayName\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProviderName\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d4af065-3c3a-49e4-8043-a6506b22f9fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "633fd1a1-ed59-4a24-b067-c4e004172422",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a2ac768b-220c-468b-8295-a1938de96cac",
      "documentation": "Lists all principal ARNs associated with the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListPrincipalsForPortfolio",
      "responses": [
        {
          "uuid": "2afd6f8a-f801-4c09-9f5d-095b1a0e0368",
          "body": "{\n  \"Principals\": [\n    {\n      \"PrincipalARN\": \"\",\n      \"PrincipalType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65f180fb-1c8d-4c64-b5b9-13dd56931558",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bafb92d-adc3-4855-aac5-31b0e9e2657a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4babbce-9efc-4fbf-a18b-e7bc3683b460",
      "documentation": "Lists the plans for the specified provisioned product or all plans to which the user has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisionedProductPlans",
      "responses": [
        {
          "uuid": "51cb7ccf-e4fb-4884-b3f5-4184d3f699a0",
          "body": "{\n  \"ProvisionedProductPlans\": [\n    {\n      \"PlanName\": \"\",\n      \"PlanId\": \"\",\n      \"ProvisionProductId\": \"\",\n      \"ProvisionProductName\": \"\",\n      \"PlanType\": \"\",\n      \"ProvisioningArtifactId\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f0a7477-b38a-4868-a190-caa483821bae",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1d18cae-9a1f-4326-a129-ed449fb23573",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be7eda13-4420-43fd-a32f-be08e7878858",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifacts",
      "responses": [
        {
          "uuid": "7277bf47-ae07-4d76-b456-1980013f4a79",
          "body": "{\n  \"ProvisioningArtifactDetails\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"Type\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Guidance\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d64dafb-4194-4aeb-af4a-3efe9d35377b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0491a60c-5cca-422d-9673-4071e74b9ea2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b78520c7-311a-4a84-a026-48ec1dd2c8a7",
      "documentation": "Lists all provisioning artifacts (also known as versions) for the specified self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction",
      "responses": [
        {
          "uuid": "d5d9264a-4e4c-4a80-bab9-1c21ce1e0da2",
          "body": "{\n  \"ProvisioningArtifactViews\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'random.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"ProvisioningArtifact\": {\n        \"Id\": \"\",\n        \"Name\": \"\",\n        \"Description\": \"\",\n        \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n        \"Guidance\": \"\"\n      }\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01279b56-414b-42f3-a26e-a7a342e22404",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b060a952-fab7-467a-abef-f0abf5e6483a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df69c7f1-b31e-44bd-b7bb-ca2024d9abd8",
      "documentation": "Lists the specified requests or all performed requests.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListRecordHistory",
      "responses": [
        {
          "uuid": "f6207e9e-8463-4771-a941-eed19eace6e2",
          "body": "{\n  \"RecordDetails\": [\n    {\n      \"RecordId\": \"\",\n      \"ProvisionedProductName\": \"\",\n      \"Status\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"ProvisionedProductType\": \"\",\n      \"RecordType\": \"\",\n      \"ProvisionedProductId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"PathId\": \"\",\n      \"RecordErrors\": [\n        {\n          \"Code\": \"\",\n          \"Description\": \"\"\n        }\n      ],\n      \"RecordTags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9058c4f1-6862-43e8-9fe5-5d5bf8504204",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f367ce23-af8f-4144-8a2f-1726ada77c5c",
      "documentation": "Lists the resources associated with the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListResourcesForTagOption",
      "responses": [
        {
          "uuid": "d7891649-fb62-4ba0-a2c8-b065b3e1f720",
          "body": "{\n  \"ResourceDetails\": [\n    {\n      \"Id\": \"\",\n      \"ARN\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b96d7f5a-988a-4c1e-bfe0-4fb8d2338385",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cac26d7b-2649-4445-b21a-215a035b0356",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6741d9b3-0e49-4813-9500-83d6ec2c0b85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2369e9cb-001f-4b8f-ac40-30b11da69c8b",
      "documentation": "Lists all self-service actions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActions",
      "responses": [
        {
          "uuid": "53639cc1-8154-4bd7-8718-272f45f5fc67",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5fed833-4e1a-4c04-b21c-c6749b189051",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "066f9bd2-d317-4189-845a-d1558af013c1",
      "documentation": "Returns a paginated list of self-service actions associated with the specified Product ID and Provisioning Artifact ID.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListServiceActionsForProvisioningArtifact",
      "responses": [
        {
          "uuid": "8f312cde-8059-46c5-9c7a-62183723bc19",
          "body": "{\n  \"ServiceActionSummaries\": [\n    {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e2ebe0e-6371-4e70-8573-825ad4add045",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e06993f-a0b7-4f4b-9973-037e9b46e01f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0cc3658-0e81-4c99-b500-26847eea6c15",
      "documentation": "Returns summary information about stack instances that are associated with the specified <code>CFN_STACKSET</code> type provisioned product. You can filter for stack instances that are associated with a specific AWS account name or region. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListStackInstancesForProvisionedProduct",
      "responses": [
        {
          "uuid": "d599d384-b318-4fb1-bc36-37378e7d568a",
          "body": "{\n  \"StackInstances\": [\n    {\n      \"Account\": \"\",\n      \"Region\": \"\",\n      \"StackInstanceStatus\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccfa6aa6-e3d6-4484-b5f3-ed8cc0230a1f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80b72589-e9e9-439e-b3d2-688627ef4785",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3941896b-5426-4c24-93b7-e2965a7e8511",
      "documentation": "Lists the specified TagOptions or all TagOptions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ListTagOptions",
      "responses": [
        {
          "uuid": "eed3c8f9-8294-4ed5-91b5-76e414aed240",
          "body": "{\n  \"TagOptionDetails\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\",\n      \"Active\": {{faker 'random.boolean'}},\n      \"Id\": \"\",\n      \"Owner\": \"\"\n    }\n  ],\n  \"PageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7173fe6-0129-4b32-a31b-b17d38758338",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0db7e96-2849-43de-a245-7e95f2533897",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26681e94-9681-42d0-bec7-abf857ab8472",
      "documentation": "<p>Provisions the specified product.</p> <p>A provisioned product is a resourced instance of a product. For example, provisioning a product based on a CloudFormation template launches a CloudFormation stack and its underlying resources. You can check the status of this request using <a>DescribeRecord</a>.</p> <p>If the request contains a tag key with an empty list of values, there is a tag conflict for that key. Do not include conflicted keys as tags, or this causes the error \"Parameter validation failed: Missing required parameter in Tags[<i>N</i>]:<i>Value</i>\".</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ProvisionProduct",
      "responses": [
        {
          "uuid": "f04e9df0-6c86-4d42-9c16-6241eb2b652a",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a07967bc-2ff8-484b-aded-3165ab25f072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81a15359-2ade-4a1e-aa36-46c6b450d9a6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f6d1a9c-785d-479b-aaf4-55bfafd8523c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dacee677-c90a-4ee7-9c3a-f30713018e8c",
      "documentation": "Rejects an offer to share the specified portfolio.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.RejectPortfolioShare",
      "responses": [
        {
          "uuid": "9a15ab63-93c1-4dca-9033-9ef3be8ac8cf",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89c34395-2261-4d7a-9f05-7db9074b16fe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c20afcdf-66a4-401b-b7ef-d7cd71fdf1e5",
      "documentation": "<p>Lists the provisioned products that are available (not terminated).</p> <p>To use additional filtering, see <a>SearchProvisionedProducts</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.ScanProvisionedProducts",
      "responses": [
        {
          "uuid": "23c436e8-7213-4a55-85c2-42b5d886f213",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"ProductId\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"LaunchRoleArn\": \"\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14933f65-5932-49d3-adda-286886ff6ad5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c37e8de9-d81c-42a9-8bcd-faec73118524",
      "documentation": "Gets information about the products to which the caller has access.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProducts",
      "responses": [
        {
          "uuid": "92379dc0-ff9a-4190-b629-dc7f2789e097",
          "body": "{\n  \"ProductViewSummaries\": [\n    {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    }\n  ],\n  \"ProductViewAggregations\": {},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2142e76-a045-4c59-93b0-27b30833888f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bca62248-8c23-426a-b617-1836b7cc9442",
      "documentation": "Gets information about the products for the specified portfolio or all products.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProductsAsAdmin",
      "responses": [
        {
          "uuid": "4d7511f7-dedf-4379-a919-588cc8de3403",
          "body": "{\n  \"ProductViewDetails\": [\n    {\n      \"ProductViewSummary\": {\n        \"Id\": \"\",\n        \"ProductId\": \"\",\n        \"Name\": \"\",\n        \"Owner\": \"\",\n        \"ShortDescription\": \"\",\n        \"Type\": \"\",\n        \"Distributor\": \"\",\n        \"HasDefaultPath\": {{faker 'random.boolean'}},\n        \"SupportEmail\": \"\",\n        \"SupportDescription\": \"\",\n        \"SupportUrl\": \"\"\n      },\n      \"Status\": \"\",\n      \"ProductARN\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ef00a6-8bcc-4636-8532-1c94090245d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "206982f8-0fd3-4dfc-a269-ea47b0e3124c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f0c6a7da-d58d-48a9-96db-d02b2cbcef51",
      "documentation": "Gets information about the provisioned products that meet the specified criteria.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.SearchProvisionedProducts",
      "responses": [
        {
          "uuid": "16fd416d-07f7-403a-a628-ca31102334b1",
          "body": "{\n  \"ProvisionedProducts\": [\n    {\n      \"Name\": \"\",\n      \"Arn\": \"\",\n      \"Type\": \"\",\n      \"Id\": \"\",\n      \"Status\": \"\",\n      \"StatusMessage\": \"\",\n      \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n      \"IdempotencyToken\": \"\",\n      \"LastRecordId\": \"\",\n      \"LastProvisioningRecordId\": \"\",\n      \"LastSuccessfulProvisioningRecordId\": \"\",\n      \"Tags\": [\n        {\n          \"Key\": \"\",\n          \"Value\": \"\"\n        }\n      ],\n      \"PhysicalId\": \"\",\n      \"ProductId\": \"\",\n      \"ProductName\": \"\",\n      \"ProvisioningArtifactId\": \"\",\n      \"ProvisioningArtifactName\": \"\",\n      \"UserArn\": \"\",\n      \"UserArnSession\": \"\"\n    }\n  ],\n  \"TotalResultsCount\": {{faker 'random.number'}},\n  \"NextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcb70934-f62f-4810-803f-c0946d3cf926",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "71e0efe3-c4ed-438c-a9c5-521e6a0765b4",
      "documentation": "<p>Terminates the specified provisioned product.</p> <p>This operation does not delete any records associated with the provisioned product.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.TerminateProvisionedProduct",
      "responses": [
        {
          "uuid": "975c8dfe-045a-4d1c-8eb8-51f56f350d08",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d164072a-8eca-436a-a87e-47e72abe5005",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d192fa4-9994-4aec-89b6-a3dd03dc5d81",
      "documentation": "Updates the specified constraint.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateConstraint",
      "responses": [
        {
          "uuid": "e33f8002-fffa-4fdc-94b2-bc7b5bd61720",
          "body": "{\n  \"ConstraintDetail\": {\n    \"ConstraintId\": \"\",\n    \"Type\": \"\",\n    \"Description\": \"\",\n    \"Owner\": \"\",\n    \"ProductId\": \"\",\n    \"PortfolioId\": \"\"\n  },\n  \"ConstraintParameters\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6832c323-6fce-4d15-beea-0a00a3ad54cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4c76630-4964-44d3-8e78-a7a259eee708",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bc46501-15f2-4793-8bc4-58599ccaeee4",
      "documentation": "<p>Updates the specified portfolio.</p> <p>You cannot update a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolio",
      "responses": [
        {
          "uuid": "edfd6881-ee3f-41b6-9186-a3ac361efe5e",
          "body": "{\n  \"PortfolioDetail\": {\n    \"Id\": \"\",\n    \"ARN\": \"\",\n    \"DisplayName\": \"\",\n    \"Description\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProviderName\": \"\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d00e3ee-a8fb-4b62-bff4-aa1c1d024c6e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6220604e-636e-4b6a-9667-881ee17bcdd1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a1b0186-30c0-4a42-ab08-9625ed012277",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "LimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc774ed8-9d55-4c90-b4f9-c8e3965f0a79",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d437c64b-656f-4579-a2c3-1e337cfea9f7",
      "documentation": "<p>Updates the specified portfolio share. You can use this API to enable or disable TagOptions sharing for an existing portfolio share. </p> <p>The portfolio share cannot be updated if the <code> CreatePortfolioShare</code> operation is <code>IN_PROGRESS</code>, as the share is not available to recipient entities. In this case, you must wait for the portfolio share to be COMPLETED.</p> <p>You must provide the <code>accountId</code> or organization node in the input, but not both.</p> <p>If the portfolio is shared to both an external account and an organization node, and both shares need to be updated, you must invoke <code>UpdatePortfolioShare</code> separately for each share type. </p> <p>This API cannot be used for removing the portfolio share. You must use <code>DeletePortfolioShare</code> API for that action. </p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdatePortfolioShare",
      "responses": [
        {
          "uuid": "bcfb5911-f841-4f7a-9f2b-6610456a6dff",
          "body": "{\n  \"PortfolioShareToken\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d26bf1b0-f349-47ec-8046-379781aa0c23",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1c1c9d74-ff10-423f-880b-6462448f15d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53b78add-ce25-43d3-b451-f965a53c0e75",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "OperationNotSupportedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea5ae2a5-3524-4296-b908-cec31806add9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4fa1cccf-3245-47f7-ab47-93fd1ac63ada",
      "documentation": "Updates the specified product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProduct",
      "responses": [
        {
          "uuid": "b5e41fbd-b60c-4514-b825-3dd80482bbe4",
          "body": "{\n  \"ProductViewDetail\": {\n    \"ProductViewSummary\": {\n      \"Id\": \"\",\n      \"ProductId\": \"\",\n      \"Name\": \"\",\n      \"Owner\": \"\",\n      \"ShortDescription\": \"\",\n      \"Type\": \"\",\n      \"Distributor\": \"\",\n      \"HasDefaultPath\": {{faker 'random.boolean'}},\n      \"SupportEmail\": \"\",\n      \"SupportDescription\": \"\",\n      \"SupportUrl\": \"\"\n    },\n    \"Status\": \"\",\n    \"ProductARN\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\"\n  },\n  \"Tags\": [\n    {\n      \"Key\": \"\",\n      \"Value\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ae7b9ae-24a7-4437-a150-a3cb9a45c593",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ab8f7c1-b3e2-45bc-9cc6-e353964b6584",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6634d46b-0783-4646-bb51-d9130075505b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "024eaa2f-8e43-4e28-ac0c-07d1f02893d6",
      "documentation": "<p>Requests updates to the configuration of the specified provisioned product.</p> <p>If there are tags associated with the object, they cannot be updated or added. Depending on the specific updates requested, this operation can update with no interruption, with some interruption, or replace the provisioned product entirely.</p> <p>You can check the status of this request using <a>DescribeRecord</a>.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProduct",
      "responses": [
        {
          "uuid": "cac70874-cb67-413b-8f29-f10d2128197e",
          "body": "{\n  \"RecordDetail\": {\n    \"RecordId\": \"\",\n    \"ProvisionedProductName\": \"\",\n    \"Status\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"UpdatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"ProvisionedProductType\": \"\",\n    \"RecordType\": \"\",\n    \"ProvisionedProductId\": \"\",\n    \"ProductId\": \"\",\n    \"ProvisioningArtifactId\": \"\",\n    \"PathId\": \"\",\n    \"RecordErrors\": [\n      {\n        \"Code\": \"\",\n        \"Description\": \"\"\n      }\n    ],\n    \"RecordTags\": [\n      {\n        \"Key\": \"\",\n        \"Value\": \"\"\n      }\n    ],\n    \"LaunchRoleArn\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dfe9021-113b-4f2f-bcc5-50a552671d2b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b9bfae8-61f7-4919-95fc-115447ba4cee",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be07ce44-af9a-4b6b-923d-8fb2cdb32116",
      "documentation": "Requests updates to the properties of the specified provisioned product.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisionedProductProperties",
      "responses": [
        {
          "uuid": "7a10ac96-264f-4a91-a5ae-50c563859066",
          "body": "{\n  \"ProvisionedProductId\": \"\",\n  \"ProvisionedProductProperties\": {},\n  \"RecordId\": \"\",\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc8784f6-3510-4758-b274-4ab380d543e9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55fb7741-2395-4d5c-870d-ebd76e42c481",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "02d5c732-341a-45a4-bf20-7f94c14542f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eaa5f5fa-ca57-4426-8462-e71d42177e1b",
      "documentation": "<p>Updates the specified provisioning artifact (also known as a version) for the specified product.</p> <p>You cannot update a provisioning artifact for a product that was shared with you.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateProvisioningArtifact",
      "responses": [
        {
          "uuid": "5c403bf7-f72e-4971-89ac-ed77e7810323",
          "body": "{\n  \"ProvisioningArtifactDetail\": {\n    \"Id\": \"\",\n    \"Name\": \"\",\n    \"Description\": \"\",\n    \"Type\": \"\",\n    \"CreatedTime\": \"{{faker 'date.recent' 365}}\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Guidance\": \"\"\n  },\n  \"Info\": {},\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "004eecd4-36f6-43ff-939a-69dfeb690486",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e225ee71-14ba-4a50-b808-ea9326b4cc33",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "205dbb2f-d981-42e7-b5a0-cb7e52b284d9",
      "documentation": "Updates a self-service action.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateServiceAction",
      "responses": [
        {
          "uuid": "b80b090e-42e3-4905-83f8-8720fb4ef498",
          "body": "{\n  \"ServiceActionDetail\": {\n    \"ServiceActionSummary\": {\n      \"Id\": \"\",\n      \"Name\": \"\",\n      \"Description\": \"\",\n      \"DefinitionType\": \"\"\n    },\n    \"Definition\": {}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ec87921-267b-424f-acb0-478788caa470",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b858b87a-bba0-4fd5-9a36-35d0e2443443",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d75c8a84-4d8d-4130-b72e-51edefc0f59f",
      "documentation": "Updates the specified TagOption.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWS242ServiceCatalogService.UpdateTagOption",
      "responses": [
        {
          "uuid": "d0fe7e44-037f-4000-9e85-2a136e9e3760",
          "body": "{\n  \"TagOptionDetail\": {\n    \"Key\": \"\",\n    \"Value\": \"\",\n    \"Active\": {{faker 'random.boolean'}},\n    \"Id\": \"\",\n    \"Owner\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70d564fe-8e50-4f35-8ce4-80a5b7533af0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "TagOptionNotMigratedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f384c00c-b983-4738-a128-1ffbae78516f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c3c7adba-df96-4a5f-9fe5-35951532829c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "DuplicateResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c757f554-c568-4e69-94a2-30435cea42ad",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParametersException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}