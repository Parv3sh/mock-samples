{
  "uuid": "bb0fab69-9575-451f-9aeb-e16fcd0b3be8",
  "lastMigration": 19,
  "name": "NPR Authorization Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "2bb40073-cf0e-4e82-8543-c7a40b79420e",
      "documentation": "Show a web-based login/signup form to a user",
      "method": "get",
      "endpoint": "v2/authorize",
      "responses": [
        {
          "uuid": "0a888c90-344a-4067-9c25-91f3043018ca",
          "body": "",
          "latency": 0,
          "statusCode": 302,
          "label": "The correct parameters were passed in and we are redirecting to the authentication page; OR, a valid `redirect_uri` was supplied but there was another error, and the error type and message are embedded in the querystring.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            },
            {
              "key": "Location",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d9ce8d63-ab54-4e6b-9a28-98dcfbc46a10",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "A bad request; generally, one or more parameters passed in were incorrect or missing. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90b3fe0a-0a46-4b43-bd0f-d14a9c6088f2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "The client credentials were invalid (i.e., the `redirect_uri` does not match what we have stored for this client) or the authorization server denied the request. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "623c33ac-9e6b-4eff-9ed4-c1e9ce383257",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "There was an unspecified server error. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b049e49-e366-4613-952a-d1f918e85e4f",
          "body": "",
          "latency": 0,
          "statusCode": 503,
          "label": "The system is undergoing maintenance and we are unable to fulfill this request. This error will only be shown if the client did not pass in a valid `redirect_uri`; otherwise, all errors will be returned as 302s to the supplied `redirect_uri`, with the error type and message embedded in the querystring.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/html"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dbb39762-af0c-4c0f-a2b9-0c9444675dd1",
      "documentation": "Initiate an OAuth2 login flow for limited input devices",
      "method": "post",
      "endpoint": "v2/device",
      "responses": [
        {
          "uuid": "3bdc87d8-49b3-49b3-bece-ddc008450f68",
          "body": "{\n  \"device_code\": \"\",\n  \"expires_in\": 1800,\n  \"interval\": 5,\n  \"user_code\": \"\",\n  \"verification_uri\": \"http://npr.org/device\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "We have generated a unique device code and user code. These will only be valid for the amount of time specified in the `expires_in` field; if the user does not complete the login process in that amount of time, the client will need to request a new set of codes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1bd53c9-57c0-46e7-8b7c-3eb1eb0a3dfb",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "A bad request; generally, one or more parameters passed in were incorrect or missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2cbf74b-0017-4ba6-a85e-d07b36930f33",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "The client credentials were invalid or the authorization server denied the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82c5ad3b-536c-4466-a428-c731f34a6e6a",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "A server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "22045ffc-d65d-49b0-8be5-c90aa5fea851",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Retry-After",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ff82e5a-8ac7-4081-a068-2aff89a03ac1",
      "documentation": "Create a new OAuth2 access token",
      "method": "post",
      "endpoint": "v2/token",
      "responses": [
        {
          "uuid": "e3cf485e-3ca0-4436-86fa-6b040ab3e94c",
          "body": "{\n  \"access_token\": \"\",\n  \"expires_in\": {{faker 'random.number'}},\n  \"refresh_token\": \"\",\n  \"token_type\": \"{{oneOf (array 'Bearer' 'MAC')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A new token was successfully created",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "44b27e93-3504-4093-9880-cd0e87b64141",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "A bad request; generally, one or more parameters passed in were incorrect or missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d65060ef-7de9-4a2e-b29a-53c918f4bf0c",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "The client credentials were invalid (any grant type), the user credentials were invalid (`password` grant type), the user has not yet logged in or has purposely denied the request (`device_code` grant type), or the authorization server denied the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6883cad1-a0f3-41fa-a084-09c79500d34b",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "A server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59cf3668-6301-4824-a0de-0cd68d961f5c",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Retry-After",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57c11abe-39b8-4a33-9ae9-76af9d20b731",
      "documentation": "Revoke an existing OAuth2 access token",
      "method": "post",
      "endpoint": "v2/token/revoke",
      "responses": [
        {
          "uuid": "5981f557-a5b9-475c-90b2-82a20d30a585",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "The old token was successfully revoked",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c415a9c3-40ed-4a1a-9b41-d8d7410df5ad",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "A bad request; generally, one or more parameters passed in were incorrect or missing",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0adfc713-7594-4c40-b035-3037c1d1b931",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "The client credentials were invalid or the authorization server denied the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ab406f1-baae-489a-940c-7e741b4d01fc",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 403,
          "label": "The client associated with the access token in the header does not own the access token that this request is attempting to revoke.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b44d3f49-12b4-474f-9622-8e74e98779c1",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "A server error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b7b2b55d-c83e-42ba-adbb-b90d1e14a93f",
          "body": "{\n  \"message\": \"\",\n  \"type\": \"error\"\n}",
          "latency": 0,
          "statusCode": 503,
          "label": "The system is undergoing maintenance and we are unable to fulfill this request. Look for a `Retry-After` header to see the predicted time the system will be back up.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Retry-After",
              "value": ""
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}