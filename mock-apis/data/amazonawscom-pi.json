{
  "uuid": "5e48ae40-e4be-442f-911f-967673019805",
  "lastMigration": 19,
  "name": "AWS Performance Insights",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "33c584c2-992b-426a-bdd4-c02fd9c76374",
      "documentation": "<p>For a specific time period, retrieve the top <code>N</code> dimension keys for a metric.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.DescribeDimensionKeys",
      "responses": [
        {
          "uuid": "f3df39ac-b9ae-4f0c-8842-1f58602a92e7",
          "body": "{\n  \"AlignedStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"AlignedEndTime\": \"{{faker 'date.recent' 365}}\",\n  \"PartitionKeys\": [\n    {\n      \"Dimensions\": {}\n    }\n  ],\n  \"Keys\": [\n    {\n      \"Dimensions\": {},\n      \"Total\": {{faker 'random.float'}},\n      \"Partitions\": [\n        {{faker 'random.float'}}\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fe86e91-28a6-4374-b9ff-3886264c2264",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c135cbd-3bec-493b-993d-9790bb5efbf5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8df9b659-9435-44c5-a98d-7f226d5fcaf2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7c16fb36-9e3d-435a-a2a9-02bee0b86da9",
      "documentation": "Get the attributes of the specified dimension group for a DB instance or data source. For example, if you specify a SQL ID, <code>GetDimensionKeyDetails</code> retrieves the full text of the dimension <code>db.sql.statement</code> associated with this ID. This operation is useful because <code>GetResourceMetrics</code> and <code>DescribeDimensionKeys</code> don't support retrieval of large SQL statement text.",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.GetDimensionKeyDetails",
      "responses": [
        {
          "uuid": "26df1c6c-60cb-41da-a8ab-5bde466a09ba",
          "body": "{\n  \"Dimensions\": [\n    {\n      \"Value\": \"\",\n      \"Dimension\": \"\",\n      \"Status\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "624bbe69-6307-44a9-9742-eb40350f72fa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "03662495-9045-4975-9c6d-a80882504813",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1399ddf9-a2d6-45ca-8978-85506754da60",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcf15ab1-90fb-455a-ae7f-2c9dc4ca10fc",
      "documentation": "<p>Retrieve Performance Insights metrics for a set of data sources, over a time period. You can provide specific dimension groups and dimensions, and provide aggregation and filtering criteria for each group.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note>",
      "method": "post",
      "endpoint": "#X-Amz-Target=PerformanceInsightsv20180227.GetResourceMetrics",
      "responses": [
        {
          "uuid": "e3090e95-6e88-4d26-b381-d99ab70c029e",
          "body": "{\n  \"AlignedStartTime\": \"{{faker 'date.recent' 365}}\",\n  \"AlignedEndTime\": \"{{faker 'date.recent' 365}}\",\n  \"Identifier\": \"\",\n  \"MetricList\": [\n    {\n      \"Key\": {\n        \"Metric\": \"\",\n        \"Dimensions\": {}\n      },\n      \"DataPoints\": [\n        {\n          \"Timestamp\": \"{{faker 'date.recent' 365}}\",\n          \"Value\": {{faker 'random.float'}}\n        }\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d1ceec2-1cee-405f-8333-fa978d6178bf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidArgumentException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c3f1197-16c5-433d-a7f7-60223a5a3140",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalServiceError",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf41cbc2-deb5-407f-8349-5d59e0241e39",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "NotAuthorizedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}