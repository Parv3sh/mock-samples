{
  "uuid": "bcefa6b4-5e6e-4aa3-a6b2-e5ac97f4db25",
  "lastMigration": 19,
  "name": "import.io",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d7200142-4aea-40f2-b806-2ce8c7b82f0e",
      "documentation": "Cancel an existing crawl.",
      "method": "post",
      "endpoint": "extractor/:extractorId/cancel",
      "responses": [
        {
          "uuid": "f53003f9-5999-418e-a96c-fd05d5c24d9c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05caed88-e83a-4174-9f14-2157a677da06",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "No in progress crawl found to cancel.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9df06e9a-5947-4016-bdf1-e47f8b38c247",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User doesn't own this extractor, or doesn't have a valid session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b72a576-f808-4bb7-8187-0222631c742b",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Unable to find supplied extractor ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b2e5f5a0-17ce-4d0f-8559-cea3d04327de",
      "documentation": "Launch a crawl from an extractor that a user owns.",
      "method": "post",
      "endpoint": "extractor/:extractorId/start",
      "responses": [
        {
          "uuid": "daa5194c-1f46-441f-bc70-17932338cec2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "OK",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de9a6154-91ee-41e4-9593-e33243ae4b3d",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Extractor is archived or a crawl already in progress.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7735db0-b82f-4359-8be2-f004ca24e8cb",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "User doesn't own this extractor, or doesn't have a valid session.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "182b9999-7893-40b2-891b-9a4a81b00af8",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"error\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Unable to find supplied extractor ID.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}