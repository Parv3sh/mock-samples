{
  "uuid": "74389c7e-5103-460e-a162-83eef044ec75",
  "lastMigration": 19,
  "name": "paccurate.io",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "39f77de6-2609-4111-8816-f0bf24a935dd",
      "documentation": "a pure-JSON endpoint for packing requests.\n",
      "method": "post",
      "endpoint": "",
      "responses": [
        {
          "uuid": "a212965f-6e26-44eb-8839-643b148e4bf0",
          "body": "{\n  \"boxes\": [\n    {\n      \"dimensions\": {\n        \"x\": {{faker 'random.number'}},\n        \"y\": {{faker 'random.number'}},\n        \"z\": {{faker 'random.number'}}\n      },\n      \"name\": \"\",\n      \"price\": {{faker 'random.number'}},\n      \"rateTable\": {\n        \"basePrice\": {{faker 'random.number'}},\n        \"carrier\": \"\",\n        \"dimFactor\": {{faker 'random.number'}},\n        \"priceIncreaseRate\": {{faker 'random.number'}},\n        \"rates\": [\n          {{faker 'random.number'}}\n        ],\n        \"service\": \"\",\n        \"weights\": [\n          {{faker 'random.number'}}\n        ],\n        \"zone\": \"\"\n      },\n      \"weightMax\": {{faker 'random.number'}},\n      \"weightTare\": {{faker 'random.number'}}\n    }\n  ],\n  \"built\": \"\",\n  \"leftovers\": [\n    {\n      \"color\": \"\",\n      \"dimensions\": {\n        \"x\": {{faker 'random.number'}},\n        \"y\": {{faker 'random.number'}},\n        \"z\": {{faker 'random.number'}}\n      },\n      \"name\": \"\",\n      \"refId\": {{faker 'random.number'}},\n      \"sequence\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ],\n  \"lenBoxes\": {{faker 'random.number'}},\n  \"lenItems\": {{faker 'random.number'}},\n  \"lenLeftovers\": {{faker 'random.number'}},\n  \"packTime\": {{faker 'random.number'}},\n  \"renderTime\": {{faker 'random.number'}},\n  \"scripts\": \"\",\n  \"styles\": \"\",\n  \"svgs\": \"\",\n  \"title\": \"\",\n  \"totalCost\": {{faker 'random.number'}},\n  \"totalTime\": {{faker 'random.number'}},\n  \"version\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful pack.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f130e167-e6a0-415d-b631-a7e4993b221c",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "Bad request. Malformed or some other problem occurred processing the request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94fc5cd5-0bc8-455c-a7fa-f0c4677ded1e",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 422,
          "label": "Invalid input. The request was well-formed, but the parameters were contradictory, invalid, or otherwise somehow unable to be processed. More information will be contained in the error details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59ee29ab-f512-40d1-a89e-e36a748b1de4",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 429,
          "label": "Rate limited. Without an API key, only 10 unique requests are allowed per day for testing or demonstration purposes. Note that a randomized pack repeated is only a single unique request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47fdbd22-3026-462f-b992-c59ba21be90a",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"details\": \"\",\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 500,
          "label": "Unexpected error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}