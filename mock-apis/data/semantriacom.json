{
  "uuid": "0c19c612-6c84-4da8-b883-cbd133954b61",
  "lastMigration": 19,
  "name": "Semantria",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "96adae6c-8ca1-4f89-bd3b-68245c260354",
      "documentation": "Remove items from blacklist",
      "method": "delete",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "6d8633b1-3546-44b7-9648-ab833dbfef88",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bdff3f3f-ba6c-40e7-a4f2-c4f1039c3ff4",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10c35397-99b0-422a-a43c-31b616396e0e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "333b5576-6dad-410a-81eb-9fee8e14aafc",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0ab955a-6617-4b4c-9664-0c9e1bb716db",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "651ed418-e481-48bf-b65c-04aa0709bb91",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20774614-957f-4d7e-99d0-65be81b0d75c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3fed8a37-5dec-45b2-8124-e7823477f455",
      "documentation": "Retrieve blacklisted items",
      "method": "get",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "488b3b39-d4e2-49a5-afc4-4b5c14debfa0",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the blacklist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17d7137f-42de-46f9-94a7-c0a663826e14",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no blacklist found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec4100df-4f7d-4bae-be03-af1dd65bf0ca",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6625873e-883b-43dc-87e3-d0297aa678a4",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baf6ce09-62ee-4e6f-958d-ba16a2b9a5a8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a974f64a-ca1e-4c43-8405-437d075139e7",
      "documentation": "Add items to blacklist",
      "method": "post",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "1024349d-a5ab-4c0c-8e76-cc7a1b77aac3",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8009dcb9-60e4-43b4-9c24-b9f3f83ca777",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45268ada-dcd1-4f30-8362-ce93c6e25089",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73a06908-d3b5-4f94-ab7d-10952820bd6b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45f80efd-a9b7-4871-836d-45b2a3cc34a4",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a06cfcf0-f4c2-4c23-96c7-591bb52a8a24",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "604a6107-f4a1-48e4-ad7e-b25b31001ab5",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "340fc557-6ce7-4b37-a514-c0f6cd259342",
      "documentation": "Update items in blacklist",
      "method": "put",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "c95f81e7-f9fa-4ddd-9f9a-6c0ff7d02a0b",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30593850-17ea-4c70-b91d-fb2a391fb766",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dfdb2b84-14e2-4fdf-8bd1-febe3d9bc855",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0fa04b9-6594-4683-a509-f4580a099de8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f538087b-e70c-4eb0-b0e9-d886d533da54",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6774bfa-9677-452a-a99f-1109f01e78cc",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6326e003-3663-4e24-8902-8437cbee5188",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e9ff2a5-8e95-43c6-8fd3-b68f0718b5ec",
      "documentation": "Remove user categories",
      "method": "delete",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "afe905f3-bdca-46b6-9df3-f6bab2444a40",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f5d42b-412c-493e-ab24-fcf1564f2b29",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "765b5e15-1124-4fe3-8123-99bc6f511bcb",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5693077a-827b-48e4-8856-96fc19dfc87b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aee9adf-96b8-494d-b1e6-6ef49fdb7bff",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b9ede8c8-7e62-42b7-a385-e90f3490372d",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04a5f204-a550-48a4-8db8-cc62869d96c0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c767a691-9fd8-45a8-8a7e-9f0a33536eaf",
      "documentation": "Retrieve user categories",
      "method": "get",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "244af089-13c1-46b0-b2c7-59e677967171",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the categories list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec2b7c73-8d72-4f8e-ae6b-43d32208a40a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no categories found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f133a91-9e0a-43d9-bf33-72ba3005d523",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ffdea9e-c458-41c2-b870-0a1d45a88652",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b05af373-e7bd-4920-9ff9-687588d64509",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "494e8380-e5cf-407d-8e7f-eae41241229c",
      "documentation": "Add user categories",
      "method": "post",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "5e63a955-ca12-4bc3-bc04-1a8d4c8688e9",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2586c520-f337-4586-b02f-a831c1cb7775",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f776916b-741a-49d3-9880-03fd9280880c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b3cadf3-fd20-462e-8514-ea32f4457bfe",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "319e777d-6ce6-406f-bcce-87d9de95b197",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34c1e6e8-8f74-4515-9fbd-b4900258dfd7",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0e82241-307c-4dd3-9b19-d8990dec1d6d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6bbab62-d00f-45af-9720-e82bb8059154",
      "documentation": "Updates user categories",
      "method": "put",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "3c04ef99-7065-4bb5-b2c0-08ce10374ac7",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "079292bc-b5d5-48bc-ae83-794f33e4c0a8",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38395d20-e821-4b74-a218-203e911a05bd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7fcb07ef-75b5-4fb0-b190-16c2efd229b7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a098a4fd-4540-4046-b3a5-28aeaf6d39d2",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd71ab80-45d4-49a0-843d-22cb698c52d9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4216f087-3ca9-4372-b00a-4c23d9c2025a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e166913e-ed08-452a-9c33-d8f74f4a54d3",
      "documentation": "Queue collection for analysis",
      "method": "post",
      "endpoint": "collection.:content_type",
      "responses": [
        {
          "uuid": "0c9e82c4-11de-4960-9f51-5acc1bdd6d7d",
          "body": "{\n  \"documents\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21a81e70-a1a5-4406-9a8a-a07a407fb199",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8216b480-0d9c-4d85-a355-13f844e8cc48",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8959c775-d255-4ece-a8d3-b2b47537abd3",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5dadc882-67d1-40da-8f19-4475c10026a9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per collection is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ff37bdf-194e-4229-ba10-faa542650e0f",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for single document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e7407e8-d880-41f1-a118-5fd1be199906",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "20e63c39-2ff4-4b74-b938-3d53802c5725",
      "documentation": "Retrieve collections analysis",
      "method": "get",
      "endpoint": "collection/processed.:content_type",
      "responses": [
        {
          "uuid": "240ecadf-01b4-4e16-a5cb-5df392ef287a",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'random.number'}},\n                  \"length\": {{faker 'random.number'}},\n                  \"offset\": {{faker 'random.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'random.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed collections.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acf26d85-9476-4aa8-9df1-9d79b37dabfd",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed collections found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75483803-dc3a-45f6-918b-de3cc70db9d4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "27a523ac-adb2-4ad9-9b22-30b57b07520d",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dabbb475-a2f4-4cc4-bd9c-f1b205bb799e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4e369541-040b-439a-a392-b2aefa19bbaa",
      "documentation": "Cancel collection analysis",
      "method": "delete",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "d7c72309-bc69-49c7-802d-f52e1a9ab674",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72a3ecff-fa71-4394-b776-31b8fe607cf1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9532cf20-8be3-4b9f-95c3-e88c9b33ec34",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a25bcbac-6af7-4add-a2b8-0d79d91c84e3",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "621591c4-7ceb-420e-bc23-6476b507252b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a643f3d-0bd3-4ee9-aa66-61d797c7365c",
      "documentation": "Retrieve collection analysis or its status in queue",
      "method": "get",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "bb62d575-9397-4ea4-a84b-adc017c187e2",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'random.number'}},\n                  \"length\": {{faker 'random.number'}},\n                  \"offset\": {{faker 'random.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'random.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf700d7-d256-4536-89ff-77c1f924dbfb",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7445b240-f223-46a8-bf57-1c381fcd4c60",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81a0829d-8a83-4a4b-8167-f7f54c8f587a",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fff691b9-6acc-4d0d-9fd8-01c2dbec0662",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0cb5692c-54fa-4c90-9ef9-7893e69ef7df",
      "documentation": "Remove user configurations",
      "method": "delete",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "ba9e07ba-ce5b-431b-b5f3-1fc4e4af1cb0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a51859f-7e4f-4ead-92cb-13509bbfdfae",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9af12f4-84cd-4c27-a5f5-705650e10cf6",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "352a1fc2-f444-43f8-8f84-4f6d70b0cc96",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95c801bf-99f4-4a93-b308-7e3111c26673",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b5cfd98f-92a8-4c6f-b938-a6615e783c84",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8088099-4d7a-424c-a327-f03fb6ed4b5e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cca63203-4cc8-4f61-b3cc-6be1820c534c",
      "documentation": "Retrieve user configurations",
      "method": "get",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "bcc40a35-269a-4534-9e19-2b12700b6335",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de9ecd25-d510-40f6-bfa3-5ad84248ddcf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62f3c8ea-01a7-488e-9d6e-0345d58a5efa",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ded04a1f-ac82-4346-ac5a-24db74d5eebf",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca7558eb-5ebe-49e4-bb51-2bd4e2cdf367",
      "documentation": "Create user configurations",
      "method": "post",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "430bb270-6946-40c2-ad63-c980e25dd706",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3a2d2623-1a1e-4ce6-88f9-f423869b2274",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "790b0b8c-27d0-4ffd-9208-b267c5f022d1",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c29e8f06-9141-4b02-9aa3-2bc72a632974",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9277b13-9c76-4e46-bacd-ee3b4d67be58",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cae8a1eb-3e95-48f4-86c5-5886611d6d7a",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5aee5c0e-c69f-489a-91ab-6f79b0f20848",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dd3f919-8602-4fd2-91ef-4bf66ea33520",
      "documentation": "Update user configurations",
      "method": "put",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "9e973d9d-d984-4336-9a1c-8770a2b5879d",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd1f4514-a4a5-4b3b-ae6f-2329de6a7af1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ffbc7dc-55fb-493a-9f12-9715a2ac742a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea512cc4-6dec-4495-a4aa-eb3c314d01d6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80a9e702-1d4d-4984-89a7-5f69d211eef6",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81bf03fa-84d5-4cc1-acbe-a190c9b519a4",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a481e19f-5ebd-42a3-9e89-0ba9b72d36b6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "169aebc3-59ba-459f-ae2b-45497b32b3d1",
      "documentation": "Queue document for analysis",
      "method": "post",
      "endpoint": "document.:content_type",
      "responses": [
        {
          "uuid": "ac9b6b8a-a790-4eeb-b043-9fca3ae82154",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e35d212b-c571-4284-b59e-2075b73ec074",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "39582cee-85e1-493d-8f9a-40f8e9b28c76",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f288e5f-97af-4f9d-8589-91bb194c357e",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a151a54-5a7b-4429-884e-9fb49d360358",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce8798a8-0bd6-45f4-84a4-c1574d05210d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d5c9a39d-d96b-43a7-b8cf-9365c73d8796",
      "documentation": "Queue batch of documents for analysis",
      "method": "post",
      "endpoint": "document/batch.:content_type",
      "responses": [
        {
          "uuid": "bc6e30a8-6364-4cd9-b7b6-9eca4b4adfba",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24bd7c5e-936e-4116-9e7b-1a97c71fb550",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "08501a6d-f53b-48bc-8458-18aa1fff0d67",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfe014e0-1d47-4490-8009-6a594e0d7925",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de5bcb1f-c1fd-4b29-937d-ba952dfbc4fa",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is forbidden for selected processing mode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cde8fa78-5024-4ca1-8327-92248c1a0c69",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per batch is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea8b38b1-d924-459e-9ad7-139a3eb51ffc",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adde6ec3-e3d4-49d4-be91-81a5792ce99c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7d877292-6997-4be6-8d89-6b7934bd9935",
      "documentation": "Retrieve documents analysis",
      "method": "get",
      "endpoint": "document/processed.:content_type",
      "responses": [
        {
          "uuid": "04928b2b-aace-4166-aff5-ff82cd2c7236",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'random.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"strength_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'random.boolean'}},\n      \"is_polar\": {{faker 'random.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"sentiment_score\": {{faker 'random.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'random.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'random.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'random.float'}},\n    \"neutral_score\": {{faker 'random.float'}},\n    \"positive_score\": {{faker 'random.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"speaker\": {{faker 'random.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'random.boolean'}},\n      \"is_negated\": {{faker 'random.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'random.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'random.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed documents.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b24bca26-ef42-4de1-8932-974c08ca61d6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed documents found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "620466b3-f2cf-4701-93bc-c24ef4d7a089",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "088f72a4-2417-44b1-a6e4-422fe77eec0b",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "256f3c6a-bb83-43ae-88f0-f74c82c9078e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1784df99-962e-4c4a-b8fc-b61997262a8e",
      "documentation": "Cancel document analysis",
      "method": "delete",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "ea44918b-1e41-45d2-99c5-047b79456504",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97af119c-70ab-4c89-ab61-763496e5a90a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aba39e49-5b84-4e0c-bd5f-3bd455a7812a",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52a913e4-188c-4bf9-a827-e356243c1fc8",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "195f8070-82db-4ee4-8ee5-4fe81bf1fcdc",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "685d380d-7b0b-4025-ac00-738d36af219b",
      "documentation": "Retrieve document analysis or its status in queue",
      "method": "get",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "1621f7e5-d9d7-4ae8-b28b-5089bd079d13",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'random.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"strength_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'random.boolean'}},\n      \"is_polar\": {{faker 'random.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"sentiment_score\": {{faker 'random.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'random.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'random.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'random.float'}},\n    \"neutral_score\": {{faker 'random.float'}},\n    \"positive_score\": {{faker 'random.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"speaker\": {{faker 'random.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'random.boolean'}},\n      \"is_negated\": {{faker 'random.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'random.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'random.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43c9a554-3c45-4ce0-b49b-005cc4df6394",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fe8c444-ade8-4d28-81ee-9a4a07395915",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41fda3c2-8a02-413a-80de-cefd2aef51b2",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48620ea9-c9b4-4254-8c9f-1a714c52f787",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc96ff21-c8dc-4e02-a82d-a7952b39530b",
      "documentation": "Remove user entities",
      "method": "delete",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "34fad857-1b2d-4409-ab9d-84084f26aec2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74089846-3469-4b48-b577-b223d53f0a6c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e956d789-4129-40bf-a96c-c36f189ada87",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99f2e77c-2572-4ae9-9472-b6ccdc0ceaf3",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f8247b6-4f02-4127-81e3-adf8771152d0",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47327b3a-77ca-47ad-9077-1e9085dea414",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1cf2502-14a5-46ec-8931-cb7a584f2cb4",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a9bc828e-f79c-4a55-b4e3-374b85442806",
      "documentation": "Retrieve user entities",
      "method": "get",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "932817eb-612b-4828-8906-7900b07eb733",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the entities list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "67cf2852-2b51-413e-8d5d-b8f93db604c0",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no entities found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0194ae98-94ee-4bff-a948-143edfbe21a0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e82f2e7-923d-4f52-a06e-503ec4b3c327",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75ced26c-a71f-49bc-bd26-d018918c3e00",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75a8f438-c5ad-40db-92b7-69c9f3bd9a0b",
      "documentation": "Add user entities",
      "method": "post",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "5e3a2c44-841f-4e07-a398-a8da6ef40044",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88deb397-c5e6-4a97-96b8-27e60c4854b7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "61ed9a89-67a3-4e14-97d5-33e1123495dd",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa4db178-2353-4b53-8861-03b9a255bf41",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15d6e1e1-f268-4de4-9ada-08a5992d4442",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1d750033-e744-4146-af1f-90be60b478d3",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1af80095-7760-4ee1-9a4a-1abc5a5c8ca6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b88b5ae9-7ff1-4e9f-92c4-5c97c25a33d2",
      "documentation": "Update user entities",
      "method": "put",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "e42cc0b9-3875-4173-812e-322d72eb5021",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c2f69e8-39b7-4e27-8ad9-7550aef9d06c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c4798b6-14d0-402f-9ad7-e6090ab8a04a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cfb35b81-6851-46fe-bf09-97d68977b33b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5cd8c1a-d5eb-4a00-afa5-5ec5823b12d2",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d167c5d-04be-45e5-b4ea-e3fa1316e111",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bbe4079-0180-4037-b29e-fba19e67ddd0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9b52e4c-0d26-41ef-8772-ecb500d6017e",
      "documentation": "Retrieve supported features",
      "method": "get",
      "endpoint": "features.:content_type",
      "responses": [
        {
          "uuid": "a45af754-c8c1-44f7-8bd3-e8134bcead1a",
          "body": "[\n  {\n    \"detailed_mode\": {\n      \"auto_categories\": {{faker 'random.boolean'}},\n      \"entity_mentions\": {{faker 'random.boolean'}},\n      \"entity_opinions\": {{faker 'random.boolean'}},\n      \"entity_relations\": {{faker 'random.boolean'}},\n      \"entity_themes\": {{faker 'random.boolean'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"language_detection\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"pos_tagging\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"sentiment\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"summarization\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"theme_mentions\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"discovery_mode\": {\n      \"entity_mentions\": {{faker 'random.boolean'}},\n      \"facet_attributes\": {{faker 'random.boolean'}},\n      \"facet_mentioins\": {{faker 'random.boolean'}},\n      \"facets\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"theme_mentions\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"html_processing\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"language\": \"\",\n    \"one_sentence_mode\": {{faker 'random.boolean'}},\n    \"settings\": {\n      \"blacklist\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d66fee39-ae8d-41f3-b2d1-8ac3535dc220",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "160884c6-ead6-4c21-9bae-e2e1d54b1ead",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e93a631a-4b3f-4ce7-bf4b-d1a4aa116f2e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f4a0498c-68bc-4f04-b1df-8a1b942ce2a1",
      "documentation": "Remove sentiment-bearing phrases",
      "method": "delete",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "0b37bf58-7733-4dcb-acf6-c10db2bc9b40",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b76dd1a1-6195-41d9-820e-60d4be72eded",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc089602-5a38-46bd-b179-14e9d05a460c",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10e14d48-e3eb-48b4-b0c9-7cb497990e4c",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "735dcb82-469e-4259-87f8-ef1309eb433d",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "88e9d8ba-ad21-4d4d-86a6-ef948f2985ef",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b30b5324-6f07-438b-9559-ad0ce887ab2d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2e183242-786d-4d9f-b49c-cafe0d588c03",
      "documentation": "Retrieve sentiment-bearing phrases",
      "method": "get",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "0f354e58-6e23-4ca1-9f4b-71d493ba9b76",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6806b4b-3da5-4ec3-9e8a-26366778a531",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no sentiment-bearing phrases found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76a7fe5c-259a-4b65-9ca6-ef87e2712159",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4b8b20e6-9dad-40b0-8482-3129d139d351",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c47a1047-0887-4796-ad93-c910a70ae008",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ec0011a-3665-4d26-91e9-f8ce43f652ca",
      "documentation": "Add sentiment-bearing phrases",
      "method": "post",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "eff3dfdf-7ed5-4b69-bab2-bcd5a9b62406",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c52a27f-65a4-49be-b5ae-2e1a884643e6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "43b7d4a3-78a0-46ec-a265-5bf8f5e65a1b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af87c917-2e59-4cef-a0b5-10cbe797f24f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04703409-15d0-42d7-9417-519aba866fde",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f44f1615-7f84-464a-8a1b-bb9f487b38c7",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84553a9b-c168-4bbd-9974-eea069b1fe2e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b4734544-495d-47e4-9ddd-8bc44cc2d6d2",
      "documentation": "Updates sentiment-bearing phrases",
      "method": "put",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "2e1c1b3f-adc1-4fb1-b063-47db26631e21",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5cbd2656-3fa3-42e6-920f-0831686d4523",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "200152f3-3605-4b1e-8b93-6e7ffa4a4765",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b840edca-33ff-42ff-8fe6-abd10619cbac",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c3c6f0b-820b-4e8a-8264-e1494ff11366",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a68a01c-b0d2-46a6-806c-2e07c7fdc2e9",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e303fd6-cdff-4f38-9c98-47228cfe2df6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44738577-c075-44bf-a610-a9757ed2dbbe",
      "documentation": "Remove queries",
      "method": "delete",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "f125b773-4de8-41c0-a9fe-0866d50a86d0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b538998f-fdfa-49af-a207-9c53e09c75b5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07733143-8dc4-45fb-b73c-4adbcfc63785",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc17f087-50e4-47fa-b011-c42e962bb65a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6252f7b-9baf-4577-a06c-b17414d25a86",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3aa4a2b7-22b9-421d-a6f9-6cf8c89219f9",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f90e707e-3e44-462f-b783-ebade79548c1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99d1e3b2-21ee-4ee6-8337-b6470e44e99f",
      "documentation": "Retrieve queries",
      "method": "get",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "61070044-ac43-49b5-98e6-94e4f4cff161",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the queries list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ac09acb-ad81-463c-ab47-29074710a4e3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no queries found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "96ebe041-b2a0-486a-9aea-f11bd437db0a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ac1c087f-9dd2-4225-a9eb-ebefc16b4ef5",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f3d3c6b-8a98-4d5a-b989-c572a38259bd",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d4159553-a058-4ef1-8770-e348f48d7cdd",
      "documentation": "Add or update queries",
      "method": "post",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "20f66a7b-5946-4d4a-910d-9667ee80421c",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ae91293-a373-4ac1-8b23-3ca27ea592a1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cc4a681b-0cf9-4611-9529-094ddc06120e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a6db426-ec25-4529-bfdf-983ea3616e41",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e66d242-fd03-46ad-a220-116bf6abce0a",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8cf480e-b8cb-41d3-9dea-27bb41f8e37d",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b29c0499-5e72-4951-94d6-14909e5c6c4f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1082fa3b-8aa0-41d8-a6bc-8cef01e24613",
      "documentation": "Update queries",
      "method": "put",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "480d0c15-8def-4b2f-abd8-3f5cc3c15e6d",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c2c25c7-a3d4-42c3-9170-8e75af6894ad",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1099c737-e3a3-4d20-89f7-7554be1a8934",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c725ad44-d81e-4832-bab8-f77eac17eddb",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75051458-eff6-4a6d-8ca0-53403dd06c18",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "784c2b6b-828b-4429-8b6c-e2fb6cf92788",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f3d5ec0-b56d-400a-8740-01e9b697cff1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c07aa89-84da-47e3-a71e-e68954037552",
      "documentation": "Retrieve usage statistics",
      "method": "get",
      "endpoint": "statistics.:content_type",
      "responses": [
        {
          "uuid": "c9a9db95-8995-4c64-af5d-d61564873364",
          "body": "{\n  \"calls_data\": {{faker 'random.number'}},\n  \"calls_polling\": {{faker 'random.number'}},\n  \"calls_settings\": {{faker 'random.number'}},\n  \"colls_documents\": {{faker 'random.number'}},\n  \"colls_failed\": {{faker 'random.number'}},\n  \"colls_processed\": {{faker 'random.number'}},\n  \"colls_responded\": {{faker 'random.number'}},\n  \"configurations\": [\n    {\n      \"calls_data\": {{faker 'random.number'}},\n      \"calls_polling\": {{faker 'random.number'}},\n      \"calls_settings\": {{faker 'random.number'}},\n      \"colls_failed\": {{faker 'random.number'}},\n      \"colls_processed\": {{faker 'random.number'}},\n      \"colls_responded\": {{faker 'random.number'}},\n      \"config_id\": \"\",\n      \"docs_failed\": {{faker 'random.number'}},\n      \"docs_processed\": {{faker 'random.number'}},\n      \"docs_responded\": {{faker 'random.number'}},\n      \"latest_used_app\": \"\",\n      \"name\": \"\",\n      \"overall_batches\": {{faker 'random.number'}},\n      \"overall_calls\": {{faker 'random.number'}},\n      \"overall_docs\": {{faker 'random.number'}},\n      \"overall_exceeded\": {{faker 'random.number'}},\n      \"overall_texts\": {{faker 'random.number'}},\n      \"overcall_colls\": {{faker 'random.number'}},\n      \"used_apps\": \"\"\n    }\n  ],\n  \"docs_failed\": {{faker 'random.number'}},\n  \"docs_processed\": {{faker 'random.number'}},\n  \"docs_responded\": {{faker 'random.number'}},\n  \"latest_used_app\": \"\",\n  \"name\": \"\",\n  \"overall_batches\": {{faker 'random.number'}},\n  \"overall_calls\": {{faker 'random.number'}},\n  \"overall_docs\": {{faker 'random.number'}},\n  \"overall_exceeded\": {{faker 'random.number'}},\n  \"overall_texts\": {{faker 'random.number'}},\n  \"overcall_colls\": {{faker 'random.number'}},\n  \"status\": \"\",\n  \"used_apps\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with statistics details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cf252c2-e270-4c08-83be-0e53440b306e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b03d873-42fe-4006-8559-b24daec580b4",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79d17550-6a73-4fdd-9025-b08c34a0a58c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c7529493-0994-4877-85b3-301810b6faa5",
      "documentation": "Retrieve API status",
      "method": "get",
      "endpoint": "status.:content_type",
      "responses": [
        {
          "uuid": "d484e55d-4de3-46f7-adb4-4b6aa5bb0d15",
          "body": "{\n  \"api_version\": \"\",\n  \"service_status\": \"{{oneOf (array 'available' 'pending' 'sold')}}\",\n  \"service_version\": \"\",\n  \"supported_compression\": \"\",\n  \"supported_encoding\": \"\",\n  \"supported_languages\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "324aba9b-f725-467e-a16c-41e13c9054f8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "04416927-a8c1-412c-9593-dd1a6132bc0f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ffbdb48-99e5-403f-87c9-2b0f7bedee62",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "39b94d73-bd89-41ae-9a8a-894998e74f29",
      "documentation": "Retrieve subscription details",
      "method": "get",
      "endpoint": "subscription.:content_type",
      "responses": [
        {
          "uuid": "00fa79e4-c32f-4414-b90e-71f0ccd540f0",
          "body": "{\n  \"basic_settings\": {\n    \"auto_response_limit\": {{faker 'random.number'}},\n    \"batch_limit\": {{faker 'random.number'}},\n    \"blacklist_limit\": {{faker 'random.number'}},\n    \"callback_batch_limit\": {{faker 'random.number'}},\n    \"categories_limit\": {{faker 'random.number'}},\n    \"category_samples_limit\": {{faker 'random.number'}},\n    \"characters_limit\": {{faker 'random.number'}},\n    \"collection_limit\": {{faker 'random.number'}},\n    \"configurations_limit\": {{faker 'random.number'}},\n    \"entities_limit\": {{faker 'random.number'}},\n    \"output_data_limit\": {{faker 'random.number'}},\n    \"processed_batch_limit\": {{faker 'random.number'}},\n    \"queries_limit\": {{faker 'random.number'}},\n    \"return_source_text\": {{faker 'random.boolean'}},\n    \"sentiment_limit\": {{faker 'random.number'}}\n  },\n  \"billing_settings\": {\n    \"app_seats_allocated\": {{faker 'random.number'}},\n    \"app_seats_permitted\": {{faker 'random.number'}},\n    \"data_calls_balance\": {{faker 'random.number'}},\n    \"data_calls_limit\": {{faker 'random.number'}},\n    \"data_calls_limit_interval\": {{faker 'random.number'}},\n    \"docs_balance\": {{faker 'random.number'}},\n    \"docs_limit\": {{faker 'random.number'}},\n    \"docs_limit_interval\": {{faker 'random.number'}},\n    \"docs_suggested\": {{faker 'random.number'}},\n    \"docs_suggested_interval\": {{faker 'random.number'}},\n    \"expiration_date\": \"\",\n    \"limit_type\": \"\",\n    \"polling_calls_balance\": {{faker 'random.number'}},\n    \"polling_calls_limit\": {{faker 'random.number'}},\n    \"polling_calls_limit_interval\": {{faker 'random.number'}},\n    \"priority\": \"\",\n    \"settings_calls_balance\": {{faker 'random.number'}},\n    \"settings_calls_limit\": {{faker 'random.number'}},\n    \"settings_calls_limit_interval\": {{faker 'random.number'}}\n  },\n  \"feature_settings\": {\n    \"collection\": {\n      \"concept_topics\": {{faker 'random.boolean'}},\n      \"facets\": {{faker 'random.boolean'}},\n      \"mentions\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"query_topics\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"document\": {\n      \"auto_categories\": {{faker 'random.boolean'}},\n      \"concept_topics\": {{faker 'random.boolean'}},\n      \"entity_themes\": {{faker 'random.boolean'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"language_detection\": {{faker 'random.boolean'}},\n      \"mentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"named_relations\": {{faker 'random.boolean'}},\n      \"opinions\": {{faker 'random.boolean'}},\n      \"phrases_detection\": {{faker 'random.boolean'}},\n      \"pos_tagging\": {{faker 'random.boolean'}},\n      \"query_topics\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"summary\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}},\n      \"user_relations\": {{faker 'random.boolean'}}\n    },\n    \"html_processing\": {{faker 'random.boolean'}},\n    \"supported_languages\": \"\",\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"name\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e9335fd2-fa2a-4af6-8413-b25ec080b7b7",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "272b1e3d-fa64-4517-9ffe-99ad69e2d63d",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4df7bbb-a168-4254-9edc-cdde4c6ca583",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a573d29-157a-4120-ab41-0fe9d832389c",
      "documentation": "Remove taxonomy nodes",
      "method": "delete",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "4a04158a-fa0d-4d9a-971f-710949cdedcd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5532a7a5-e2d0-4d47-a33a-8a38ffa017ae",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8593f1b1-6f0f-4a74-ba22-9f94099ad290",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f8339d4-4965-415f-8431-2201bbae75d0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dae6f1c1-ee80-4975-800b-fc6834d2b7c2",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ba478ae-0b66-425e-9bae-6afc43212733",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5990ee98-5bd7-4c51-97f5-e64c0d9ad51b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d84723f-e577-498d-ad6b-3e8e26117e79",
      "documentation": "Retrieve taxonomy",
      "method": "get",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "b8fb3fb8-02d2-4c2f-801b-d8be656b307a",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the taxonomy list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "078b936e-8e26-4334-a1c9-15a7f34245e5",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no taxonomy found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0ad3c8c0-1250-4bcd-b34e-13882a9324b8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a78a3a-d9cd-4419-b005-8685b06de054",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0cb8aeaf-a0d7-491f-b0a3-5b12196bbf3c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90006ce3-d51d-4e48-9819-3d220d0570ad",
      "documentation": "Add taxonomy nodes",
      "method": "post",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "9a248e5d-773d-43c4-bf6f-b5845da48935",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "670c0215-4346-4bca-8a2c-7bcfd09f7abc",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca1a83ab-209f-482c-81ea-5ea9457278fc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "952d8ecb-7b2a-492f-8e34-b91ca6692b47",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "581b2a31-f997-4ea9-af31-ebcf8fa69667",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14e8ed18-5f10-4cb2-af21-4c248acfcbb3",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dffa85e-c2fc-4b16-9fc5-c116b7e6f719",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e3e0a006-1910-4424-abb4-fdea0429e134",
      "documentation": "Update taxonomy nodes",
      "method": "put",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "b6046c64-ab77-4c28-9144-cf8b9af4b8e5",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "566b91bf-a3c1-41f9-92cd-18a70594ff3e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "331e0569-bd43-45da-a4c3-9967fbb6bdf2",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d30e9456-67fc-4c3b-afe6-c8df1da8f791",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d1ab4205-392a-4e2c-b0b9-a2357053357f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be449d03-222b-48c5-ad94-77b09b68cea0",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8d3c373-50c4-42ef-aecb-9ab91671a254",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}