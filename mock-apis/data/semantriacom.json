{
  "uuid": "c0d88141-ea05-47b9-a807-3b61367977e7",
  "lastMigration": 19,
  "name": "Semantria",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d6362382-df84-4a31-b15c-1b93afa0a215",
      "documentation": "Remove items from blacklist",
      "method": "delete",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "88c26a99-62d8-43ca-a5db-c39c7af11f6c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899cb3e9-3367-4eed-a02a-d7b22c3d7e88",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89f8f718-291a-4b62-bf4f-32efa5c4ed4f",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab774034-02c7-4de6-82fb-0293b39781af",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16746c8d-8945-4708-b752-6ba00553b180",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e36c6e57-4938-46b9-898b-05b6e933ab13",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4bf8391-996f-450a-91d4-c665b503e2e8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c28ccb40-7139-4133-abbe-6bb7caaf8c8a",
      "documentation": "Retrieve blacklisted items",
      "method": "get",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "02ca5131-936d-4a9b-aad8-f86d7ff2ef76",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the blacklist.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f061a0b9-3941-475c-8638-fc57864aefa6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no blacklist found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "104db99c-7f61-44d0-8909-d911a741586f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f17fb1aa-56ce-4ee8-ba6d-c0a752e46960",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "72662a7b-be5a-41ed-9af3-f5ae15d369d0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "717982d4-d27e-4fc2-9ac0-d3604e964b04",
      "documentation": "Add items to blacklist",
      "method": "post",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "eb13b6f0-b9b3-4846-bdce-c616dcc795c9",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c42e101-67f9-4a26-aa01-bd0b0f93da44",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0be73d8f-f2e3-4e4f-ac10-d6a4e5760a38",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f9d7bc8-ede6-4ac7-acc7-cf2a8c0451c6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6060655-be15-4c84-84cc-7b649307a095",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8fd1010-46f9-4f84-a706-d3ad3e718da3",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb4d9712-de23-48af-901e-14cd598e282e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7fe30dd1-6c19-4c69-a8f5-cce692574bc6",
      "documentation": "Update items in blacklist",
      "method": "put",
      "endpoint": "blacklist.:content_type",
      "responses": [
        {
          "uuid": "6c6e0d3b-b8c8-40fb-ac67-e04693531265",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30d59ecf-73a1-4233-8f1c-6be6d86ba7ec",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78d4c2be-51c4-433e-a498-bb4ddc5690f9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb038e5f-b723-4ae3-9db1-e500a56310cd",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddd64c6c-fbc8-4a5a-b15c-650156acf999",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1dd6323b-8d61-4a49-8244-8af1dad01048",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed blacklisted items per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01fec546-b965-40af-961a-a13568addca1",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eae962c-4d9a-4a2c-aa81-04eb11b25962",
      "documentation": "Remove user categories",
      "method": "delete",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "5470c018-fd00-4786-812f-80946f1d60dc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "82397eba-3eb2-46c8-8cfd-a6e975acc6d8",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56b6518c-02e3-4ca0-9294-ac9532d2f703",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83c3e79d-b3a5-439b-86c2-53cffda35cb0",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4312da29-5101-4923-9aa7-fa1383fe8792",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "071fa8a6-ec22-4366-907c-51d0811492ae",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79bb202f-fff9-4974-9324-c3f0c4ae9ebf",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5ee718b-a31e-45c1-a41c-8ce8867fa2b5",
      "documentation": "Retrieve user categories",
      "method": "get",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "477a6126-1a9a-41fb-8e29-e492745bf6ac",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the categories list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "435b4d19-4abf-4b0f-9c58-72cf35d905d3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no categories found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "99b0e5f1-90d3-4043-99a3-1f6cab406266",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "094a33ab-4c3d-463b-a6aa-39c669e00d15",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "17010eff-7aa5-4a70-9f30-83898811025a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "13a608a6-5470-412a-8b86-f0321dc5a673",
      "documentation": "Add user categories",
      "method": "post",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "3dd83a78-df30-4509-b9aa-d47ed103cf67",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69c74016-1422-4c03-a69e-b0851d2ab8e6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0b784fc4-c1bd-4da1-8003-0d5a72f3dc68",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "495c7f78-97e7-401f-a12f-966a0856f44d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "479e4a81-3835-4f8c-9d05-9980391017dc",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "127600a8-e656-43a4-bf27-c597b80655a8",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcb03522-e747-4f96-b7bd-83de89aaae8f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "acc14459-1718-478a-a70b-3dfe85f43f99",
      "documentation": "Updates user categories",
      "method": "put",
      "endpoint": "categories.:content_type",
      "responses": [
        {
          "uuid": "34799db9-8bea-4dfa-8e0d-a46a0fd099e8",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"samples\": [\n      \"\"\n    ],\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fcfe526-0af5-43bb-8d7e-f432b608b351",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e5c157e4-4870-44c7-b3e0-45253adac207",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "798661f5-a363-4e71-bfb0-234928170baf",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b402c6a-2e3d-4250-8f68-d687683dfe89",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b415d92-0ca3-48b7-888e-5f7afec9131d",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed categories per configuration or samples per category achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0144ddd7-3010-48fa-9b6d-b504702e5d56",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "44d9ad1a-eeb9-4008-b38a-54178cc0ea3b",
      "documentation": "Queue collection for analysis",
      "method": "post",
      "endpoint": "collection.:content_type",
      "responses": [
        {
          "uuid": "2d54ea95-3ada-43f7-a94e-19d393d45bdc",
          "body": "{\n  \"documents\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f8142f0-6fc7-44ae-90b9-eb9f03bc5fa6",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "423aba0c-bd48-482c-a760-6056e7efb027",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d913ce29-e37b-40dc-aca2-614033eac635",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b25464ba-8820-465f-9511-ed8c9138d655",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per collection is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b455a6e9-19f4-4c90-aefe-37b1b8c31a8e",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for single document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "335b78ab-ddbc-46a9-bda6-13245aa14d26",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1e2de60a-9018-416f-a76f-95d636480e86",
      "documentation": "Retrieve collections analysis",
      "method": "get",
      "endpoint": "collection/processed.:content_type",
      "responses": [
        {
          "uuid": "d4526cc6-e115-4a9e-96b6-8a08070f4410",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'random.number'}},\n                  \"length\": {{faker 'random.number'}},\n                  \"offset\": {{faker 'random.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'random.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed collections.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ad225f4f-3f6b-47af-afbf-173ba990378e",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed collections found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7350fa74-e515-4d4c-b245-bf52d1830c3a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3dc7998d-a64b-4999-b337-66d3fecf37e3",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fe115ad-df35-40c6-abe1-53a3a321cda6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0d54caaa-4f16-4b1a-852f-abd6ec8c655a",
      "documentation": "Cancel collection analysis",
      "method": "delete",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "ddbd30e0-bea3-4fb4-9b3f-0c0d47dc9927",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c8cc939-2f39-4d9d-8e44-a07d56a2e0d2",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fdbc0963-4272-42e5-b7f3-267bfa66be45",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56d56d51-62b9-48a3-b4e1-998e5b68a0b4",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fa323e7-aca8-4a66-9275-b518a2a2bd7d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2dd875d3-7a03-4a59-bb71-1f069c7679af",
      "documentation": "Retrieve collection analysis or its status in queue",
      "method": "get",
      "endpoint": "collection/:collection_id.:content_type",
      "responses": [
        {
          "uuid": "b15a5d08-11b6-41e9-b6e0-2efd9d1c216e",
          "body": "{\n  \"config_id\": \"\",\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"facets\": [\n    {\n      \"attributes\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"label\": \"\",\n          \"mentions\": [\n            {\n              \"is_negated\": {{faker 'random.boolean'}},\n              \"label\": \"\",\n              \"locations\": [\n                {\n                  \"index\": {{faker 'random.number'}},\n                  \"length\": {{faker 'random.number'}},\n                  \"offset\": {{faker 'random.number'}}\n                }\n              ],\n              \"negating_phrase\": \"\"\n            }\n          ]\n        }\n      ],\n      \"count\": {{faker 'random.number'}},\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}}\n    }\n  ],\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"tag\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee1a0166-c087-4203-95f4-cec0b690fa7d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5458fd7-209e-45f7-907f-e0640d05399b",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f252947-1bcb-479a-8600-9cd52e836da0",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No collections with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b0ef8d5-6790-43de-acda-afd9cb95dd1c",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7378672-b996-4e79-83df-849695795d4a",
      "documentation": "Remove user configurations",
      "method": "delete",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "4c45a15e-3ee9-4546-9ebb-9657e8532d32",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35bbfca4-5e83-49bd-9bf8-98fcfcf062fd",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "336d8ea8-a188-4e62-bb6f-41ebcbcaf851",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64261ccb-0aca-463a-aabc-492919dcba0b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1d0223f-e319-4ca4-b295-ab4c71a6c1f5",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3428db76-70dc-41cf-a12c-639abb018457",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b32f636-4cf9-4c68-95e9-23124b1eb04b",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "352e69a0-2514-4c0c-9355-0c0ede1bbafe",
      "documentation": "Retrieve user configurations",
      "method": "get",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "a85f684b-d572-4f9c-aa50-83d0b4e64f82",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78bf9ded-6a09-4014-bd6e-1abdf50b9fe4",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55129df6-ec14-40ec-a0db-c855f1b79e50",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8036141a-1977-4397-9532-0265f2c9cc09",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a5edb59c-e62b-47f3-8951-0b889ab74743",
      "documentation": "Create user configurations",
      "method": "post",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "3e1fc26e-46ae-4c21-9bd9-f97afd8540aa",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d86b3853-8d37-4ffd-af1f-aa8b5a4d53be",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ee99d16-b52a-4890-9ca6-fc35cd02b6ad",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bfa1da89-73e7-4969-9898-04b0e128d282",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c866a13-2e91-4c10-a5ac-b892a5af9dcd",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b60f7b65-eb22-40cf-a012-728043462c8b",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "491e6f2e-b70e-49ae-b797-e4c6af7e2857",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ab309e8-0793-481a-8647-5c9fb079f081",
      "documentation": "Update user configurations",
      "method": "put",
      "endpoint": "configurations.:content_type",
      "responses": [
        {
          "uuid": "1ed06806-b41a-4e48-b4f7-2fe3e73ef1eb",
          "body": "[\n  {\n    \"auto_response\": {{faker 'random.boolean'}},\n    \"callback\": \"\",\n    \"categories_threshold\": {{faker 'random.float'}},\n    \"chars_threshold\": {{faker 'random.number'}},\n    \"collection\": {\n      \"attribute_mentions_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"facet_atts_limit\": {{faker 'random.number'}},\n      \"facet_mentions_limit\": {{faker 'random.number'}},\n      \"facets_limit\": {{faker 'random.number'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}}\n    },\n    \"config_id\": \"\",\n    \"document\": {\n      \"auto_categories_limit\": {{faker 'random.number'}},\n      \"concept_topics_limit\": {{faker 'random.number'}},\n      \"detect_language\": {{faker 'random.boolean'}},\n      \"entity_themes_limit\": {{faker 'random.number'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities_limit\": {{faker 'random.number'}},\n      \"named_mentions_limit\": {{faker 'random.number'}},\n      \"named_opinions_limit\": {{faker 'random.number'}},\n      \"named_relations_limit\": {{faker 'random.number'}},\n      \"phrases_limit\": {{faker 'random.number'}},\n      \"pos_types\": \"{{oneOf (array 'All' 'Noun' 'Verb' 'Adjective' 'Determiner' 'Misc' 'Twitter' 'Chinese')}}\",\n      \"possible_phrases_limit\": {{faker 'random.number'}},\n      \"query_topics_limit\": {{faker 'random.number'}},\n      \"summary_limit\": {{faker 'random.number'}},\n      \"theme_mentions_limit\": {{faker 'random.number'}},\n      \"themes_limit\": {{faker 'random.number'}},\n      \"user_entities_limit\": {{faker 'random.number'}},\n      \"user_mentions_limit\": {{faker 'random.number'}},\n      \"user_opinions_limit\": {{faker 'random.number'}},\n      \"user_relations_limit\": {{faker 'random.number'}}\n    },\n    \"entities_threshold\": {{faker 'random.number'}},\n    \"from_template_config_id\": \"\",\n    \"is_primary\": {{faker 'random.boolean'}},\n    \"language\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"one_sentence\": {{faker 'random.boolean'}},\n    \"process_html\": {{faker 'random.boolean'}},\n    \"version\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ad5c605-75f2-4e73-a518-21c72cf95112",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "befb8fd2-f598-46d6-a72a-fab7b06ea333",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db02fb82-a834-4472-ae41-d4c7d1555fc1",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "457a8e26-7c79-4a61-97a9-6ac8fe35ed30",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eab3c25b-b476-4c1b-9008-8014a47b80bd",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed configurations for user subscription is reached.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6400ff01-7b60-4d0b-9f86-14c95787a458",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "595ca487-8c31-4d97-a753-6112447c67de",
      "documentation": "Queue document for analysis",
      "method": "post",
      "endpoint": "document.:content_type",
      "responses": [
        {
          "uuid": "b38e2748-b7be-476d-a766-b63cffc4569e",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77c19662-1fd2-4eac-89b4-0b7ba6cacfaa",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe31d65c-4223-4c42-a82d-781515fb7d3f",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a3fb0f9-a24a-4f45-9c77-3a56dba2968f",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fff8a54-7f93-4f62-ad5b-fe86cd57e0f1",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41701aec-d445-4ca0-9e7f-c50ab7e8570a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "dd97efdf-4a3a-4785-876c-c0315ea5cb74",
      "documentation": "Queue batch of documents for analysis",
      "method": "post",
      "endpoint": "document/batch.:content_type",
      "responses": [
        {
          "uuid": "7b3255dd-cda8-48c6-83f9-0c02900bf75b",
          "body": "{\n  \"id\": \"\",\n  \"job_id\": \"\",\n  \"tag\": \"\",\n  \"text\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "10035451-4bb2-445f-8d3c-5568d11ae53a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued for processing.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a042fc87-bf97-414a-ab14-bec122222c87",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e09b4d03-2615-4dd8-91f1-20a55906a786",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff084a58-6dab-4dad-93b6-5b25677cc79f",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Request is forbidden for selected processing mode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37fa3fa6-71c9-4535-b925-c8e59e78375c",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Documents limit per batch is achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b82bcd78-cfa1-4d3c-9a16-49c74a1b4e2a",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Characters limit for the document exceeded.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "adea1974-f9a8-4ee5-ad19-86f96ffba304",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "67561b2d-1531-40c8-a970-31d07e03d738",
      "documentation": "Retrieve documents analysis",
      "method": "get",
      "endpoint": "document/processed.:content_type",
      "responses": [
        {
          "uuid": "b54b53a7-a516-498b-8193-43d4907668eb",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'random.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"strength_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'random.boolean'}},\n      \"is_polar\": {{faker 'random.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"sentiment_score\": {{faker 'random.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'random.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'random.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'random.float'}},\n    \"neutral_score\": {{faker 'random.float'}},\n    \"positive_score\": {{faker 'random.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"speaker\": {{faker 'random.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'random.boolean'}},\n      \"is_negated\": {{faker 'random.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'random.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'random.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with processed documents.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0804f71-4549-4608-8137-f1a739aca869",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted, no processed documents found on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e22bf159-4958-42eb-aac0-29c9630b86f6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "633e240d-cc25-49ca-83be-76702514ba71",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8ed33d72-bd05-4029-bd59-0c13a66e7486",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f2230254-123d-42dc-8b4b-933b8516dacc",
      "documentation": "Cancel document analysis",
      "method": "delete",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "02c25be0-5ee5-4bab-808b-62df09d4a62c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Document canceled from processing on the server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8972ccc-0e24-4e0f-a636-90ee9236f848",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c57514c-d3d9-4036-9608-2e190352ed61",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2fde78d-ae8c-481c-a111-3f6dedb19127",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c20a4d41-0438-41a6-97bd-6b7e142c9ac0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72d40272-5959-441c-afe8-f5f1b01838d1",
      "documentation": "Retrieve document analysis or its status in queue",
      "method": "get",
      "endpoint": "document/:document_id.:content_type",
      "responses": [
        {
          "uuid": "0da74b68-197a-4de5-90f9-fab3d87b3e6d",
          "body": "{\n  \"auto_categories\": [\n    {\n      \"categories\": [\n        {\n          \"strength_score\": {{faker 'random.float'}},\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"strength_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"config_id\": \"\",\n  \"details\": [\n    {\n      \"is_imperative\": {{faker 'random.boolean'}},\n      \"is_polar\": {{faker 'random.boolean'}},\n      \"words\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"sentiment_score\": {{faker 'random.float'}},\n          \"stemmed\": \"\",\n          \"tag\": \"\",\n          \"title\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    }\n  ],\n  \"entities\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"entity_type\": \"\",\n      \"label\": \"\",\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"negative_count\": {{faker 'random.number'}},\n      \"neutral_count\": {{faker 'random.number'}},\n      \"positive_count\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"id\": \"\",\n  \"intentions\": [\n    {\n      \"evidence_phrase\": \"\",\n      \"type\": \"\",\n      \"what\": \"\",\n      \"who\": \"\"\n    }\n  ],\n  \"job_id\": \"\",\n  \"language\": \"\",\n  \"language_score\": {{faker 'random.float'}},\n  \"model_sentiment\": {\n    \"mixed_score\": {{faker 'random.float'}},\n    \"model_name\": \"\",\n    \"negative_score\": {{faker 'random.float'}},\n    \"neutral_score\": {{faker 'random.float'}},\n    \"positive_score\": {{faker 'random.float'}},\n    \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\"\n  },\n  \"opinions\": [\n    {\n      \"quotation\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"speaker\": {{faker 'random.float'}},\n      \"topic\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"phrases\": [\n    {\n      \"intensifying_phrase\": \"\",\n      \"is_intensified\": {{faker 'random.boolean'}},\n      \"is_negated\": {{faker 'random.boolean'}},\n      \"negating_phrase\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"relations\": [\n    {\n      \"confidence_score\": {{faker 'random.float'}},\n      \"entities\": [\n        {\n          \"entity_type\": \"\",\n          \"title\": \"\"\n        }\n      ],\n      \"extra\": \"\",\n      \"relation_type\": \"\",\n      \"type\": \"{{oneOf (array 'named' 'user')}}\"\n    }\n  ],\n  \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n  \"sentiment_score\": {{faker 'random.float'}},\n  \"source_text\": \"\",\n  \"status\": \"{{oneOf (array 'queued' 'processed' 'failed')}}\",\n  \"summary\": \"\",\n  \"taxonomy\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ],\n  \"themes\": [\n    {\n      \"mentions\": [\n        {\n          \"is_negated\": {{faker 'random.boolean'}},\n          \"label\": \"\",\n          \"locations\": [\n            {\n              \"index\": {{faker 'random.number'}},\n              \"length\": {{faker 'random.number'}},\n              \"offset\": {{faker 'random.number'}}\n            }\n          ],\n          \"negating_phrase\": \"\"\n        }\n      ],\n      \"normalized\": \"\",\n      \"phrases_count\": {{faker 'random.number'}},\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"stemmed\": \"\",\n      \"themes_count\": {{faker 'random.number'}},\n      \"title\": \"\"\n    }\n  ],\n  \"topics\": [\n    {\n      \"hitcount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"sentiment_polarity\": \"{{oneOf (array 'negative' 'positive' 'neutral')}}\",\n      \"sentiment_score\": {{faker 'random.float'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'concept' 'query')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with processed document or its status.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd5ac33a-823e-4739-938d-96b97019531d",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4983aa3f-c69e-412a-886f-23fa24dfe71d",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e8dc959-f868-410a-aa24-436fd03a56b6",
          "body": "",
          "latency": 0,
          "statusCode": 404,
          "label": "No documents with provided ID found on server.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "393933ff-8525-4446-8f97-ae94f1a7a19d",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16614e17-c773-46f6-9b39-9e1d4f707e86",
      "documentation": "Remove user entities",
      "method": "delete",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "2bfab4a9-c28d-4ab9-831d-58728b51d3a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "252b12c2-6984-4271-886c-4bab1425325b",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cbb13bf1-ea30-4aa9-bd7b-fde3e1b68150",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cac28311-fac2-49ea-a1a9-f41da426ec4b",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "749e6477-aa6b-48bb-a3c9-88e8934ed296",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "355fb65b-0c07-4b5a-844a-cbb49de343e4",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c6e5d2de-5c98-4467-8e3b-9e279810ada6",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "564229c0-77ee-4c0e-a4a0-07d12f599d67",
      "documentation": "Retrieve user entities",
      "method": "get",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "bfcea51b-5056-42e3-a417-c9594258c5fe",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the entities list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6401bced-d7bc-4f9f-bc7b-4ce73fc26ec7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no entities found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4ebf51be-9327-4252-87ad-8c82b9355d2e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a16c9e5-4298-4c81-89d7-7db34c4c4df1",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be39239c-8f5f-48af-8c3d-aa9b23606a65",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a29d4bc7-2f87-44da-ac2c-9c2225605c66",
      "documentation": "Add user entities",
      "method": "post",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "b325942a-1b91-4b89-aa5c-12d44ba5c2d8",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "831a52c6-0c4e-41be-b195-bf493246ef4a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a52accdb-a51c-40b0-8a61-5e479ed68584",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "de170486-661f-4072-9adb-ee9dfb96aabe",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e821db3b-0572-4924-b5f5-8aa7223a6493",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a3e142-fbf8-4d99-bc5c-e02953919e00",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87ea197e-20a3-4c53-82c1-8b6fee4a7d9a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "81bcda6b-dfe9-415a-af6c-2bacd0fb3e9c",
      "documentation": "Update user entities",
      "method": "put",
      "endpoint": "entities.:content_type",
      "responses": [
        {
          "uuid": "0211071c-63cd-43b0-9572-4e3937821567",
          "body": "[\n  {\n    \"id\": \"\",\n    \"label\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"normalized\": \"\",\n    \"type\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6caa2f71-3240-4323-b908-e9c556e0360a",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "31f6f6fb-91e1-45ab-965f-e4f4a7f55967",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d12c7792-9089-476b-bef4-66db1b01785a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4ae85b0-8b26-405a-9c04-ba0b0626e816",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c99204f6-cc64-4373-9af4-1d8f61a03903",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed entities per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "013e5123-cd1f-416e-9365-4169a59ba6bc",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ab25ba91-c322-4f6f-9fad-9aef04edc6d3",
      "documentation": "Retrieve supported features",
      "method": "get",
      "endpoint": "features.:content_type",
      "responses": [
        {
          "uuid": "41c7e2b0-abb8-4be8-9958-e4f81f9cfcd7",
          "body": "[\n  {\n    \"detailed_mode\": {\n      \"auto_categories\": {{faker 'random.boolean'}},\n      \"entity_mentions\": {{faker 'random.boolean'}},\n      \"entity_opinions\": {{faker 'random.boolean'}},\n      \"entity_relations\": {{faker 'random.boolean'}},\n      \"entity_themes\": {{faker 'random.boolean'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"language_detection\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"pos_tagging\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"sentiment\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"summarization\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"theme_mentions\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"discovery_mode\": {\n      \"entity_mentions\": {{faker 'random.boolean'}},\n      \"facet_attributes\": {{faker 'random.boolean'}},\n      \"facet_mentioins\": {{faker 'random.boolean'}},\n      \"facets\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"theme_mentions\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"html_processing\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"language\": \"\",\n    \"one_sentence_mode\": {{faker 'random.boolean'}},\n    \"settings\": {\n      \"blacklist\": {{faker 'random.boolean'}},\n      \"queries\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"taxonomy\": {{faker 'random.boolean'}},\n      \"user_categories\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d97c5e2-7cc7-4026-a7e6-1136cf8607e9",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ce405d20-2747-4d6d-9b50-b4f2d2b1a947",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7a2f3da-8471-4686-9bb5-5e52c06a1203",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32a16cf9-e580-487a-a17a-2f4f9bb50123",
      "documentation": "Remove sentiment-bearing phrases",
      "method": "delete",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "33c2774f-4df5-40ec-993c-5b798986b67b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "612b8c23-f857-4f1b-b4c8-500608be32f1",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8057e825-6fcf-4038-acb3-765f6c07a05a",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b487d88-3f04-413e-9fbe-5058ceabe1fa",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d583069-19e8-4235-80fe-bfe098523fd4",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3334eb1-789d-4c91-ade9-ed3aad243d3e",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "910fa49d-f9b1-4eff-b0c3-5b37f7c1d0c5",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d3880758-fb3d-4ee6-9fe4-1fdb3576e1ad",
      "documentation": "Retrieve sentiment-bearing phrases",
      "method": "get",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "ea1d51fc-7d1b-4720-8e28-e4bf23340051",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the sentiment-bearing phrases list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7750b308-5fe8-49f9-a24a-4fe23dd39b90",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no sentiment-bearing phrases found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81dbd869-16d1-4ff4-b71f-a241b2e55729",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d68b404-11c4-44d3-a930-6bae39ce1200",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a29f73-eb95-4475-91a5-e281279dba6a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b49c9fba-69da-49fe-b2bc-e46d1e92f6d2",
      "documentation": "Add sentiment-bearing phrases",
      "method": "post",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "bd21537a-128a-429a-8ff3-8f17482101c2",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8935b90-6d35-4321-ad06-a0217495d78d",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5237aad1-a014-4736-ae8f-424db426d823",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "692aca6c-c353-4a45-b99b-13af1dca8d74",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6fc16d96-488b-46b3-a62a-e532767247fd",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3924639-3a10-4f93-8e36-33ebf31193a8",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91377fb7-a10a-45d8-be9d-03b8746a98a7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b578585e-43d1-4f08-a44c-9dc7af5e086e",
      "documentation": "Updates sentiment-bearing phrases",
      "method": "put",
      "endpoint": "phrases.:content_type",
      "responses": [
        {
          "uuid": "6c9dbd26-7dde-4a7b-9266-254538537c5b",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"weight\": {{faker 'random.float'}}\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7cbe537d-a09e-434d-9cad-60e52981a8d3",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53380a21-f1d5-47df-8516-2f46c4f098e3",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "370cf943-6bb2-4023-9bb7-0ab46f47ca99",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e697217-f0d9-4ae3-a4f3-435cbd39f757",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf05945a-dc42-4bec-b9a7-9a55d5a0f536",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed sentiment-bearing phrases per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "631929d9-fc4b-42cb-890c-d1e063e0dd62",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c3d53df4-651a-412b-8227-b5e6a6bf2033",
      "documentation": "Remove queries",
      "method": "delete",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "92903738-be65-44db-b582-de6a4970d67f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "26a98710-6098-43c8-bea8-45c4c1b58977",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19c4825c-aa10-44ee-a571-5bb64cff718b",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eba47fe2-5631-41b4-837d-51269b611a4e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd1961d8-3be4-4641-a239-6c59b57953f1",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d5a0a5c-5bad-474a-9811-19599f0f9e46",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "589edbbc-9c81-4687-93ed-03a51bf7cf80",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5ce5a7e7-7d96-41e9-b067-034fd9712839",
      "documentation": "Retrieve queries",
      "method": "get",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "c8ab845b-aad9-4a85-a6d2-4152b98b8333",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the queries list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "49af598f-34cf-47a0-a6b0-8bfbeb049c50",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no queries found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1ac0028b-c646-4939-9a33-a33ca27dc4b5",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75fdde7b-42a9-4f43-8d14-71a8f14241f6",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ee61df6-8033-4137-8e13-01df83627bc8",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "45aa4243-8956-4a91-8a22-a1a974997f24",
      "documentation": "Add or update queries",
      "method": "post",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "39060359-6a36-4660-a870-d2d637ae3026",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6706c75-eb3a-473d-9dd7-ec280c5614f7",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "813e1d4d-4f78-42b4-8d87-12b11b6e039e",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f2e5a4b-c8da-4728-97b5-98bc03ebd370",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "00fbc959-7742-4ec4-9dab-1b3b074de986",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db2c23b7-f218-4a07-a576-a17789d880ab",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c6568cf-3706-4033-8333-6be8fde9b22e",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16229c51-7c75-46a5-ad16-6dcc49d3add2",
      "documentation": "Update queries",
      "method": "put",
      "endpoint": "queries.:content_type",
      "responses": [
        {
          "uuid": "6db0894f-90fa-4f7f-a7fd-570ffb41cb01",
          "body": "[\n  {\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"query\": \"\"\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21b5d1e2-d128-43c8-b0dc-d11c31bed985",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0a0dfed6-44f2-4a93-b540-202ca221cfa9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a737c377-59b7-4c27-8188-898a1833cc51",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "539845cc-47e0-40b4-a02b-fe826d8f2a91",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52579593-2eed-441d-80f4-2e24ca17b146",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fff71951-18d5-4970-af78-3851f7d27c92",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8bb155e6-7532-477c-930a-8641e82abb15",
      "documentation": "Retrieve usage statistics",
      "method": "get",
      "endpoint": "statistics.:content_type",
      "responses": [
        {
          "uuid": "055e6ee0-29e0-4e41-87a7-8ed697d1a029",
          "body": "{\n  \"calls_data\": {{faker 'random.number'}},\n  \"calls_polling\": {{faker 'random.number'}},\n  \"calls_settings\": {{faker 'random.number'}},\n  \"colls_documents\": {{faker 'random.number'}},\n  \"colls_failed\": {{faker 'random.number'}},\n  \"colls_processed\": {{faker 'random.number'}},\n  \"colls_responded\": {{faker 'random.number'}},\n  \"configurations\": [\n    {\n      \"calls_data\": {{faker 'random.number'}},\n      \"calls_polling\": {{faker 'random.number'}},\n      \"calls_settings\": {{faker 'random.number'}},\n      \"colls_failed\": {{faker 'random.number'}},\n      \"colls_processed\": {{faker 'random.number'}},\n      \"colls_responded\": {{faker 'random.number'}},\n      \"config_id\": \"\",\n      \"docs_failed\": {{faker 'random.number'}},\n      \"docs_processed\": {{faker 'random.number'}},\n      \"docs_responded\": {{faker 'random.number'}},\n      \"latest_used_app\": \"\",\n      \"name\": \"\",\n      \"overall_batches\": {{faker 'random.number'}},\n      \"overall_calls\": {{faker 'random.number'}},\n      \"overall_docs\": {{faker 'random.number'}},\n      \"overall_exceeded\": {{faker 'random.number'}},\n      \"overall_texts\": {{faker 'random.number'}},\n      \"overcall_colls\": {{faker 'random.number'}},\n      \"used_apps\": \"\"\n    }\n  ],\n  \"docs_failed\": {{faker 'random.number'}},\n  \"docs_processed\": {{faker 'random.number'}},\n  \"docs_responded\": {{faker 'random.number'}},\n  \"latest_used_app\": \"\",\n  \"name\": \"\",\n  \"overall_batches\": {{faker 'random.number'}},\n  \"overall_calls\": {{faker 'random.number'}},\n  \"overall_docs\": {{faker 'random.number'}},\n  \"overall_exceeded\": {{faker 'random.number'}},\n  \"overall_texts\": {{faker 'random.number'}},\n  \"overcall_colls\": {{faker 'random.number'}},\n  \"status\": \"\",\n  \"used_apps\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with statistics details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dce5a890-adc0-4d22-b268-9da1a622b481",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d0957b1-a017-465e-a156-a35a46ca0429",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "604a2be1-75e6-43c2-bc64-98ddbec53846",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "61204f9d-39cf-4b1d-9d41-e92f08098dd4",
      "documentation": "Retrieve API status",
      "method": "get",
      "endpoint": "status.:content_type",
      "responses": [
        {
          "uuid": "d47e8096-62b4-4284-9951-b795a777abc0",
          "body": "{\n  \"api_version\": \"\",\n  \"service_status\": \"{{oneOf (array 'available' 'pending' 'sold')}}\",\n  \"service_version\": \"\",\n  \"supported_compression\": \"\",\n  \"supported_encoding\": \"\",\n  \"supported_languages\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted. Server responds with status object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1018d3a2-0636-41f8-8c60-eb4cb26e942e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "53c8ab6a-5c19-430b-83a3-d786ed0a0eda",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6b38345-fd47-40f4-b86a-593e04e61ea0",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2180995-6711-43a9-8a7d-c6c28369ecdf",
      "documentation": "Retrieve subscription details",
      "method": "get",
      "endpoint": "subscription.:content_type",
      "responses": [
        {
          "uuid": "e4db2276-9e85-421e-a53b-a51951638a3b",
          "body": "{\n  \"basic_settings\": {\n    \"auto_response_limit\": {{faker 'random.number'}},\n    \"batch_limit\": {{faker 'random.number'}},\n    \"blacklist_limit\": {{faker 'random.number'}},\n    \"callback_batch_limit\": {{faker 'random.number'}},\n    \"categories_limit\": {{faker 'random.number'}},\n    \"category_samples_limit\": {{faker 'random.number'}},\n    \"characters_limit\": {{faker 'random.number'}},\n    \"collection_limit\": {{faker 'random.number'}},\n    \"configurations_limit\": {{faker 'random.number'}},\n    \"entities_limit\": {{faker 'random.number'}},\n    \"output_data_limit\": {{faker 'random.number'}},\n    \"processed_batch_limit\": {{faker 'random.number'}},\n    \"queries_limit\": {{faker 'random.number'}},\n    \"return_source_text\": {{faker 'random.boolean'}},\n    \"sentiment_limit\": {{faker 'random.number'}}\n  },\n  \"billing_settings\": {\n    \"app_seats_allocated\": {{faker 'random.number'}},\n    \"app_seats_permitted\": {{faker 'random.number'}},\n    \"data_calls_balance\": {{faker 'random.number'}},\n    \"data_calls_limit\": {{faker 'random.number'}},\n    \"data_calls_limit_interval\": {{faker 'random.number'}},\n    \"docs_balance\": {{faker 'random.number'}},\n    \"docs_limit\": {{faker 'random.number'}},\n    \"docs_limit_interval\": {{faker 'random.number'}},\n    \"docs_suggested\": {{faker 'random.number'}},\n    \"docs_suggested_interval\": {{faker 'random.number'}},\n    \"expiration_date\": \"\",\n    \"limit_type\": \"\",\n    \"polling_calls_balance\": {{faker 'random.number'}},\n    \"polling_calls_limit\": {{faker 'random.number'}},\n    \"polling_calls_limit_interval\": {{faker 'random.number'}},\n    \"priority\": \"\",\n    \"settings_calls_balance\": {{faker 'random.number'}},\n    \"settings_calls_limit\": {{faker 'random.number'}},\n    \"settings_calls_limit_interval\": {{faker 'random.number'}}\n  },\n  \"feature_settings\": {\n    \"collection\": {\n      \"concept_topics\": {{faker 'random.boolean'}},\n      \"facets\": {{faker 'random.boolean'}},\n      \"mentions\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"query_topics\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}}\n    },\n    \"document\": {\n      \"auto_categories\": {{faker 'random.boolean'}},\n      \"concept_topics\": {{faker 'random.boolean'}},\n      \"entity_themes\": {{faker 'random.boolean'}},\n      \"intentions\": {{faker 'random.boolean'}},\n      \"language_detection\": {{faker 'random.boolean'}},\n      \"mentions\": {{faker 'random.boolean'}},\n      \"model_sentiment\": {{faker 'random.boolean'}},\n      \"named_entities\": {{faker 'random.boolean'}},\n      \"named_relations\": {{faker 'random.boolean'}},\n      \"opinions\": {{faker 'random.boolean'}},\n      \"phrases_detection\": {{faker 'random.boolean'}},\n      \"pos_tagging\": {{faker 'random.boolean'}},\n      \"query_topics\": {{faker 'random.boolean'}},\n      \"sentiment_phrases\": {{faker 'random.boolean'}},\n      \"summary\": {{faker 'random.boolean'}},\n      \"themes\": {{faker 'random.boolean'}},\n      \"user_entities\": {{faker 'random.boolean'}},\n      \"user_relations\": {{faker 'random.boolean'}}\n    },\n    \"html_processing\": {{faker 'random.boolean'}},\n    \"supported_languages\": \"\",\n    \"templates\": {\n      \"config_id\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_free\": {{faker 'random.boolean'}},\n      \"language\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'language-default' 'vertical-pack')}}\",\n      \"version\": \"\"\n    }\n  },\n  \"name\": \"\",\n  \"status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2df99e0-d22d-4c14-bebc-51b2aecfbdc6",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f0894f2a-f0dc-423f-b0ec-88292d4ebd59",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93416ab8-0bff-45ad-abd8-f0bcd23a2136",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d397fe94-4719-46eb-97b8-58273607914b",
      "documentation": "Remove taxonomy nodes",
      "method": "delete",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "a6874896-ad74-4602-9572-144092fe3236",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "820fceef-c237-4c98-80b2-c9960db09228",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71a1ed36-1ff9-4f7b-9756-a298a5f8bbaf",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2e56fa28-4afa-4781-84ab-5dfc5786b3fa",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a7f7fa6-ccf6-4e92-87af-f752ac8638f9",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bd7e30c2-0e1f-4f20-9daf-30eeafefca3c",
          "body": "",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden. Server responds if client tries to remove primary configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4da93b63-f5cc-4b0c-9442-c0becd037aa7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ef66e794-66a6-47b8-93fc-930475d0e912",
      "documentation": "Retrieve taxonomy",
      "method": "get",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "bfb37666-7f15-44c5-b749-959bfa5438fb",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Client request accepted and queued. Server responds with the taxonomy list.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ce5a441-25d9-4897-9457-cc5f1a9cff50",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and no taxonomy found. Server responds with empty body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a0d0c1b-68cf-459f-9b33-881995defa4a",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e449d0f3-d742-424d-8ad1-9306a7483910",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d4b0445-21f3-4ae5-8b0e-aa958ff8f69a",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5558dc7-2171-4ec2-b01f-6a74f4f47c18",
      "documentation": "Add taxonomy nodes",
      "method": "post",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "254d2f8c-65af-417c-8129-6f03b7c1f23a",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c6576e3-2864-4151-98c4-39b3097ffba8",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f987346-c6f0-42c9-892d-fedf4d7e847d",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14cccb04-af43-4e07-b38f-220a4e7453c8",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c980b1da-a6aa-46c3-85eb-118f79b52a77",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a37b5ac4-040b-42c7-a0dc-0638acbace06",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b4df5a5d-7734-48b2-87cc-3291bdb68c30",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "79e7aba7-7297-4139-8981-2d195bf7f78c",
      "documentation": "Update taxonomy nodes",
      "method": "put",
      "endpoint": "taxonomy.:content_type",
      "responses": [
        {
          "uuid": "28331c00-797a-44dd-87f8-9178b0363ccd",
          "body": "[\n  {\n    \"enforce_parent_matching\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"modified\": \"\",\n    \"name\": \"\",\n    \"nodes\": [\n      \"\"\n    ],\n    \"topics\": [\n      {\n        \"id\": \"\",\n        \"type\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "No response was specified",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fb734de-47f6-419d-bbb4-5d500c25ac5c",
          "body": "",
          "latency": 0,
          "statusCode": 202,
          "label": "Client request accepted and queued.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11091f73-975c-41b9-95b6-2596340120c7",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Incoming request body is incorrect. Server responds with details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "133fe560-38de-408a-bab1-ab5a99002376",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "Authentication failed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a94fcb19-9c03-4313-b31b-895710d81b10",
          "body": "",
          "latency": 0,
          "statusCode": 402,
          "label": "Unauthorized. Limit of system calls is reached or subscription is expired.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "284ba67c-0294-4d8f-9bac-dfc4f2707cd5",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Number of allowed queries per configuration achieved.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35a655e3-f1d2-4afb-9d57-c693570f92c7",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Server side issue. Server may respond with the details in response body.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}