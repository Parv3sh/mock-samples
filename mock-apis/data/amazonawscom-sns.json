{
  "uuid": "060e1f08-4f7d-4d8e-8b8e-c71927b37ce6",
  "lastMigration": 19,
  "name": "Amazon Simple Notification Service",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "f960c7a7-5341-41d3-a4e7-a598a0735a41",
      "documentation": "Adds a statement to a topic's access control policy, granting access for the specified accounts to the specified actions.",
      "method": "get",
      "endpoint": "#Action=AddPermission",
      "responses": [
        {
          "uuid": "b658b806-7dea-41cf-9721-640f57f0a071",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "394247cd-3432-4bd8-ba98-dfdbbea000de",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "80d1221c-a2f8-4742-9846-ffff11da2259",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76b11dbe-60db-4ccf-9e92-84791e03bc40",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38badc7a-ead8-418a-a101-5b6059f26357",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5fc669b5-969c-4271-bfe4-e30af6a8ddcc",
      "documentation": "Adds a statement to a topic's access control policy, granting access for the specified accounts to the specified actions.",
      "method": "post",
      "endpoint": "#Action=AddPermission",
      "responses": [
        {
          "uuid": "1fae5b7a-e89e-434b-b8cb-ed515999ce52",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "966ff968-8d6e-4ecd-9158-943a3bd0a256",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46d31d98-9360-4878-88a4-bec02eb9514e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2bd76a0-2b5e-44db-a2aa-5cc5c296ee76",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fcd12c46-e73d-4642-aeed-a1973f236ca2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f473ff81-25fb-42d7-afc3-38d4c42abf75",
      "documentation": "<p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>",
      "method": "get",
      "endpoint": "#Action=CheckIfPhoneNumberIsOptedOut",
      "responses": [
        {
          "uuid": "3a5d5e8e-97f2-4c09-baaa-9d7f10c48a1f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "885cc904-e920-4f8f-ba67-328afff8d7fa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5215f324-4161-4608-bc1f-895515b4a00f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6cfe53f-d694-49ee-a403-95ae5f61b283",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6959da7c-654f-4aa5-b6f4-7618a3ffbabc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "722fce1a-3833-4f8d-820c-334079c680f7",
      "documentation": "<p>Accepts a phone number and indicates whether the phone holder has opted out of receiving SMS messages from your account. You cannot send SMS messages to a number that is opted out.</p> <p>To resume sending messages, you can opt in the number by using the <code>OptInPhoneNumber</code> action.</p>",
      "method": "post",
      "endpoint": "#Action=CheckIfPhoneNumberIsOptedOut",
      "responses": [
        {
          "uuid": "9608aa7c-ae05-43a5-b792-e4ed4054c0e8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d813f45-2a35-4a87-b6f6-c4b74ee4572b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "463f897c-dbf8-4c1e-897e-6ced082777ff",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "62939c9a-19f5-4746-b16a-a8eb517b5b84",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc431230-94a4-433e-9670-2bc3796c975a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "247a4ffa-6cb8-48a7-8560-71da88c19f61",
      "documentation": "Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\".",
      "method": "get",
      "endpoint": "#Action=ConfirmSubscription",
      "responses": [
        {
          "uuid": "d7ed6410-b219-45b1-950f-14f477227d90",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ec5cdca4-0b8f-47c3-84b6-32a9623b4dc5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3ae3481f-3221-4e10-9544-2970a8484b1b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a2954b-d9ee-47eb-a7b9-12d3ce5c2794",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48435feb-caef-445b-b416-7803aba71557",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8dcea5c1-3268-4ffc-89e0-fba348b93bd4",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dca60569-423c-4269-8730-0e1ba8c07eb6",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d83063c2-be7e-46dd-97a3-5c841898bc93",
      "documentation": "Verifies an endpoint owner's intent to receive messages by validating the token sent to the endpoint by an earlier <code>Subscribe</code> action. If the token is valid, the action creates a new subscription and returns its Amazon Resource Name (ARN). This call requires an AWS signature only when the <code>AuthenticateOnUnsubscribe</code> flag is set to \"true\".",
      "method": "post",
      "endpoint": "#Action=ConfirmSubscription",
      "responses": [
        {
          "uuid": "331467e8-7340-4b61-9eee-60702b4428dd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0dc484b6-10a9-495d-83f7-0fadf7d1dffc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "759fc183-3b64-412a-9b58-55d9aa480db7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fab4cec1-0505-4b65-8b4d-1e5d40c2d3fa",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6982ad15-ba10-4aff-b886-9285ee7c41b2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4bf23cd7-d1bf-4cff-98a0-a91e7ad12c44",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "75c67bc1-0968-4569-bed2-5e3b8bbd1ace",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "83553c6c-b6a4-4800-b15e-08fbb14dddca",
      "documentation": "<p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code> and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code> action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code> are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>, <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code> is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code> is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code> is <code>Package Security Identifier</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code> action.</p>",
      "method": "get",
      "endpoint": "#Action=CreatePlatformApplication",
      "responses": [
        {
          "uuid": "f0c429cc-f210-4ab0-a114-0016bd073645",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f1037b9e-d979-4e67-8635-bf90726309b5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24928e24-6fbf-455d-ba2c-2acac22bff24",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a883413e-bcc7-41af-be25-3650e4162f68",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4779b42b-b72c-4bf9-acbc-197b59571c1d",
      "documentation": "<p>Creates a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging), to which devices and mobile apps may register. You must specify <code>PlatformPrincipal</code> and <code>PlatformCredential</code> attributes when using the <code>CreatePlatformApplication</code> action.</p> <p> <code>PlatformPrincipal</code> and <code>PlatformCredential</code> are received from the notification service.</p> <ul> <li> <p>For <code>ADM</code>, <code>PlatformPrincipal</code> is <code>client id</code> and <code>PlatformCredential</code> is <code>client secret</code>.</p> </li> <li> <p>For <code>Baidu</code>, <code>PlatformPrincipal</code> is <code>API key</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> <li> <p>For <code>APNS</code> and <code>APNS_SANDBOX</code>, <code>PlatformPrincipal</code> is <code>SSL certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>GCM</code> (Firebase Cloud Messaging), there is no <code>PlatformPrincipal</code> and the <code>PlatformCredential</code> is <code>API key</code>.</p> </li> <li> <p>For <code>MPNS</code>, <code>PlatformPrincipal</code> is <code>TLS certificate</code> and <code>PlatformCredential</code> is <code>private key</code>.</p> </li> <li> <p>For <code>WNS</code>, <code>PlatformPrincipal</code> is <code>Package Security Identifier</code> and <code>PlatformCredential</code> is <code>secret key</code>.</p> </li> </ul> <p>You can use the returned <code>PlatformApplicationArn</code> as an attribute for the <code>CreatePlatformEndpoint</code> action.</p>",
      "method": "post",
      "endpoint": "#Action=CreatePlatformApplication",
      "responses": [
        {
          "uuid": "669c3cff-7a61-4cee-ac7d-c603d3b79bf2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "05ef7c97-c83b-4fb8-a521-b6364c0b3be5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1624d93-8624-40cc-8fd7-c8e31cea9c58",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d47c911-d1c2-4f16-a669-cfb47b8b8167",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c4d3fb81-dae1-458a-af33-4e74fae4bb2f",
      "documentation": "<p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code> that is returned from <code>CreatePlatformApplication</code>. You can use the returned <code>EndpointArn</code> to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint's ARN is returned without creating a new endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>",
      "method": "get",
      "endpoint": "#Action=CreatePlatformEndpoint",
      "responses": [
        {
          "uuid": "30ba0c35-422c-4ed4-9c8f-1b8ec5969751",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2cad8be1-17f8-465e-acdd-0f4b08b286aa",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35959524-d5f9-478c-bba4-d9047665a21d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "74afeead-8de4-484a-bd95-0e7763a311ed",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fa385ae-edab-49a4-8720-b40bc49bd794",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "933974b8-8e4a-49c1-8883-663ac5c3f43c",
      "documentation": "<p>Creates an endpoint for a device and mobile app on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. <code>CreatePlatformEndpoint</code> requires the <code>PlatformApplicationArn</code> that is returned from <code>CreatePlatformApplication</code>. You can use the returned <code>EndpointArn</code> to send a message to a mobile app or by the <code>Subscribe</code> action for subscription to a topic. The <code>CreatePlatformEndpoint</code> action is idempotent, so if the requester already owns an endpoint with the same device token and attributes, that endpoint's ARN is returned without creating a new endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When using <code>CreatePlatformEndpoint</code> with Baidu, two attributes must be provided: ChannelId and UserId. The token field must also contain the ChannelId. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePushBaiduEndpoint.html\">Creating an Amazon SNS Endpoint for Baidu</a>. </p>",
      "method": "post",
      "endpoint": "#Action=CreatePlatformEndpoint",
      "responses": [
        {
          "uuid": "66a483b0-fa79-4eed-b82f-b1dd8b752169",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "388620d7-fc99-4188-8eee-ebd57d5381ee",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56f51fed-1b4d-452c-b4c9-c014a0e3aeea",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e29f4d0e-b966-41a1-99dc-51f2689bcd85",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "57f0d2e6-250b-42cd-b3da-df145725484e",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "386c5eac-6cd8-4ec9-99e8-2aabeff730f7",
      "documentation": "<p>Adds a destination phone number to an account in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=CreateSMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "4b5c17c3-9b1d-4797-a8c2-c4d0741562bd",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "050e7215-f839-41ab-8029-3cd7fe07a715",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ade98e35-1084-4bfe-97d4-1be3a63cf772",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ead82eec-a1e5-487d-9a82-4ec9cebdf519",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9e0e0bf6-019d-4656-9880-9d5362d673b4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "OptedOutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "340375b6-011d-4b86-ac22-44490c9717e2",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "UserErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20edf8cb-a830-47ba-9e18-80e4875b65cf",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bb05d670-2d40-4b00-92c5-9e46f73885b6",
      "documentation": "<p>Adds a destination phone number to an account in the SMS sandbox and sends a one-time password (OTP) to that phone number.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=CreateSMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "c213a16e-ece7-4e1f-8527-2bf308911b29",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "882bfad9-fdb8-4c53-9139-9f813ce1efd5",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14141cf1-9520-4a90-953d-ebd2aa7d4b7b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fe22f20-0626-4c9a-b227-83cef354d198",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81143b4e-51d5-4fe0-8294-e67a4a85cf33",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "OptedOutException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f19aa2c3-957b-4388-935e-b89b96e1aee6",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "UserErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea7b9f5e-66fa-4c23-9c51-8125851f022d",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f38d88b3-9c8c-4a2b-a1e2-32396092b78d",
      "documentation": "Creates a topic to which notifications can be published. Users can create at most 100,000 standard topics (at most 1,000 FIFO topics). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\">Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic's ARN is returned without creating a new topic.",
      "method": "get",
      "endpoint": "#Action=CreateTopic",
      "responses": [
        {
          "uuid": "c2ac2177-4fc4-49b1-b025-110127bf94b8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c6721ec-ef7d-4343-89c5-503e854c5117",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f96162f-cab8-4eb8-affb-7b6870517b63",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TopicLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "767d92ec-d3d2-4960-9c71-543a2f18fe1d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "28f95331-fb10-40bf-b07b-3ceeddc55a2a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01eea333-e0aa-4f79-9a22-e901211edb2a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "faa2ae79-d17b-4c34-bdc4-0c0e709ad984",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eafdd93c-4b19-44c7-aa8a-55028e7449c3",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "81aee8a2-04d9-4b7d-b162-78354c5a0a92",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cd80b5e5-5d90-4251-8bff-5c0911cb3b8e",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41bf9ac7-0519-48bb-8c6c-f240746a9581",
      "documentation": "Creates a topic to which notifications can be published. Users can create at most 100,000 standard topics (at most 1,000 FIFO topics). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-create-topic.html\">Creating an Amazon SNS topic</a> in the <i>Amazon SNS Developer Guide</i>. This action is idempotent, so if the requester already owns a topic with the specified name, that topic's ARN is returned without creating a new topic.",
      "method": "post",
      "endpoint": "#Action=CreateTopic",
      "responses": [
        {
          "uuid": "4ae4468a-c5c0-4783-a8c0-4976aede233c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f5a2b59e-00c5-45de-8e98-a49eedee4d9b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7c1ced44-9773-4e5d-9425-2ace407fd1f2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TopicLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bbb123c-290b-4dab-a23d-2b02438cdc81",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf92b350-b354-4060-8866-27bb0f588311",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c86d5ff6-1ab2-4176-a7a5-addbb6657f97",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f737a40-2f17-4720-ad74-914d2d9c03e9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acb37c3e-00e3-4a49-ba1d-854bad080856",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db6edb1d-3d51-4000-9a6f-cd284f33f576",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8b034410-1fad-4bb2-8262-f1cc51f689e8",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9731789-c0df-45c1-98e9-d71cd1d2c5d8",
      "documentation": "<p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteEndpoint",
      "responses": [
        {
          "uuid": "1ebc1d68-f9e4-4c85-af11-3dbad2b3ec55",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6a73e36-7219-4532-b47e-bb998ed09a95",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c192476-bd8e-4370-b076-a07a6002d077",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "df1d8e0b-1114-48b3-9ccc-5bc3b482f915",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32581452-f0a2-4a5a-8b96-a6beeefd5368",
      "documentation": "<p>Deletes the endpoint for a device and mobile app from Amazon SNS. This action is idempotent. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>When you delete an endpoint that is also subscribed to a topic, then you must also unsubscribe the endpoint from the topic.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteEndpoint",
      "responses": [
        {
          "uuid": "1683e6cc-ba33-4674-a856-4d843873a55e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "801590a4-29e0-41fc-b4cd-2f60ac22326a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f53d9a72-6ed1-424a-81c3-9f7720ec7a39",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6bc9693-dfbe-4122-bd71-37451508eca3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9ed150d-6d3d-4aa9-8f67-a61538bd5d18",
      "documentation": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "get",
      "endpoint": "#Action=DeletePlatformApplication",
      "responses": [
        {
          "uuid": "b04cc888-e607-4bf8-956b-05b38da89d84",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c16a4cc6-c2e6-409c-86d4-22bf044e0a87",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85a602be-ffc7-4b65-8327-c79203463283",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d8b0ab2-8f99-4504-a03f-a19f4e48a7d2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6e1d5946-87ab-4c95-a51e-a6c7eb7341ee",
      "documentation": "Deletes a platform application object for one of the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "post",
      "endpoint": "#Action=DeletePlatformApplication",
      "responses": [
        {
          "uuid": "d67750bd-431d-4fba-8b8e-e849c2f8dc2d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "448e6164-e003-44e9-87d7-fa8264cdc69e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ebd37819-53a2-48fe-a4ab-18253f32917b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "791c2a22-a072-4cf4-b55b-ac75cd2267b6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "673321a3-7c59-4935-966e-57adeb2d48da",
      "documentation": "<p>Deletes an account's verified or pending phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=DeleteSMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "553b7f2a-9118-44ce-a537-e32b99d4f798",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68ae9864-8f61-4e00-bd3b-ff4eccd42671",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b018eb0-5f23-497a-a486-3dbf270265d2",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47222578-fbd4-433e-987c-62b37da0629d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d3daa84e-67cb-4c43-b734-1d44a6f13eed",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7de63745-417b-4597-bf31-f79f034fa842",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "UserErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ccf64ffa-1134-4153-aa3c-1382245b6ba0",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e8d20901-c125-43d8-824d-243eff378484",
      "documentation": "<p>Deletes an account's verified or pending phone number from the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=DeleteSMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "f8e5e31b-5c05-4575-9165-0a91f3ebf476",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4679ecfb-e5ef-476e-b921-8fc30f2eedc2",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86dbd269-d67d-4aab-ac39-7a51c05ef879",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9484c386-7ac0-4994-9f76-cdd96e66b5a6",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f1c1fe3-ac23-4b93-8288-ce810828f33c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7901797-bb5c-4eb9-971e-345ccee2542c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "UserErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "560cad1f-854f-4da1-9387-cab46acf5b2e",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0db11089-82f5-43ec-b54c-0632b404fdef",
      "documentation": "Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.",
      "method": "get",
      "endpoint": "#Action=DeleteTopic",
      "responses": [
        {
          "uuid": "cf5a778d-c22d-4cc8-a6d6-7b9538f6ee2c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff51a049-9191-4b68-92e3-089b382ec733",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "887f4ef0-4cdb-4229-853d-813a56ac0788",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bcdfd185-2f6d-4c73-9456-d5d7ce6718b3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d97aa7c-f9a8-47a6-96c1-52818b97e330",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2066c304-31ab-4615-8646-6fda6d09812b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7e39f59-f8be-4383-b938-1885ce60e8fb",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7b1d90b3-5632-4eb3-a7bb-7e651fb61365",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afbac44b-95e1-4067-98e8-d9740ce0e0bc",
      "documentation": "Deletes a topic and all its subscriptions. Deleting a topic might prevent some messages previously sent to the topic from being delivered to subscribers. This action is idempotent, so deleting a topic that does not exist does not result in an error.",
      "method": "post",
      "endpoint": "#Action=DeleteTopic",
      "responses": [
        {
          "uuid": "db142377-895d-48d3-80e4-f9835187036d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8f9a7588-772f-422a-b28e-3afe51531d6f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a03efbfd-4e8e-47e8-84ad-e9fe725f6842",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0257d906-7214-450b-8089-2f388eb43e1b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0bd17644-9752-41d0-b529-2725a5714732",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "716c74a4-2a99-4027-8ea9-0453688d162b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb8fb705-9751-46a5-b378-7cece3587839",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "881e891c-70a7-4938-83ba-10331d3b8c62",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5416b560-65eb-4fbf-9e14-2c818d682000",
      "documentation": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "get",
      "endpoint": "#Action=GetEndpointAttributes",
      "responses": [
        {
          "uuid": "434c0ad7-8e2b-491b-a093-09a78acef3b1",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b47d1bcd-a159-40ea-86c4-be32a7f83bc8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41555f5d-302b-4d9b-8a12-29f0236af297",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f03f118c-f0f9-43de-be50-78a7192d10a7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a55becf2-25cb-45bc-ade6-39bd7e71f4e1",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "04bcbbaf-0233-41db-8a92-c6fd128bd018",
      "documentation": "Retrieves the endpoint attributes for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "post",
      "endpoint": "#Action=GetEndpointAttributes",
      "responses": [
        {
          "uuid": "dd0d3961-a906-4c16-bc73-84119e7c6523",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3d97b5c0-37c9-48b9-bce4-676bee1fdc4c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78bf35da-73b6-448e-99d2-62fa75bce2e0",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2dc253e0-5f21-430d-b749-4d38682fb5ee",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2d34d799-af65-4492-b274-2f629d7ef99a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "974f817c-136d-4cea-a169-ee33faed62cc",
      "documentation": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "get",
      "endpoint": "#Action=GetPlatformApplicationAttributes",
      "responses": [
        {
          "uuid": "a3e3ba8e-6669-4db4-8607-3dd76c011bcc",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9bec9f58-9dd1-4dfd-946e-d1bdfc9b7d32",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "902c6037-2ed0-4721-a8e2-fb4afd306e4c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c1e72d3-d1cd-4329-b021-3039c3c258aa",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9fc770bf-e821-47e0-8c93-53ef1f6a346f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c72de8e-e7f4-484b-b866-58a2a05ca91a",
      "documentation": "Retrieves the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "post",
      "endpoint": "#Action=GetPlatformApplicationAttributes",
      "responses": [
        {
          "uuid": "d2288fc0-5cbf-4020-b3ec-eadd661311c9",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf1a4cec-ca60-4d6a-a84a-9ba367bd5501",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c4d01551-d410-454d-821c-c99ec09efe6a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15275d53-7a13-4163-9f0d-99666f92706a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7965e3d2-75c3-4adc-ac97-29284adbc440",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "beddb01e-f2a8-4e75-bd76-5e03a5c4f650",
      "documentation": "<p>Returns the settings for sending SMS messages from your account.</p> <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>",
      "method": "get",
      "endpoint": "#Action=GetSMSAttributes",
      "responses": [
        {
          "uuid": "fcd67d9c-4e5e-4f2e-855e-c26ac72b8b27",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07384143-dcc1-4988-b333-72dbc923d488",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "98b34fce-778a-4ae9-9c1e-4ceee8008b1e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c79fe343-0301-45be-848e-388bdf23a14a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "178795e0-732c-497a-884e-7d036cc66f4f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b99956f4-27f3-4ec6-b4c6-d9a31dd4dd38",
      "documentation": "<p>Returns the settings for sending SMS messages from your account.</p> <p>These settings are set with the <code>SetSMSAttributes</code> action.</p>",
      "method": "post",
      "endpoint": "#Action=GetSMSAttributes",
      "responses": [
        {
          "uuid": "916b1d83-c862-4c34-8ad8-7f1810625308",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c633c06-3f33-43ce-9d5b-2f391f728d01",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52b7aab8-19fc-4905-8729-712f7a307ebd",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93932436-ae04-4f40-9ee6-e4b7e252d6d9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5c9757a3-819a-4233-8496-54f1defa99cb",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c2c1b5a7-7428-4158-a69d-ff50f724599e",
      "documentation": "<p>Retrieves the SMS sandbox status for the calling account in the target Region.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=GetSMSSandboxAccountStatus",
      "responses": [
        {
          "uuid": "6f0ac6c3-9388-46f0-9c45-0ae49875eabe",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f5c0f1d-3a25-43de-8c1d-095a45d48905",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9587bb06-fad1-4699-be30-0eecd396bf0c",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0d126dc-f29f-4581-97f1-0aee61417a6a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e971de3-691a-4ecb-aa08-6b3395b29643",
      "documentation": "<p>Retrieves the SMS sandbox status for the calling account in the target Region.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=GetSMSSandboxAccountStatus",
      "responses": [
        {
          "uuid": "5a164329-ba4b-403b-ac42-d321f1491068",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15ef56be-0abe-4344-9d25-56d8b46c228f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4970b258-f859-4340-a264-97a684a72c05",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a92ca67-efcd-4a90-81d7-f1a8cbcdb3c9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "99b46d54-d5ca-48f1-bede-35c34cc6f3bf",
      "documentation": "Returns all of the properties of a subscription.",
      "method": "get",
      "endpoint": "#Action=GetSubscriptionAttributes",
      "responses": [
        {
          "uuid": "d48dabbc-4438-4b99-9959-d1b524d5ec45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "25433b6b-dbda-4133-9c01-74890a2921b4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6f931e82-5b84-434e-a8de-07f2e88dafc1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e8ef8ec0-d31d-4099-8e66-fa249fcea235",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c997c7f3-1621-4a41-92dd-1a46c52d2a17",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "934b782f-3d68-42cd-b0d2-2b1fcdf2de7c",
      "documentation": "Returns all of the properties of a subscription.",
      "method": "post",
      "endpoint": "#Action=GetSubscriptionAttributes",
      "responses": [
        {
          "uuid": "1adf3f48-d8be-41f2-8c62-3bfd1ca6a33d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ab2a0335-adc4-44ca-a939-94dd78120979",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69977f4b-d82f-4a64-9a51-a3bf00bd6350",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3253544-5397-4208-bab7-93061a981901",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1bd77c32-7907-4a54-9a74-c6438bf9532f",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c244e2d0-dd43-4d48-ac30-4c1c2fa7b9ab",
      "documentation": "Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.",
      "method": "get",
      "endpoint": "#Action=GetTopicAttributes",
      "responses": [
        {
          "uuid": "fdd76f3c-14a0-4946-805d-80f1ebb56d80",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca552c34-6566-49dc-b8bd-fed24420d3d9",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5bc977e4-717d-432f-b520-93e76638ccae",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f4f27e0-aa07-42c5-9110-4ea9d31fba99",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5309db3b-a7c0-4bb0-beff-95bf9eebde99",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f40d14bd-fd41-44d8-a158-d662c4614329",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "26184a25-6921-4476-8372-2a45d43fbe46",
      "documentation": "Returns all of the properties of a topic. Topic properties returned might differ based on the authorization of the user.",
      "method": "post",
      "endpoint": "#Action=GetTopicAttributes",
      "responses": [
        {
          "uuid": "8a069dd8-4817-4c1d-bbeb-dcb2c857b383",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c38e92c-365a-4b2b-b942-5599d36203bc",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5fab8036-b579-4ed6-95e7-ae72faa9efe7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83be6176-4624-42aa-936f-07110d4211ab",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7bcbe809-dfe0-48dd-bb1b-e240b5333552",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "19f7b7c2-1207-46a0-894a-af5770ef4244",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6d50c1b0-b52d-4525-9deb-913b9491e005",
      "documentation": "<p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM (Firebase Cloud Messaging) and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=ListEndpointsByPlatformApplication",
      "responses": [
        {
          "uuid": "4f416c7f-36f8-4edc-9697-2720e930ec45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56db1b84-bab2-4080-963f-fd2404c5f54b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2f67a01e-f3c5-48a8-9b35-ef3df1dd9eb9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eef8fc0e-fcb5-429e-8651-32a301a9c48a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fb627f97-fc33-417a-b324-da7cac9fa0a5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d8fcdba2-22b6-4e81-96fe-de3e5b9536d5",
      "documentation": "<p>Lists the endpoints and endpoint attributes for devices in a supported push notification service, such as GCM (Firebase Cloud Messaging) and APNS. The results for <code>ListEndpointsByPlatformApplication</code> are paginated and return a limited list of endpoints, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListEndpointsByPlatformApplication</code> again using the NextToken string received from the previous call. When there are no more records to return, NextToken will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=ListEndpointsByPlatformApplication",
      "responses": [
        {
          "uuid": "d6099ffd-073a-4076-b2bc-0d2be127db1e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "567731bf-d194-450c-b27a-9e5e2b7863ec",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fa1d7dba-b609-4b34-8509-677518e88d9d",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff363346-9d4c-440f-9717-87a62bdef628",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2ae4abd2-5b70-4992-9486-5cbff96b6e06",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9d10dc6-41ce-4aa9-8fa0-de98dbc419d5",
      "documentation": "Lists the calling account's dedicated origination numbers and their metadata. For more information about origination numbers, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\">Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>.",
      "method": "get",
      "endpoint": "#Action=ListOriginationNumbers",
      "responses": [
        {
          "uuid": "b3ceacee-8735-4a51-9584-fc847138d3e2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3b3aa72c-ef37-43f4-b9dc-f82ae22ebf1c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "793febef-b160-4df3-8255-eaee0f323f33",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b461e9a8-4a6a-4206-951c-354a3dc78807",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "425f63db-12e7-4062-9935-19e95a4eda94",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f54d89-2db2-4cf5-b7cf-16f9e6427f77",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7633d619-c8d8-434a-9978-bd21124af00d",
      "documentation": "Lists the calling account's dedicated origination numbers and their metadata. For more information about origination numbers, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/channels-sms-originating-identities-origination-numbers.html\">Origination numbers</a> in the <i>Amazon SNS Developer Guide</i>.",
      "method": "post",
      "endpoint": "#Action=ListOriginationNumbers",
      "responses": [
        {
          "uuid": "6d75b667-bba7-4fd6-8de0-c370a0fb2f45",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da7ae1a1-2c64-4802-bb17-0d30f77c726c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "69ae8c97-1311-46e8-b1e3-e1fdc1efbfb8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d534fba6-404c-4cc8-8b77-c15aabfea473",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9d703d3f-9a40-4670-b9b0-be03dd5bfc4a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "78dacf74-6092-4cc8-8c9a-522f105ee3ae",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ValidationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "807137c0-e690-445a-8654-fc335316d797",
      "documentation": "<p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>",
      "method": "get",
      "endpoint": "#Action=ListPhoneNumbersOptedOut",
      "responses": [
        {
          "uuid": "7b833ea8-1234-4c90-9b02-8b3eba155b2f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60164314-03d7-432b-aec5-caa53e81e01a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ee1308bd-2d59-43f9-b840-375bc5c415fb",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d710bbbe-06eb-4eab-ac0f-147c22c63011",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d4d000bb-2778-4a5a-88ca-94782bd83426",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6caef1c9-3825-44aa-aced-af192107c3bf",
      "documentation": "<p>Returns a list of phone numbers that are opted out, meaning you cannot send SMS messages to them.</p> <p>The results for <code>ListPhoneNumbersOptedOut</code> are paginated, and each page returns up to 100 phone numbers. If additional phone numbers are available after the first page of results, then a <code>NextToken</code> string will be returned. To receive the next page, you call <code>ListPhoneNumbersOptedOut</code> again using the <code>NextToken</code> string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null.</p>",
      "method": "post",
      "endpoint": "#Action=ListPhoneNumbersOptedOut",
      "responses": [
        {
          "uuid": "de9edede-23b6-4b52-86d5-4db9ee51531f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c5e92b0-63b4-4421-9d9b-62017538250d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "55a3a6f2-91db-4fa5-8e91-06bc02aacfeb",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92edca44-a51a-4b7b-af30-2c78f733e48b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86d3ebe7-60e2-4e78-9fd9-8e1a503a5546",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1ae28061-0028-4539-89ba-e08b6b7f1708",
      "documentation": "<p>Lists the platform application objects for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 15 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=ListPlatformApplications",
      "responses": [
        {
          "uuid": "9d8b7074-a9a0-4d4c-877d-7722edcd1890",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70fd5fff-a5ea-4876-a1d8-9950b4806515",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e476a3d-76e0-4ca7-b5c1-2b38e87f2f41",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7580bd2b-ff72-4929-9306-c42a7ad995b1",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be3cabd9-0ea5-402a-ae17-82e341040bf7",
      "documentation": "<p>Lists the platform application objects for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). The results for <code>ListPlatformApplications</code> are paginated and return a limited list of applications, up to 100. If additional records are available after the first page results, then a NextToken string will be returned. To receive the next page, you call <code>ListPlatformApplications</code> using the NextToken string received from the previous call. When there are no more records to return, <code>NextToken</code> will be null. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. </p> <p>This action is throttled at 15 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=ListPlatformApplications",
      "responses": [
        {
          "uuid": "8e6f1cd3-225d-4b0d-92a8-eeaed54f2284",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fec558a5-8a82-4003-8ebc-e18fa59e216b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64b0e199-474a-4e0e-b71a-e669d93adaf5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "83258ab2-3f67-4aa3-82cb-a26d625026a3",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5e84bb7e-3ae7-4863-aaee-51ed4f67bec5",
      "documentation": "<p>Lists the calling account's current verified and pending destination phone numbers in the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=ListSMSSandboxPhoneNumbers",
      "responses": [
        {
          "uuid": "733d553e-6bc3-4703-b063-f401c26f5366",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f4b8e28f-e260-40bd-9f07-70565564f07f",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b6d23a9a-a3fc-4bae-b4d3-23d73c40dcb1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "739dc30c-41e5-4e64-9c57-3974ec50f21a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b35dfff9-83c6-4fc0-878d-2af24716833c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe2bd666-690f-4e3e-809a-977f1a1d910c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0b1e896-00d7-48e6-b5ef-8858b755286a",
      "documentation": "<p>Lists the calling account's current verified and pending destination phone numbers in the SMS sandbox.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=ListSMSSandboxPhoneNumbers",
      "responses": [
        {
          "uuid": "4b873948-41eb-4457-a8c4-8d18159e948b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7d62b3d-95f1-4559-9ce6-1e454417baf1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bcf6a89-9f8b-4067-9713-94c80a4413ac",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9eb2aaf0-0fd1-4dbe-ac51-2b8f7fc55ecf",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "41fe21d9-b20d-453d-b462-3fc26d4f1ca9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb2ea7f8-1be3-4eee-99cd-b69de25e7f53",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f6d7dc4a-4b4e-4013-afe9-e2c4ae6be4e5",
      "documentation": "<p>Returns a list of the requester's subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=ListSubscriptions",
      "responses": [
        {
          "uuid": "4ded36d3-0d6d-4f05-beec-25f87bc4fc01",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a6950d67-2743-4b52-8de8-45c32fc6e00a",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4494f785-3111-4327-886c-e30155081d22",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "51136824-a78d-400f-9ad9-0df085098c08",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07a53e4f-5b1e-4238-a02e-021640c6653e",
      "documentation": "<p>Returns a list of the requester's subscriptions. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptions</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=ListSubscriptions",
      "responses": [
        {
          "uuid": "af3cdc16-63c4-4cdc-b719-f79a3a8560f8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "aa531f86-e393-4b8c-82c5-4f883c9df62e",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "996ac28f-6d3f-4e36-adca-cb3a060b3b47",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c28fca23-a2b6-4499-a379-18101cfd9f5b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "68087515-48f4-4300-a5d8-c5ca55bd021e",
      "documentation": "<p>Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=ListSubscriptionsByTopic",
      "responses": [
        {
          "uuid": "d37384d8-6273-46e0-ab7c-a8528dab480e",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15b55925-a89b-4b0a-bc77-6631d9c0ad9c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c99c8cf6-63ab-4a52-b23d-c13909200cc5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f0256eb-cdcb-4278-a513-027d2c74bbed",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a681f562-2a40-47ac-a425-6bc9374d0e6a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a147833a-0ed1-40dd-87a7-c0a2bf953f70",
      "documentation": "<p>Returns a list of the subscriptions to a specific topic. Each call returns a limited list of subscriptions, up to 100. If there are more subscriptions, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListSubscriptionsByTopic</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=ListSubscriptionsByTopic",
      "responses": [
        {
          "uuid": "07b998f4-618b-412d-811d-ced4fedc5d10",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "66c93c82-e81d-4560-8cd9-b78ebe01d79b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dbdfec40-3bda-4d1e-9de0-8827ff0ee34e",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe183a20-2797-4538-8232-2d7004c890f9",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8e5bd0d5-5c61-42c0-87f8-e573197858bc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4ecb94e9-a1fc-413d-9818-c2a10afeef4b",
      "documentation": "List all tags added to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.",
      "method": "get",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "09c3859a-3a4c-44c4-a6b3-a0715a45f64c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bf82b81-b927-4d8c-9813-ee52495b1551",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e509bc0e-99a6-4c1c-a1bd-456dd47135e1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "347275ac-3886-4fb8-8c34-ab34331bfc91",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "01b34e0e-63b6-4fd2-aa38-08ed76189a31",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "eb6e72d8-af77-47df-a860-89f0b49b0655",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "163fcc5d-e905-427e-aa84-f080d2c4f2ee",
      "documentation": "List all tags added to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon Simple Notification Service Developer Guide</i>.",
      "method": "post",
      "endpoint": "#Action=ListTagsForResource",
      "responses": [
        {
          "uuid": "2ffe7273-de76-48e9-92c5-3d200073cad5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3e0c7d7b-e216-4adc-8345-3fd49df3fef0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c14a88c6-308f-458d-87ce-d545008d9ea3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0588ccc9-ec97-41b6-8222-1cf095cb7d75",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "483282ea-22b9-465b-8152-abe6aa5809f0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "95ed35ad-c50e-4113-9e48-939c7192e95a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "459333af-283b-4e6c-b71d-20449aa68e26",
      "documentation": "<p>Returns a list of the requester's topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=ListTopics",
      "responses": [
        {
          "uuid": "7af04ac5-f6a6-4075-b9a7-6240e5f1170a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c774ec9-4784-4a15-98d8-7597ef1ccb61",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "12ab0054-2f29-4128-8211-33056c2bdcd3",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11bb26ac-58a5-4796-969f-0e991b8c3aaf",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "badf443c-12c9-4c5c-b4bb-a422dcffd84a",
      "documentation": "<p>Returns a list of the requester's topics. Each call returns a limited list of topics, up to 100. If there are more topics, a <code>NextToken</code> is also returned. Use the <code>NextToken</code> parameter in a new <code>ListTopics</code> call to get further results.</p> <p>This action is throttled at 30 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=ListTopics",
      "responses": [
        {
          "uuid": "74b71723-3994-4244-8123-7de82fdc04c8",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d88aa3de-1640-411e-b23c-d22c6b8bb4d4",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f9990b9c-f164-401c-a163-9d6bb143e0c7",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "407ddc0f-e29f-4493-a1d0-2170b43cf64b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3ba1c7e5-f300-4b67-80e8-812e3eb2ba45",
      "documentation": "<p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> <p>You can opt in a phone number only once every 30 days.</p>",
      "method": "get",
      "endpoint": "#Action=OptInPhoneNumber",
      "responses": [
        {
          "uuid": "f0bbac9e-565b-43c2-976f-795ea592f7ef",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dc8041da-ae5e-4190-a9dd-69e8ea3bbafe",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d0065c1b-61c6-4718-a141-bee79edee323",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fd7532d-eb15-484d-84ad-599f8577e28f",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "245bf44f-ccf7-4165-b9c8-58e509c781e8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "156b9266-d10b-4940-94f0-8749974f010c",
      "documentation": "<p>Use this request to opt in a phone number that is opted out, which enables you to resume sending SMS messages to the number.</p> <p>You can opt in a phone number only once every 30 days.</p>",
      "method": "post",
      "endpoint": "#Action=OptInPhoneNumber",
      "responses": [
        {
          "uuid": "e51cc397-1510-4c36-a779-418abbb57b6c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea898955-3617-4c65-a25a-9234218a4151",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "194e0a6d-8212-4f16-9d67-b23e9d9cceef",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7f8e6e1-1355-4afd-abef-d6fc97554496",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a9f795f-b97b-491c-abe7-948236354e55",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9ba585c-50ef-41cc-9917-01982dfad3f2",
      "documentation": "<p>Sends a message to an Amazon SNS topic, a text message (SMS message) directly to a phone number, or a message to a mobile platform endpoint (when you specify the <code>TargetArn</code>).</p> <p>If you send a message to a topic, Amazon SNS delivers the message to each endpoint that is subscribed to the topic. The format of the message depends on the notification protocol for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it shortly.</p> <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> <p>For more information about formatting messages, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p> <important> <p>You can publish messages only to topics and endpoints in the same Region.</p> </important>",
      "method": "get",
      "endpoint": "#Action=Publish",
      "responses": [
        {
          "uuid": "2b558b66-efc2-4edf-a6c1-bc9bef8592d7",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d5da42a-7b08-4644-98f5-de958c89c39d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5c891e0-d352-40f1-a525-1f694ec28556",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "64e063fb-2bf6-4596-9189-43c252315488",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1b70939a-25ed-4e4e-a8e5-ee382120dd3a",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da49f42e-0940-42d7-92d8-199f9ebc3854",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "EndpointDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a8bf2f5-cace-4f0c-91c3-e489d1706437",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PlatformApplicationDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "832f482e-623d-4844-8b5d-b5b2697c1335",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc3f7a21-dbfa-4f67-aa96-f0c888cde01a",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7edb6407-1b07-41a3-8b44-742b599d1ccb",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "KMSInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9ede805f-6696-435f-bda3-027cfd6bf6d2",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "KMSNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c292c5b-3e9f-4c4d-bcdd-112101c09b2f",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSOptInRequired",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e581a7e9-bc0f-4c1d-af84-5a216a06bc5b",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a35da0a2-77f4-4d1a-8b4c-d9bca1f120d5",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "KMSAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "29eb8605-50df-4415-8d84-0a8d752aef6d",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "82059ea8-01ce-424e-b904-e8426eca781f",
      "documentation": "<p>Sends a message to an Amazon SNS topic, a text message (SMS message) directly to a phone number, or a message to a mobile platform endpoint (when you specify the <code>TargetArn</code>).</p> <p>If you send a message to a topic, Amazon SNS delivers the message to each endpoint that is subscribed to the topic. The format of the message depends on the notification protocol for each subscribed endpoint.</p> <p>When a <code>messageId</code> is returned, the message has been saved and Amazon SNS will attempt to deliver it shortly.</p> <p>To use the <code>Publish</code> action for sending a message to a mobile endpoint, such as an app on a Kindle device or mobile phone, you must specify the EndpointArn for the TargetArn parameter. The EndpointArn is returned when making a call with the <code>CreatePlatformEndpoint</code> action. </p> <p>For more information about formatting messages, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-custommessage.html\">Send Custom Platform-Specific Payloads in Messages to Mobile Devices</a>. </p> <important> <p>You can publish messages only to topics and endpoints in the same Region.</p> </important>",
      "method": "post",
      "endpoint": "#Action=Publish",
      "responses": [
        {
          "uuid": "4fe8d2a2-dcdd-4231-a551-551be60c9786",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "73a75a91-c97d-4478-800c-c1ce4d2d2ac0",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8da6a8ab-25c0-430d-aae2-134ae551a4e8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidParameterValueException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a60e696-2273-40f8-b336-d84a0f17fde8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fc5c0796-9957-4720-9316-5047505eff70",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "09506652-74f9-410f-b62e-1020408850ce",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "EndpointDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f145205-2c86-4f81-a71e-79c83ca897a1",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "PlatformApplicationDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c792c3c0-5f14-43bc-8deb-9944416a799f",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "07f3c63f-e932-4a0b-9c57-15770e16c32e",
          "body": "",
          "latency": 0,
          "statusCode": 487,
          "label": "KMSDisabledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6ef90153-3bc7-4564-b832-63857de58cfc",
          "body": "",
          "latency": 0,
          "statusCode": 488,
          "label": "KMSInvalidStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d9a252c-fd43-4ba9-a268-42114cdcf109",
          "body": "",
          "latency": 0,
          "statusCode": 489,
          "label": "KMSNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b526464c-8027-43e9-8778-ea68abdc06bd",
          "body": "",
          "latency": 0,
          "statusCode": 490,
          "label": "KMSOptInRequired",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7dca83c-d7e8-4dfd-8f94-bd02f68a7004",
          "body": "",
          "latency": 0,
          "statusCode": 491,
          "label": "KMSThrottlingException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a053ca69-d912-4eea-a095-2ded0b22177c",
          "body": "",
          "latency": 0,
          "statusCode": 492,
          "label": "KMSAccessDeniedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b515ccd9-91a4-4f89-a60c-fbfc0072047e",
          "body": "",
          "latency": 0,
          "statusCode": 493,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b5cfe3f7-1d16-4539-91d8-747f94f4a8ed",
      "documentation": "Removes a statement from a topic's access control policy.",
      "method": "get",
      "endpoint": "#Action=RemovePermission",
      "responses": [
        {
          "uuid": "3db27a37-e799-4b46-b5b0-b8758385f419",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6102d817-2e9b-479b-8383-d37fe52688e1",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fde64810-8213-441b-bb7f-66d0c3e254af",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15c09b66-ad1b-4469-8da4-3fcc97608abf",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ae8c09ac-8da5-4185-9233-c8ead84c085c",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7dac0bb1-754d-4084-b31d-9c969a8b433c",
      "documentation": "Removes a statement from a topic's access control policy.",
      "method": "post",
      "endpoint": "#Action=RemovePermission",
      "responses": [
        {
          "uuid": "cac2ff95-34b0-46c8-a308-3d6338493f36",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "77a9ba9b-e517-4dd8-a880-97e7c723306d",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94091fe1-4d2d-479c-8582-ac66f290668a",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "23dd32ad-1dfc-4019-84e5-16427404aa3d",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "91003ce1-2a3c-4b1c-b491-c27c2d6f7065",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3c4decee-32b1-431e-8dfb-114065e3b918",
      "documentation": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "get",
      "endpoint": "#Action=SetEndpointAttributes",
      "responses": [
        {
          "uuid": "1c8f0fcf-1beb-4735-affc-5ad0e267d723",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0e6d80aa-fdc7-4573-8e3b-8eea1aa8dc35",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ced018be-15bd-45db-be8b-85d7268be312",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "94eca6c4-cc8d-4fca-a87f-2b9a68470d71",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37eea911-b036-4824-856e-a8e8060f81c4",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "93fb4ba9-e71e-4d6c-bcf6-f98c05f1a763",
      "documentation": "Sets the attributes for an endpoint for a device on one of the supported push notification services, such as GCM (Firebase Cloud Messaging) and APNS. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. ",
      "method": "post",
      "endpoint": "#Action=SetEndpointAttributes",
      "responses": [
        {
          "uuid": "07730d75-012a-49e9-9952-dfa0248fcc9f",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a706a8b-87b6-495b-8070-4e718bf12656",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6e885249-4f10-4113-9ff3-6e393b414510",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "574e9c84-71fd-48d1-b7ce-88f27dfab5fe",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45138ee7-7ca5-478f-a987-54aa210b0352",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "924c8050-a5c2-4f9d-a630-f6ca2b650631",
      "documentation": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\">Using Amazon SNS Application Attributes for Message Delivery Status</a>. ",
      "method": "get",
      "endpoint": "#Action=SetPlatformApplicationAttributes",
      "responses": [
        {
          "uuid": "1b2e5abe-d40b-40bb-b292-b3ca52060a1c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf774701-fc3e-4ca1-8db3-ae7b3e71db25",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c04f8286-8dbf-4649-b0c8-200370519f91",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d2fc2e12-66c5-4936-9e06-e621bcf4b4f2",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0df51ecd-7bba-4f5e-8494-f652cb264f76",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "41b32463-91ac-4b4e-b0f7-c38e5345f96e",
      "documentation": "Sets the attributes of the platform application object for the supported push notification services, such as APNS and GCM (Firebase Cloud Messaging). For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/SNSMobilePush.html\">Using Amazon SNS Mobile Push Notifications</a>. For information on configuring attributes for message delivery status, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-msg-status.html\">Using Amazon SNS Application Attributes for Message Delivery Status</a>. ",
      "method": "post",
      "endpoint": "#Action=SetPlatformApplicationAttributes",
      "responses": [
        {
          "uuid": "dd52e47a-2de4-404f-836d-14336e0ce962",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "645f67cc-9c21-438c-b7ea-5c39bf965a3b",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "71983b8b-8a29-48da-bd4c-a9d19f195a4f",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "581f5987-da7b-40bc-a115-84d2c580ddca",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35fa5939-9184-4f5c-93be-1cddf377d3ae",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5c16fcf5-d206-42b7-8e1c-0e7248c64c9b",
      "documentation": "<p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\">Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p> <note> <p>To use this operation, you must grant the Amazon SNS service principal (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code> action. </p> </note>",
      "method": "get",
      "endpoint": "#Action=SetSMSAttributes",
      "responses": [
        {
          "uuid": "ccd1518d-0b1e-4b29-8291-ab3a5f472f0d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b31aefd2-f5c6-40f6-93bb-6adf5fe13f20",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "160ac0b3-c5cf-414b-a118-b3d4d2c5f6b5",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "529858b6-6339-486d-bb40-0d521beb3f49",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "60a53a66-5072-4faf-8b66-089ca86514a3",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8559704b-f5bb-4d91-b591-1edc4c1f8dce",
      "documentation": "<p>Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.</p> <p>You can override some of these settings for a single message when you use the <code>Publish</code> action with the <code>MessageAttributes.entry.N</code> parameter. For more information, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html\">Publishing to a mobile phone</a> in the <i>Amazon SNS Developer Guide</i>.</p> <note> <p>To use this operation, you must grant the Amazon SNS service principal (<code>sns.amazonaws.com</code>) permission to perform the <code>s3:ListBucket</code> action. </p> </note>",
      "method": "post",
      "endpoint": "#Action=SetSMSAttributes",
      "responses": [
        {
          "uuid": "ab7cdaae-6791-4eae-b814-c72e4cfab47a",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76558fe2-16f9-4b67-a814-206b8e363040",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c18708dd-8919-4708-b852-96e904e32247",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "65dae059-18aa-4bde-9328-1f7c8067909e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "622e7fc4-46da-4d47-ae27-3971d2fb6bde",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ed1557b2-3e7b-4623-8076-4b7e5b5580d7",
      "documentation": "Allows a subscription owner to set an attribute of the subscription to a new value.",
      "method": "get",
      "endpoint": "#Action=SetSubscriptionAttributes",
      "responses": [
        {
          "uuid": "544f88ed-bb67-4125-ad83-5c14b727fb62",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fe52b0c-ca11-44fd-afc7-93bbe14a4df7",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff3534e0-c720-43ed-a0c4-469f9e7a1d33",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6c0bab3-bfe1-4d4e-b215-21472365cd17",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b71c54fe-509b-48ec-a1cd-1bcfb48a4bbc",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ab58648-ec64-4aa5-a4b5-6ba18576104c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5bb8b485-2995-467d-8820-51329b442dc2",
      "documentation": "Allows a subscription owner to set an attribute of the subscription to a new value.",
      "method": "post",
      "endpoint": "#Action=SetSubscriptionAttributes",
      "responses": [
        {
          "uuid": "2be3b233-2734-45ec-a8bc-dd07f8b67e89",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1f1f25e1-e12e-459f-bc54-5ccb30622221",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "13de5951-8962-4b06-afef-b74933bff0b1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb72d82b-c927-4a35-833b-ed8fee01cc4a",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e6756325-fac4-4e0c-884f-0e2fd074bea8",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "86a388aa-8b91-44fe-9473-d8b9ca222b98",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "75ee177f-e1e0-4ebd-9f68-b460c84057e2",
      "documentation": "Allows a topic owner to set an attribute of the topic to a new value.",
      "method": "get",
      "endpoint": "#Action=SetTopicAttributes",
      "responses": [
        {
          "uuid": "31f0a72e-b2e9-4101-8160-96ba8d5fcbc2",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97f9cae1-28bf-461c-bf07-9e5821696eed",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "129ff066-b1ff-4887-879a-1ee2d8b90481",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7f300a3d-a1fc-41fc-8444-9268a5ae9b86",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a1b8730f-15ca-4da9-b53f-1cb616a26381",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c34a59c-c006-4a07-b91d-364cfd625d7c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "90e1814d-dffd-4c0a-ad7b-e534d01f2f65",
      "documentation": "Allows a topic owner to set an attribute of the topic to a new value.",
      "method": "post",
      "endpoint": "#Action=SetTopicAttributes",
      "responses": [
        {
          "uuid": "b3acbcef-b3b9-418f-905d-f4bb78dbd6db",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4acf2b07-07cf-4dd4-a09f-e56391127e68",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "97ea53a9-66f6-42a3-a451-012872944ece",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "45519364-157a-4b26-818a-197635614543",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "58d84474-3d96-4789-99dc-672004e508a2",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b38fc86b-1d0b-407e-83dd-2e4cd62dfb1c",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8e890648-952f-4119-9e3c-833045271f03",
      "documentation": "<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is HTTP/S or email, or if the endpoint and the topic are not in the same account, the endpoint owner must run the <code>ConfirmSubscription</code> action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code> action with the token from the subscription response. Confirmation tokens are valid for three days.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=Subscribe",
      "responses": [
        {
          "uuid": "fd558ef6-4ffc-4828-baf0-45fa85bb73f0",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0f9fdb8d-45e0-4a02-9074-3c9c3ace4c01",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7a9d6c10-5104-4675-b4e2-43385d4c4644",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5a9c13bc-8673-47da-a90a-a42748be71e4",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "008b3425-e14b-490b-a584-37e1bb34d4f0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bb0f701-51c7-4006-8da1-43245df98857",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b56bd34a-8a29-4a1c-8c9f-5d120c59b0e3",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "34f01f81-953b-4005-9b01-40ae8be1c87d",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "86b0105f-36b3-4288-bdf5-2f7b0de2e423",
      "documentation": "<p>Subscribes an endpoint to an Amazon SNS topic. If the endpoint type is HTTP/S or email, or if the endpoint and the topic are not in the same account, the endpoint owner must run the <code>ConfirmSubscription</code> action to confirm the subscription.</p> <p>You call the <code>ConfirmSubscription</code> action with the token from the subscription response. Confirmation tokens are valid for three days.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=Subscribe",
      "responses": [
        {
          "uuid": "7677a82b-bf2a-41e3-b2df-087e3fe480cf",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acff81d5-7676-482a-8822-f4f1b0e7858c",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "SubscriptionLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e76be55a-eb91-42a1-bc38-b4c67fbe77dc",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "FilterPolicyLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2da5ab64-e539-4fc8-a221-48f22b623d58",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "def1e3ed-3a33-41b8-8506-526459300924",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "16f2f73e-c926-4958-816e-21eb44f998e8",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e1848bff-b2a7-49c8-aa6f-7f53618b47ea",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52d8b4b9-695c-41f5-9aaf-2c96b58b2bc0",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e036a222-0f2e-4fb8-a3dc-f5aa70e25eb8",
      "documentation": "<p>Add tags to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you use topic tags, keep the following guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li> <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key identical to that of an existing tag overwrites the existing tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per account, per Region. If your application requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\">technical support request</a>.</p> </li> </ul>",
      "method": "get",
      "endpoint": "#Action=TagResource",
      "responses": [
        {
          "uuid": "c8c22ef8-583e-4147-a72e-83aeca09f2b5",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "52c86c8c-4d35-4555-91d3-27ad66272c22",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ea522ae6-66f6-4e1b-ad85-86ff130fe3d1",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47893584-6863-48fd-9080-84052e70c875",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cb1d7d68-69cd-4a51-86d4-8e79d92a9f96",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "edf4ae27-fff7-4103-b39b-89156d0c0b38",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2bde177f-3df2-4058-abda-16073601f876",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf8a8959-8472-445a-800e-158927313886",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "50009648-1e51-4773-9634-a1543043a8cd",
      "documentation": "<p>Add tags to the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.</p> <p>When you use topic tags, keep the following guidelines in mind:</p> <ul> <li> <p>Adding more than 50 tags to a topic isn't recommended.</p> </li> <li> <p>Tags don't have any semantic meaning. Amazon SNS interprets tags as character strings.</p> </li> <li> <p>Tags are case-sensitive.</p> </li> <li> <p>A new tag with a key identical to that of an existing tag overwrites the existing tag.</p> </li> <li> <p>Tagging actions are limited to 10 TPS per account, per Region. If your application requires a higher throughput, file a <a href=\"https://console.aws.amazon.com/support/home#/case/create?issueType=technical\">technical support request</a>.</p> </li> </ul>",
      "method": "post",
      "endpoint": "#Action=TagResource",
      "responses": [
        {
          "uuid": "41c7b7e1-afe0-40ce-a5cf-559cc3b02732",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e3864c9c-8637-4658-8104-0764d6a9a916",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b15ce7e1-d0f1-415c-a9eb-59c321ff0000",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c427eabd-e01a-45da-a744-b1f0da3e0093",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "59af8113-db94-4074-97c8-531a90a2a087",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "56bb0f9b-dccd-4eaf-a4b2-0b6099f4d23a",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7443e1cd-eb87-48f1-9f71-8f1abc579c70",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fe80ddb3-9290-4bc4-87ad-9180ae591257",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c1f4b957-fb27-4f6c-8106-7a16f279b6c3",
      "documentation": "<p>Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>",
      "method": "get",
      "endpoint": "#Action=Unsubscribe",
      "responses": [
        {
          "uuid": "cbbbb7bc-5ee9-4e0d-9b47-5d6f3ae096a6",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8792597-9608-4ccf-8532-80e256bf2b39",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2232e80a-08fe-497b-a877-ed59cb92e63b",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ddb88e91-d639-4b78-800d-1fd3e4e729e7",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e64bf2ad-7272-4b11-81cf-9d5ec524f864",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "11db628f-fb6c-4f75-9379-92bc57342ff6",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "62b9141c-0349-4ba4-ab93-84be8b214543",
      "documentation": "<p>Deletes a subscription. If the subscription requires authentication for deletion, only the owner of the subscription or the topic's owner can unsubscribe, and an Amazon Web Services signature is required. If the <code>Unsubscribe</code> call does not require authentication and the requester is not the subscription owner, a final cancellation message is delivered to the endpoint, so that the endpoint owner can easily resubscribe to the topic if the <code>Unsubscribe</code> request was unintended.</p> <p>This action is throttled at 100 transactions per second (TPS).</p>",
      "method": "post",
      "endpoint": "#Action=Unsubscribe",
      "responses": [
        {
          "uuid": "ea7f6e32-a133-4724-86e3-b72fcdb2051d",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3bf3dd25-e2c4-4162-b435-1392f1e61400",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "370fd566-cf43-4226-a0a8-9e5e2c430f91",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4131fdb0-0a84-4326-b574-3e514c57698b",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b050ac47-ef45-4d1f-81d9-0b3fb1bc41f0",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "NotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2a9b450f-7aac-4f22-9913-b261ece49ccc",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidSecurityException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "afc0d8dc-3b5c-4a21-bc41-fbe41c3c3039",
      "documentation": "Remove tags from the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.",
      "method": "get",
      "endpoint": "#Action=UntagResource",
      "responses": [
        {
          "uuid": "a44941d8-7bae-45a8-b4cb-36501334549c",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f6faf089-e818-4a70-b694-012296135616",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f653f5c2-d018-437f-a59b-23f0851bc730",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1677ff91-bdf9-4586-86ea-a1915612571e",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8a2a3b88-5ee0-462c-b5f8-b0f014b6c888",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6b05b0a9-76b4-4913-8bad-34624d7c8ae7",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "558fe0f4-0b3e-4e19-aedf-356aaf2b26b9",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "515d6783-ef02-4c8c-8bea-619513588df9",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce7ef3bd-b2d6-492f-b84e-36b20eb86a15",
      "documentation": "Remove tags from the specified Amazon SNS topic. For an overview, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-tags.html\">Amazon SNS Tags</a> in the <i>Amazon SNS Developer Guide</i>.",
      "method": "post",
      "endpoint": "#Action=UntagResource",
      "responses": [
        {
          "uuid": "edfb8b93-d095-4cf3-863f-7a20d126d47b",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ff59eae3-6e98-459a-ac66-f57f6a439fe3",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb802056-a3be-4bc4-8ede-4516aa331fe8",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "TagLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "79058a5f-05a9-4931-a8d0-50b968db5fbe",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "StaleTagException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "055f43ca-f9d5-4cac-afeb-7bffa8223be5",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "TagPolicyException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "539341a6-3e5c-4275-b07b-4e81372b28c4",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca4b1ca4-ccc5-43a0-9a61-f9e866b6cc02",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c8762df1-629c-48f2-aaae-7e5a591b4a48",
          "body": "",
          "latency": 0,
          "statusCode": 486,
          "label": "ConcurrentAccessException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c22fbbb-d04e-4254-b354-d9cca78d8ee9",
      "documentation": "<p>Verifies a destination phone number with a one-time password (OTP) for the calling account.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "get",
      "endpoint": "#Action=VerifySMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "cdcfe468-a240-4887-a6a4-6b2649f1aa04",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "acd7ff0b-08dc-454c-a3d8-816a10b18160",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0677451d-d5ff-4435-895d-cdc2b23437b9",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d6497917-b115-4fbb-bb87-312e032771bd",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "46d79519-d5d5-4780-9865-aed09d471ccf",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1954d3e3-9abc-4021-bb8e-f6010f47626b",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "VerificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2505b75-278a-4da9-9b91-b9e2ae9f342a",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "976d7ee3-9db6-4d3a-95e7-0d369711a2f3",
      "documentation": "<p>Verifies a destination phone number with a one-time password (OTP) for the calling account.</p> <p>When you start using Amazon SNS to send SMS messages, your account is in the <i>SMS sandbox</i>. The SMS sandbox provides a safe environment for you to try Amazon SNS features without risking your reputation as an SMS sender. While your account is in the SMS sandbox, you can use all of the features of Amazon SNS. However, you can send SMS messages only to verified destination phone numbers. For more information, including how to move out of the sandbox to send messages without restrictions, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html\">SMS sandbox</a> in the <i>Amazon SNS Developer Guide</i>.</p>",
      "method": "post",
      "endpoint": "#Action=VerifySMSSandboxPhoneNumber",
      "responses": [
        {
          "uuid": "bd812b85-7a09-4d24-8def-e0f2df4862be",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "661fced5-98c8-4403-a4f2-f5c2dc3650d8",
          "body": "",
          "latency": 0,
          "statusCode": 480,
          "label": "AuthorizationErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c3640f1-d72e-4c6e-8277-b28582db3c10",
          "body": "",
          "latency": 0,
          "statusCode": 481,
          "label": "InternalErrorException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "032fafdd-05e4-4d05-a0b5-806c1b9918f8",
          "body": "",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidParameterException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4c826e52-f72e-46cf-b357-22c75cd09eb9",
          "body": "",
          "latency": 0,
          "statusCode": 483,
          "label": "ResourceNotFoundException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db7db5af-5fc1-4790-aa42-35b3fdefc179",
          "body": "",
          "latency": 0,
          "statusCode": 484,
          "label": "VerificationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "800e38b7-2551-40fe-82fe-3d66ad8d0e41",
          "body": "",
          "latency": 0,
          "statusCode": 485,
          "label": "ThrottledException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "text/xml"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}