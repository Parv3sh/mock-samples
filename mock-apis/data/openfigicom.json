{
  "uuid": "32568b18-6aa9-45ab-9a09-f37e16ad3213",
  "lastMigration": 19,
  "name": "OpenFIGI API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "c53c86a1-e533-41b5-8118-3d6d24e56a19",
      "documentation": "Allows mapping from third-party identifiers to FIGIs.",
      "method": "post",
      "endpoint": "mapping",
      "responses": [
        {
          "uuid": "8c1943f4-7a40-4ec2-a1f2-755273a4fe50",
          "body": "[\n  {\n    \"data\": [\n      {\n        \"compositeFIGI\": \"\",\n        \"exchCode\": \"\",\n        \"figi\": \"\",\n        \"marketSector\": \"\",\n        \"metadata\": \"\",\n        \"name\": \"\",\n        \"securityDescription\": \"\",\n        \"securityType\": \"\",\n        \"securityType2\": \"\",\n        \"shareClassFIGI\": \"\",\n        \"ticker\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "A list of FIGIs and their metadata.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b2262c48-e9a0-4376-a72d-40cd535aa5bc",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request (body).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4f67df2a-32a4-465b-a97c-ad2e54c2de7e",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "API Key is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6d6a3608-26cd-4b80-a1b9-f3fed6cff9dc",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Unsupported 'Accept' type.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c0088695-89d1-4c6e-bd1f-64126bd5d837",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Too many mapping jobs in request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d27bff4d-9875-470c-9c49-b5f42c489cba",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "23cd223f-705d-41da-9e4c-129bdbd36be5",
      "documentation": "Get values for enum-like fields.",
      "method": "get",
      "endpoint": "mapping/values/:key",
      "responses": [
        {
          "uuid": "cec511ec-8d1e-4dac-a53f-224a6e11dc58",
          "body": "{\n  \"values\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The list of values.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a3b185bc-58c3-44cb-87f7-6dab47c05443",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request (key).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d16a9606-a8ed-41b2-91e3-d558e2bcad91",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}