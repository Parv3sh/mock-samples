{
  "uuid": "0ef93ce3-3377-4427-aa05-045d52e6af61",
  "lastMigration": 19,
  "name": "OpenFIGI API",
  "endpointPrefix": "v1",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "bfa27f84-8566-4d81-b6da-e1f5e9c32b49",
      "documentation": "Allows mapping from third-party identifiers to FIGIs.",
      "method": "post",
      "endpoint": "mapping",
      "responses": [
        {
          "uuid": "8cce31f2-094d-482a-a9ea-ce842f9c1a37",
          "body": "[\n  {\n    \"data\": [\n      {\n        \"compositeFIGI\": \"\",\n        \"exchCode\": \"\",\n        \"figi\": \"\",\n        \"marketSector\": \"\",\n        \"metadata\": \"\",\n        \"name\": \"\",\n        \"securityDescription\": \"\",\n        \"securityType\": \"\",\n        \"securityType2\": \"\",\n        \"shareClassFIGI\": \"\",\n        \"ticker\": \"\"\n      }\n    ]\n  }\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "A list of FIGIs and their metadata.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6867f9c4-fdb6-4235-a9a9-d6f49d437fe9",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request (body).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0304a8bb-a360-4b24-9192-67ac359319ed",
          "body": "",
          "latency": 0,
          "statusCode": 401,
          "label": "API Key is invalid.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21ebb3d9-a061-4709-b69f-082a5b22f05b",
          "body": "",
          "latency": 0,
          "statusCode": 406,
          "label": "Unsupported 'Accept' type.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4744ea7a-9fb0-4b7a-aa61-016a2b0d7e3b",
          "body": "",
          "latency": 0,
          "statusCode": 413,
          "label": "Too many mapping jobs in request.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "38016069-1f48-4c15-91b3-e224b2a9df8f",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a5e9de8-8ab3-492a-9242-849edd8e7d2b",
      "documentation": "Get values for enum-like fields.",
      "method": "get",
      "endpoint": "mapping/values/:key",
      "responses": [
        {
          "uuid": "f98e7a6e-ab5c-4beb-a235-c72867590d39",
          "body": "{\n  \"values\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The list of values.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8d6bcca-7158-4d04-aa35-fe7ff5dda046",
          "body": "",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid request (key).",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e874231b-b0fe-436c-aea9-243bcc66f620",
          "body": "",
          "latency": 0,
          "statusCode": 500,
          "label": "Internal server error.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "*/*"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}