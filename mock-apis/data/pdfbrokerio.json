{
  "uuid": "fdafffcd-aff0-47dd-b656-47fb936457e9",
  "lastMigration": 19,
  "name": "PdfBroker.io API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "d247b770-1ef9-4a4a-87dc-173e7eede9f9",
      "documentation": "Basic method to verify api is up and running",
      "method": "get",
      "endpoint": "api/pdf",
      "responses": [
        {
          "uuid": "47755934-b158-4c69-87d7-ce37e8d521e9",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ca7bfd30-2400-44f7-b52d-544577e3b8d2",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5f501656-98ae-4963-ae50-ce412621b4f8",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f9107a13-3a0e-4c0a-8598-cd588a32a3d7",
      "documentation": "Concatenate multiple pdf files into single pdf file..",
      "method": "post",
      "endpoint": "api/pdf/pdfconcat",
      "responses": [
        {
          "uuid": "431cb631-f762-4696-902a-7288ed95ea93",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "baadea33-5b2c-4586-b188-07a23fe61e04",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5d1de085-9423-4170-b032-4d3318887c3d",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3fc6675e-aec5-4611-bff8-c05c6218946e",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a4cbdf66-94b5-404f-a97b-63269e9541e6",
      "documentation": "Generate an image of to provided pdf file",
      "method": "post",
      "endpoint": "api/pdf/pdftoimage",
      "responses": [
        {
          "uuid": "f9e4fa64-7ab0-42d6-9653-fa15e49aa66e",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"ImageBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Generate an image of the provided pdf file. Either the image file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "546df9b8-42a0-4084-93d4-06778752fae9",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7d1b5ff9-fdef-4b3f-abf2-fac921622ac9",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "287458db-5c1a-4bdb-9605-926b9c868c0c",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "49745768-6720-454a-8754-094786fb1049",
      "documentation": "Write text on a page in a pdf document.",
      "method": "post",
      "endpoint": "api/pdf/pdfwritestring",
      "responses": [
        {
          "uuid": "ae4a71e1-7e93-4633-9a06-2875ad38fbb1",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8bf2ec21-2d5d-402b-936b-de3ed3c6e63f",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bf6c6ec5-9f6e-4b08-ad6f-c4a4bb9ea45f",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "efd23167-b199-43c9-8470-97fc57847605",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "12f53401-e57e-4014-806a-cfae31baf831",
      "documentation": "Generate pdf file from url using the excellent tool wkhtmltopdf.",
      "method": "post",
      "endpoint": "api/pdf/wkhtmltopdf",
      "responses": [
        {
          "uuid": "ecda9253-1482-4d9f-b03c-f33ca9c192af",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a7b7400b-fc43-4724-b650-d9e3ce727c6a",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs executing request",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "85c6112f-6c02-48d8-b83a-f83e1f28e036",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e0c6854f-34d5-4d92-82cd-f68ea3a5c9ba",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "400a2b34-5102-46b6-9162-6646bc419e84",
      "documentation": "Create pdf-file from complete XSL-FO document.",
      "method": "post",
      "endpoint": "api/pdf/xslfo",
      "responses": [
        {
          "uuid": "56691d0c-0e41-4e19-9d8e-67d70d731ff0",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6018b55a-9f96-4afd-824a-800126236362",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "89fcaf8f-b678-4e4f-814c-3623a2f0b379",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "007297e3-2931-472e-b91f-6dd2e78019cf",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "cbd416d2-04b8-4499-bd3f-dde1aa27ebc2",
      "documentation": "Create pdf-file from transforming xml document with Xsl-Fo transform document.",
      "method": "post",
      "endpoint": "api/pdf/xslfowithtransform",
      "responses": [
        {
          "uuid": "d4d0a06d-75d6-4955-b333-daa02d07794e",
          "body": "{\n  \"ErrorMessage\": \"\",\n  \"PdfFileBase64String\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the newly created pdf file. Either the file directly or serialized as Json if Accept-header is set to application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "708568b4-810d-4f42-87ed-4cc181c4fc6a",
          "body": "{\n  \"Description\": \"\",\n  \"ErrorMessage\": \"\",\n  \"StatusCode\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "If any error occurs parsing input",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48c2d058-e2cb-4e27-9118-4e4e58a24ef8",
          "body": "",
          "latency": 0,
          "statusCode": 415,
          "label": "If content-type of request is not set to multipart/form-data or application/json",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cf400b39-3d83-4a68-aafd-1b74ac652cdd",
          "body": "",
          "latency": 0,
          "statusCode": 429,
          "label": "If you reach the monthly request limit for your subscription plan",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}