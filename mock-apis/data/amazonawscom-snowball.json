{
  "uuid": "c6780a4c-7971-4d56-8447-e546486e0aca",
  "lastMigration": 19,
  "name": "Amazon Import/Export Snowball",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "041110e7-07b9-44bb-8679-1af4b531a78a",
      "documentation": "Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelCluster",
      "responses": [
        {
          "uuid": "2773228d-2408-4115-86ff-b80b2b236f57",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2c2c115-7c9e-4f6e-a455-b4fa53b95f07",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9c4c77b3-5764-4c9c-b358-2aaa734ef207",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c7f233b-1c6e-4035-b782-95329597cf54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ba495920-03e1-475c-b043-3845d609512e",
      "documentation": "Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action returns a job's <code>JobState</code> as part of the response element data returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelJob",
      "responses": [
        {
          "uuid": "d1ef5e65-6fc0-461c-b211-14e4eb16e923",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "240cf976-5928-4ff6-b962-382b76f33ad3",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1fb43132-4034-4e60-ae89-3062c0dd410e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f272465a-7e04-4ede-ad9f-e434971daab7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8ca16004-5d98-43f5-9d58-85f0a63bd8af",
      "documentation": "Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateAddress",
      "responses": [
        {
          "uuid": "a148c333-8c01-45f7-b1cc-567c740f41a2",
          "body": "{\n  \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "af94401a-2afa-4e36-b595-8c6b2f7db5c4",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2b1fb436-a76f-4ce8-91eb-3f4805431046",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "06083a7e-431f-4c13-bc84-c7734e972992",
      "documentation": "Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateCluster",
      "responses": [
        {
          "uuid": "18cef4af-353f-4780-b034-7b32f4550628",
          "body": "{\n  \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a9a7c30-167b-4475-b239-0449cc370b91",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "db63a063-a78f-4b1c-9e95-b2c20c4657f9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e5d1eab-be80-4aae-b388-b8260e8c08e0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "899ddd8a-7cf5-4916-bd9f-30ee9d806f0e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0e2f86f4-f294-479a-a7db-2c98fcd8d064",
      "documentation": "<p>Creates a job to import or export data between Amazon S3 and your on-premises data center. Your AWS account must have the right trust policies and permissions in place to create a job for a Snow device. If you're creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster. </p> <note> <p>Only the Snowball; Edge device type is supported when ordering clustered jobs.</p> <p>The device capacity is optional.</p> <p>Availability of device types differ by AWS Region. For more information about Region availability, see <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/?p=ngi&amp;loc=4\">AWS Regional Services</a>.</p> </note> <p/> <p class=\"title\"> <b>AWS Snow Family device types and their capacities.</b> </p> <ul> <li> <p>Snow Family device type: <b>SNC1_SSD</b> </p> <ul> <li> <p>Capacity: T14</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Snow Family device type: <b>SNC1_HDD</b> </p> <ul> <li> <p>Capacity: T8</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_S</b> </p> <ul> <li> <p>Capacity: T98</p> </li> <li> <p>Description: Snowball Edge Storage Optimized for data transfer only </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_CG</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized with GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_C</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE</b> </p> <ul> <li> <p>Capacity: T100</p> </li> <li> <p>Description: Snowball Edge Storage Optimized with EC2 Compute</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T50</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T80</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateJob",
      "responses": [
        {
          "uuid": "828311c4-b26a-4982-8827-ab599fd9abe8",
          "body": "{\n  \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fec18fa9-2219-47ed-abd7-89ca649e25df",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "abe8e787-e003-46a0-90eb-6e617773b76d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd769250-cfe4-43ec-8e05-ed2564be9209",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8db1c245-82a7-405a-b194-613c30bff952",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "012cb4fb-9b18-42d2-b004-1e54aebfba85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "caf9b0b2-bf27-44dd-b378-8be81270ad73",
      "documentation": "Creates a job with the long-term usage option for a device. The long-term usage is a 1-year or 3-year long-term pricing type for the device. You are billed upfront, and AWS provides discounts for long-term pricing. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateLongTermPricing",
      "responses": [
        {
          "uuid": "09f60e42-cf48-41dd-b169-bc8cb117dc1e",
          "body": "{\n  \"LongTermPricingId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "21197fc4-0317-4cb3-8e26-ed6f7cc43fe0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4093523b-263d-4999-81d2-a5368a8165eb",
      "documentation": "Creates a shipping label that will be used to return the Snow device to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateReturnShippingLabel",
      "responses": [
        {
          "uuid": "53e99ec9-2eb0-49fc-bf65-07b40aad08fe",
          "body": "{\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "48e2b146-b40c-4bb8-b01d-de92dbeb9fb9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "da050b2e-e8a3-444b-8d26-52ac0a6734f7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a08b8456-e715-4510-b785-e1a95dabf5d1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "950ca64b-f2bb-429c-8d39-9d10b028ae34",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9968605d-2cf8-4ee7-a471-327e88adf8d9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ReturnShippingLabelAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "084f60ea-184e-4b46-b45e-2743a4e8750f",
      "documentation": "Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddress",
      "responses": [
        {
          "uuid": "c0015fe8-4f2d-46ba-b696-7ca06bf17869",
          "body": "{\n  \"Address\": {\n    \"AddressId\": \"ADID5643ec50-3eec-4eb3-9be6-9374c10eb51b\",\n    \"City\": \"Seattle\",\n    \"Company\": \"My Company\",\n    \"Country\": \"US\",\n    \"Name\": \"My Name\",\n    \"PhoneNumber\": \"425-555-5555\",\n    \"PostalCode\": \"98101\",\n    \"StateOrProvince\": \"WA\",\n    \"Street1\": \"123 Main Street\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c2754ef4-cd29-4c75-92c6-5cb7abec6ce6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b76c430b-d6d0-4083-8be9-32c4cef080cb",
      "documentation": "Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddresses",
      "responses": [
        {
          "uuid": "a42a7028-3f52-42f2-a19a-d7412d8747ce",
          "body": "{\n  \"Addresses\": [\n    {\n      \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n      \"City\": \"Seattle\",\n      \"Company\": \"My Company\",\n      \"Country\": \"US\",\n      \"Name\": \"My Name\",\n      \"PhoneNumber\": \"425-555-5555\",\n      \"PostalCode\": \"98101\",\n      \"StateOrProvince\": \"WA\",\n      \"Street1\": \"123 Main Street\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70f9fd84-b640-45ef-95f0-1d308d45a95d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "314d0526-de89-464e-9bc5-74bf57299fc8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc6a8dcc-73a4-4c1a-9caa-71f18c6563d4",
      "documentation": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeCluster",
      "responses": [
        {
          "uuid": "694868c9-dbaa-49b9-aafd-d03cadd11332",
          "body": "{\n  \"ClusterMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n    \"ClusterState\": \"Pending\",\n    \"CreationDate\": \"1480475517.0\",\n    \"Description\": \"MyCluster\",\n    \"JobType\": \"LOCAL_USE\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingOption\": \"SECOND_DAY\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b0b191af-950b-4203-9ae1-1991ebc61b4e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4da69485-0c59-4722-a1e9-ad350b42027f",
      "documentation": "Returns information about a specific job including shipping information, job status, and other important metadata. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeJob",
      "responses": [
        {
          "uuid": "8ae94d77-c773-417d-817e-250bf33dbd1a",
          "body": "{\n  \"JobMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"CreationDate\": \"1475626164\",\n    \"Description\": \"My Job\",\n    \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n    \"JobState\": \"New\",\n    \"JobType\": \"IMPORT\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingDetails\": {\n      \"ShippingOption\": \"SECOND_DAY\"\n    },\n    \"SnowballCapacityPreference\": \"T80\",\n    \"SnowballType\": \"STANDARD\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "626897f5-6819-4911-aad7-3c5a4e1fa0d5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70da46cc-39b1-4651-9b9f-76e7fc928c9f",
      "documentation": "Information on the shipping label of a Snow device that is being returned to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeReturnShippingLabel",
      "responses": [
        {
          "uuid": "47e78ba2-38f9-4e86-bfd5-0c266b4ff3bd",
          "body": "{\n  \"Status\": \"\",\n  \"ExpirationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c9e137f0-2c64-40c6-9ee5-f3036e69ef96",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8add44f3-df0a-4ac3-a776-dd6608688fd0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a4b08447-a0e9-4e8a-94bb-01f90fb08d70",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9a56c1c5-0e89-4202-ae18-f7c49a77d85e",
      "documentation": "<p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you'll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 360 days after the job is created.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobManifest",
      "responses": [
        {
          "uuid": "a460a6df-72af-4077-8998-ebeee023636a",
          "body": "{\n  \"ManifestURI\": \"https://awsie-frosty-manifests-prod.s3.amazonaws.com/JID123e4567-e89b-12d3-a456-426655440000_manifest.bin?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20161224T005115Z&X-Amz-SignedHeaders=...\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "8d85447d-3d04-40a1-923e-6163a691f778",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76eed4f1-eb64-4e6b-8deb-bcc2e189ac4b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8470e4c-801e-4524-bbca-557e61034690",
      "documentation": "<p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 360 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobUnlockCode",
      "responses": [
        {
          "uuid": "04cb1f96-89ec-4a65-bfbc-5ec26ff2c749",
          "body": "{\n  \"UnlockCode\": \"12345-abcde-56789-fghij-01234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c5f01818-1127-4bca-82b9-4b49040341b6",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "165a0c54-7306-42e1-a9cf-ab55cbfdaa09",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e962cbbe-bd84-4053-8c15-d6bfc60391d0",
      "documentation": "<p>Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use.</p> <p>The default service limit for the number of Snow devices that you can have at one time is 1. If you want to increase your service limit, contact AWS Support.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSnowballUsage",
      "responses": [
        {
          "uuid": "c2a97f08-3bb5-4e66-ad20-491f541f9090",
          "body": "{\n  \"SnowballLimit\": 1,\n  \"SnowballsInUse\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7a0af950-9f84-4275-a2b9-e0a41b8d2c64",
      "documentation": "Returns an Amazon S3 presigned URL for an update file associated with a specified <code>JobId</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSoftwareUpdates",
      "responses": [
        {
          "uuid": "01d8c5cf-fd81-462c-85c7-2369f8fc8466",
          "body": "{\n  \"UpdatesURI\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "236cbbc7-22ad-44c4-8ce2-a1a19c0e9a99",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "20a25fb0-0e70-45ed-ab34-c3a6f958485a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9d23d4af-64aa-4929-902c-6ba1602bb072",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job's state, a job's ID, and other information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusterJobs",
      "responses": [
        {
          "uuid": "c349dbe3-93ae-49ff-b24a-5c218273a9f1",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1480475524.0\",\n      \"Description\": \"MyClustrer-node-001\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-002\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440001\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-003\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440002\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-004\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440003\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-005\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440004\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a8b4b0ff-e5ff-43b4-8a0f-b252940e304b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a48e9c99-4b3e-413b-ad6f-c416bb5bbeb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ce98968e-7a01-4e64-bb4e-b0a903f10e69",
      "documentation": "Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusters",
      "responses": [
        {
          "uuid": "5d3b9d88-8b14-4ead-8e57-057d13fdc4d7",
          "body": "{\n  \"ClusterListEntries\": [\n    {\n      \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n      \"ClusterState\": \"Pending\",\n      \"CreationDate\": \"1480475517.0\",\n      \"Description\": \"MyCluster\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3db58c6a-5a71-4c23-b0fd-d68afce46b56",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "108ba10c-a8e4-4fe2-b2af-36496bd647d9",
      "documentation": "This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your AWS account that would be supported for use on a Snow device. Currently, supported AMIs are based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04 LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on the AWS Marketplace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListCompatibleImages",
      "responses": [
        {
          "uuid": "e42214fb-b3a2-4809-bcb5-58660b81c39d",
          "body": "{\n  \"CompatibleImages\": [\n    {\n      \"AmiId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "217a7750-9180-4b07-8064-3f04189b7983",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "216ed242-4337-4173-bc34-9244ae8ffc8f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32132b8b-cb5d-461d-b0e2-551a7776a485",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListJobs",
      "responses": [
        {
          "uuid": "d99cc879-ddf2-43f7-a792-9bf176634fa7",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1460678186.0\",\n      \"Description\": \"MyJob\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"IMPORT\",\n      \"SnowballType\": \"STANDARD\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b1a0fc70-acf9-4963-b55d-2f7bf428945d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b13d051d-67b2-425e-93b5-06d82a1d6925",
      "documentation": "Lists all long-term pricing types.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListLongTermPricing",
      "responses": [
        {
          "uuid": "a6563efb-1707-4e9e-b4da-a26858672e63",
          "body": "{\n  \"LongTermPricingEntries\": [\n    {\n      \"LongTermPricingId\": \"\",\n      \"LongTermPricingEndDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingStartDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingType\": \"\",\n      \"CurrentActiveJob\": \"\",\n      \"ReplacementJob\": \"\",\n      \"IsLongTermPricingAutoRenew\": {{faker 'random.boolean'}},\n      \"LongTermPricingStatus\": \"\",\n      \"SnowballType\": \"\",\n      \"JobIds\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d7403bc0-e5bf-4711-b8ef-39bb5a1bcd83",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "2be8cd40-7bd7-4e2a-b722-1ffe33ab261e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ca31f099-2650-4919-a807-2a0067ad3f46",
      "documentation": "While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateCluster",
      "responses": [
        {
          "uuid": "3099e135-21dd-445d-a906-00006beab12a",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a08ed2aa-bf86-400e-b0de-ceb0f22fa28d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "146d92cc-7b80-4793-9c4b-897f68e19d54",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "cec059e8-2054-4154-8493-480209068f57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "5ad6044e-56f4-4cc3-a5aa-2fc2490ef95b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "426eddb0-0ef7-48ce-96f3-284334e5b4be",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a219c37-e08e-4f50-b517-b18e26e9aa62",
      "documentation": "While a job's <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJob",
      "responses": [
        {
          "uuid": "0a2b6dbf-aea9-4281-b9e2-5594451aa642",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bc45469a-a67d-4b11-8ec8-d2301e933933",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "68cf6775-440f-454e-b1bc-40197ac9032a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76401b0c-0908-4d91-b62b-92b817b94a7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a0642769-67a2-415b-ba6a-478bfb87f88e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6a445b2a-b41d-4214-aec1-ee16aa874d0c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4e3be324-ad35-4751-a535-88290919550b",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "32b38545-2e7f-43a7-9565-106742673513",
      "documentation": "Updates the state when a shipment state changes to a different state.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJobShipmentState",
      "responses": [
        {
          "uuid": "e4e9eb09-b47f-4f55-8d78-daa84b589e8d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "bb8183d5-a4cb-416d-be96-51cf24746221",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "1a7aa076-39a8-4b33-a30c-d988d60af595",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3215476e-3ec8-45cc-b332-727adfbd54cc",
      "documentation": "Updates the long-term pricing type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateLongTermPricing",
      "responses": [
        {
          "uuid": "5ba17ece-4aae-4e2b-a71d-96a4784f1cec",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e44ccd8f-e696-4bec-bc9f-7a10588f0c95",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}