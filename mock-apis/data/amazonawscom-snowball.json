{
  "uuid": "f4e873c9-42a9-44fc-b14b-b1d9ba827ee2",
  "lastMigration": 19,
  "name": "Amazon Import/Export Snowball",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "897f5263-2d6c-42ad-a6c1-d2d5e2318e8a",
      "documentation": "Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelCluster",
      "responses": [
        {
          "uuid": "e6f27d5a-2823-4020-9434-36fdcc8c36a5",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "7ad4f577-4ffd-4084-980b-0bda1b437c7a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6dec7d69-825e-4336-a69e-b56867d1dcef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "42094434-e60c-4380-bc11-71de2b55e169",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "3942fba4-dd16-40bf-8f06-4385d9b5bea9",
      "documentation": "Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action returns a job's <code>JobState</code> as part of the response element data returned.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CancelJob",
      "responses": [
        {
          "uuid": "727341c8-4982-4534-9831-a27e5be1caef",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c7545da8-d64f-42cb-a3d8-469c00d8acfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "610f14ed-f355-4914-9b3f-e86bcd66aac5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b3c3f695-6b32-4ba4-ae9e-16c73c56b469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c6c55a3b-108b-46f2-a501-f16c354a28fc",
      "documentation": "Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateAddress",
      "responses": [
        {
          "uuid": "1c52c14d-b27d-4a08-ae48-abd7df62d60c",
          "body": "{\n  \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b8c85d11-707b-45eb-8ef1-f7194d08cb6d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9811abfe-cc7c-443e-9dd2-6ff33ac2d51a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "UnsupportedAddressException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "737edffc-a112-4747-86d1-d2fcd9b46253",
      "documentation": "Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateCluster",
      "responses": [
        {
          "uuid": "870299bd-5a1a-4487-8ede-69c0682abf2e",
          "body": "{\n  \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c732ac42-9836-4ddd-9f0c-661e9fbdae1e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a9bb05b7-a65a-4b81-9330-4fc22ab761ec",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "14c55f82-fa42-4723-9b5a-d1f6de361e92",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "30c000e2-ea56-48c2-8905-e3694f208dc1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b570f950-9cab-4637-b980-074dcaa6060b",
      "documentation": "<p>Creates a job to import or export data between Amazon S3 and your on-premises data center. Your AWS account must have the right trust policies and permissions in place to create a job for a Snow device. If you're creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster. </p> <note> <p>Only the Snowball; Edge device type is supported when ordering clustered jobs.</p> <p>The device capacity is optional.</p> <p>Availability of device types differ by AWS Region. For more information about Region availability, see <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/?p=ngi&amp;loc=4\">AWS Regional Services</a>.</p> </note> <p/> <p class=\"title\"> <b>AWS Snow Family device types and their capacities.</b> </p> <ul> <li> <p>Snow Family device type: <b>SNC1_SSD</b> </p> <ul> <li> <p>Capacity: T14</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Snow Family device type: <b>SNC1_HDD</b> </p> <ul> <li> <p>Capacity: T8</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_S</b> </p> <ul> <li> <p>Capacity: T98</p> </li> <li> <p>Description: Snowball Edge Storage Optimized for data transfer only </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_CG</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized with GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_C</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE</b> </p> <ul> <li> <p>Capacity: T100</p> </li> <li> <p>Description: Snowball Edge Storage Optimized with EC2 Compute</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T50</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T80</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore AWS Regions. </p> </note> </li> </ul> <p/> </li> </ul>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateJob",
      "responses": [
        {
          "uuid": "e2c0ce58-ca39-4f2f-b4dd-b68bd8ed39e4",
          "body": "{\n  \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "909a6d37-c71c-4b1c-a84a-1883ad56a2ac",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "4a931e3d-3ba5-426b-9cf1-a68cb447fcfa",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fd9e79ed-3730-4d95-beb6-04aa3802f886",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e64bc0d6-f9bf-49cb-beda-0e0f4c002c7f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a5a240ee-26b9-4d5c-9fbe-e57a48824bfe",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7f48fe6-d499-49fb-ba6d-6c990df24c97",
      "documentation": "Creates a job with the long-term usage option for a device. The long-term usage is a 1-year or 3-year long-term pricing type for the device. You are billed upfront, and AWS provides discounts for long-term pricing. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateLongTermPricing",
      "responses": [
        {
          "uuid": "108c41e2-645e-46dc-8c23-70cd6536ece6",
          "body": "{\n  \"LongTermPricingId\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0471839a-5b9b-4a4e-9999-452e8b33f7c7",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "adc8af1b-73de-40f1-8826-afb5785d9dbd",
      "documentation": "Creates a shipping label that will be used to return the Snow device to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.CreateReturnShippingLabel",
      "responses": [
        {
          "uuid": "11716060-d675-489c-adb0-05a3947d14ae",
          "body": "{\n  \"Status\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "15da6cd1-0678-4b78-8cc2-0578eb08abcb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "92f2de1a-4283-4978-a243-ce08d3b901cc",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "a413bc3c-334e-45b0-94ec-0b5526ada539",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0d5f6474-e9e2-47b6-bf0b-d7413e8c62a2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "37ff4f3f-69b2-4728-8afb-1295a28c6501",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ReturnShippingLabelAlreadyExistsException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f03c3f94-17d9-4c66-a9cd-a17abf816b2e",
      "documentation": "Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddress",
      "responses": [
        {
          "uuid": "efd63eb6-2146-47b9-bd6e-45a7ebcc4d1b",
          "body": "{\n  \"Address\": {\n    \"AddressId\": \"ADID5643ec50-3eec-4eb3-9be6-9374c10eb51b\",\n    \"City\": \"Seattle\",\n    \"Company\": \"My Company\",\n    \"Country\": \"US\",\n    \"Name\": \"My Name\",\n    \"PhoneNumber\": \"425-555-5555\",\n    \"PostalCode\": \"98101\",\n    \"StateOrProvince\": \"WA\",\n    \"Street1\": \"123 Main Street\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93537f14-b3ad-4bbc-820b-3bd775ca11ea",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7f32bc40-bb12-4bbe-b146-07903ecd64c2",
      "documentation": "Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeAddresses",
      "responses": [
        {
          "uuid": "acf7fad4-8cf7-4663-b42a-03b5eea184c6",
          "body": "{\n  \"Addresses\": [\n    {\n      \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n      \"City\": \"Seattle\",\n      \"Company\": \"My Company\",\n      \"Country\": \"US\",\n      \"Name\": \"My Name\",\n      \"PhoneNumber\": \"425-555-5555\",\n      \"PostalCode\": \"98101\",\n      \"StateOrProvince\": \"WA\",\n      \"Street1\": \"123 Main Street\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "dd841655-0477-4a80-9539-eb3cab650e4c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9761d7bc-678d-42d3-8780-4327b1143a85",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "bc2f0a35-9c7c-48fa-bdae-73e8b213da60",
      "documentation": "Returns information about a specific cluster including shipping information, cluster status, and other important metadata.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeCluster",
      "responses": [
        {
          "uuid": "345e13c7-64e2-4236-8047-48736bd00eea",
          "body": "{\n  \"ClusterMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n    \"ClusterState\": \"Pending\",\n    \"CreationDate\": \"1480475517.0\",\n    \"Description\": \"MyCluster\",\n    \"JobType\": \"LOCAL_USE\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingOption\": \"SECOND_DAY\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "518a4913-e3bb-45f3-9bae-a0be52beca8c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0a2599d5-eac8-438c-8ba9-8ef8d5736607",
      "documentation": "Returns information about a specific job including shipping information, job status, and other important metadata. ",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeJob",
      "responses": [
        {
          "uuid": "4385cdad-c8ca-489e-9730-5e3b609cbb74",
          "body": "{\n  \"JobMetadata\": {\n    \"AddressId\": \"ADID1234ab12-3eec-4eb3-9be6-9374c10eb51b\",\n    \"CreationDate\": \"1475626164\",\n    \"Description\": \"My Job\",\n    \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n    \"JobState\": \"New\",\n    \"JobType\": \"IMPORT\",\n    \"KmsKeyARN\": \"arn:aws:kms:us-east-1:123456789012:key/abcd1234-12ab-34cd-56ef-123456123456\",\n    \"Notification\": {\n      \"JobStatesToNotify\": [],\n      \"NotifyAll\": false\n    },\n    \"Resources\": {\n      \"S3Resources\": [\n        {\n          \"BucketArn\": \"arn:aws:s3:::MyBucket\",\n          \"KeyRange\": {}\n        }\n      ]\n    },\n    \"RoleARN\": \"arn:aws:iam::123456789012:role/snowball-import-S3-role\",\n    \"ShippingDetails\": {\n      \"ShippingOption\": \"SECOND_DAY\"\n    },\n    \"SnowballCapacityPreference\": \"T80\",\n    \"SnowballType\": \"STANDARD\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "6c476c96-f05e-4a3c-8366-c7466217ccb1",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d90e93ec-671c-4fe4-b577-04e7f5ede322",
      "documentation": "Information on the shipping label of a Snow device that is being returned to AWS.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.DescribeReturnShippingLabel",
      "responses": [
        {
          "uuid": "19c1ebe8-7635-4b15-b2de-fa4bdc175be8",
          "body": "{\n  \"Status\": \"\",\n  \"ExpirationDate\": \"{{faker 'date.recent' 365}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "76a4866b-f6e4-4f4b-bc85-f9f2b69e6f78",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3c1079cb-06cc-470e-abe9-2ba671ef830c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "3653c277-8a43-486c-b9d1-38e85602d9a5",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "ConflictException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "be94e598-4402-443f-93b9-17380b0f4a42",
      "documentation": "<p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you'll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 360 days after the job is created.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobManifest",
      "responses": [
        {
          "uuid": "0457995d-d7ee-4717-be8d-72fd60624e07",
          "body": "{\n  \"ManifestURI\": \"https://awsie-frosty-manifests-prod.s3.amazonaws.com/JID123e4567-e89b-12d3-a456-426655440000_manifest.bin?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20161224T005115Z&X-Amz-SignedHeaders=...\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "580690b4-cec1-492f-821c-ee185768530f",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c34badd3-3502-4fd3-b03c-17a51891319e",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "f5460456-93fb-46f0-8ac9-6a9ee2232afa",
      "documentation": "<p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 360 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snow device through the Snowball client when the client is started for the first time.</p> <p>As a best practice, we recommend that you don't save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetJobUnlockCode",
      "responses": [
        {
          "uuid": "19aa5944-5612-43fe-98f2-2fcae9a85ae4",
          "body": "{\n  \"UnlockCode\": \"12345-abcde-56789-fghij-01234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "686cac10-9e0a-48ca-9ace-5a5f4e10e9c9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e7860dc7-d48f-4ee7-8e6d-37c90f19b1e2",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "a8d6f4a1-be07-441e-896b-139a5a34fa5d",
      "documentation": "<p>Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use.</p> <p>The default service limit for the number of Snow devices that you can have at one time is 1. If you want to increase your service limit, contact AWS Support.</p>",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSnowballUsage",
      "responses": [
        {
          "uuid": "dd5ad112-4c09-4fb7-9cd3-ee0098fdc712",
          "body": "{\n  \"SnowballLimit\": 1,\n  \"SnowballsInUse\": 0\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "9c496a3b-e6cc-48f7-a789-f770d8905d10",
      "documentation": "Returns an Amazon S3 presigned URL for an update file associated with a specified <code>JobId</code>.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.GetSoftwareUpdates",
      "responses": [
        {
          "uuid": "e4ef55cb-08f2-4934-a0da-af85a3832564",
          "body": "{\n  \"UpdatesURI\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "b609453c-9765-4d2f-b6f3-5b826f517cba",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "70cd59fb-b3d0-4b82-a425-7f4efd5d0478",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4281930e-f983-40e9-ba22-ba5672dbbef9",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job's state, a job's ID, and other information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusterJobs",
      "responses": [
        {
          "uuid": "5e2da3f1-af0e-4581-9522-1607f4bd38df",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1480475524.0\",\n      \"Description\": \"MyClustrer-node-001\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-002\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440001\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-003\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440002\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-004\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440003\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    },\n    {\n      \"CreationDate\": \"1480475525.0\",\n      \"Description\": \"MyClustrer-node-005\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440004\",\n      \"JobState\": \"New\",\n      \"JobType\": \"LOCAL_USE\",\n      \"SnowballType\": \"EDGE\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9370fe1b-e1d0-4548-9216-e5919bd2f821",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "47c43285-d80b-4442-bd9c-ca959de5642c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "98bf3a5d-cc70-4ee7-9d4c-266e49575fe1",
      "documentation": "Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListClusters",
      "responses": [
        {
          "uuid": "18b7645d-5d05-4527-bc9f-dd1b263387c8",
          "body": "{\n  \"ClusterListEntries\": [\n    {\n      \"ClusterId\": \"CID123e4567-e89b-12d3-a456-426655440000\",\n      \"ClusterState\": \"Pending\",\n      \"CreationDate\": \"1480475517.0\",\n      \"Description\": \"MyCluster\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "be90c226-6f51-45b6-a2ac-0d5cb57ebcb0",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e915fee8-82a0-4b15-a0ce-6cbfd1c9c051",
      "documentation": "This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your AWS account that would be supported for use on a Snow device. Currently, supported AMIs are based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04 LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on the AWS Marketplace.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListCompatibleImages",
      "responses": [
        {
          "uuid": "b3c8b391-b6b5-4dfe-8fee-1aa933512591",
          "body": "{\n  \"CompatibleImages\": [\n    {\n      \"AmiId\": \"\",\n      \"Name\": \"\"\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "809565ca-a333-4ed9-b2d7-06f0599f2168",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "d8f249ec-3287-4a7c-b84e-9adf3b869da9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7b7d8d81-f3c1-4871-be0a-2e33adb650bb",
      "documentation": "Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListJobs",
      "responses": [
        {
          "uuid": "de20e23f-9339-4e7e-92a8-eb7274de209e",
          "body": "{\n  \"JobListEntries\": [\n    {\n      \"CreationDate\": \"1460678186.0\",\n      \"Description\": \"MyJob\",\n      \"IsMaster\": false,\n      \"JobId\": \"JID123e4567-e89b-12d3-a456-426655440000\",\n      \"JobState\": \"New\",\n      \"JobType\": \"IMPORT\",\n      \"SnowballType\": \"STANDARD\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "87781459-590a-4740-9c6f-61a07623ae26",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "807df4f8-c4a8-4d83-85bc-08014b12eeaf",
      "documentation": "Lists all long-term pricing types.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.ListLongTermPricing",
      "responses": [
        {
          "uuid": "bdea4520-ce2d-4551-af4f-42da4bad47ff",
          "body": "{\n  \"LongTermPricingEntries\": [\n    {\n      \"LongTermPricingId\": \"\",\n      \"LongTermPricingEndDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingStartDate\": \"{{faker 'date.recent' 365}}\",\n      \"LongTermPricingType\": \"\",\n      \"CurrentActiveJob\": \"\",\n      \"ReplacementJob\": \"\",\n      \"IsLongTermPricingAutoRenew\": {{faker 'random.boolean'}},\n      \"LongTermPricingStatus\": \"\",\n      \"SnowballType\": \"\",\n      \"JobIds\": [\n        \"\"\n      ]\n    }\n  ],\n  \"NextToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "0c9ebf15-e2e6-4ea5-8d02-415a6a3adf57",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "93543509-017b-49d6-9d8a-517a113636cf",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidNextTokenException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e4d19141-4d8a-4972-a7e0-78c1df45a16c",
      "documentation": "While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateCluster",
      "responses": [
        {
          "uuid": "d3c39917-9ed8-4260-82dd-5f72085462f0",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "194f22d4-d8ce-45f7-aca4-528c7f758103",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "90c1635b-fa7f-4deb-bf22-94627841e2b8",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "fca484b9-75c6-444b-9c0a-9e460edbf5ef",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "24c6ba3f-ce63-4ed3-ac08-fcf78096a072",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "84c947df-d22d-479f-96ae-777af3fb0bbb",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "57ba935c-de3e-428f-add0-2388a1506edc",
      "documentation": "While a job's <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJob",
      "responses": [
        {
          "uuid": "46b27e00-e452-457c-a2d2-d78b02d8be7f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "ecb94192-8105-46b1-ae06-80f995ed8440",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "9f33973b-ee93-4105-8813-9ef051c80417",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "515274e4-e912-4b6a-a1a6-f5eb36d50a89",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 482,
          "label": "KMSRequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f2cde223-0e05-4dbd-ace6-5e4f23de815c",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 483,
          "label": "InvalidInputCombinationException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "c091103c-cc28-4a17-8bb2-e70a17201469",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 484,
          "label": "ClusterLimitExceededException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "f51ac7f7-eda7-4617-b68a-cf1c916ea540",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 485,
          "label": "Ec2RequestFailedException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58d828e4-3cb4-46c4-9eed-30737e7cc44b",
      "documentation": "Updates the state when a shipment state changes to a different state.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateJobShipmentState",
      "responses": [
        {
          "uuid": "9a6ddb4f-f0bd-42c6-b151-ce6978230269",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "35538147-86f5-4655-b662-45503efb1c7d",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "e351fc5b-a748-4d23-904a-7d98aceba7b9",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 481,
          "label": "InvalidJobStateException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "d9cedd2d-a47e-409d-bfbe-01ccbc4e0af6",
      "documentation": "Updates the long-term pricing type.",
      "method": "post",
      "endpoint": "#X-Amz-Target=AWSIESnowballJobManagementService.UpdateLongTermPricing",
      "responses": [
        {
          "uuid": "f0ab5b47-999e-4a64-b2ae-dffb61f28ed2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Success",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "356e2209-7d22-47e1-a3a0-f0a5caf2a66a",
          "body": "\"\"",
          "latency": 0,
          "statusCode": 480,
          "label": "InvalidResourceException",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}