{
  "uuid": "937b45fc-7239-4414-a3db-18667ce945b8",
  "lastMigration": 19,
  "name": "Cloud Scheduler API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "db185e38-73b3-42a8-bc46-076521786ac5",
      "documentation": "Deletes a job.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "c6a97de5-688c-46a1-b2ee-1fc1a0e7fba2",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "16e8d080-8ca7-4508-a306-41a7108a5b26",
      "documentation": "Gets a job.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "6f27a958-ffe6-49f6-8c4d-00714be36bb1",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "595678ee-e470-482f-a81e-f2f6ac7fccaa",
      "documentation": "Updates a job. If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned. If UpdateJob does not successfully return, it is possible for the job to be in an Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry the UpdateJob request until a successful response is received.",
      "method": "patch",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "5b5502f5-ca52-4036-b790-cbb4d969cf2c",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7eb8b3d6-9985-4f73-b280-19d264a05420",
      "documentation": "Lists information about the supported locations for this service.",
      "method": "get",
      "endpoint": "v1/:name/locations",
      "responses": [
        {
          "uuid": "5257f478-ebff-4737-98d7-72b1a08a8388",
          "body": "{\n  \"locations\": [\n    {\n      \"displayName\": \"\",\n      \"labels\": {},\n      \"locationId\": \"\",\n      \"metadata\": {},\n      \"name\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b0c014e5-70e2-40a4-9f2e-b0a80dc8df74",
      "documentation": "Pauses a job. If a job is paused then the system will stop executing the job until it is re-enabled via ResumeJob. The state of the job is stored in state; if paused it will be set to Job.State.PAUSED. A job must be in Job.State.ENABLED to be paused.",
      "method": "post",
      "endpoint": "v1/:name:pause",
      "responses": [
        {
          "uuid": "00782008-edc2-4d22-9abd-c14d44c583e0",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "df0bd60d-8af1-4e54-b8ba-33cdf3bf0799",
      "documentation": "Resume a job. This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in Job.State.PAUSED to be resumed.",
      "method": "post",
      "endpoint": "v1/:name:resume",
      "responses": [
        {
          "uuid": "e3d9cbeb-677d-4ae3-bf47-361d0fd43358",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "10382929-1330-465c-85ee-6cbb007a0dff",
      "documentation": "Forces a job to run now. When this method is called, Cloud Scheduler will dispatch the job, even if the job is already running.",
      "method": "post",
      "endpoint": "v1/:name:run",
      "responses": [
        {
          "uuid": "2a2d13da-5dab-4422-9ed3-004301c511c2",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "03f272d1-52d2-448a-b0d2-f80b8a0dbe41",
      "documentation": "Lists jobs.",
      "method": "get",
      "endpoint": "v1/:parent/jobs",
      "responses": [
        {
          "uuid": "2551376d-30e1-43c7-8b09-56cdc0161325",
          "body": "{\n  \"jobs\": [\n    {\n      \"appEngineHttpTarget\": {\n        \"appEngineRouting\": {\n          \"host\": \"\",\n          \"instance\": \"\",\n          \"service\": \"\",\n          \"version\": \"\"\n        },\n        \"body\": \"\",\n        \"headers\": {},\n        \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n        \"relativeUri\": \"\"\n      },\n      \"attemptDeadline\": \"\",\n      \"description\": \"\",\n      \"httpTarget\": {\n        \"body\": \"\",\n        \"headers\": {},\n        \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n        \"oauthToken\": {\n          \"scope\": \"\",\n          \"serviceAccountEmail\": \"\"\n        },\n        \"oidcToken\": {\n          \"audience\": \"\",\n          \"serviceAccountEmail\": \"\"\n        },\n        \"uri\": \"\"\n      },\n      \"lastAttemptTime\": \"\",\n      \"name\": \"\",\n      \"pubsubTarget\": {\n        \"attributes\": {},\n        \"data\": \"\",\n        \"topicName\": \"\"\n      },\n      \"retryConfig\": {\n        \"maxBackoffDuration\": \"\",\n        \"maxDoublings\": {{faker 'random.number'}},\n        \"maxRetryDuration\": \"\",\n        \"minBackoffDuration\": \"\",\n        \"retryCount\": {{faker 'random.number'}}\n      },\n      \"schedule\": \"\",\n      \"scheduleTime\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n      \"status\": {\n        \"code\": {{faker 'random.number'}},\n        \"details\": [\n          {}\n        ],\n        \"message\": \"\"\n      },\n      \"timeZone\": \"\",\n      \"userUpdateTime\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "1d7a378d-406e-404d-8fb3-5824ad944a71",
      "documentation": "Creates a job.",
      "method": "post",
      "endpoint": "v1/:parent/jobs",
      "responses": [
        {
          "uuid": "b4fa1731-1a05-412c-96c1-c4dcea27a585",
          "body": "{\n  \"appEngineHttpTarget\": {\n    \"appEngineRouting\": {\n      \"host\": \"\",\n      \"instance\": \"\",\n      \"service\": \"\",\n      \"version\": \"\"\n    },\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"relativeUri\": \"\"\n  },\n  \"attemptDeadline\": \"\",\n  \"description\": \"\",\n  \"httpTarget\": {\n    \"body\": \"\",\n    \"headers\": {},\n    \"httpMethod\": \"{{oneOf (array 'HTTP_METHOD_UNSPECIFIED' 'POST' 'GET' 'HEAD' 'PUT' 'DELETE' 'PATCH' 'OPTIONS')}}\",\n    \"oauthToken\": {\n      \"scope\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"oidcToken\": {\n      \"audience\": \"\",\n      \"serviceAccountEmail\": \"\"\n    },\n    \"uri\": \"\"\n  },\n  \"lastAttemptTime\": \"\",\n  \"name\": \"\",\n  \"pubsubTarget\": {\n    \"attributes\": {},\n    \"data\": \"\",\n    \"topicName\": \"\"\n  },\n  \"retryConfig\": {\n    \"maxBackoffDuration\": \"\",\n    \"maxDoublings\": {{faker 'random.number'}},\n    \"maxRetryDuration\": \"\",\n    \"minBackoffDuration\": \"\",\n    \"retryCount\": {{faker 'random.number'}}\n  },\n  \"schedule\": \"\",\n  \"scheduleTime\": \"\",\n  \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'ENABLED' 'PAUSED' 'DISABLED' 'UPDATE_FAILED')}}\",\n  \"status\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"timeZone\": \"\",\n  \"userUpdateTime\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}