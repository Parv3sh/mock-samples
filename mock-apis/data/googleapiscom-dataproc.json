{
  "uuid": "861ee8d2-9083-44a4-8824-0449ebc2ce5e",
  "lastMigration": 19,
  "name": "Cloud Dataproc API",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "fc840d92-676f-454e-8cd4-1b73fbd08ca0",
      "documentation": "Lists all regions/{region}/clusters in a project alphabetically.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters",
      "responses": [
        {
          "uuid": "64af4497-8589-41a8-8cb4-5f0304baed37",
          "body": "{\n  \"clusters\": [\n    {\n      \"clusterName\": \"\",\n      \"clusterUuid\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'random.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}},\n            \"enableVtpm\": {{faker 'random.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'random.number'}},\n                  \"minNodeCount\": {{faker 'random.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"localSsdCount\": {{faker 'random.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'random.boolean'}},\n                  \"spot\": {{faker 'random.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'random.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'random.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        }\n      },\n      \"labels\": {},\n      \"metrics\": {\n        \"hdfsMetrics\": {},\n        \"yarnMetrics\": {}\n      },\n      \"projectId\": \"\",\n      \"status\": {\n        \"detail\": \"\",\n        \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING')}}\",\n        \"stateStartTime\": \"\",\n        \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n      },\n      \"statusHistory\": [\n        {\n          \"detail\": \"\",\n          \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING')}}\",\n          \"stateStartTime\": \"\",\n          \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n        }\n      ],\n      \"virtualClusterConfig\": {\n        \"auxiliaryServicesConfig\": {\n          \"metastoreConfig\": {\n            \"dataprocMetastoreService\": \"\"\n          },\n          \"sparkHistoryServerConfig\": {\n            \"dataprocCluster\": \"\"\n          }\n        },\n        \"kubernetesClusterConfig\": {\n          \"gkeClusterConfig\": {\n            \"gkeClusterTarget\": \"\",\n            \"namespacedGkeDeploymentTarget\": {\n              \"clusterNamespace\": \"\",\n              \"targetGkeCluster\": \"\"\n            },\n            \"nodePoolTarget\": [\n              {\n                \"nodePool\": \"\",\n                \"nodePoolConfig\": {\n                  \"autoscaling\": {\n                    \"maxNodeCount\": {{faker 'random.number'}},\n                    \"minNodeCount\": {{faker 'random.number'}}\n                  },\n                  \"config\": {\n                    \"accelerators\": [\n                      {\n                        \"acceleratorCount\": \"\",\n                        \"acceleratorType\": \"\",\n                        \"gpuPartitionSize\": \"\"\n                      }\n                    ],\n                    \"localSsdCount\": {{faker 'random.number'}},\n                    \"machineType\": \"\",\n                    \"minCpuPlatform\": \"\",\n                    \"preemptible\": {{faker 'random.boolean'}},\n                    \"spot\": {{faker 'random.boolean'}}\n                  },\n                  \"locations\": [\n                    \"\"\n                  ]\n                },\n                \"roles\": [\n                  \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n                ]\n              }\n            ]\n          },\n          \"kubernetesNamespace\": \"\",\n          \"kubernetesSoftwareConfig\": {\n            \"componentVersion\": {},\n            \"properties\": {}\n          }\n        },\n        \"stagingBucket\": \"\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "70b35125-ae30-43b7-a285-27d947833f58",
      "documentation": "Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters",
      "responses": [
        {
          "uuid": "9b122f7d-fcac-49a8-9b93-de18865be5b6",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8eda6895-cce4-4082-b4c6-db87e6f35982",
      "documentation": "Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).",
      "method": "delete",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "c0972333-d96a-4be0-8f1b-99891402749c",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "34507cf9-98cf-4ba4-a489-dd90e60c66bd",
      "documentation": "Gets the resource representation for a cluster in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "a083cd61-b11a-4560-859f-f620d9bc68f8",
          "body": "{\n  \"clusterName\": \"\",\n  \"clusterUuid\": \"\",\n  \"config\": {\n    \"autoscalingConfig\": {\n      \"policyUri\": \"\"\n    },\n    \"configBucket\": \"\",\n    \"dataprocMetricConfig\": {\n      \"metrics\": [\n        {\n          \"metricOverrides\": [\n            \"\"\n          ],\n          \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n        }\n      ]\n    },\n    \"encryptionConfig\": {\n      \"gcePdKmsKeyName\": \"\"\n    },\n    \"endpointConfig\": {\n      \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n      \"httpPorts\": {}\n    },\n    \"gceClusterConfig\": {\n      \"confidentialInstanceConfig\": {\n        \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n      },\n      \"internalIpOnly\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"networkUri\": \"\",\n      \"nodeGroupAffinity\": {\n        \"nodeGroupUri\": \"\"\n      },\n      \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n      \"reservationAffinity\": {\n        \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n        \"key\": \"\",\n        \"values\": [\n          \"\"\n        ]\n      },\n      \"serviceAccount\": \"\",\n      \"serviceAccountScopes\": [\n        \"\"\n      ],\n      \"shieldedInstanceConfig\": {\n        \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n        \"enableSecureBoot\": {{faker 'random.boolean'}},\n        \"enableVtpm\": {{faker 'random.boolean'}}\n      },\n      \"subnetworkUri\": \"\",\n      \"tags\": [\n        \"\"\n      ],\n      \"zoneUri\": \"\"\n    },\n    \"gkeClusterConfig\": {\n      \"gkeClusterTarget\": \"\",\n      \"namespacedGkeDeploymentTarget\": {\n        \"clusterNamespace\": \"\",\n        \"targetGkeCluster\": \"\"\n      },\n      \"nodePoolTarget\": [\n        {\n          \"nodePool\": \"\",\n          \"nodePoolConfig\": {\n            \"autoscaling\": {\n              \"maxNodeCount\": {{faker 'random.number'}},\n              \"minNodeCount\": {{faker 'random.number'}}\n            },\n            \"config\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": \"\",\n                  \"acceleratorType\": \"\",\n                  \"gpuPartitionSize\": \"\"\n                }\n              ],\n              \"localSsdCount\": {{faker 'random.number'}},\n              \"machineType\": \"\",\n              \"minCpuPlatform\": \"\",\n              \"preemptible\": {{faker 'random.boolean'}},\n              \"spot\": {{faker 'random.boolean'}}\n            },\n            \"locations\": [\n              \"\"\n            ]\n          },\n          \"roles\": [\n            \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n          ]\n        }\n      ]\n    },\n    \"initializationActions\": [\n      {\n        \"executableFile\": \"\",\n        \"executionTimeout\": \"\"\n      }\n    ],\n    \"lifecycleConfig\": {\n      \"autoDeleteTime\": \"\",\n      \"autoDeleteTtl\": \"\",\n      \"idleDeleteTtl\": \"\",\n      \"idleStartTime\": \"\"\n    },\n    \"masterConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'random.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'random.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'random.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'random.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'random.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n    },\n    \"metastoreConfig\": {\n      \"dataprocMetastoreService\": \"\"\n    },\n    \"secondaryWorkerConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'random.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'random.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'random.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'random.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'random.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n    },\n    \"securityConfig\": {\n      \"identityConfig\": {\n        \"userServiceAccountMapping\": {}\n      },\n      \"kerberosConfig\": {\n        \"crossRealmTrustAdminServer\": \"\",\n        \"crossRealmTrustKdc\": \"\",\n        \"crossRealmTrustRealm\": \"\",\n        \"crossRealmTrustSharedPasswordUri\": \"\",\n        \"enableKerberos\": {{faker 'random.boolean'}},\n        \"kdcDbKeyUri\": \"\",\n        \"keyPasswordUri\": \"\",\n        \"keystorePasswordUri\": \"\",\n        \"keystoreUri\": \"\",\n        \"kmsKeyUri\": \"\",\n        \"realm\": \"\",\n        \"rootPrincipalPasswordUri\": \"\",\n        \"tgtLifetimeHours\": {{faker 'random.number'}},\n        \"truststorePasswordUri\": \"\",\n        \"truststoreUri\": \"\"\n      }\n    },\n    \"softwareConfig\": {\n      \"imageVersion\": \"\",\n      \"optionalComponents\": [\n        \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n      ],\n      \"properties\": {}\n    },\n    \"tempBucket\": \"\",\n    \"workerConfig\": {\n      \"accelerators\": [\n        {\n          \"acceleratorCount\": {{faker 'random.number'}},\n          \"acceleratorTypeUri\": \"\"\n        }\n      ],\n      \"diskConfig\": {\n        \"bootDiskSizeGb\": {{faker 'random.number'}},\n        \"bootDiskType\": \"\",\n        \"localSsdInterface\": \"\",\n        \"numLocalSsds\": {{faker 'random.number'}}\n      },\n      \"imageUri\": \"\",\n      \"instanceNames\": [\n        \"\"\n      ],\n      \"instanceReferences\": [\n        {\n          \"instanceId\": \"\",\n          \"instanceName\": \"\",\n          \"publicEciesKey\": \"\",\n          \"publicKey\": \"\"\n        }\n      ],\n      \"isPreemptible\": {{faker 'random.boolean'}},\n      \"machineTypeUri\": \"\",\n      \"managedGroupConfig\": {\n        \"instanceGroupManagerName\": \"\",\n        \"instanceTemplateName\": \"\"\n      },\n      \"minCpuPlatform\": \"\",\n      \"numInstances\": {{faker 'random.number'}},\n      \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n    }\n  },\n  \"labels\": {},\n  \"metrics\": {\n    \"hdfsMetrics\": {},\n    \"yarnMetrics\": {}\n  },\n  \"projectId\": \"\",\n  \"status\": {\n    \"detail\": \"\",\n    \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"detail\": \"\",\n      \"state\": \"{{oneOf (array 'UNKNOWN' 'CREATING' 'RUNNING' 'ERROR' 'ERROR_DUE_TO_UPDATE' 'DELETING' 'UPDATING' 'STOPPING' 'STOPPED' 'STARTING')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'UNHEALTHY' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"virtualClusterConfig\": {\n    \"auxiliaryServicesConfig\": {\n      \"metastoreConfig\": {\n        \"dataprocMetastoreService\": \"\"\n      },\n      \"sparkHistoryServerConfig\": {\n        \"dataprocCluster\": \"\"\n      }\n    },\n    \"kubernetesClusterConfig\": {\n      \"gkeClusterConfig\": {\n        \"gkeClusterTarget\": \"\",\n        \"namespacedGkeDeploymentTarget\": {\n          \"clusterNamespace\": \"\",\n          \"targetGkeCluster\": \"\"\n        },\n        \"nodePoolTarget\": [\n          {\n            \"nodePool\": \"\",\n            \"nodePoolConfig\": {\n              \"autoscaling\": {\n                \"maxNodeCount\": {{faker 'random.number'}},\n                \"minNodeCount\": {{faker 'random.number'}}\n              },\n              \"config\": {\n                \"accelerators\": [\n                  {\n                    \"acceleratorCount\": \"\",\n                    \"acceleratorType\": \"\",\n                    \"gpuPartitionSize\": \"\"\n                  }\n                ],\n                \"localSsdCount\": {{faker 'random.number'}},\n                \"machineType\": \"\",\n                \"minCpuPlatform\": \"\",\n                \"preemptible\": {{faker 'random.boolean'}},\n                \"spot\": {{faker 'random.boolean'}}\n              },\n              \"locations\": [\n                \"\"\n              ]\n            },\n            \"roles\": [\n              \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n            ]\n          }\n        ]\n      },\n      \"kubernetesNamespace\": \"\",\n      \"kubernetesSoftwareConfig\": {\n        \"componentVersion\": {},\n        \"properties\": {}\n      }\n    },\n    \"stagingBucket\": \"\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "eeffe47b-61d8-4a50-b4ae-cc7e66682f70",
      "documentation": "Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.",
      "method": "patch",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName",
      "responses": [
        {
          "uuid": "caefc44d-884b-4dd4-b9c9-71bf14eb81bb",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "58bfb86b-9139-4fca-b9ca-ade707c6b961",
      "documentation": "Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:diagnose",
      "responses": [
        {
          "uuid": "841d6a47-593b-4842-8451-2ff550b9e611",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "53fa5e94-48f7-4eec-a40c-f7e00638f950",
      "documentation": "Repairs a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:repair",
      "responses": [
        {
          "uuid": "e4e125b8-72fb-444c-958d-d82a16938ab5",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c9415b34-0d6d-4365-b630-18377e52c0de",
      "documentation": "Starts a cluster in a project.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:start",
      "responses": [
        {
          "uuid": "0e2e07de-20c7-4e27-ac8d-8f301dd7b4bb",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e7d30576-34e8-443c-a476-a468292c3ed8",
      "documentation": "Stops a cluster in a project.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/clusters/:clusterName:stop",
      "responses": [
        {
          "uuid": "92cf5ab7-7654-4038-8fa9-e86824e6401a",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "7af47115-e51f-4ab5-8bac-58e0a889a1b4",
      "documentation": "Lists regions/{region}/jobs in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs",
      "responses": [
        {
          "uuid": "1aaeb544-3026-4309-9a14-86c6b488366f",
          "body": "{\n  \"jobs\": [\n    {\n      \"done\": {{faker 'random.boolean'}},\n      \"driverControlFilesUri\": \"\",\n      \"driverOutputResourceUri\": \"\",\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"jobUuid\": \"\",\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"placement\": {\n        \"clusterLabels\": {},\n        \"clusterName\": \"\",\n        \"clusterUuid\": \"\"\n      },\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"reference\": {\n        \"jobId\": \"\",\n        \"projectId\": \"\"\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'random.number'}},\n        \"maxFailuresTotal\": {{faker 'random.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"status\": {\n        \"details\": \"\",\n        \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n        \"stateStartTime\": \"\",\n        \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n      },\n      \"statusHistory\": [\n        {\n          \"details\": \"\",\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n          \"stateStartTime\": \"\",\n          \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n        }\n      ],\n      \"yarnApplications\": [\n        {\n          \"name\": \"\",\n          \"progress\": {{faker 'random.float'}},\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n          \"trackingUrl\": \"\"\n        }\n      ]\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "07207805-3a60-4fc0-abd8-0e671af1ca73",
      "documentation": "Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.",
      "method": "delete",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "cc3f03fa-2df3-4b2f-a519-6308baad56dc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "636b7012-a20d-461b-9f1d-df2282a13dd0",
      "documentation": "Gets the resource representation for a job in a project.",
      "method": "get",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "a3dd4ed2-2f4c-4e60-880f-0a4d93f731ee",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'random.number'}},\n    \"maxFailuresTotal\": {{faker 'random.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'random.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "5a6223e0-9a98-4051-8de5-46e7859c8978",
      "documentation": "Updates a job in a project.",
      "method": "patch",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId",
      "responses": [
        {
          "uuid": "6a959151-4348-4080-980c-edc130acaedb",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'random.number'}},\n    \"maxFailuresTotal\": {{faker 'random.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'random.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "0082b5db-08c3-4779-9c4e-2acb67462a8c",
      "documentation": "Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs/:jobId:cancel",
      "responses": [
        {
          "uuid": "5efe2143-221b-45f0-a80b-2f96ff4e5355",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'random.number'}},\n    \"maxFailuresTotal\": {{faker 'random.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'random.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2a33c60a-01ce-4cfc-aacb-2d90453edded",
      "documentation": "Submits a job to a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs:submit",
      "responses": [
        {
          "uuid": "87fd2599-1f16-4372-9006-03646890e2e0",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"driverControlFilesUri\": \"\",\n  \"driverOutputResourceUri\": \"\",\n  \"hadoopJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"hiveJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"jobUuid\": \"\",\n  \"labels\": {},\n  \"pigJob\": {\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"placement\": {\n    \"clusterLabels\": {},\n    \"clusterName\": \"\",\n    \"clusterUuid\": \"\"\n  },\n  \"prestoJob\": {\n    \"clientTags\": [\n      \"\"\n    ],\n    \"continueOnFailure\": {{faker 'random.boolean'}},\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"outputFormat\": \"\",\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    }\n  },\n  \"pysparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainPythonFileUri\": \"\",\n    \"properties\": {},\n    \"pythonFileUris\": [\n      \"\"\n    ]\n  },\n  \"reference\": {\n    \"jobId\": \"\",\n    \"projectId\": \"\"\n  },\n  \"scheduling\": {\n    \"maxFailuresPerHour\": {{faker 'random.number'}},\n    \"maxFailuresTotal\": {{faker 'random.number'}}\n  },\n  \"sparkJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainClass\": \"\",\n    \"mainJarFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkRJob\": {\n    \"archiveUris\": [\n      \"\"\n    ],\n    \"args\": [\n      \"\"\n    ],\n    \"fileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"mainRFileUri\": \"\",\n    \"properties\": {}\n  },\n  \"sparkSqlJob\": {\n    \"jarFileUris\": [\n      \"\"\n    ],\n    \"loggingConfig\": {\n      \"driverLogLevels\": {}\n    },\n    \"properties\": {},\n    \"queryFileUri\": \"\",\n    \"queryList\": {\n      \"queries\": [\n        \"\"\n      ]\n    },\n    \"scriptVariables\": {}\n  },\n  \"status\": {\n    \"details\": \"\",\n    \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n    \"stateStartTime\": \"\",\n    \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n  },\n  \"statusHistory\": [\n    {\n      \"details\": \"\",\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'SETUP_DONE' 'RUNNING' 'CANCEL_PENDING' 'CANCEL_STARTED' 'CANCELLED' 'DONE' 'ERROR' 'ATTEMPT_FAILURE')}}\",\n      \"stateStartTime\": \"\",\n      \"substate\": \"{{oneOf (array 'UNSPECIFIED' 'SUBMITTED' 'QUEUED' 'STALE_STATUS')}}\"\n    }\n  ],\n  \"yarnApplications\": [\n    {\n      \"name\": \"\",\n      \"progress\": {{faker 'random.float'}},\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'NEW' 'NEW_SAVING' 'SUBMITTED' 'ACCEPTED' 'RUNNING' 'FINISHED' 'FAILED' 'KILLED')}}\",\n      \"trackingUrl\": \"\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2c51d874-0343-48ff-8d19-5ebd1686da46",
      "documentation": "Submits job to a cluster.",
      "method": "post",
      "endpoint": "v1/projects/:projectId/regions/:region/jobs:submitAsOperation",
      "responses": [
        {
          "uuid": "5368e0cd-682a-4751-82e1-3678e4e72e50",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "320c2385-650f-41f1-a9af-60cbed377326",
      "documentation": "Deletes a workflow template. It does not cancel in-progress workflows.",
      "method": "delete",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "23c019a6-630c-4cc2-9139-ae86fc1dfb34",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fa1ea60f-b4db-453a-8b0c-040f5c04aa2e",
      "documentation": "Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.",
      "method": "get",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "b6c8b45f-07b8-49cc-a5d0-442d609cbbce",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'random.number'}},\n        \"maxFailuresTotal\": {{faker 'random.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\"\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'random.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}},\n            \"enableVtpm\": {{faker 'random.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'random.number'}},\n                  \"minNodeCount\": {{faker 'random.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"localSsdCount\": {{faker 'random.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'random.boolean'}},\n                  \"spot\": {{faker 'random.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'random.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'random.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "2bf59df7-4a52-4bfd-b3b6-260b76d07b62",
      "documentation": "Updates (replaces) workflow template. The updated template must contain version that matches the current server version.",
      "method": "put",
      "endpoint": "v1/:name",
      "responses": [
        {
          "uuid": "092d8069-9889-4d0d-b42a-ff0636fece93",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'random.number'}},\n        \"maxFailuresTotal\": {{faker 'random.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\"\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'random.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}},\n            \"enableVtpm\": {{faker 'random.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'random.number'}},\n                  \"minNodeCount\": {{faker 'random.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"localSsdCount\": {{faker 'random.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'random.boolean'}},\n                  \"spot\": {{faker 'random.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'random.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'random.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b835f4e1-3987-41aa-ac03-bfff3c1d4fa4",
      "documentation": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.",
      "method": "post",
      "endpoint": "v1/:name:cancel",
      "responses": [
        {
          "uuid": "34450a81-9ca0-4cea-8cfa-39a1db92babc",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "72f9a033-7473-442b-9024-f371b1cb2775",
      "documentation": "Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
      "method": "post",
      "endpoint": "v1/:name:instantiate",
      "responses": [
        {
          "uuid": "f90c9d5f-2bc4-4c56-ad76-3508b0a90819",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "fcd2a55c-7fd5-42b6-a883-bba1094b5d19",
      "documentation": "Lists autoscaling policies in the project.",
      "method": "get",
      "endpoint": "v1/:parent/autoscalingPolicies",
      "responses": [
        {
          "uuid": "e0b7a4fb-7c6a-4e6d-a9a1-4ce7116acc61",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"policies\": [\n    {\n      \"basicAlgorithm\": {\n        \"cooldownPeriod\": \"\",\n        \"sparkStandaloneConfig\": {\n          \"gracefulDecommissionTimeout\": \"\",\n          \"scaleDownFactor\": {{faker 'random.float'}},\n          \"scaleDownMinWorkerFraction\": {{faker 'random.float'}},\n          \"scaleUpFactor\": {{faker 'random.float'}},\n          \"scaleUpMinWorkerFraction\": {{faker 'random.float'}}\n        },\n        \"yarnConfig\": {\n          \"gracefulDecommissionTimeout\": \"\",\n          \"scaleDownFactor\": {{faker 'random.float'}},\n          \"scaleDownMinWorkerFraction\": {{faker 'random.float'}},\n          \"scaleUpFactor\": {{faker 'random.float'}},\n          \"scaleUpMinWorkerFraction\": {{faker 'random.float'}}\n        }\n      },\n      \"id\": \"\",\n      \"labels\": {},\n      \"name\": \"\",\n      \"secondaryWorkerConfig\": {\n        \"maxInstances\": {{faker 'random.number'}},\n        \"minInstances\": {{faker 'random.number'}},\n        \"weight\": {{faker 'random.number'}}\n      },\n      \"workerConfig\": {\n        \"maxInstances\": {{faker 'random.number'}},\n        \"minInstances\": {{faker 'random.number'}},\n        \"weight\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "6f59051e-f6b0-47c8-a24e-6f38c80cd2ca",
      "documentation": "Creates new autoscaling policy.",
      "method": "post",
      "endpoint": "v1/:parent/autoscalingPolicies",
      "responses": [
        {
          "uuid": "1845e1a9-5070-445c-961f-faee6f3feb22",
          "body": "{\n  \"basicAlgorithm\": {\n    \"cooldownPeriod\": \"\",\n    \"sparkStandaloneConfig\": {\n      \"gracefulDecommissionTimeout\": \"\",\n      \"scaleDownFactor\": {{faker 'random.float'}},\n      \"scaleDownMinWorkerFraction\": {{faker 'random.float'}},\n      \"scaleUpFactor\": {{faker 'random.float'}},\n      \"scaleUpMinWorkerFraction\": {{faker 'random.float'}}\n    },\n    \"yarnConfig\": {\n      \"gracefulDecommissionTimeout\": \"\",\n      \"scaleDownFactor\": {{faker 'random.float'}},\n      \"scaleDownMinWorkerFraction\": {{faker 'random.float'}},\n      \"scaleUpFactor\": {{faker 'random.float'}},\n      \"scaleUpMinWorkerFraction\": {{faker 'random.float'}}\n    }\n  },\n  \"id\": \"\",\n  \"labels\": {},\n  \"name\": \"\",\n  \"secondaryWorkerConfig\": {\n    \"maxInstances\": {{faker 'random.number'}},\n    \"minInstances\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}}\n  },\n  \"workerConfig\": {\n    \"maxInstances\": {{faker 'random.number'}},\n    \"minInstances\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}}\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "250a989b-a5d1-4d84-9c78-859da98b4532",
      "documentation": "Lists batch workloads.",
      "method": "get",
      "endpoint": "v1/:parent/batches",
      "responses": [
        {
          "uuid": "23a22f46-2a2b-421a-90c5-78f0e81d0149",
          "body": "{\n  \"batches\": [\n    {\n      \"createTime\": \"\",\n      \"creator\": \"\",\n      \"environmentConfig\": {\n        \"executionConfig\": {\n          \"kmsKey\": \"\",\n          \"networkTags\": [\n            \"\"\n          ],\n          \"networkUri\": \"\",\n          \"serviceAccount\": \"\",\n          \"subnetworkUri\": \"\"\n        },\n        \"peripheralsConfig\": {\n          \"metastoreService\": \"\",\n          \"sparkHistoryServerConfig\": {\n            \"dataprocCluster\": \"\"\n          }\n        }\n      },\n      \"labels\": {},\n      \"name\": \"\",\n      \"operation\": \"\",\n      \"pysparkBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"mainPythonFileUri\": \"\",\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"runtimeConfig\": {\n        \"containerImage\": \"\",\n        \"properties\": {},\n        \"version\": \"\"\n      },\n      \"runtimeInfo\": {\n        \"diagnosticOutputUri\": \"\",\n        \"endpoints\": {},\n        \"outputUri\": \"\"\n      },\n      \"sparkBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\"\n      },\n      \"sparkRBatch\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"mainRFileUri\": \"\"\n      },\n      \"sparkSqlBatch\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"queryFileUri\": \"\",\n        \"queryVariables\": {}\n      },\n      \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'CANCELLING' 'CANCELLED' 'SUCCEEDED' 'FAILED')}}\",\n      \"stateHistory\": [\n        {\n          \"state\": \"{{oneOf (array 'STATE_UNSPECIFIED' 'PENDING' 'RUNNING' 'CANCELLING' 'CANCELLED' 'SUCCEEDED' 'FAILED')}}\",\n          \"stateMessage\": \"\",\n          \"stateStartTime\": \"\"\n        }\n      ],\n      \"stateMessage\": \"\",\n      \"stateTime\": \"\",\n      \"uuid\": \"\"\n    }\n  ],\n  \"nextPageToken\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "748fff4d-dd86-446a-b015-f3fc642f794d",
      "documentation": "Creates a batch workload that executes asynchronously.",
      "method": "post",
      "endpoint": "v1/:parent/batches",
      "responses": [
        {
          "uuid": "af3a2566-f09c-47c7-9e0b-1f9f619ffb23",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "c0da31a5-ae71-4a0a-897b-dab3dba872f7",
      "documentation": "Lists workflows that match the specified filter in the request.",
      "method": "get",
      "endpoint": "v1/:parent/workflowTemplates",
      "responses": [
        {
          "uuid": "47a08c38-33da-478d-a169-a08bc05213fe",
          "body": "{\n  \"nextPageToken\": \"\",\n  \"templates\": [\n    {\n      \"createTime\": \"\",\n      \"dagTimeout\": \"\",\n      \"id\": \"\",\n      \"jobs\": [\n        {\n          \"hadoopJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainClass\": \"\",\n            \"mainJarFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"hiveJob\": {\n            \"continueOnFailure\": {{faker 'random.boolean'}},\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"labels\": {},\n          \"pigJob\": {\n            \"continueOnFailure\": {{faker 'random.boolean'}},\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"prerequisiteStepIds\": [\n            \"\"\n          ],\n          \"prestoJob\": {\n            \"clientTags\": [\n              \"\"\n            ],\n            \"continueOnFailure\": {{faker 'random.boolean'}},\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"outputFormat\": \"\",\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            }\n          },\n          \"pysparkJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainPythonFileUri\": \"\",\n            \"properties\": {},\n            \"pythonFileUris\": [\n              \"\"\n            ]\n          },\n          \"scheduling\": {\n            \"maxFailuresPerHour\": {{faker 'random.number'}},\n            \"maxFailuresTotal\": {{faker 'random.number'}}\n          },\n          \"sparkJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainClass\": \"\",\n            \"mainJarFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"sparkRJob\": {\n            \"archiveUris\": [\n              \"\"\n            ],\n            \"args\": [\n              \"\"\n            ],\n            \"fileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"mainRFileUri\": \"\",\n            \"properties\": {}\n          },\n          \"sparkSqlJob\": {\n            \"jarFileUris\": [\n              \"\"\n            ],\n            \"loggingConfig\": {\n              \"driverLogLevels\": {}\n            },\n            \"properties\": {},\n            \"queryFileUri\": \"\",\n            \"queryList\": {\n              \"queries\": [\n                \"\"\n              ]\n            },\n            \"scriptVariables\": {}\n          },\n          \"stepId\": \"\"\n        }\n      ],\n      \"labels\": {},\n      \"name\": \"\",\n      \"parameters\": [\n        {\n          \"description\": \"\",\n          \"fields\": [\n            \"\"\n          ],\n          \"name\": \"\",\n          \"validation\": {\n            \"regex\": {\n              \"regexes\": [\n                \"\"\n              ]\n            },\n            \"values\": {\n              \"values\": [\n                \"\"\n              ]\n            }\n          }\n        }\n      ],\n      \"placement\": {\n        \"clusterSelector\": {\n          \"clusterLabels\": {},\n          \"zone\": \"\"\n        },\n        \"managedCluster\": {\n          \"clusterName\": \"\",\n          \"config\": {\n            \"autoscalingConfig\": {\n              \"policyUri\": \"\"\n            },\n            \"configBucket\": \"\",\n            \"dataprocMetricConfig\": {\n              \"metrics\": [\n                {\n                  \"metricOverrides\": [\n                    \"\"\n                  ],\n                  \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n                }\n              ]\n            },\n            \"encryptionConfig\": {\n              \"gcePdKmsKeyName\": \"\"\n            },\n            \"endpointConfig\": {\n              \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n              \"httpPorts\": {}\n            },\n            \"gceClusterConfig\": {\n              \"confidentialInstanceConfig\": {\n                \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n              },\n              \"internalIpOnly\": {{faker 'random.boolean'}},\n              \"metadata\": {},\n              \"networkUri\": \"\",\n              \"nodeGroupAffinity\": {\n                \"nodeGroupUri\": \"\"\n              },\n              \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n              \"reservationAffinity\": {\n                \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n                \"key\": \"\",\n                \"values\": [\n                  \"\"\n                ]\n              },\n              \"serviceAccount\": \"\",\n              \"serviceAccountScopes\": [\n                \"\"\n              ],\n              \"shieldedInstanceConfig\": {\n                \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n                \"enableSecureBoot\": {{faker 'random.boolean'}},\n                \"enableVtpm\": {{faker 'random.boolean'}}\n              },\n              \"subnetworkUri\": \"\",\n              \"tags\": [\n                \"\"\n              ],\n              \"zoneUri\": \"\"\n            },\n            \"gkeClusterConfig\": {\n              \"gkeClusterTarget\": \"\",\n              \"namespacedGkeDeploymentTarget\": {\n                \"clusterNamespace\": \"\",\n                \"targetGkeCluster\": \"\"\n              },\n              \"nodePoolTarget\": [\n                {\n                  \"nodePool\": \"\",\n                  \"nodePoolConfig\": {\n                    \"autoscaling\": {\n                      \"maxNodeCount\": {{faker 'random.number'}},\n                      \"minNodeCount\": {{faker 'random.number'}}\n                    },\n                    \"config\": {\n                      \"accelerators\": [\n                        {\n                          \"acceleratorCount\": \"\",\n                          \"acceleratorType\": \"\",\n                          \"gpuPartitionSize\": \"\"\n                        }\n                      ],\n                      \"localSsdCount\": {{faker 'random.number'}},\n                      \"machineType\": \"\",\n                      \"minCpuPlatform\": \"\",\n                      \"preemptible\": {{faker 'random.boolean'}},\n                      \"spot\": {{faker 'random.boolean'}}\n                    },\n                    \"locations\": [\n                      \"\"\n                    ]\n                  },\n                  \"roles\": [\n                    \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n                  ]\n                }\n              ]\n            },\n            \"initializationActions\": [\n              {\n                \"executableFile\": \"\",\n                \"executionTimeout\": \"\"\n              }\n            ],\n            \"lifecycleConfig\": {\n              \"autoDeleteTime\": \"\",\n              \"autoDeleteTtl\": \"\",\n              \"idleDeleteTtl\": \"\",\n              \"idleStartTime\": \"\"\n            },\n            \"masterConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'random.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'random.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'random.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'random.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'random.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n            },\n            \"metastoreConfig\": {\n              \"dataprocMetastoreService\": \"\"\n            },\n            \"secondaryWorkerConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'random.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'random.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'random.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'random.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'random.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n            },\n            \"securityConfig\": {\n              \"identityConfig\": {\n                \"userServiceAccountMapping\": {}\n              },\n              \"kerberosConfig\": {\n                \"crossRealmTrustAdminServer\": \"\",\n                \"crossRealmTrustKdc\": \"\",\n                \"crossRealmTrustRealm\": \"\",\n                \"crossRealmTrustSharedPasswordUri\": \"\",\n                \"enableKerberos\": {{faker 'random.boolean'}},\n                \"kdcDbKeyUri\": \"\",\n                \"keyPasswordUri\": \"\",\n                \"keystorePasswordUri\": \"\",\n                \"keystoreUri\": \"\",\n                \"kmsKeyUri\": \"\",\n                \"realm\": \"\",\n                \"rootPrincipalPasswordUri\": \"\",\n                \"tgtLifetimeHours\": {{faker 'random.number'}},\n                \"truststorePasswordUri\": \"\",\n                \"truststoreUri\": \"\"\n              }\n            },\n            \"softwareConfig\": {\n              \"imageVersion\": \"\",\n              \"optionalComponents\": [\n                \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n              ],\n              \"properties\": {}\n            },\n            \"tempBucket\": \"\",\n            \"workerConfig\": {\n              \"accelerators\": [\n                {\n                  \"acceleratorCount\": {{faker 'random.number'}},\n                  \"acceleratorTypeUri\": \"\"\n                }\n              ],\n              \"diskConfig\": {\n                \"bootDiskSizeGb\": {{faker 'random.number'}},\n                \"bootDiskType\": \"\",\n                \"localSsdInterface\": \"\",\n                \"numLocalSsds\": {{faker 'random.number'}}\n              },\n              \"imageUri\": \"\",\n              \"instanceNames\": [\n                \"\"\n              ],\n              \"instanceReferences\": [\n                {\n                  \"instanceId\": \"\",\n                  \"instanceName\": \"\",\n                  \"publicEciesKey\": \"\",\n                  \"publicKey\": \"\"\n                }\n              ],\n              \"isPreemptible\": {{faker 'random.boolean'}},\n              \"machineTypeUri\": \"\",\n              \"managedGroupConfig\": {\n                \"instanceGroupManagerName\": \"\",\n                \"instanceTemplateName\": \"\"\n              },\n              \"minCpuPlatform\": \"\",\n              \"numInstances\": {{faker 'random.number'}},\n              \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n            }\n          },\n          \"labels\": {}\n        }\n      },\n      \"updateTime\": \"\",\n      \"version\": {{faker 'random.number'}}\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "4d44a454-68fc-4d56-94a0-fd3673608356",
      "documentation": "Creates new workflow template.",
      "method": "post",
      "endpoint": "v1/:parent/workflowTemplates",
      "responses": [
        {
          "uuid": "703562af-12a1-412e-aa7a-c014265bf797",
          "body": "{\n  \"createTime\": \"\",\n  \"dagTimeout\": \"\",\n  \"id\": \"\",\n  \"jobs\": [\n    {\n      \"hadoopJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"hiveJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"labels\": {},\n      \"pigJob\": {\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"prerequisiteStepIds\": [\n        \"\"\n      ],\n      \"prestoJob\": {\n        \"clientTags\": [\n          \"\"\n        ],\n        \"continueOnFailure\": {{faker 'random.boolean'}},\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"outputFormat\": \"\",\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        }\n      },\n      \"pysparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainPythonFileUri\": \"\",\n        \"properties\": {},\n        \"pythonFileUris\": [\n          \"\"\n        ]\n      },\n      \"scheduling\": {\n        \"maxFailuresPerHour\": {{faker 'random.number'}},\n        \"maxFailuresTotal\": {{faker 'random.number'}}\n      },\n      \"sparkJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainClass\": \"\",\n        \"mainJarFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkRJob\": {\n        \"archiveUris\": [\n          \"\"\n        ],\n        \"args\": [\n          \"\"\n        ],\n        \"fileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"mainRFileUri\": \"\",\n        \"properties\": {}\n      },\n      \"sparkSqlJob\": {\n        \"jarFileUris\": [\n          \"\"\n        ],\n        \"loggingConfig\": {\n          \"driverLogLevels\": {}\n        },\n        \"properties\": {},\n        \"queryFileUri\": \"\",\n        \"queryList\": {\n          \"queries\": [\n            \"\"\n          ]\n        },\n        \"scriptVariables\": {}\n      },\n      \"stepId\": \"\"\n    }\n  ],\n  \"labels\": {},\n  \"name\": \"\",\n  \"parameters\": [\n    {\n      \"description\": \"\",\n      \"fields\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"validation\": {\n        \"regex\": {\n          \"regexes\": [\n            \"\"\n          ]\n        },\n        \"values\": {\n          \"values\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"placement\": {\n    \"clusterSelector\": {\n      \"clusterLabels\": {},\n      \"zone\": \"\"\n    },\n    \"managedCluster\": {\n      \"clusterName\": \"\",\n      \"config\": {\n        \"autoscalingConfig\": {\n          \"policyUri\": \"\"\n        },\n        \"configBucket\": \"\",\n        \"dataprocMetricConfig\": {\n          \"metrics\": [\n            {\n              \"metricOverrides\": [\n                \"\"\n              ],\n              \"metricSource\": \"{{oneOf (array 'METRIC_SOURCE_UNSPECIFIED' 'MONITORING_AGENT_DEFAULTS' 'HDFS' 'SPARK' 'YARN' 'SPARK_HISTORY_SERVER' 'HIVESERVER2')}}\"\n            }\n          ]\n        },\n        \"encryptionConfig\": {\n          \"gcePdKmsKeyName\": \"\"\n        },\n        \"endpointConfig\": {\n          \"enableHttpPortAccess\": {{faker 'random.boolean'}},\n          \"httpPorts\": {}\n        },\n        \"gceClusterConfig\": {\n          \"confidentialInstanceConfig\": {\n            \"enableConfidentialCompute\": {{faker 'random.boolean'}}\n          },\n          \"internalIpOnly\": {{faker 'random.boolean'}},\n          \"metadata\": {},\n          \"networkUri\": \"\",\n          \"nodeGroupAffinity\": {\n            \"nodeGroupUri\": \"\"\n          },\n          \"privateIpv6GoogleAccess\": \"{{oneOf (array 'PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED' 'INHERIT_FROM_SUBNETWORK' 'OUTBOUND' 'BIDIRECTIONAL')}}\",\n          \"reservationAffinity\": {\n            \"consumeReservationType\": \"{{oneOf (array 'TYPE_UNSPECIFIED' 'NO_RESERVATION' 'ANY_RESERVATION' 'SPECIFIC_RESERVATION')}}\",\n            \"key\": \"\",\n            \"values\": [\n              \"\"\n            ]\n          },\n          \"serviceAccount\": \"\",\n          \"serviceAccountScopes\": [\n            \"\"\n          ],\n          \"shieldedInstanceConfig\": {\n            \"enableIntegrityMonitoring\": {{faker 'random.boolean'}},\n            \"enableSecureBoot\": {{faker 'random.boolean'}},\n            \"enableVtpm\": {{faker 'random.boolean'}}\n          },\n          \"subnetworkUri\": \"\",\n          \"tags\": [\n            \"\"\n          ],\n          \"zoneUri\": \"\"\n        },\n        \"gkeClusterConfig\": {\n          \"gkeClusterTarget\": \"\",\n          \"namespacedGkeDeploymentTarget\": {\n            \"clusterNamespace\": \"\",\n            \"targetGkeCluster\": \"\"\n          },\n          \"nodePoolTarget\": [\n            {\n              \"nodePool\": \"\",\n              \"nodePoolConfig\": {\n                \"autoscaling\": {\n                  \"maxNodeCount\": {{faker 'random.number'}},\n                  \"minNodeCount\": {{faker 'random.number'}}\n                },\n                \"config\": {\n                  \"accelerators\": [\n                    {\n                      \"acceleratorCount\": \"\",\n                      \"acceleratorType\": \"\",\n                      \"gpuPartitionSize\": \"\"\n                    }\n                  ],\n                  \"localSsdCount\": {{faker 'random.number'}},\n                  \"machineType\": \"\",\n                  \"minCpuPlatform\": \"\",\n                  \"preemptible\": {{faker 'random.boolean'}},\n                  \"spot\": {{faker 'random.boolean'}}\n                },\n                \"locations\": [\n                  \"\"\n                ]\n              },\n              \"roles\": [\n                \"{{oneOf (array 'ROLE_UNSPECIFIED' 'DEFAULT' 'CONTROLLER' 'SPARK_DRIVER' 'SPARK_EXECUTOR')}}\"\n              ]\n            }\n          ]\n        },\n        \"initializationActions\": [\n          {\n            \"executableFile\": \"\",\n            \"executionTimeout\": \"\"\n          }\n        ],\n        \"lifecycleConfig\": {\n          \"autoDeleteTime\": \"\",\n          \"autoDeleteTtl\": \"\",\n          \"idleDeleteTtl\": \"\",\n          \"idleStartTime\": \"\"\n        },\n        \"masterConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"metastoreConfig\": {\n          \"dataprocMetastoreService\": \"\"\n        },\n        \"secondaryWorkerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        },\n        \"securityConfig\": {\n          \"identityConfig\": {\n            \"userServiceAccountMapping\": {}\n          },\n          \"kerberosConfig\": {\n            \"crossRealmTrustAdminServer\": \"\",\n            \"crossRealmTrustKdc\": \"\",\n            \"crossRealmTrustRealm\": \"\",\n            \"crossRealmTrustSharedPasswordUri\": \"\",\n            \"enableKerberos\": {{faker 'random.boolean'}},\n            \"kdcDbKeyUri\": \"\",\n            \"keyPasswordUri\": \"\",\n            \"keystorePasswordUri\": \"\",\n            \"keystoreUri\": \"\",\n            \"kmsKeyUri\": \"\",\n            \"realm\": \"\",\n            \"rootPrincipalPasswordUri\": \"\",\n            \"tgtLifetimeHours\": {{faker 'random.number'}},\n            \"truststorePasswordUri\": \"\",\n            \"truststoreUri\": \"\"\n          }\n        },\n        \"softwareConfig\": {\n          \"imageVersion\": \"\",\n          \"optionalComponents\": [\n            \"{{oneOf (array 'COMPONENT_UNSPECIFIED' 'ANACONDA' 'DOCKER' 'DRUID' 'FLINK' 'HBASE' 'HIVE_WEBHCAT' 'JUPYTER' 'PRESTO' 'RANGER' 'SOLR' 'ZEPPELIN' 'ZOOKEEPER')}}\"\n          ],\n          \"properties\": {}\n        },\n        \"tempBucket\": \"\",\n        \"workerConfig\": {\n          \"accelerators\": [\n            {\n              \"acceleratorCount\": {{faker 'random.number'}},\n              \"acceleratorTypeUri\": \"\"\n            }\n          ],\n          \"diskConfig\": {\n            \"bootDiskSizeGb\": {{faker 'random.number'}},\n            \"bootDiskType\": \"\",\n            \"localSsdInterface\": \"\",\n            \"numLocalSsds\": {{faker 'random.number'}}\n          },\n          \"imageUri\": \"\",\n          \"instanceNames\": [\n            \"\"\n          ],\n          \"instanceReferences\": [\n            {\n              \"instanceId\": \"\",\n              \"instanceName\": \"\",\n              \"publicEciesKey\": \"\",\n              \"publicKey\": \"\"\n            }\n          ],\n          \"isPreemptible\": {{faker 'random.boolean'}},\n          \"machineTypeUri\": \"\",\n          \"managedGroupConfig\": {\n            \"instanceGroupManagerName\": \"\",\n            \"instanceTemplateName\": \"\"\n          },\n          \"minCpuPlatform\": \"\",\n          \"numInstances\": {{faker 'random.number'}},\n          \"preemptibility\": \"{{oneOf (array 'PREEMPTIBILITY_UNSPECIFIED' 'NON_PREEMPTIBLE' 'PREEMPTIBLE')}}\"\n        }\n      },\n      \"labels\": {}\n    }\n  },\n  \"updateTime\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "8a284643-d526-47c1-bf65-9fdd5fad2cdb",
      "documentation": "Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.",
      "method": "post",
      "endpoint": "v1/:parent/workflowTemplates:instantiateInline",
      "responses": [
        {
          "uuid": "217991ce-ff77-4573-aa20-b67782687348",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "ede6e13a-307f-4b1e-bfbf-4b8483af636d",
      "documentation": "Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.",
      "method": "post",
      "endpoint": "v1/:project/:region/:cluster:injectCredentials",
      "responses": [
        {
          "uuid": "6b604f93-6bb6-4102-b696-889c76361863",
          "body": "{\n  \"done\": {{faker 'random.boolean'}},\n  \"error\": {\n    \"code\": {{faker 'random.number'}},\n    \"details\": [\n      {}\n    ],\n    \"message\": \"\"\n  },\n  \"metadata\": {},\n  \"name\": \"\",\n  \"response\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "b103bd0b-64e8-48eb-9a44-211d71c6e16e",
      "documentation": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
      "method": "post",
      "endpoint": "v1/:resource:getIamPolicy",
      "responses": [
        {
          "uuid": "e13e56cd-faaf-49fb-96cb-09b31532bd37",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "11523cad-f2f6-4955-9e14-14732c102265",
      "documentation": "Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.",
      "method": "post",
      "endpoint": "v1/:resource:setIamPolicy",
      "responses": [
        {
          "uuid": "21b491e8-f290-4098-8c38-a0f9daef11d1",
          "body": "{\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"description\": \"\",\n        \"expression\": \"\",\n        \"location\": \"\",\n        \"title\": \"\"\n      },\n      \"members\": [\n        \"\"\n      ],\n      \"role\": \"\"\n    }\n  ],\n  \"etag\": \"\",\n  \"version\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "e5909a07-4524-4daa-ac3c-e46857ac683a",
      "documentation": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
      "method": "post",
      "endpoint": "v1/:resource:testIamPermissions",
      "responses": [
        {
          "uuid": "75fb37d3-ae8d-4ffb-a3f3-5d1ea3f45bd0",
          "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Successful response",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}