{
    "source": "mockoon:1.15.0",
    "data": [
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 17,
                "name": "Slack Web API",
                "endpointPrefix": "api",
                "latency": 0,
                "port": 3000,
                "hostname": "0.0.0.0",
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Approve an app for installation on a workspace.",
                        "method": "post",
                        "endpoint": "admin.apps.approve",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List approved apps for an org or workspace.",
                        "method": "get",
                        "endpoint": "admin.apps.approved.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List app requests for a team/workspace.",
                        "method": "get",
                        "endpoint": "admin.apps.requests.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Restrict an app for installation on a workspace.",
                        "method": "post",
                        "endpoint": "admin.apps.restrict",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List restricted apps for an org or workspace.",
                        "method": "get",
                        "endpoint": "admin.apps.restricted.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Archive a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.archive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'channel_not_found' 'channel_type_not_supported' 'default_org_wide_channel' 'already_archived' 'cant_archive_general' 'restricted_action' 'could_not_archive_channel')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Convert a public channel to a private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.convertToPrivate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'restricted_action' 'name_taken' 'channel_not_found' 'channel_type_not_supported' 'default_org_wide_channel' 'method_not_supported_for_channel_type' 'could_not_convert_channel' 'external_channel_migrating')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a public or private channel-based conversation.",
                        "method": "post",
                        "endpoint": "admin.conversations.create",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel_id\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'name_taken' 'restricted_action' 'team_not_found' 'invalid_team' 'invalid_name' 'could_not_create_channel' 'team_id_or_org_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.delete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'not_an_admin' 'channel_not_found' 'channel_type_not_supported' 'default_org_wide_channel' 'restricted_action' 'could_not_delete_channel' 'missing_scope')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Disconnect a connected channel from one or more workspaces.",
                        "method": "post",
                        "endpoint": "admin.conversations.disconnectShared",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'not_an_admin' 'not_an_enterprise' 'channel_not_found' 'not_supported' 'team_not_found' 'restricted_action' 'missing_scope' 'leaving_team_not_in_channel' 'no_teams_to_disconnect' 'leaving_team_required' 'cannot_kick_team' 'cannot_kick_home_team')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all disconnected channels—i.e., channels that were once connected to other workspaces and then disconnected—and the corresponding original channel IDs for key revocation with EKM.",
                        "method": "get",
                        "endpoint": "admin.conversations.ekm.listOriginalConnectedChannelInfo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get conversation preferences for a public or private channel.",
                        "method": "get",
                        "endpoint": "admin.conversations.getConversationPrefs",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"prefs\": {\n    \"can_thread\": {\n      \"type\": [\n        \"\"\n      ],\n      \"user\": [\n        \"\"\n      ]\n    },\n    \"who_can_post\": {\n      \"type\": [\n        \"\"\n      ],\n      \"user\": [\n        \"\"\n      ]\n    }\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'not_an_admin' 'not_an_enterprise' 'restricted_action' 'missing_scope' 'channel_not_found' 'channel_type_not_supported' 'could_not_get_conversation_prefs')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all the workspaces a given public or private channel is connected to within this Enterprise org.",
                        "method": "get",
                        "endpoint": "admin.conversations.getTeams",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"team_ids\": [\n    \"\"\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'channel_not_found' 'channel_type_not_supported' 'unsupported_team_type' 'restricted_action' 'could_not_get_teams' 'invalid_cursor' 'invalid_limit')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Invite a user to a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.invite",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'channel_not_found' 'channel_type_not_supported' 'default_org_wide_channel' 'restricted_action' 'user_must_be_admin' 'failed_for_some_users')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Rename a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.rename",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'channel_not_found' 'channel_type_not_supported' 'restricted_action' 'could_not_rename_channel' 'default_org_wide_channel' 'name_taken')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an allowlist of IDP groups for accessing a channel",
                        "method": "post",
                        "endpoint": "admin.conversations.restrictAccess.addGroup",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all IDP Groups linked to a channel",
                        "method": "get",
                        "endpoint": "admin.conversations.restrictAccess.listGroups",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a linked IDP group linked from a private channel",
                        "method": "post",
                        "endpoint": "admin.conversations.restrictAccess.removeGroup",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Search for public or private channels in an Enterprise organization.",
                        "method": "get",
                        "endpoint": "admin.conversations.search",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channels\": [\n    {\n      \"accepted_user\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"creator\": \"\",\n      \"id\": \"\",\n      \"is_archived\": {{faker 'random.boolean'}},\n      \"is_channel\": {{faker 'random.boolean'}},\n      \"is_frozen\": {{faker 'random.boolean'}},\n      \"is_general\": {{faker 'random.boolean'}},\n      \"is_member\": {{faker 'random.boolean'}},\n      \"is_moved\": {{faker 'random.number'}},\n      \"is_mpim\": {{faker 'random.boolean'}},\n      \"is_non_threadable\": {{faker 'random.boolean'}},\n      \"is_org_shared\": {{faker 'random.boolean'}},\n      \"is_pending_ext_shared\": {{faker 'random.boolean'}},\n      \"is_private\": {{faker 'random.boolean'}},\n      \"is_read_only\": {{faker 'random.boolean'}},\n      \"is_shared\": {{faker 'random.boolean'}},\n      \"is_thread_only\": {{faker 'random.boolean'}},\n      \"last_read\": \"\",\n      \"latest\": \"\",\n      \"members\": [\n        \"\"\n      ],\n      \"name\": \"\",\n      \"name_normalized\": \"\",\n      \"num_members\": {{faker 'random.number'}},\n      \"pending_shared\": [\n        \"\"\n      ],\n      \"previous_names\": [\n        \"\"\n      ],\n      \"priority\": {{faker 'random.number'}},\n      \"purpose\": {\n        \"creator\": \"\",\n        \"last_set\": {{faker 'random.number'}},\n        \"value\": \"\"\n      },\n      \"topic\": {\n        \"creator\": \"\",\n        \"last_set\": {{faker 'random.number'}},\n        \"value\": \"\"\n      },\n      \"unlinked\": {{faker 'random.number'}},\n      \"unread_count\": {{faker 'random.number'}},\n      \"unread_count_display\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_cursor\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'not_an_admin' 'not_an_enterprise' 'team_not_found' 'not_allowed' 'invalid_auth' 'invalid_cursor' 'invalid_search_channel_type' 'invalid_sort' 'invalid_sort_dir')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the posting permissions for a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.setConversationPrefs",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'not_an_admin' 'channel_not_found' 'channel_type_not_supported' 'restricted_action' 'missing_scope' 'could_not_set_channel_pref' 'default_org_wide_channel')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the workspaces in an Enterprise grid org that connect to a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.setTeams",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unarchive a public or private channel.",
                        "method": "post",
                        "endpoint": "admin.conversations.unarchive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"{{oneOf (array 'feature_not_enabled' 'channel_not_found' 'channel_not_archived' 'channel_type_not_supported' 'restricted_action' 'could_not_unarchive_channel' 'default_org_wide_channel' 'missing_scope')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an emoji.",
                        "method": "post",
                        "endpoint": "admin.emoji.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an emoji alias.",
                        "method": "post",
                        "endpoint": "admin.emoji.addAlias",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List emoji for an Enterprise Grid organization.",
                        "method": "get",
                        "endpoint": "admin.emoji.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove an emoji across an Enterprise Grid organization",
                        "method": "post",
                        "endpoint": "admin.emoji.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Rename an emoji.",
                        "method": "post",
                        "endpoint": "admin.emoji.rename",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Approve a workspace invite request.",
                        "method": "post",
                        "endpoint": "admin.inviteRequests.approve",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all approved workspace invite requests.",
                        "method": "get",
                        "endpoint": "admin.inviteRequests.approved.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all denied workspace invite requests.",
                        "method": "get",
                        "endpoint": "admin.inviteRequests.denied.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deny a workspace invite request.",
                        "method": "post",
                        "endpoint": "admin.inviteRequests.deny",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all pending workspace invite requests.",
                        "method": "get",
                        "endpoint": "admin.inviteRequests.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all of the admins on a given workspace.",
                        "method": "get",
                        "endpoint": "admin.teams.admins.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create an Enterprise team.",
                        "method": "post",
                        "endpoint": "admin.teams.create",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all teams on an Enterprise organization",
                        "method": "get",
                        "endpoint": "admin.teams.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all of the owners on a given workspace.",
                        "method": "get",
                        "endpoint": "admin.teams.owners.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Fetch information about settings in a workspace",
                        "method": "get",
                        "endpoint": "admin.teams.settings.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the default channels of a workspace.",
                        "method": "post",
                        "endpoint": "admin.teams.settings.setDefaultChannels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the description of a given workspace.",
                        "method": "post",
                        "endpoint": "admin.teams.settings.setDescription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "An API method that allows admins to set the discoverability of a given workspace",
                        "method": "post",
                        "endpoint": "admin.teams.settings.setDiscoverability",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sets the icon of a workspace.",
                        "method": "post",
                        "endpoint": "admin.teams.settings.setIcon",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the name of a given workspace.",
                        "method": "post",
                        "endpoint": "admin.teams.settings.setName",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add one or more default channels to an IDP group.",
                        "method": "post",
                        "endpoint": "admin.usergroups.addChannels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the token provided is not associated with an Org Admin or Owner",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Associate one or more default workspaces with an organization-wide IDP group.",
                        "method": "post",
                        "endpoint": "admin.usergroups.addTeams",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List the channels linked to an org-level IDP group (user group).",
                        "method": "get",
                        "endpoint": "admin.usergroups.listChannels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the token provided is not associated with an Org Admin or Owner",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove one or more default channels from an org-level IDP group (user group).",
                        "method": "post",
                        "endpoint": "admin.usergroups.removeChannels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the token provided is not associated with an Org Admin or Owner",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an Enterprise user to a workspace.",
                        "method": "post",
                        "endpoint": "admin.users.assign",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Invite a user to a workspace.",
                        "method": "post",
                        "endpoint": "admin.users.invite",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List users on a workspace",
                        "method": "get",
                        "endpoint": "admin.users.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a user from a workspace.",
                        "method": "post",
                        "endpoint": "admin.users.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Invalidate a single session for a user by session_id",
                        "method": "post",
                        "endpoint": "admin.users.session.invalidate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Wipes all valid sessions on all devices for a given user",
                        "method": "post",
                        "endpoint": "admin.users.session.reset",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set an existing guest, regular user, or owner to be an admin user.",
                        "method": "post",
                        "endpoint": "admin.users.setAdmin",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set an expiration for a guest user",
                        "method": "post",
                        "endpoint": "admin.users.setExpiration",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set an existing guest, regular user, or admin user to be a workspace owner.",
                        "method": "post",
                        "endpoint": "admin.users.setOwner",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set an existing guest user, admin user, or owner to be a regular user.",
                        "method": "post",
                        "endpoint": "admin.users.setRegular",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Checks API calling code.",
                        "method": "get",
                        "endpoint": "api.test",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Artificial error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of authorizations for the given event context. Each authorization represents an app installation that the event is visible to.",
                        "method": "get",
                        "endpoint": "apps.event.authorizations.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns list of permissions this app has on a team.",
                        "method": "get",
                        "endpoint": "apps.permissions.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"info\": {\n    \"app_home\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    },\n    \"channel\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    },\n    \"group\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    },\n    \"im\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    },\n    \"mpim\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    },\n    \"team\": {\n      \"resources\": {\n        \"excluded_ids\": [\n          \"\"\n        ],\n        \"ids\": [\n          \"\"\n        ],\n        \"wildcard\": {{faker 'random.boolean'}}\n      },\n      \"scopes\": [\n        \"\"\n      ]\n    }\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response when used with a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when used with an invalid token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Allows an app to request additional scopes",
                        "method": "get",
                        "endpoint": "apps.permissions.request",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response when used with a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_trigger' 'trigger_exchanged' 'invalid_scope' 'invalid_user' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when trigger_id is invalid",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns list of resource grants this app has on a team.",
                        "method": "get",
                        "endpoint": "apps.permissions.resources.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"resources\": [\n    {\n      \"id\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical successful paginated response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_cursor' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns list of scopes this app has on a team.",
                        "method": "get",
                        "endpoint": "apps.permissions.scopes.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"scopes\": {\n    \"app_home\": [\n      \"\"\n    ],\n    \"channel\": [\n      \"\"\n    ],\n    \"group\": [\n      \"\"\n    ],\n    \"im\": [\n      \"\"\n    ],\n    \"mpim\": [\n      \"\"\n    ],\n    \"team\": [\n      \"\"\n    ],\n    \"user\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical successful paginated response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns list of user grants and corresponding scopes this app has on a team.",
                        "method": "get",
                        "endpoint": "apps.permissions.users.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical successful paginated response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enables an app to trigger a permissions modal to grant an app access to a user access scope.",
                        "method": "get",
                        "endpoint": "apps.permissions.users.request",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response when used with a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when trigger_id is invalid",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Uninstalls your app from a workspace.",
                        "method": "get",
                        "endpoint": "apps.uninstall",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_client_id' 'bad_client_secret' 'client_id_token_mismatch' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Revokes a token.",
                        "method": "get",
                        "endpoint": "auth.revoke",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"revoked\": {{faker 'random.boolean'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Checks authentication & identity.",
                        "method": "get",
                        "endpoint": "auth.test",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"bot_id\": \"\",\n  \"is_enterprise_install\": {{faker 'random.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"team\": \"\",\n  \"team_id\": \"\",\n  \"url\": \"\",\n  \"user\": \"\",\n  \"user_id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response when used with a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'token_revoked' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when used with an invalid token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets information about a bot user.",
                        "method": "get",
                        "endpoint": "bots.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"bot\": {\n    \"app_id\": \"\",\n    \"deleted\": {{faker 'random.boolean'}},\n    \"icons\": {\n      \"image_36\": \"\",\n      \"image_48\": \"\",\n      \"image_72\": \"\"\n    },\n    \"id\": \"\",\n    \"name\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"user_id\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "When successful, returns bot info by bot ID.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bot_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "When no bot can be found, it returns an error.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Registers a new Call.",
                        "method": "post",
                        "endpoint": "calls.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Ends a Call.",
                        "method": "post",
                        "endpoint": "calls.end",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns information about a Call.",
                        "method": "get",
                        "endpoint": "calls.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Registers new participants added to a Call.",
                        "method": "post",
                        "endpoint": "calls.participants.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Registers participants removed from a Call.",
                        "method": "post",
                        "endpoint": "calls.participants.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates information about a Call.",
                        "method": "post",
                        "endpoint": "calls.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes a message.",
                        "method": "post",
                        "endpoint": "chat.delete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'message_not_found' 'channel_not_found' 'cant_delete_message' 'compliance_exports_prevent_deletion' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes a pending scheduled message from the queue.",
                        "method": "post",
                        "endpoint": "chat.deleteScheduledMessage",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_scheduled_message_id' 'channel_not_found' 'bad_token' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if no message is found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve a permalink URL for a specific extant message",
                        "method": "get",
                        "endpoint": "chat.getPermalink",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"permalink\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'message_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Error response when channel cannot be found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Share a me message into a channel.",
                        "method": "post",
                        "endpoint": "chat.meMessage",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sends an ephemeral message to a user in a channel.",
                        "method": "post",
                        "endpoint": "chat.postEphemeral",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"message_ts\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'is_archived' 'msg_too_long' 'no_text' 'restricted_action' 'too_many_attachments' 'user_not_in_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sends a message to a channel.",
                        "method": "post",
                        "endpoint": "chat.postMessage",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"attachments\": [\n      {\n        \"fallback\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"image_bytes\": {{faker 'random.number'}},\n        \"image_height\": {{faker 'random.number'}},\n        \"image_url\": \"\",\n        \"image_width\": {{faker 'random.number'}}\n      }\n    ],\n    \"blocks\": [\n      {\n        \"type\": \"\"\n      }\n    ],\n    \"bot_id\": \"\",\n    \"bot_profile\": {\n      \"app_id\": \"\",\n      \"deleted\": {{faker 'random.boolean'}},\n      \"icons\": {\n        \"image_36\": \"\",\n        \"image_48\": \"\",\n        \"image_72\": \"\"\n      },\n      \"id\": \"\",\n      \"name\": \"\",\n      \"team_id\": \"\",\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"client_msg_id\": \"\",\n    \"comment\": {\n      \"comment\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"is_intro\": {{faker 'random.boolean'}},\n      \"is_starred\": {{faker 'random.boolean'}},\n      \"num_stars\": {{faker 'random.number'}},\n      \"pinned_info\": {},\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"reactions\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"timestamp\": {{faker 'random.number'}},\n      \"user\": \"\"\n    },\n    \"display_as_bot\": {{faker 'random.boolean'}},\n    \"file\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"comments_count\": {{faker 'random.number'}},\n      \"created\": {{faker 'random.number'}},\n      \"date_delete\": {{faker 'random.number'}},\n      \"display_as_bot\": {{faker 'random.boolean'}},\n      \"editable\": {{faker 'random.boolean'}},\n      \"editor\": \"\",\n      \"external_id\": \"\",\n      \"external_type\": \"\",\n      \"external_url\": \"\",\n      \"filetype\": \"\",\n      \"groups\": [\n        \"\"\n      ],\n      \"has_rich_preview\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"image_exif_rotation\": {{faker 'random.number'}},\n      \"ims\": [\n        \"\"\n      ],\n      \"is_external\": {{faker 'random.boolean'}},\n      \"is_public\": {{faker 'random.boolean'}},\n      \"is_starred\": {{faker 'random.boolean'}},\n      \"is_tombstoned\": {{faker 'random.boolean'}},\n      \"last_editor\": \"\",\n      \"mimetype\": \"\",\n      \"mode\": \"\",\n      \"name\": \"\",\n      \"non_owner_editable\": {{faker 'random.boolean'}},\n      \"num_stars\": {{faker 'random.number'}},\n      \"original_h\": {{faker 'random.number'}},\n      \"original_w\": {{faker 'random.number'}},\n      \"permalink\": \"\",\n      \"permalink_public\": \"\",\n      \"pinned_info\": {},\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"pretty_type\": \"\",\n      \"preview\": \"\",\n      \"public_url_shared\": {{faker 'random.boolean'}},\n      \"reactions\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"shares\": {\n        \"private\": \"\",\n        \"public\": \"\"\n      },\n      \"size\": {{faker 'random.number'}},\n      \"source_team\": \"\",\n      \"state\": \"\",\n      \"thumb_1024\": \"\",\n      \"thumb_1024_h\": {{faker 'random.number'}},\n      \"thumb_1024_w\": {{faker 'random.number'}},\n      \"thumb_160\": \"\",\n      \"thumb_360\": \"\",\n      \"thumb_360_h\": {{faker 'random.number'}},\n      \"thumb_360_w\": {{faker 'random.number'}},\n      \"thumb_480\": \"\",\n      \"thumb_480_h\": {{faker 'random.number'}},\n      \"thumb_480_w\": {{faker 'random.number'}},\n      \"thumb_64\": \"\",\n      \"thumb_720\": \"\",\n      \"thumb_720_h\": {{faker 'random.number'}},\n      \"thumb_720_w\": {{faker 'random.number'}},\n      \"thumb_80\": \"\",\n      \"thumb_800\": \"\",\n      \"thumb_800_h\": {{faker 'random.number'}},\n      \"thumb_800_w\": {{faker 'random.number'}},\n      \"thumb_960\": \"\",\n      \"thumb_960_h\": {{faker 'random.number'}},\n      \"thumb_960_w\": {{faker 'random.number'}},\n      \"thumb_tiny\": \"\",\n      \"timestamp\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"updated\": {{faker 'random.number'}},\n      \"url_private\": \"\",\n      \"url_private_download\": \"\",\n      \"user\": \"\",\n      \"user_team\": \"\",\n      \"username\": \"\"\n    },\n    \"files\": [\n      {\n        \"channels\": [\n          \"\"\n        ],\n        \"comments_count\": {{faker 'random.number'}},\n        \"created\": {{faker 'random.number'}},\n        \"date_delete\": {{faker 'random.number'}},\n        \"display_as_bot\": {{faker 'random.boolean'}},\n        \"editable\": {{faker 'random.boolean'}},\n        \"editor\": \"\",\n        \"external_id\": \"\",\n        \"external_type\": \"\",\n        \"external_url\": \"\",\n        \"filetype\": \"\",\n        \"groups\": [\n          \"\"\n        ],\n        \"has_rich_preview\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"image_exif_rotation\": {{faker 'random.number'}},\n        \"ims\": [\n          \"\"\n        ],\n        \"is_external\": {{faker 'random.boolean'}},\n        \"is_public\": {{faker 'random.boolean'}},\n        \"is_starred\": {{faker 'random.boolean'}},\n        \"is_tombstoned\": {{faker 'random.boolean'}},\n        \"last_editor\": \"\",\n        \"mimetype\": \"\",\n        \"mode\": \"\",\n        \"name\": \"\",\n        \"non_owner_editable\": {{faker 'random.boolean'}},\n        \"num_stars\": {{faker 'random.number'}},\n        \"original_h\": {{faker 'random.number'}},\n        \"original_w\": {{faker 'random.number'}},\n        \"permalink\": \"\",\n        \"permalink_public\": \"\",\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"pretty_type\": \"\",\n        \"preview\": \"\",\n        \"public_url_shared\": {{faker 'random.boolean'}},\n        \"reactions\": [\n          {\n            \"count\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"shares\": {\n          \"private\": \"\",\n          \"public\": \"\"\n        },\n        \"size\": {{faker 'random.number'}},\n        \"source_team\": \"\",\n        \"state\": \"\",\n        \"thumb_1024\": \"\",\n        \"thumb_1024_h\": {{faker 'random.number'}},\n        \"thumb_1024_w\": {{faker 'random.number'}},\n        \"thumb_160\": \"\",\n        \"thumb_360\": \"\",\n        \"thumb_360_h\": {{faker 'random.number'}},\n        \"thumb_360_w\": {{faker 'random.number'}},\n        \"thumb_480\": \"\",\n        \"thumb_480_h\": {{faker 'random.number'}},\n        \"thumb_480_w\": {{faker 'random.number'}},\n        \"thumb_64\": \"\",\n        \"thumb_720\": \"\",\n        \"thumb_720_h\": {{faker 'random.number'}},\n        \"thumb_720_w\": {{faker 'random.number'}},\n        \"thumb_80\": \"\",\n        \"thumb_800\": \"\",\n        \"thumb_800_h\": {{faker 'random.number'}},\n        \"thumb_800_w\": {{faker 'random.number'}},\n        \"thumb_960\": \"\",\n        \"thumb_960_h\": {{faker 'random.number'}},\n        \"thumb_960_w\": {{faker 'random.number'}},\n        \"thumb_tiny\": \"\",\n        \"timestamp\": {{faker 'random.number'}},\n        \"title\": \"\",\n        \"updated\": {{faker 'random.number'}},\n        \"url_private\": \"\",\n        \"url_private_download\": \"\",\n        \"user\": \"\",\n        \"user_team\": \"\",\n        \"username\": \"\"\n      }\n    ],\n    \"icons\": {\n      \"emoji\": \"\",\n      \"image_64\": \"\"\n    },\n    \"inviter\": \"\",\n    \"is_delayed_message\": {{faker 'random.boolean'}},\n    \"is_intro\": {{faker 'random.boolean'}},\n    \"is_starred\": {{faker 'random.boolean'}},\n    \"last_read\": \"\",\n    \"latest_reply\": \"\",\n    \"name\": \"\",\n    \"old_name\": \"\",\n    \"parent_user_id\": \"\",\n    \"permalink\": \"\",\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"purpose\": \"\",\n    \"reactions\": [\n      {\n        \"count\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"reply_count\": {{faker 'random.number'}},\n    \"reply_users\": [\n      \"\"\n    ],\n    \"reply_users_count\": {{faker 'random.number'}},\n    \"source_team\": \"\",\n    \"subscribed\": {{faker 'random.boolean'}},\n    \"subtype\": \"\",\n    \"team\": \"\",\n    \"text\": \"\",\n    \"thread_ts\": \"\",\n    \"topic\": \"\",\n    \"ts\": \"\",\n    \"type\": \"\",\n    \"unread_count\": {{faker 'random.number'}},\n    \"upload\": {{faker 'random.boolean'}},\n    \"user\": \"\",\n    \"user_profile\": {\n      \"avatar_hash\": \"\",\n      \"display_name\": \"\",\n      \"display_name_normalized\": \"\",\n      \"first_name\": \"\",\n      \"image_72\": \"\",\n      \"is_restricted\": {{faker 'random.boolean'}},\n      \"is_ultra_restricted\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"real_name\": \"\",\n      \"real_name_normalized\": \"\",\n      \"team\": \"\"\n    },\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"ts\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'too_many_attachments' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if too many attachments are included",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Schedules a message to be sent to a channel.",
                        "method": "post",
                        "endpoint": "chat.scheduleMessage",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"bot_id\": \"\",\n    \"bot_profile\": {\n      \"app_id\": \"\",\n      \"deleted\": {{faker 'random.boolean'}},\n      \"icons\": {\n        \"image_36\": \"\",\n        \"image_48\": \"\",\n        \"image_72\": \"\"\n      },\n      \"id\": \"\",\n      \"name\": \"\",\n      \"team_id\": \"\",\n      \"updated\": {{faker 'random.number'}}\n    },\n    \"team\": \"\",\n    \"text\": \"\",\n    \"type\": \"\",\n    \"user\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"post_at\": {{faker 'random.number'}},\n  \"scheduled_message_id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_time' 'time_in_past' 'time_too_far' 'channel_not_found' 'not_in_channel' 'is_archived' 'msg_too_long' 'no_text' 'restricted_action' 'restricted_action_read_only_channel' 'restricted_action_thread_only_channel' 'restricted_action_non_threadable_channel' 'too_many_attachments' 'rate_limited' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the `post_at` is invalid (ex. in the past or too far into the future)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Returns a list of scheduled messages.",
                        "method": "get",
                        "endpoint": "chat.scheduledMessages.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  },\n  \"scheduled_messages\": [\n    {\n      \"channel_id\": \"\",\n      \"date_created\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"post_at\": {{faker 'random.number'}},\n      \"text\": \"\"\n    }\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the channel passed is invalid",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Provide custom unfurl behavior for user-posted URLs",
                        "method": "post",
                        "endpoint": "chat.unfurl",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical, minimal success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'cannot_unfurl_url' 'cannot_find_service' 'missing_unfurls' 'cannot_prompt' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates a message.",
                        "method": "post",
                        "endpoint": "chat.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"message\": {\n    \"attachments\": [\n      {}\n    ],\n    \"blocks\": {},\n    \"text\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"text\": \"\",\n  \"ts\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'message_not_found' 'cant_update_message' 'channel_not_found' 'edit_window_closed' 'msg_too_long' 'too_many_attachments' 'rate_limited' 'no_text' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'request_timeout' 'invalid_json' 'json_not_object' 'upgrade_required' 'fatal_error' 'is_inactive')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Archives a conversation.",
                        "method": "post",
                        "endpoint": "conversations.archive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'not_supported' 'channel_not_found' 'already_archived' 'cant_archive_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Closes a direct message or multi-person direct message.",
                        "method": "post",
                        "endpoint": "conversations.close",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"already_closed\": {{faker 'random.boolean'}},\n  \"no_op\": {{faker 'random.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'channel_not_found' 'user_does_not_own_channel' 'missing_scope' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Initiates a public or private channel-based conversation",
                        "method": "post",
                        "endpoint": "conversations.create",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "If successful, the command returns a rather stark [conversation object](/types/conversation)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"detail\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'name_taken' 'restricted_action' 'no_channel' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'invalid_name' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when name already in use",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Fetches a conversation's history of messages and events.",
                        "method": "get",
                        "endpoint": "conversations.history",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel_actions_count\": {{faker 'random.number'}},\n  \"channel_actions_ts\": \"\",\n  \"has_more\": {{faker 'random.boolean'}},\n  \"messages\": [\n    {\n      \"attachments\": [\n        {\n          \"fallback\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"image_bytes\": {{faker 'random.number'}},\n          \"image_height\": {{faker 'random.number'}},\n          \"image_url\": \"\",\n          \"image_width\": {{faker 'random.number'}}\n        }\n      ],\n      \"blocks\": [\n        {\n          \"type\": \"\"\n        }\n      ],\n      \"bot_id\": \"\",\n      \"bot_profile\": {\n        \"app_id\": \"\",\n        \"deleted\": {{faker 'random.boolean'}},\n        \"icons\": {\n          \"image_36\": \"\",\n          \"image_48\": \"\",\n          \"image_72\": \"\"\n        },\n        \"id\": \"\",\n        \"name\": \"\",\n        \"team_id\": \"\",\n        \"updated\": {{faker 'random.number'}}\n      },\n      \"client_msg_id\": \"\",\n      \"comment\": {\n        \"comment\": \"\",\n        \"created\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"is_intro\": {{faker 'random.boolean'}},\n        \"is_starred\": {{faker 'random.boolean'}},\n        \"num_stars\": {{faker 'random.number'}},\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"reactions\": [\n          {\n            \"count\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"timestamp\": {{faker 'random.number'}},\n        \"user\": \"\"\n      },\n      \"display_as_bot\": {{faker 'random.boolean'}},\n      \"file\": {\n        \"channels\": [\n          \"\"\n        ],\n        \"comments_count\": {{faker 'random.number'}},\n        \"created\": {{faker 'random.number'}},\n        \"date_delete\": {{faker 'random.number'}},\n        \"display_as_bot\": {{faker 'random.boolean'}},\n        \"editable\": {{faker 'random.boolean'}},\n        \"editor\": \"\",\n        \"external_id\": \"\",\n        \"external_type\": \"\",\n        \"external_url\": \"\",\n        \"filetype\": \"\",\n        \"groups\": [\n          \"\"\n        ],\n        \"has_rich_preview\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"image_exif_rotation\": {{faker 'random.number'}},\n        \"ims\": [\n          \"\"\n        ],\n        \"is_external\": {{faker 'random.boolean'}},\n        \"is_public\": {{faker 'random.boolean'}},\n        \"is_starred\": {{faker 'random.boolean'}},\n        \"is_tombstoned\": {{faker 'random.boolean'}},\n        \"last_editor\": \"\",\n        \"mimetype\": \"\",\n        \"mode\": \"\",\n        \"name\": \"\",\n        \"non_owner_editable\": {{faker 'random.boolean'}},\n        \"num_stars\": {{faker 'random.number'}},\n        \"original_h\": {{faker 'random.number'}},\n        \"original_w\": {{faker 'random.number'}},\n        \"permalink\": \"\",\n        \"permalink_public\": \"\",\n        \"pinned_info\": {},\n        \"pinned_to\": [\n          \"\"\n        ],\n        \"pretty_type\": \"\",\n        \"preview\": \"\",\n        \"public_url_shared\": {{faker 'random.boolean'}},\n        \"reactions\": [\n          {\n            \"count\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"users\": [\n              \"\"\n            ]\n          }\n        ],\n        \"shares\": {\n          \"private\": \"\",\n          \"public\": \"\"\n        },\n        \"size\": {{faker 'random.number'}},\n        \"source_team\": \"\",\n        \"state\": \"\",\n        \"thumb_1024\": \"\",\n        \"thumb_1024_h\": {{faker 'random.number'}},\n        \"thumb_1024_w\": {{faker 'random.number'}},\n        \"thumb_160\": \"\",\n        \"thumb_360\": \"\",\n        \"thumb_360_h\": {{faker 'random.number'}},\n        \"thumb_360_w\": {{faker 'random.number'}},\n        \"thumb_480\": \"\",\n        \"thumb_480_h\": {{faker 'random.number'}},\n        \"thumb_480_w\": {{faker 'random.number'}},\n        \"thumb_64\": \"\",\n        \"thumb_720\": \"\",\n        \"thumb_720_h\": {{faker 'random.number'}},\n        \"thumb_720_w\": {{faker 'random.number'}},\n        \"thumb_80\": \"\",\n        \"thumb_800\": \"\",\n        \"thumb_800_h\": {{faker 'random.number'}},\n        \"thumb_800_w\": {{faker 'random.number'}},\n        \"thumb_960\": \"\",\n        \"thumb_960_h\": {{faker 'random.number'}},\n        \"thumb_960_w\": {{faker 'random.number'}},\n        \"thumb_tiny\": \"\",\n        \"timestamp\": {{faker 'random.number'}},\n        \"title\": \"\",\n        \"updated\": {{faker 'random.number'}},\n        \"url_private\": \"\",\n        \"url_private_download\": \"\",\n        \"user\": \"\",\n        \"user_team\": \"\",\n        \"username\": \"\"\n      },\n      \"files\": [\n        {\n          \"channels\": [\n            \"\"\n          ],\n          \"comments_count\": {{faker 'random.number'}},\n          \"created\": {{faker 'random.number'}},\n          \"date_delete\": {{faker 'random.number'}},\n          \"display_as_bot\": {{faker 'random.boolean'}},\n          \"editable\": {{faker 'random.boolean'}},\n          \"editor\": \"\",\n          \"external_id\": \"\",\n          \"external_type\": \"\",\n          \"external_url\": \"\",\n          \"filetype\": \"\",\n          \"groups\": [\n            \"\"\n          ],\n          \"has_rich_preview\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"image_exif_rotation\": {{faker 'random.number'}},\n          \"ims\": [\n            \"\"\n          ],\n          \"is_external\": {{faker 'random.boolean'}},\n          \"is_public\": {{faker 'random.boolean'}},\n          \"is_starred\": {{faker 'random.boolean'}},\n          \"is_tombstoned\": {{faker 'random.boolean'}},\n          \"last_editor\": \"\",\n          \"mimetype\": \"\",\n          \"mode\": \"\",\n          \"name\": \"\",\n          \"non_owner_editable\": {{faker 'random.boolean'}},\n          \"num_stars\": {{faker 'random.number'}},\n          \"original_h\": {{faker 'random.number'}},\n          \"original_w\": {{faker 'random.number'}},\n          \"permalink\": \"\",\n          \"permalink_public\": \"\",\n          \"pinned_info\": {},\n          \"pinned_to\": [\n            \"\"\n          ],\n          \"pretty_type\": \"\",\n          \"preview\": \"\",\n          \"public_url_shared\": {{faker 'random.boolean'}},\n          \"reactions\": [\n            {\n              \"count\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"users\": [\n                \"\"\n              ]\n            }\n          ],\n          \"shares\": {\n            \"private\": \"\",\n            \"public\": \"\"\n          },\n          \"size\": {{faker 'random.number'}},\n          \"source_team\": \"\",\n          \"state\": \"\",\n          \"thumb_1024\": \"\",\n          \"thumb_1024_h\": {{faker 'random.number'}},\n          \"thumb_1024_w\": {{faker 'random.number'}},\n          \"thumb_160\": \"\",\n          \"thumb_360\": \"\",\n          \"thumb_360_h\": {{faker 'random.number'}},\n          \"thumb_360_w\": {{faker 'random.number'}},\n          \"thumb_480\": \"\",\n          \"thumb_480_h\": {{faker 'random.number'}},\n          \"thumb_480_w\": {{faker 'random.number'}},\n          \"thumb_64\": \"\",\n          \"thumb_720\": \"\",\n          \"thumb_720_h\": {{faker 'random.number'}},\n          \"thumb_720_w\": {{faker 'random.number'}},\n          \"thumb_80\": \"\",\n          \"thumb_800\": \"\",\n          \"thumb_800_h\": {{faker 'random.number'}},\n          \"thumb_800_w\": {{faker 'random.number'}},\n          \"thumb_960\": \"\",\n          \"thumb_960_h\": {{faker 'random.number'}},\n          \"thumb_960_w\": {{faker 'random.number'}},\n          \"thumb_tiny\": \"\",\n          \"timestamp\": {{faker 'random.number'}},\n          \"title\": \"\",\n          \"updated\": {{faker 'random.number'}},\n          \"url_private\": \"\",\n          \"url_private_download\": \"\",\n          \"user\": \"\",\n          \"user_team\": \"\",\n          \"username\": \"\"\n        }\n      ],\n      \"icons\": {\n        \"emoji\": \"\",\n        \"image_64\": \"\"\n      },\n      \"inviter\": \"\",\n      \"is_delayed_message\": {{faker 'random.boolean'}},\n      \"is_intro\": {{faker 'random.boolean'}},\n      \"is_starred\": {{faker 'random.boolean'}},\n      \"last_read\": \"\",\n      \"latest_reply\": \"\",\n      \"name\": \"\",\n      \"old_name\": \"\",\n      \"parent_user_id\": \"\",\n      \"permalink\": \"\",\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"purpose\": \"\",\n      \"reactions\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"reply_count\": {{faker 'random.number'}},\n      \"reply_users\": [\n        \"\"\n      ],\n      \"reply_users_count\": {{faker 'random.number'}},\n      \"source_team\": \"\",\n      \"subscribed\": {{faker 'random.boolean'}},\n      \"subtype\": \"\",\n      \"team\": \"\",\n      \"text\": \"\",\n      \"thread_ts\": \"\",\n      \"topic\": \"\",\n      \"ts\": \"\",\n      \"type\": \"\",\n      \"unread_count\": {{faker 'random.number'}},\n      \"upload\": {{faker 'random.boolean'}},\n      \"user\": \"\",\n      \"user_profile\": {\n        \"avatar_hash\": \"\",\n        \"display_name\": \"\",\n        \"display_name_normalized\": \"\",\n        \"first_name\": \"\",\n        \"image_72\": \"\",\n        \"is_restricted\": {{faker 'random.boolean'}},\n        \"is_ultra_restricted\": {{faker 'random.boolean'}},\n        \"name\": \"\",\n        \"real_name\": \"\",\n        \"real_name_normalized\": \"\",\n        \"team\": \"\"\n      },\n      \"user_team\": \"\",\n      \"username\": \"\"\n    }\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"pin_count\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response containing a channel's messages",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'missing_scope' 'channel_not_found' 'invalid_ts_latest' 'invalid_ts_oldest' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve information about a conversation.",
                        "method": "get",
                        "endpoint": "conversations.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response for a public channel. (Also, a response from a private channel and a multi-party IM is very similar to this example.)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'missing_scope' 'channel_not_found' 'team_added_to_org' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when a channel cannot be found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Invites users to a channel.",
                        "method": "post",
                        "endpoint": "conversations.invite",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response when an invitation is extended",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'no_user' 'cant_invite_self' 'not_in_channel' 'already_in_channel' 'is_archived' 'cant_invite' 'too_many_users' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"errors\": [\n    {\n      \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'no_user' 'cant_invite_self' 'not_in_channel' 'already_in_channel' 'is_archived' 'cant_invite' 'too_many_users' 'ura_max_channels' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n      \"ok\": \"{{oneOf (array 'false')}}\",\n      \"user\": \"\"\n    }\n  ],\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when an invite is attempted on a conversation type that does not support it",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Joins an existing conversation.",
                        "method": "post",
                        "endpoint": "conversations.join",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"warnings\": [\n      \"\"\n    ]\n  },\n  \"warning\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'is_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response if the conversation is archived and cannot be joined",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Removes a user from a conversation.",
                        "method": "post",
                        "endpoint": "conversations.kick",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'user_not_found' 'cant_kick_self' 'not_in_channel' 'cant_kick_from_general' 'restricted_action' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when you attempt to kick yourself from a channel",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Leaves a conversation.",
                        "method": "post",
                        "endpoint": "conversations.leave",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"not_in_channel\": \"{{oneOf (array 'true')}}\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'last_member' 'missing_scope' 'channel_not_found' 'is_archived' 'cant_leave_general' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when attempting to leave a workspace's \"general\" channel",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists all channels in a Slack team.",
                        "method": "get",
                        "endpoint": "conversations.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channels\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response with only public channels",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'missing_scope' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sets the read cursor in a channel.",
                        "method": "post",
                        "endpoint": "conversations.mark",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'invalid_timestamp' 'not_in_channel' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'not_allowed_token_type')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve members of a conversation.",
                        "method": "get",
                        "endpoint": "conversations.members",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"members\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical paginated success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'invalid_limit' 'invalid_cursor' 'fetch_members_failed' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when an invalid cursor is provided",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Opens or resumes a direct message or multi-person direct message.",
                        "method": "post",
                        "endpoint": "conversations.open",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"already_open\": {{faker 'random.boolean'}},\n  \"channel\": \"\",\n  \"no_op\": {{faker 'random.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'user_not_found' 'user_not_visible' 'user_disabled' 'users_list_not_supplied' 'not_enough_users' 'too_many_users' 'invalid_user_combination' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'channel_not_found')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Renames a conversation.",
                        "method": "post",
                        "endpoint": "conversations.rename",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_is_restricted' 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'not_authorized' 'invalid_name' 'name_taken' 'invalid_name_required' 'invalid_name_punctuation' 'invalid_name_maxlength' 'invalid_name_specials' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when the calling user is not a member of the conversation",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve a thread of messages posted to a conversation",
                        "method": "get",
                        "endpoint": "conversations.replies",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"has_more\": {{faker 'random.boolean'}},\n  \"messages\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'missing_scope' 'channel_not_found' 'thread_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sets the purpose for a conversation.",
                        "method": "post",
                        "endpoint": "conversations.setPurpose",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Sets the topic for a conversation.",
                        "method": "post",
                        "endpoint": "conversations.setTopic",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channel\": \"\",\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_in_channel' 'is_archived' 'too_long' 'user_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Reverses conversation archival.",
                        "method": "post",
                        "endpoint": "conversations.unarchive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'channel_not_found' 'not_archived' 'not_authed' 'invalid_auth' 'account_inactive' 'user_is_bot' 'user_is_restricted' 'user_is_ultra_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'team_added_to_org' 'missing_charset' 'superfluous_charset')}}\",\n  \"needed\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"provided\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Open a dialog with a user",
                        "method": "get",
                        "endpoint": "dialog.open",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response is quite minimal.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'validation_errors' 'missing_trigger' 'missing_dialog' 'trigger_exchanged' 'trigger_expired' 'invalid_trigger' 'app_missing_action_url' 'cannot_create_dialog' 'failed_sending_dialog' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response, before getting to any possible validation errors.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Ends the current user's Do Not Disturb session immediately.",
                        "method": "post",
                        "endpoint": "dnd.endDnd",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'unknown_error' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Ends the current user's snooze mode immediately.",
                        "method": "post",
                        "endpoint": "dnd.endSnooze",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"dnd_enabled\": {{faker 'random.boolean'}},\n  \"next_dnd_end_ts\": {{faker 'random.number'}},\n  \"next_dnd_start_ts\": {{faker 'random.number'}},\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"snooze_enabled\": {{faker 'random.boolean'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'snooze_not_active' 'snooze_end_failed' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieves a user's current Do Not Disturb status.",
                        "method": "get",
                        "endpoint": "dnd.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"dnd_enabled\": {{faker 'random.boolean'}},\n  \"next_dnd_end_ts\": {{faker 'random.number'}},\n  \"next_dnd_start_ts\": {{faker 'random.number'}},\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"snooze_enabled\": {{faker 'random.boolean'}},\n  \"snooze_endtime\": {{faker 'random.number'}},\n  \"snooze_remaining\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Turns on Do Not Disturb mode for the current user, or changes its duration.",
                        "method": "post",
                        "endpoint": "dnd.setSnooze",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"snooze_enabled\": {{faker 'random.boolean'}},\n  \"snooze_endtime\": {{faker 'random.number'}},\n  \"snooze_remaining\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'missing_duration' 'snooze_failed' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'too_long' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieves the Do Not Disturb status for up to 50 users on a team.",
                        "method": "get",
                        "endpoint": "dnd.teamInfo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists custom emoji for a team.",
                        "method": "get",
                        "endpoint": "emoji.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes an existing comment on a file.",
                        "method": "post",
                        "endpoint": "files.comments.delete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response is very simple",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'cant_delete' 'comment_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when used with an invalid token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes a file.",
                        "method": "post",
                        "endpoint": "files.delete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'file_not_found' 'file_deleted' 'cant_delete_file' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets information about a file.",
                        "method": "get",
                        "endpoint": "files.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"comments\": [\n    \"\"\n  ],\n  \"content_html\": \"\",\n  \"editor\": \"\",\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'random.number'}},\n    \"created\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"display_as_bot\": {{faker 'random.boolean'}},\n    \"editable\": {{faker 'random.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'random.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_public\": {{faker 'random.boolean'}},\n    \"is_starred\": {{faker 'random.boolean'}},\n    \"is_tombstoned\": {{faker 'random.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"non_owner_editable\": {{faker 'random.boolean'}},\n    \"num_stars\": {{faker 'random.number'}},\n    \"original_h\": {{faker 'random.number'}},\n    \"original_w\": {{faker 'random.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'random.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'random.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'random.number'}},\n    \"thumb_1024_w\": {{faker 'random.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'random.number'}},\n    \"thumb_360_w\": {{faker 'random.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'random.number'}},\n    \"thumb_480_w\": {{faker 'random.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'random.number'}},\n    \"thumb_720_w\": {{faker 'random.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'random.number'}},\n    \"thumb_800_w\": {{faker 'random.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'random.number'}},\n    \"thumb_960_w\": {{faker 'random.number'}},\n    \"thumb_tiny\": \"\",\n    \"timestamp\": {{faker 'random.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  },\n  \"response_metadata\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'file_not_found' 'file_deleted' 'timezone_count_failed' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List for a team, in a channel, or from a user with applied filters.",
                        "method": "get",
                        "endpoint": "files.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"files\": [\n    {\n      \"channels\": [\n        \"\"\n      ],\n      \"comments_count\": {{faker 'random.number'}},\n      \"created\": {{faker 'random.number'}},\n      \"date_delete\": {{faker 'random.number'}},\n      \"display_as_bot\": {{faker 'random.boolean'}},\n      \"editable\": {{faker 'random.boolean'}},\n      \"editor\": \"\",\n      \"external_id\": \"\",\n      \"external_type\": \"\",\n      \"external_url\": \"\",\n      \"filetype\": \"\",\n      \"groups\": [\n        \"\"\n      ],\n      \"has_rich_preview\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"image_exif_rotation\": {{faker 'random.number'}},\n      \"ims\": [\n        \"\"\n      ],\n      \"is_external\": {{faker 'random.boolean'}},\n      \"is_public\": {{faker 'random.boolean'}},\n      \"is_starred\": {{faker 'random.boolean'}},\n      \"is_tombstoned\": {{faker 'random.boolean'}},\n      \"last_editor\": \"\",\n      \"mimetype\": \"\",\n      \"mode\": \"\",\n      \"name\": \"\",\n      \"non_owner_editable\": {{faker 'random.boolean'}},\n      \"num_stars\": {{faker 'random.number'}},\n      \"original_h\": {{faker 'random.number'}},\n      \"original_w\": {{faker 'random.number'}},\n      \"permalink\": \"\",\n      \"permalink_public\": \"\",\n      \"pinned_info\": {},\n      \"pinned_to\": [\n        \"\"\n      ],\n      \"pretty_type\": \"\",\n      \"preview\": \"\",\n      \"public_url_shared\": {{faker 'random.boolean'}},\n      \"reactions\": [\n        {\n          \"count\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"users\": [\n            \"\"\n          ]\n        }\n      ],\n      \"shares\": {\n        \"private\": \"\",\n        \"public\": \"\"\n      },\n      \"size\": {{faker 'random.number'}},\n      \"source_team\": \"\",\n      \"state\": \"\",\n      \"thumb_1024\": \"\",\n      \"thumb_1024_h\": {{faker 'random.number'}},\n      \"thumb_1024_w\": {{faker 'random.number'}},\n      \"thumb_160\": \"\",\n      \"thumb_360\": \"\",\n      \"thumb_360_h\": {{faker 'random.number'}},\n      \"thumb_360_w\": {{faker 'random.number'}},\n      \"thumb_480\": \"\",\n      \"thumb_480_h\": {{faker 'random.number'}},\n      \"thumb_480_w\": {{faker 'random.number'}},\n      \"thumb_64\": \"\",\n      \"thumb_720\": \"\",\n      \"thumb_720_h\": {{faker 'random.number'}},\n      \"thumb_720_w\": {{faker 'random.number'}},\n      \"thumb_80\": \"\",\n      \"thumb_800\": \"\",\n      \"thumb_800_h\": {{faker 'random.number'}},\n      \"thumb_800_w\": {{faker 'random.number'}},\n      \"thumb_960\": \"\",\n      \"thumb_960_h\": {{faker 'random.number'}},\n      \"thumb_960_w\": {{faker 'random.number'}},\n      \"thumb_tiny\": \"\",\n      \"timestamp\": {{faker 'random.number'}},\n      \"title\": \"\",\n      \"updated\": {{faker 'random.number'}},\n      \"url_private\": \"\",\n      \"url_private_download\": \"\",\n      \"user\": \"\",\n      \"user_team\": \"\",\n      \"username\": \"\"\n    }\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_not_found' 'unknown_type' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds a file from a remote service",
                        "method": "post",
                        "endpoint": "files.remote.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve information about a remote file added to Slack",
                        "method": "get",
                        "endpoint": "files.remote.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve information about a remote file added to Slack",
                        "method": "get",
                        "endpoint": "files.remote.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a remote file.",
                        "method": "post",
                        "endpoint": "files.remote.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Share a remote file into a channel.",
                        "method": "get",
                        "endpoint": "files.remote.share",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates an existing remote file.",
                        "method": "post",
                        "endpoint": "files.remote.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Revokes public/external sharing access for a file",
                        "method": "post",
                        "endpoint": "files.revokePublicURL",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'random.number'}},\n    \"created\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"display_as_bot\": {{faker 'random.boolean'}},\n    \"editable\": {{faker 'random.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'random.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_public\": {{faker 'random.boolean'}},\n    \"is_starred\": {{faker 'random.boolean'}},\n    \"is_tombstoned\": {{faker 'random.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"non_owner_editable\": {{faker 'random.boolean'}},\n    \"num_stars\": {{faker 'random.number'}},\n    \"original_h\": {{faker 'random.number'}},\n    \"original_w\": {{faker 'random.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'random.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'random.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'random.number'}},\n    \"thumb_1024_w\": {{faker 'random.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'random.number'}},\n    \"thumb_360_w\": {{faker 'random.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'random.number'}},\n    \"thumb_480_w\": {{faker 'random.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'random.number'}},\n    \"thumb_720_w\": {{faker 'random.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'random.number'}},\n    \"thumb_800_w\": {{faker 'random.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'random.number'}},\n    \"thumb_960_w\": {{faker 'random.number'}},\n    \"thumb_tiny\": \"\",\n    \"timestamp\": {{faker 'random.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'file_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enables a file for public/external sharing.",
                        "method": "post",
                        "endpoint": "files.sharedPublicURL",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'random.number'}},\n    \"created\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"display_as_bot\": {{faker 'random.boolean'}},\n    \"editable\": {{faker 'random.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'random.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_public\": {{faker 'random.boolean'}},\n    \"is_starred\": {{faker 'random.boolean'}},\n    \"is_tombstoned\": {{faker 'random.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"non_owner_editable\": {{faker 'random.boolean'}},\n    \"num_stars\": {{faker 'random.number'}},\n    \"original_h\": {{faker 'random.number'}},\n    \"original_w\": {{faker 'random.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'random.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'random.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'random.number'}},\n    \"thumb_1024_w\": {{faker 'random.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'random.number'}},\n    \"thumb_360_w\": {{faker 'random.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'random.number'}},\n    \"thumb_480_w\": {{faker 'random.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'random.number'}},\n    \"thumb_720_w\": {{faker 'random.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'random.number'}},\n    \"thumb_800_w\": {{faker 'random.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'random.number'}},\n    \"thumb_960_w\": {{faker 'random.number'}},\n    \"thumb_tiny\": \"\",\n    \"timestamp\": {{faker 'random.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'file_not_found' 'not_allowed' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Uploads or creates a file.",
                        "method": "post",
                        "endpoint": "files.upload",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"file\": {\n    \"channels\": [\n      \"\"\n    ],\n    \"comments_count\": {{faker 'random.number'}},\n    \"created\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"display_as_bot\": {{faker 'random.boolean'}},\n    \"editable\": {{faker 'random.boolean'}},\n    \"editor\": \"\",\n    \"external_id\": \"\",\n    \"external_type\": \"\",\n    \"external_url\": \"\",\n    \"filetype\": \"\",\n    \"groups\": [\n      \"\"\n    ],\n    \"has_rich_preview\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"image_exif_rotation\": {{faker 'random.number'}},\n    \"ims\": [\n      \"\"\n    ],\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_public\": {{faker 'random.boolean'}},\n    \"is_starred\": {{faker 'random.boolean'}},\n    \"is_tombstoned\": {{faker 'random.boolean'}},\n    \"last_editor\": \"\",\n    \"mimetype\": \"\",\n    \"mode\": \"\",\n    \"name\": \"\",\n    \"non_owner_editable\": {{faker 'random.boolean'}},\n    \"num_stars\": {{faker 'random.number'}},\n    \"original_h\": {{faker 'random.number'}},\n    \"original_w\": {{faker 'random.number'}},\n    \"permalink\": \"\",\n    \"permalink_public\": \"\",\n    \"pinned_info\": {},\n    \"pinned_to\": [\n      \"\"\n    ],\n    \"pretty_type\": \"\",\n    \"preview\": \"\",\n    \"public_url_shared\": {{faker 'random.boolean'}},\n    \"reactions\": [\n      {\n        \"count\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"users\": [\n          \"\"\n        ]\n      }\n    ],\n    \"shares\": {\n      \"private\": \"\",\n      \"public\": \"\"\n    },\n    \"size\": {{faker 'random.number'}},\n    \"source_team\": \"\",\n    \"state\": \"\",\n    \"thumb_1024\": \"\",\n    \"thumb_1024_h\": {{faker 'random.number'}},\n    \"thumb_1024_w\": {{faker 'random.number'}},\n    \"thumb_160\": \"\",\n    \"thumb_360\": \"\",\n    \"thumb_360_h\": {{faker 'random.number'}},\n    \"thumb_360_w\": {{faker 'random.number'}},\n    \"thumb_480\": \"\",\n    \"thumb_480_h\": {{faker 'random.number'}},\n    \"thumb_480_w\": {{faker 'random.number'}},\n    \"thumb_64\": \"\",\n    \"thumb_720\": \"\",\n    \"thumb_720_h\": {{faker 'random.number'}},\n    \"thumb_720_w\": {{faker 'random.number'}},\n    \"thumb_80\": \"\",\n    \"thumb_800\": \"\",\n    \"thumb_800_h\": {{faker 'random.number'}},\n    \"thumb_800_w\": {{faker 'random.number'}},\n    \"thumb_960\": \"\",\n    \"thumb_960_h\": {{faker 'random.number'}},\n    \"thumb_960_w\": {{faker 'random.number'}},\n    \"thumb_tiny\": \"\",\n    \"timestamp\": {{faker 'random.number'}},\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"url_private\": \"\",\n    \"url_private_download\": \"\",\n    \"user\": \"\",\n    \"user_team\": \"\",\n    \"username\": \"\"\n  },\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Success response after uploading a file to a channel with an initial message",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'posting_to_general_channel_denied' 'invalid_channel' 'file_uploads_disabled' 'file_uploads_except_images_disabled' 'storage_limit_reached' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "For Enterprise Grid workspaces, map local user IDs to global user IDs",
                        "method": "get",
                        "endpoint": "migration.exchange",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"enterprise_id\": \"\",\n  \"invalid_user_ids\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"team_id\": \"\",\n  \"user_id_map\": {}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response when mappings exist for the specified user IDs",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_enterprise_team' 'too_many_users' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response when there are no mappings to provide",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Exchanges a temporary OAuth verifier code for an access token.",
                        "method": "get",
                        "endpoint": "oauth.access",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Successful user token negotiation for a single scope",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Exchanges a temporary OAuth verifier code for a workspace token.",
                        "method": "get",
                        "endpoint": "oauth.token",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Success example using a workspace app produces a very different kind of response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Exchanges a temporary OAuth verifier code for an access token.",
                        "method": "get",
                        "endpoint": "oauth.v2.access",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Successful token request with scopes for both a bot user and a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Pins an item to a channel.",
                        "method": "post",
                        "endpoint": "pins.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'channel_not_found' 'no_item_specified' 'already_pinned' 'permission_denied' 'file_not_shared' 'not_pinnable' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists items pinned to a channel.",
                        "method": "get",
                        "endpoint": "pins.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "\"\"",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'channel_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Un-pins an item from a channel.",
                        "method": "post",
                        "endpoint": "pins.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'not_pinned' 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_typ' 'missing_post_typ' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeou' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds a reaction to an item.",
                        "method": "post",
                        "endpoint": "reactions.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'no_item_specified' 'invalid_name' 'already_reacted' 'too_many_emoji' 'too_many_reactions' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets reactions for an item.",
                        "method": "get",
                        "endpoint": "reactions.get",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists reactions made by a user.",
                        "method": "get",
                        "endpoint": "reactions.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"items\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  },\n  \"response_metadata\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_not_found' 'not_authed' 'invalid_auth' 'account_inactiv' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Removes a reaction from an item.",
                        "method": "post",
                        "endpoint": "reactions.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'file_not_found' 'file_comment_not_found' 'message_not_found' 'no_item_specified' 'invalid_name' 'no_reaction' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Creates a reminder.",
                        "method": "post",
                        "endpoint": "reminders.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"reminder\": {\n    \"complete_ts\": {{faker 'random.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"recurring\": {{faker 'random.boolean'}},\n    \"text\": \"\",\n    \"time\": {{faker 'random.number'}},\n    \"user\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'cannot_parse' 'user_not_found' 'cannot_add_bot' 'cannot_add_slackbot' 'cannot_add_others' 'cannot_add_others_recurring' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Marks a reminder as complete.",
                        "method": "post",
                        "endpoint": "reminders.complete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_found' 'cannot_complete_recurring' 'cannot_complete_others' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes a reminder.",
                        "method": "post",
                        "endpoint": "reminders.delete",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets information about a reminder.",
                        "method": "get",
                        "endpoint": "reminders.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"reminder\": {\n    \"complete_ts\": {{faker 'random.number'}},\n    \"creator\": \"\",\n    \"id\": \"\",\n    \"recurring\": {{faker 'random.boolean'}},\n    \"text\": \"\",\n    \"time\": {{faker 'random.number'}},\n    \"user\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists all reminders created by or for a given user.",
                        "method": "get",
                        "endpoint": "reminders.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"reminders\": [\n    {\n      \"complete_ts\": {{faker 'random.number'}},\n      \"creator\": \"\",\n      \"id\": \"\",\n      \"recurring\": {{faker 'random.boolean'}},\n      \"text\": \"\",\n      \"time\": {{faker 'random.number'}},\n      \"user\": \"\"\n    }\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Starts a Real Time Messaging session.",
                        "method": "get",
                        "endpoint": "rtm.connect",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"self\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"team\": {\n    \"domain\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Searches for messages matching a query.",
                        "method": "get",
                        "endpoint": "search.messages",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds a star to an item.",
                        "method": "post",
                        "endpoint": "stars.add",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'file_not_found' 'file_comment_not_found' 'channel_not_found' 'no_item_specified' 'already_starred' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists stars for a user.",
                        "method": "get",
                        "endpoint": "stars.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"items\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Removes a star from an item.",
                        "method": "post",
                        "endpoint": "stars.remove",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'bad_timestamp' 'message_not_found' 'file_not_found' 'file_comment_not_found' 'channel_not_found' 'no_item_specified' 'not_starred' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets the access logs for the current team.",
                        "method": "get",
                        "endpoint": "team.accessLogs",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"logins\": [\n    {\n      \"count\": {{faker 'random.number'}},\n      \"country\": \"\",\n      \"date_first\": {{faker 'random.number'}},\n      \"date_last\": {{faker 'random.number'}},\n      \"ip\": \"\",\n      \"isp\": \"\",\n      \"region\": \"\",\n      \"user_agent\": \"\",\n      \"user_id\": \"\",\n      \"username\": \"\"\n    }\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "This response demonstrates pagination and two access log entries.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'paid_only' 'over_pagination_limit' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A workspace must be on a paid plan to use this method, otherwise the `paid_only` error is thrown:",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets billable users information for the current team.",
                        "method": "get",
                        "endpoint": "team.billableInfo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets information about the current team.",
                        "method": "get",
                        "endpoint": "team.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"team\": {\n    \"archived\": {{faker 'random.boolean'}},\n    \"avatar_base_url\": \"\",\n    \"created\": {{faker 'random.number'}},\n    \"date_create\": {{faker 'random.number'}},\n    \"deleted\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"discoverable\": \"\",\n    \"domain\": \"\",\n    \"email_domain\": \"\",\n    \"enterprise_id\": \"\",\n    \"enterprise_name\": \"\",\n    \"external_org_migrations\": {\n      \"current\": [\n        {\n          \"date_started\": {{faker 'random.number'}},\n          \"team_id\": \"\"\n        }\n      ],\n      \"date_updated\": {{faker 'random.number'}}\n    },\n    \"has_compliance_export\": {{faker 'random.boolean'}},\n    \"icon\": {\n      \"image_102\": \"\",\n      \"image_132\": \"\",\n      \"image_230\": \"\",\n      \"image_34\": \"\",\n      \"image_44\": \"\",\n      \"image_68\": \"\",\n      \"image_88\": \"\",\n      \"image_default\": {{faker 'random.boolean'}}\n    },\n    \"id\": \"\",\n    \"is_assigned\": {{faker 'random.boolean'}},\n    \"is_enterprise\": {{faker 'random.number'}},\n    \"is_over_storage_limit\": {{faker 'random.boolean'}},\n    \"limit_ts\": {{faker 'random.number'}},\n    \"locale\": \"\",\n    \"messages_count\": {{faker 'random.number'}},\n    \"msg_edit_window_mins\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"over_integrations_limit\": {{faker 'random.boolean'}},\n    \"over_storage_limit\": {{faker 'random.boolean'}},\n    \"pay_prod_cur\": \"\",\n    \"plan\": \"{{oneOf (array '' 'std' 'plus' 'compliance' 'enterprise')}}\",\n    \"primary_owner\": {\n      \"email\": \"\",\n      \"id\": \"\"\n    },\n    \"sso_provider\": {\n      \"label\": \"\",\n      \"name\": \"\",\n      \"type\": \"\"\n    }\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets the integration logs for the current team.",
                        "method": "get",
                        "endpoint": "team.integrationLogs",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"logs\": [\n    {\n      \"admin_app_id\": \"\",\n      \"app_id\": \"\",\n      \"app_type\": \"\",\n      \"change_type\": \"\",\n      \"channel\": \"\",\n      \"date\": \"\",\n      \"scope\": \"\",\n      \"service_id\": \"\",\n      \"service_type\": \"\",\n      \"user_id\": \"\",\n      \"user_name\": \"\"\n    }\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"paging\": {\n    \"count\": {{faker 'random.number'}},\n    \"page\": {{faker 'random.number'}},\n    \"pages\": {{faker 'random.number'}},\n    \"per_page\": {{faker 'random.number'}},\n    \"spill\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}}\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieve a team's profile.",
                        "method": "get",
                        "endpoint": "team.profile.get",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"profile\": {\n    \"fields\": [\n      {\n        \"field_name\": \"\",\n        \"hint\": \"\",\n        \"id\": \"\",\n        \"is_hidden\": {{faker 'random.boolean'}},\n        \"label\": \"\",\n        \"options\": \"\",\n        \"ordering\": {{faker 'random.number'}},\n        \"possible_values\": [\n          \"\"\n        ],\n        \"type\": \"{{oneOf (array 'text' 'date' 'link' 'mailto' 'options_list' 'user')}}\"\n      }\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_typ' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeou' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a User Group",
                        "method": "post",
                        "endpoint": "usergroups.create",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'random.boolean'}},\n    \"auto_type\": \"\",\n    \"channel_count\": {{faker 'random.number'}},\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"date_update\": {{faker 'random.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_subteam\": {{faker 'random.boolean'}},\n    \"is_usergroup\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'random.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Disable an existing User Group",
                        "method": "post",
                        "endpoint": "usergroups.disable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'random.boolean'}},\n    \"auto_type\": \"\",\n    \"channel_count\": {{faker 'random.number'}},\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"date_update\": {{faker 'random.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_subteam\": {{faker 'random.boolean'}},\n    \"is_usergroup\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'random.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enable a User Group",
                        "method": "post",
                        "endpoint": "usergroups.enable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'random.boolean'}},\n    \"auto_type\": \"\",\n    \"channel_count\": {{faker 'random.number'}},\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"date_update\": {{faker 'random.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_subteam\": {{faker 'random.boolean'}},\n    \"is_usergroup\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'random.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all User Groups for a team",
                        "method": "get",
                        "endpoint": "usergroups.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroups\": [\n    {\n      \"auto_provision\": {{faker 'random.boolean'}},\n      \"auto_type\": \"\",\n      \"channel_count\": {{faker 'random.number'}},\n      \"created_by\": \"\",\n      \"date_create\": {{faker 'random.number'}},\n      \"date_delete\": {{faker 'random.number'}},\n      \"date_update\": {{faker 'random.number'}},\n      \"deleted_by\": \"\",\n      \"description\": \"\",\n      \"enterprise_subteam_id\": \"\",\n      \"handle\": \"\",\n      \"id\": \"\",\n      \"is_external\": {{faker 'random.boolean'}},\n      \"is_subteam\": {{faker 'random.boolean'}},\n      \"is_usergroup\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"prefs\": {\n        \"channels\": [\n          \"\"\n        ],\n        \"groups\": [\n          \"\"\n        ]\n      },\n      \"team_id\": \"\",\n      \"updated_by\": \"\",\n      \"user_count\": {{faker 'random.number'}},\n      \"users\": [\n        \"\"\n      ]\n    }\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing User Group",
                        "method": "post",
                        "endpoint": "usergroups.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'random.boolean'}},\n    \"auto_type\": \"\",\n    \"channel_count\": {{faker 'random.number'}},\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"date_update\": {{faker 'random.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_subteam\": {{faker 'random.boolean'}},\n    \"is_usergroup\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'random.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all users in a User Group",
                        "method": "get",
                        "endpoint": "usergroups.users.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"users\": [\n    \"\"\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard success response when used with a user token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Standard failure response when used with an invalid token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update the list of users for a User Group",
                        "method": "post",
                        "endpoint": "usergroups.users.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"usergroup\": {\n    \"auto_provision\": {{faker 'random.boolean'}},\n    \"auto_type\": \"\",\n    \"channel_count\": {{faker 'random.number'}},\n    \"created_by\": \"\",\n    \"date_create\": {{faker 'random.number'}},\n    \"date_delete\": {{faker 'random.number'}},\n    \"date_update\": {{faker 'random.number'}},\n    \"deleted_by\": \"\",\n    \"description\": \"\",\n    \"enterprise_subteam_id\": \"\",\n    \"handle\": \"\",\n    \"id\": \"\",\n    \"is_external\": {{faker 'random.boolean'}},\n    \"is_subteam\": {{faker 'random.boolean'}},\n    \"is_usergroup\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"prefs\": {\n      \"channels\": [\n        \"\"\n      ],\n      \"groups\": [\n        \"\"\n      ]\n    },\n    \"team_id\": \"\",\n    \"updated_by\": \"\",\n    \"user_count\": {{faker 'random.number'}},\n    \"users\": [\n      \"\"\n    ]\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'permission_denied' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'user_is_restricted' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_require' 'fatal_error' 'missing_charset' 'superfluous_charset')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List conversations the calling user may access.",
                        "method": "get",
                        "endpoint": "users.conversations",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"channels\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": {\n    \"next_cursor\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response with only public channels. Note how `num_members` and `is_member` are not returned like typical `conversations` objects.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'method_not_supported_for_channel_type' 'missing_scope' 'invalid_types' 'invalid_cursor' 'invalid_limit' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete the user profile photo",
                        "method": "post",
                        "endpoint": "users.deletePhoto",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets user presence information.",
                        "method": "get",
                        "endpoint": "users.getPresence",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"auto_away\": {{faker 'random.boolean'}},\n  \"connection_count\": {{faker 'random.number'}},\n  \"last_activity\": {{faker 'random.number'}},\n  \"manual_away\": {{faker 'random.boolean'}},\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"online\": {{faker 'random.boolean'}},\n  \"presence\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "When requesting information for a different user, this method just returns the current presence (either `active` or `away`).",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a user's identity.",
                        "method": "get",
                        "endpoint": "users.identity",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "\"\"",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "You will receive at a minimum the following information:",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets information about a user.",
                        "method": "get",
                        "endpoint": "users.info",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"user\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_not_found' 'user_not_visible' 'not_authed' 'invalid_auth' 'account_inactive' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists all users in a Slack team.",
                        "method": "get",
                        "endpoint": "users.list",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"cache_ts\": {{faker 'random.number'}},\n  \"members\": [\n    \"\"\n  ],\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"response_metadata\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'limit_required' 'invalid_cursor' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Find a user with an email address.",
                        "method": "get",
                        "endpoint": "users.lookupByEmail",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"user\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'users_not_found' 'enterprise_is_restricted' 'not_authed' 'invalid_auth' 'account_inactive' 'no_permission' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retrieves a user's profile information.",
                        "method": "get",
                        "endpoint": "users.profile.get",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"profile\": {\n    \"always_active\": {{faker 'random.boolean'}},\n    \"api_app_id\": \"\",\n    \"avatar_hash\": \"\",\n    \"bot_id\": \"\",\n    \"display_name\": \"\",\n    \"display_name_normalized\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"fields\": {},\n    \"first_name\": \"\",\n    \"guest_expiration_ts\": {{faker 'random.number'}},\n    \"guest_invited_by\": \"\",\n    \"image_1024\": \"\",\n    \"image_192\": \"\",\n    \"image_24\": \"\",\n    \"image_32\": \"\",\n    \"image_48\": \"\",\n    \"image_512\": \"\",\n    \"image_72\": \"\",\n    \"image_original\": \"\",\n    \"is_app_user\": {{faker 'random.boolean'}},\n    \"is_custom_image\": {{faker 'random.boolean'}},\n    \"is_restricted\": {{faker 'random.boolean'}},\n    \"is_ultra_restricted\": {{faker 'random.boolean'}},\n    \"last_avatar_image_hash\": \"\",\n    \"last_name\": \"\",\n    \"memberships_count\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"pronouns\": \"\",\n    \"real_name\": \"\",\n    \"real_name_normalized\": \"\",\n    \"skype\": \"\",\n    \"status_default_emoji\": \"\",\n    \"status_default_text\": \"\",\n    \"status_default_text_canonical\": \"\",\n    \"status_emoji\": \"\",\n    \"status_expiration\": {{faker 'random.number'}},\n    \"status_text\": \"\",\n    \"status_text_canonical\": \"\",\n    \"team\": \"\",\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"user_id\": \"\",\n    \"username\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'user_not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the profile information for a user.",
                        "method": "post",
                        "endpoint": "users.profile.set",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email_pending\": \"{{faker 'internet.email'}}\",\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"profile\": {\n    \"always_active\": {{faker 'random.boolean'}},\n    \"api_app_id\": \"\",\n    \"avatar_hash\": \"\",\n    \"bot_id\": \"\",\n    \"display_name\": \"\",\n    \"display_name_normalized\": \"\",\n    \"email\": \"{{faker 'internet.email'}}\",\n    \"fields\": {},\n    \"first_name\": \"\",\n    \"guest_expiration_ts\": {{faker 'random.number'}},\n    \"guest_invited_by\": \"\",\n    \"image_1024\": \"\",\n    \"image_192\": \"\",\n    \"image_24\": \"\",\n    \"image_32\": \"\",\n    \"image_48\": \"\",\n    \"image_512\": \"\",\n    \"image_72\": \"\",\n    \"image_original\": \"\",\n    \"is_app_user\": {{faker 'random.boolean'}},\n    \"is_custom_image\": {{faker 'random.boolean'}},\n    \"is_restricted\": {{faker 'random.boolean'}},\n    \"is_ultra_restricted\": {{faker 'random.boolean'}},\n    \"last_avatar_image_hash\": \"\",\n    \"last_name\": \"\",\n    \"memberships_count\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"pronouns\": \"\",\n    \"real_name\": \"\",\n    \"real_name_normalized\": \"\",\n    \"skype\": \"\",\n    \"status_default_emoji\": \"\",\n    \"status_default_text\": \"\",\n    \"status_default_text_canonical\": \"\",\n    \"status_emoji\": \"\",\n    \"status_expiration\": {{faker 'random.number'}},\n    \"status_text\": \"\",\n    \"status_text_canonical\": \"\",\n    \"team\": \"\",\n    \"title\": \"\",\n    \"updated\": {{faker 'random.number'}},\n    \"user_id\": \"\",\n    \"username\": \"\"\n  },\n  \"username\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'reserved_name' 'invalid_profile' 'profile_set_failed' 'not_admin' 'not_app_admin' 'cannot_update_admin_user' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Marked a user as active. Deprecated and non-functional.",
                        "method": "post",
                        "endpoint": "users.setActive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'ekm_access_denied' 'missing_scope' 'invalid_arguments' 'invalid_arg_name' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'request_timeout' 'fatal_error' 'internal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set the user profile photo",
                        "method": "post",
                        "endpoint": "users.setPhoto",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\",\n  \"profile\": {\n    \"avatar_hash\": \"\",\n    \"image_1024\": \"\",\n    \"image_192\": \"\",\n    \"image_24\": \"\",\n    \"image_32\": \"\",\n    \"image_48\": \"\",\n    \"image_512\": \"\",\n    \"image_72\": \"\",\n    \"image_original\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"debug_step\": \"\",\n  \"dims\": \"\",\n  \"error\": \"{{oneOf (array 'bad_image' 'too_large' 'too_many_frames' 'not_found' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'user_is_bot' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\",\n  \"time_ident\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Manually sets user presence.",
                        "method": "post",
                        "endpoint": "users.setPresence",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"callstack\": \"\",\n  \"error\": \"{{oneOf (array 'invalid_presence' 'not_authed' 'invalid_auth' 'account_inactive' 'token_revoked' 'no_permission' 'org_login_required' 'invalid_arg_name' 'invalid_array_arg' 'invalid_charset' 'invalid_form_data' 'invalid_post_type' 'missing_post_type' 'team_added_to_org' 'invalid_json' 'json_not_object' 'request_timeout' 'upgrade_required' 'fatal_error')}}\",\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Open a view for a user.",
                        "method": "get",
                        "endpoint": "views.open",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response includes the opened view payload.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response, before getting to any possible validation errors.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Publish a static view for a User.",
                        "method": "get",
                        "endpoint": "views.publish",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response includes the published view payload.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response, before getting to any possible validation errors.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Push a view onto the stack of a root view.",
                        "method": "get",
                        "endpoint": "views.push",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response includes the pushed view payload.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing view.",
                        "method": "get",
                        "endpoint": "views.update",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response includes the updated view payload.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Indicate that an app's step in a workflow completed execution.",
                        "method": "get",
                        "endpoint": "workflows.stepCompleted",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Indicate that an app's step in a workflow failed to execute.",
                        "method": "get",
                        "endpoint": "workflows.stepFailed",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update the configuration for a workflow extension step.",
                        "method": "get",
                        "endpoint": "workflows.updateStep",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'true')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical success response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"ok\": \"{{oneOf (array 'false')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Typical error response",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "proxyRemovePrefix": false,
                "https": false,
                "cors": true,
                "headers": [],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        }
    ]
}
