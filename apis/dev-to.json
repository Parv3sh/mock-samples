{
    "source": "mockoon:1.15.0",
    "data": [
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 17,
                "name": "Dev.to API",
                "endpointPrefix": "api",
                "latency": 0,
                "port": 3000,
                "hostname": "0.0.0.0",
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Published articles",
                        "method": "get",
                        "endpoint": "articles",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"edited_at\": \"{{faker 'date.recent' 365}}\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"readable_publish_date\": \"\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"social_image\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"tags\": \"\",\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new article",
                        "method": "post",
                        "endpoint": "articles",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_html\": \"\",\n  \"body_markdown\": \"\",\n  \"canonical_url\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"cover_image\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"edited_at\": \"{{faker 'date.recent' 365}}\",\n  \"flare_tag\": {\n    \"bg_color_hex\": \"\",\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"path\": \"\",\n  \"positive_reactions_count\": {{faker 'random.number'}},\n  \"public_reactions_count\": {{faker 'random.number'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n  \"readable_publish_date\": \"\",\n  \"reading_time_minutes\": {{faker 'random.number'}},\n  \"slug\": \"\",\n  \"social_image\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "A newly created article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Location",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 400,
                                "label": "BadRequest",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 403,
                                "label": "Forbidden",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 422,
                                "label": "Unprocessable Entity",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 429,
                                "label": "Too Many Requests",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Retry-After",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Published articles sorted by publish date",
                        "method": "get",
                        "endpoint": "articles/latest",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"edited_at\": \"{{faker 'date.recent' 365}}\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"readable_publish_date\": \"\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"social_image\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"tags\": \"\",\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of articles sorted by descending publish date",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User's articles",
                        "method": "get",
                        "endpoint": "articles/me",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"description\": \"\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"page_views_count\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of published articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User's all articles",
                        "method": "get",
                        "endpoint": "articles/me/all",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"description\": \"\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"page_views_count\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User's published articles",
                        "method": "get",
                        "endpoint": "articles/me/published",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"description\": \"\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"page_views_count\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of published articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User's unpublished articles",
                        "method": "get",
                        "endpoint": "articles/me/unpublished",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"description\": \"\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"page_views_count\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published\": {{faker 'random.boolean'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A published article by ID",
                        "method": "get",
                        "endpoint": "articles/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_html\": \"\",\n  \"body_markdown\": \"\",\n  \"canonical_url\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"cover_image\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"edited_at\": \"{{faker 'date.recent' 365}}\",\n  \"flare_tag\": {\n    \"bg_color_hex\": \"\",\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"path\": \"\",\n  \"positive_reactions_count\": {{faker 'random.number'}},\n  \"public_reactions_count\": {{faker 'random.number'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n  \"readable_publish_date\": \"\",\n  \"reading_time_minutes\": {{faker 'random.number'}},\n  \"slug\": \"\",\n  \"social_image\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "An article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an article",
                        "method": "put",
                        "endpoint": "articles/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_html\": \"\",\n  \"body_markdown\": \"\",\n  \"canonical_url\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"cover_image\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"edited_at\": \"{{faker 'date.recent' 365}}\",\n  \"flare_tag\": {\n    \"bg_color_hex\": \"\",\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"path\": \"\",\n  \"positive_reactions_count\": {{faker 'random.number'}},\n  \"public_reactions_count\": {{faker 'random.number'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n  \"readable_publish_date\": \"\",\n  \"reading_time_minutes\": {{faker 'random.number'}},\n  \"slug\": \"\",\n  \"social_image\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "The updated article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 400,
                                "label": "BadRequest",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 403,
                                "label": "Forbidden",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 422,
                                "label": "Unprocessable Entity",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 429,
                                "label": "Too Many Requests",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Retry-After",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A published article by path",
                        "method": "get",
                        "endpoint": "articles/:username/:slug",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_html\": \"\",\n  \"body_markdown\": \"\",\n  \"canonical_url\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"cover_image\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"edited_at\": \"{{faker 'date.recent' 365}}\",\n  \"flare_tag\": {\n    \"bg_color_hex\": \"\",\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"path\": \"\",\n  \"positive_reactions_count\": {{faker 'random.number'}},\n  \"public_reactions_count\": {{faker 'random.number'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n  \"readable_publish_date\": \"\",\n  \"reading_time_minutes\": {{faker 'random.number'}},\n  \"slug\": \"\",\n  \"social_image\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "An article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Comments",
                        "method": "get",
                        "endpoint": "comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  \"\"\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of threads of comments",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Comment",
                        "method": "get",
                        "endpoint": "comments/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "\"\"",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A comment and its descendants",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Followers",
                        "method": "get",
                        "endpoint": "followers/users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"path\": \"\",\n    \"profile_image\": \"\",\n    \"type_of\": \"\",\n    \"username\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of followers",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Followed tags",
                        "method": "get",
                        "endpoint": "follows/tags",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"points\": {{faker 'random.float'}}\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of followed tags",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Published listings",
                        "method": "get",
                        "endpoint": "listings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"category\": \"{{oneOf (array 'cfp' 'forhire' 'collabs' 'education' 'jobs' 'mentors' 'products' 'mentees' 'forsale' 'events' 'misc')}}\",\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"processed_html\": \"\",\n    \"published\": {{faker 'random.boolean'}},\n    \"slug\": \"\",\n    \"tag_list\": \"\",\n    \"tags\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of listings",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new listing",
                        "method": "post",
                        "endpoint": "listings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_markdown\": \"\",\n  \"category\": \"{{oneOf (array 'cfp' 'forhire' 'collabs' 'education' 'jobs' 'mentors' 'products' 'mentees' 'forsale' 'events' 'misc')}}\",\n  \"id\": {{faker 'random.number'}},\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"processed_html\": \"\",\n  \"published\": {{faker 'random.boolean'}},\n  \"slug\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "A newly created Listing",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 400,
                                "label": "BadRequest",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 402,
                                "label": "PaymentRequired",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 422,
                                "label": "Unprocessable Entity",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Published listings by category",
                        "method": "get",
                        "endpoint": "listings/category/:category",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"category\": \"{{oneOf (array 'cfp' 'forhire' 'collabs' 'education' 'jobs' 'mentors' 'products' 'mentees' 'forsale' 'events' 'misc')}}\",\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"processed_html\": \"\",\n    \"published\": {{faker 'random.boolean'}},\n    \"slug\": \"\",\n    \"tag_list\": \"\",\n    \"tags\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of listings",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A listing",
                        "method": "get",
                        "endpoint": "listings/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_markdown\": \"\",\n  \"category\": \"{{oneOf (array 'cfp' 'forhire' 'collabs' 'education' 'jobs' 'mentors' 'products' 'mentees' 'forsale' 'events' 'misc')}}\",\n  \"id\": {{faker 'random.number'}},\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"processed_html\": \"\",\n  \"published\": {{faker 'random.boolean'}},\n  \"slug\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A listing",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a listing",
                        "method": "put",
                        "endpoint": "listings/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body_html\": \"\",\n  \"body_markdown\": \"\",\n  \"canonical_url\": \"\",\n  \"comments_count\": {{faker 'random.number'}},\n  \"cover_image\": \"\",\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"edited_at\": \"{{faker 'date.recent' 365}}\",\n  \"flare_tag\": {\n    \"bg_color_hex\": \"\",\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n  \"organization\": {\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"slug\": \"\",\n    \"username\": \"\"\n  },\n  \"path\": \"\",\n  \"positive_reactions_count\": {{faker 'random.number'}},\n  \"public_reactions_count\": {{faker 'random.number'}},\n  \"published_at\": \"{{faker 'date.recent' 365}}\",\n  \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n  \"readable_publish_date\": \"\",\n  \"reading_time_minutes\": {{faker 'random.number'}},\n  \"slug\": \"\",\n  \"social_image\": \"\",\n  \"tag_list\": \"\",\n  \"tags\": [\n    \"\"\n  ],\n  \"title\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "The updated article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 400,
                                "label": "BadRequest",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 402,
                                "label": "PaymentRequired",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 422,
                                "label": "Unprocessable Entity",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "An organization",
                        "method": "get",
                        "endpoint": "organizations/:username",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"github_username\": \"\",\n  \"joined_at\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"profile_image\": \"\",\n  \"story\": \"\",\n  \"summary\": \"\",\n  \"tag_line\": \"\",\n  \"tech_stack\": \"\",\n  \"twitter_username\": \"\",\n  \"type_of\": \"\",\n  \"url\": \"\",\n  \"username\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "An organization",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Organization's Articles",
                        "method": "get",
                        "endpoint": "organizations/:username/articles",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"canonical_url\": \"\",\n    \"comments_count\": {{faker 'random.number'}},\n    \"cover_image\": \"\",\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"edited_at\": \"{{faker 'date.recent' 365}}\",\n    \"flare_tag\": {\n      \"bg_color_hex\": \"\",\n      \"name\": \"\",\n      \"text_color_hex\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"path\": \"\",\n    \"positive_reactions_count\": {{faker 'random.number'}},\n    \"public_reactions_count\": {{faker 'random.number'}},\n    \"published_at\": \"{{faker 'date.recent' 365}}\",\n    \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n    \"readable_publish_date\": \"\",\n    \"reading_time_minutes\": {{faker 'random.number'}},\n    \"slug\": \"\",\n    \"social_image\": \"\",\n    \"tag_list\": [\n      \"\"\n    ],\n    \"tags\": \"\",\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"url\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of users belonging to the organization",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Organization's listings",
                        "method": "get",
                        "endpoint": "organizations/:username/listings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body_markdown\": \"\",\n    \"category\": \"{{oneOf (array 'cfp' 'forhire' 'collabs' 'education' 'jobs' 'mentors' 'products' 'mentees' 'forsale' 'events' 'misc')}}\",\n    \"id\": {{faker 'random.number'}},\n    \"organization\": {\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"slug\": \"\",\n      \"username\": \"\"\n    },\n    \"processed_html\": \"\",\n    \"published\": {{faker 'random.boolean'}},\n    \"slug\": \"\",\n    \"tag_list\": \"\",\n    \"tags\": [\n      \"\"\n    ],\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"user\": {\n      \"github_username\": \"\",\n      \"name\": \"\",\n      \"profile_image\": \"\",\n      \"profile_image_90\": \"\",\n      \"twitter_username\": \"\",\n      \"username\": \"\",\n      \"website_url\": \"\"\n    }\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of listings belonging to the organization",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Organization's users",
                        "method": "get",
                        "endpoint": "organizations/:username/users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"github_username\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"joined_at\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"summary\": \"\",\n    \"twitter_username\": \"\",\n    \"type_of\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of users belonging to the organization",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Published podcast episodes",
                        "method": "get",
                        "endpoint": "podcast_episodes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"image_url\": \"\",\n    \"path\": \"\",\n    \"podcast\": {\n      \"image_url\": \"\",\n      \"slug\": \"\",\n      \"title\": \"\"\n    },\n    \"title\": \"\",\n    \"type_of\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of podcast episodes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User or organization profile picture",
                        "method": "get",
                        "endpoint": "profile_images/:username",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"image_of\": \"{{oneOf (array 'user' 'organization')}}\",\n  \"profile_image\": \"\",\n  \"profile_image_90\": \"\",\n  \"type_of\": \"{{oneOf (array 'profile_image')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "The profile image",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "User's reading list",
                        "method": "get",
                        "endpoint": "readinglist",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"article\": {\n      \"canonical_url\": \"\",\n      \"comments_count\": {{faker 'random.number'}},\n      \"cover_image\": \"\",\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"crossposted_at\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"edited_at\": \"{{faker 'date.recent' 365}}\",\n      \"flare_tag\": {\n        \"bg_color_hex\": \"\",\n        \"name\": \"\",\n        \"text_color_hex\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"last_comment_at\": \"{{faker 'date.recent' 365}}\",\n      \"organization\": {\n        \"name\": \"\",\n        \"profile_image\": \"\",\n        \"profile_image_90\": \"\",\n        \"slug\": \"\",\n        \"username\": \"\"\n      },\n      \"path\": \"\",\n      \"positive_reactions_count\": {{faker 'random.number'}},\n      \"public_reactions_count\": {{faker 'random.number'}},\n      \"published_at\": \"{{faker 'date.recent' 365}}\",\n      \"published_timestamp\": \"{{faker 'date.recent' 365}}\",\n      \"readable_publish_date\": \"\",\n      \"reading_time_minutes\": {{faker 'random.number'}},\n      \"slug\": \"\",\n      \"social_image\": \"\",\n      \"tag_list\": [\n        \"\"\n      ],\n      \"tags\": \"\",\n      \"title\": \"\",\n      \"type_of\": \"\",\n      \"url\": \"\",\n      \"user\": {\n        \"github_username\": \"\",\n        \"name\": \"\",\n        \"profile_image\": \"\",\n        \"profile_image_90\": \"\",\n        \"twitter_username\": \"\",\n        \"username\": \"\",\n        \"website_url\": \"\"\n      }\n    },\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"id\": {{faker 'random.number'}},\n    \"status\": \"{{oneOf (array 'valid' 'invalid' 'confirmed' 'archived')}}\",\n    \"type_of\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "The reading list with a overwiew of the article",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Tags",
                        "method": "get",
                        "endpoint": "tags",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"bg_color_hex\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"text_color_hex\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of tags",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "The authenticated user",
                        "method": "get",
                        "endpoint": "users/me",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"github_username\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"joined_at\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"profile_image\": \"\",\n  \"summary\": \"\",\n  \"twitter_username\": \"\",\n  \"type_of\": \"\",\n  \"username\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A user",
                        "method": "get",
                        "endpoint": "users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"github_username\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"joined_at\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"profile_image\": \"\",\n  \"summary\": \"\",\n  \"twitter_username\": \"\",\n  \"type_of\": \"\",\n  \"username\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Articles with a video",
                        "method": "get",
                        "endpoint": "videos",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"cloudinary_video_url\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"title\": \"\",\n    \"type_of\": \"\",\n    \"user\": {\n      \"name\": \"\"\n    },\n    \"user_id\": {{faker 'random.number'}},\n    \"video_duration_in_minutes\": \"\",\n    \"video_source_url\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of video articles",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Webhooks",
                        "method": "get",
                        "endpoint": "webhooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"events\": [\n      \"\"\n    ],\n    \"id\": {{faker 'random.number'}},\n    \"source\": \"\",\n    \"target_url\": \"\",\n    \"type_of\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A list of webhooks",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new webhook",
                        "method": "post",
                        "endpoint": "webhooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"source\": \"\",\n  \"target_url\": \"\",\n  \"type_of\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "A newly created webhook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 400,
                                "label": "BadRequest",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 422,
                                "label": "Unprocessable Entity",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A webhook endpoint",
                        "method": "delete",
                        "endpoint": "webhooks/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "A successful deletion",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "A webhook endpoint",
                        "method": "get",
                        "endpoint": "webhooks/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"events\": [\n    \"\"\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"source\": \"\",\n  \"target_url\": \"\",\n  \"type_of\": \"\",\n  \"user\": {\n    \"github_username\": \"\",\n    \"name\": \"\",\n    \"profile_image\": \"\",\n    \"profile_image_90\": \"\",\n    \"twitter_username\": \"\",\n    \"username\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "A webhook endpoint",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 401,
                                "label": "Unauthorized",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "{\n  \"error\": \"\",\n  \"status\": {{faker 'random.number'}}\n}",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Resource not found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "proxyRemovePrefix": false,
                "https": false,
                "cors": true,
                "headers": [],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        }
    ]
}
