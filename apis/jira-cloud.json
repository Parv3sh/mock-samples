{
  "source": "mockoon:1.15.0",
  "data": [
      {
          "type": "environment",
          "item": {
              "uuid": "",
              "lastMigration": 17,
              "name": "The Jira Cloud platform REST API",
              "endpointPrefix": "",
              "latency": 0,
              "port": 3007,
              "hostname": "0.0.0.0",
              "routes": [
                  {
                      "uuid": "",
                      "documentation": "Get custom field configurations",
                      "method": "get",
                      "endpoint": "rest/api/3/app/field/:fieldIdOrKey/context/configuration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"configuration\": \"\",\n      \"contextId\": {{faker 'random.number'}},\n      \"schema\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not a Jira admin or the request is not authenticated as from the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update custom field configurations",
                      "method": "put",
                      "endpoint": "rest/api/3/app/field/:fieldIdOrKey/context/configuration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not a Jira admin or the request is not authenticated as from the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update custom field value",
                      "method": "put",
                      "endpoint": "rest/api/3/app/field/:fieldIdOrKey/value",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get application property",
                      "method": "get",
                      "endpoint": "rest/api/3/application-properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"allowedValues\": [\n      \"\"\n    ],\n    \"defaultValue\": \"\",\n    \"desc\": \"\",\n    \"example\": \"\",\n    \"id\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"value\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the application property is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get advanced settings",
                      "method": "get",
                      "endpoint": "rest/api/3/application-properties/advanced-settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"allowedValues\": [\n      \"\"\n    ],\n    \"defaultValue\": \"\",\n    \"desc\": \"\",\n    \"example\": \"\",\n    \"id\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"type\": \"\",\n    \"value\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not an administrator.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set application property",
                      "method": "put",
                      "endpoint": "rest/api/3/application-properties/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"allowedValues\": [\n    \"\"\n  ],\n  \"defaultValue\": \"\",\n  \"desc\": \"\",\n  \"example\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"type\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the data type of the `value` does not match the application property's data type. For example, a string is provided instead of an integer.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to edit the property.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the property is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all application roles",
                      "method": "get",
                      "endpoint": "rest/api/3/applicationrole",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"defaultGroups\": [\n      \"\"\n    ],\n    \"defined\": {{faker 'random.boolean'}},\n    \"groups\": [\n      \"\"\n    ],\n    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n    \"key\": \"\",\n    \"name\": \"\",\n    \"numberOfSeats\": {{faker 'random.number'}},\n    \"platform\": {{faker 'random.boolean'}},\n    \"remainingSeats\": {{faker 'random.number'}},\n    \"selectedByDefault\": {{faker 'random.boolean'}},\n    \"userCount\": {{faker 'random.number'}},\n    \"userCountDescription\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not an administrator.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get application role",
                      "method": "get",
                      "endpoint": "rest/api/3/applicationrole/:key",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultGroups\": [\n    \"\"\n  ],\n  \"defined\": {{faker 'random.boolean'}},\n  \"groups\": [\n    \"\"\n  ],\n  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n  \"key\": \"\",\n  \"name\": \"\",\n  \"numberOfSeats\": {{faker 'random.number'}},\n  \"platform\": {{faker 'random.boolean'}},\n  \"remainingSeats\": {{faker 'random.number'}},\n  \"selectedByDefault\": {{faker 'random.boolean'}},\n  \"userCount\": {{faker 'random.number'}},\n  \"userCountDescription\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not an administrator.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Jira attachment settings",
                      "method": "get",
                      "endpoint": "rest/api/3/attachment/meta",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"enabled\": {{faker 'random.boolean'}},\n  \"uploadLimit\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete attachment",
                      "method": "delete",
                      "endpoint": "rest/api/3/attachment/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get attachment metadata",
                      "method": "get",
                      "endpoint": "rest/api/3/attachment/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"content\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"filename\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"mimeType\": \"\",\n  \"properties\": {},\n  \"self\": \"\",\n  \"size\": {{faker 'random.number'}},\n  \"thumbnail\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all metadata for an expanded attachment",
                      "method": "get",
                      "endpoint": "rest/api/3/attachment/:id/expand/human",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"entries\": [\n    {\n      \"index\": {{faker 'random.number'}},\n      \"label\": \"\",\n      \"mediaType\": \"\",\n      \"path\": \"\",\n      \"size\": \"\"\n    }\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"mediaType\": \"\",\n  \"name\": \"\",\n  \"totalEntryCount\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "The user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the attachment is an archive, but not a supported archive format.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get contents metadata for an expanded attachment",
                      "method": "get",
                      "endpoint": "rest/api/3/attachment/:id/expand/raw",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"entries\": [\n    {\n      \"abbreviatedName\": \"\",\n      \"entryIndex\": {{faker 'random.number'}},\n      \"mediaType\": \"\",\n      \"name\": \"\",\n      \"size\": {{faker 'random.number'}}\n    }\n  ],\n  \"totalEntryCount\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "The user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the attachment is not found.\n *  attachments are disabled in the Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the attachment is an archive, but not a supported archive format.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get audit records",
                      "method": "get",
                      "endpoint": "rest/api/3/auditing/record",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"limit\": {{faker 'random.number'}},\n  \"offset\": {{faker 'random.number'}},\n  \"records\": [\n    {\n      \"associatedItems\": [\n        {\n          \"id\": \"\",\n          \"name\": \"\",\n          \"parentId\": \"\",\n          \"parentName\": \"\",\n          \"typeName\": \"\"\n        }\n      ],\n      \"authorKey\": \"\",\n      \"category\": \"\",\n      \"changedValues\": [\n        {\n          \"changedFrom\": \"\",\n          \"changedTo\": \"\",\n          \"fieldName\": \"\"\n        }\n      ],\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"eventSource\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"objectItem\": {\n        \"id\": \"\",\n        \"name\": \"\",\n        \"parentId\": \"\",\n        \"parentName\": \"\",\n        \"typeName\": \"\"\n      },\n      \"remoteAddress\": \"\",\n      \"summary\": \"\"\n    }\n  ],\n  \"total\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n\n *  the user does not have the required permissions.\n *  all Jira products are on free plans. Audit logs are available when at least one Jira product is on a paid plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get system avatars by type",
                      "method": "get",
                      "endpoint": "rest/api/3/avatar/:type/system",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"system\": [\n    {\n      \"fileName\": \"\",\n      \"id\": \"\",\n      \"isDeletable\": {{faker 'random.boolean'}},\n      \"isSelected\": {{faker 'random.boolean'}},\n      \"isSystemAvatar\": {{faker 'random.boolean'}},\n      \"owner\": \"\",\n      \"urls\": {}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 500,
                              "label": "Returned if an error occurs while retrieving the list of avatars.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get comments by IDs",
                      "method": "post",
                      "endpoint": "rest/api/3/comment/list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"author\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"body\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"\",\n      \"jsdPublic\": {{faker 'random.boolean'}},\n      \"properties\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"renderedBody\": \"\",\n      \"self\": \"\",\n      \"updateAuthor\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"updated\": \"{{faker 'date.recent' 365}}\",\n      \"visibility\": {\n        \"type\": \"{{oneOf (array 'group' 'role')}}\",\n        \"value\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request contains more than 1000 IDs or is empty.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get comment property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/comment/:commentId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the comment ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the comment is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete comment property",
                      "method": "delete",
                      "endpoint": "rest/api/3/comment/:commentId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the comment or the property is not found or the user has the necessary project permissions but isn't a member of the role or group visibility of the comment is restricted to.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get comment property",
                      "method": "get",
                      "endpoint": "rest/api/3/comment/:commentId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the comment or the property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set comment property",
                      "method": "put",
                      "endpoint": "rest/api/3/comment/:commentId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the comment property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the comment property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the comment is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create component",
                      "method": "post",
                      "endpoint": "rest/api/3/component",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"leadAccountId\": \"\",\n  \"leadUserName\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"realAssignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the user is not found.\n *  `name` is not provided.\n *  `name` is over 255 characters in length.\n *  `projectId` is not provided.\n *  `assigneeType` is an invalid value.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to browse the project containing the component.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete component",
                      "method": "delete",
                      "endpoint": "rest/api/3/component/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the component is not found.\n *  the replacement component is not found.\n *  the user does not have permission to browse the project containing the component.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get component",
                      "method": "get",
                      "endpoint": "rest/api/3/component/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"leadAccountId\": \"\",\n  \"leadUserName\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"realAssignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the component is not found or the user does not have permission to browse the project containing the component.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update component",
                      "method": "put",
                      "endpoint": "rest/api/3/component/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"leadAccountId\": \"\",\n  \"leadUserName\": \"\",\n  \"name\": \"\",\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"realAssignee\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the user is not found.\n *  `assigneeType` is an invalid value.\n *  `name` is over 255 characters in length.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to manage the project containing the component or does not have permission to administer Jira.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the component is not found or the user does not have permission to browse the project containing the component.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get component issues count",
                      "method": "get",
                      "endpoint": "rest/api/3/component/:id/relatedIssueCounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueCount\": {{faker 'random.number'}},\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the component is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get global settings",
                      "method": "get",
                      "endpoint": "rest/api/3/configuration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"attachmentsEnabled\": {{faker 'random.boolean'}},\n  \"issueLinkingEnabled\": {{faker 'random.boolean'}},\n  \"subTasksEnabled\": {{faker 'random.boolean'}},\n  \"timeTrackingConfiguration\": {\n    \"defaultUnit\": \"{{oneOf (array 'minute' 'hour' 'day' 'week')}}\",\n    \"timeFormat\": \"{{oneOf (array 'pretty' 'days' 'hours')}}\",\n    \"workingDaysPerWeek\": {{faker 'random.float'}},\n    \"workingHoursPerDay\": {{faker 'random.float'}}\n  },\n  \"timeTrackingEnabled\": {{faker 'random.boolean'}},\n  \"unassignedIssuesAllowed\": {{faker 'random.boolean'}},\n  \"votingEnabled\": {{faker 'random.boolean'}},\n  \"watchingEnabled\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get selected time tracking provider",
                      "method": "get",
                      "endpoint": "rest/api/3/configuration/timetracking",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"name\": \"\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful and time tracking is enabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful but time tracking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Select time tracking provider",
                      "method": "put",
                      "endpoint": "rest/api/3/configuration/timetracking",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the time tracking provider is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all time tracking providers",
                      "method": "get",
                      "endpoint": "rest/api/3/configuration/timetracking/list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"key\": \"\",\n    \"name\": \"\",\n    \"url\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get time tracking settings",
                      "method": "get",
                      "endpoint": "rest/api/3/configuration/timetracking/options",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultUnit\": \"{{oneOf (array 'minute' 'hour' 'day' 'week')}}\",\n  \"timeFormat\": \"{{oneOf (array 'pretty' 'days' 'hours')}}\",\n  \"workingDaysPerWeek\": {{faker 'random.float'}},\n  \"workingHoursPerDay\": {{faker 'random.float'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set time tracking settings",
                      "method": "put",
                      "endpoint": "rest/api/3/configuration/timetracking/options",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultUnit\": \"{{oneOf (array 'minute' 'hour' 'day' 'week')}}\",\n  \"timeFormat\": \"{{oneOf (array 'pretty' 'days' 'hours')}}\",\n  \"workingDaysPerWeek\": {{faker 'random.float'}},\n  \"workingHoursPerDay\": {{faker 'random.float'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request object is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get custom field option",
                      "method": "get",
                      "endpoint": "rest/api/3/customFieldOption/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"self\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the custom field option is not found.\n *  the user does not have permission to view the custom field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all dashboards",
                      "method": "get",
                      "endpoint": "rest/api/3/dashboard",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"dashboards\": [\n    {\n      \"description\": \"\",\n      \"editPermissions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"project\": {\n            \"archived\": {{faker 'random.boolean'}},\n            \"archivedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"components\": [\n              {\n                \"assignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"description\": \"\",\n                \"id\": \"\",\n                \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n                \"lead\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"leadAccountId\": \"\",\n                \"leadUserName\": \"\",\n                \"name\": \"\",\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"realAssignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"self\": \"\"\n              }\n            ],\n            \"deleted\": {{faker 'random.boolean'}},\n            \"deletedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"email\": \"\",\n            \"expand\": \"\",\n            \"favourite\": {{faker 'random.boolean'}},\n            \"id\": \"\",\n            \"insight\": {\n              \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n              \"totalIssueCount\": {{faker 'random.number'}}\n            },\n            \"isPrivate\": {{faker 'random.boolean'}},\n            \"issueTypeHierarchy\": {\n              \"baseLevelId\": {{faker 'random.number'}},\n              \"levels\": [\n                {\n                  \"aboveLevelId\": {{faker 'random.number'}},\n                  \"belowLevelId\": {{faker 'random.number'}},\n                  \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                  \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                  \"id\": {{faker 'random.number'}},\n                  \"issueTypeIds\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"level\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"projectConfigurationId\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"issueTypes\": [\n              {\n                \"avatarId\": {{faker 'random.number'}},\n                \"description\": \"\",\n                \"entityId\": \"{{faker 'random.uuid'}}\",\n                \"hierarchyLevel\": {{faker 'random.number'}},\n                \"iconUrl\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"scope\": {\n                  \"project\": {\n                    \"avatarUrls\": {\n                      \"16x16\": \"\",\n                      \"24x24\": \"\",\n                      \"32x32\": \"\",\n                      \"48x48\": \"\"\n                    },\n                    \"id\": \"\",\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"projectCategory\": {\n                      \"description\": \"\",\n                      \"id\": \"\",\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    },\n                    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                    \"self\": \"\",\n                    \"simplified\": {{faker 'random.boolean'}}\n                  },\n                  \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n                },\n                \"self\": \"\",\n                \"subtask\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"key\": \"\",\n            \"landingPageInfo\": {\n              \"boardId\": {{faker 'random.number'}},\n              \"projectKey\": \"\",\n              \"projectType\": \"\",\n              \"simplified\": {{faker 'random.boolean'}},\n              \"url\": \"\"\n            },\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"name\": \"\",\n            \"permissions\": {\n              \"canEdit\": {{faker 'random.boolean'}}\n            },\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"properties\": {},\n            \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n            \"roles\": {},\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n            \"url\": \"\",\n            \"uuid\": \"{{faker 'random.uuid'}}\",\n            \"versions\": [\n              {\n                \"archived\": {{faker 'random.boolean'}},\n                \"description\": \"\",\n                \"expand\": \"\",\n                \"id\": \"\",\n                \"issuesStatusForFixVersion\": {\n                  \"done\": {{faker 'random.number'}},\n                  \"inProgress\": {{faker 'random.number'}},\n                  \"toDo\": {{faker 'random.number'}},\n                  \"unmapped\": {{faker 'random.number'}}\n                },\n                \"moveUnfixedIssuesTo\": \"\",\n                \"name\": \"\",\n                \"operations\": [\n                  {\n                    \"href\": \"\",\n                    \"iconClass\": \"\",\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"styleClass\": \"\",\n                    \"title\": \"\",\n                    \"weight\": {{faker 'random.number'}}\n                  }\n                ],\n                \"overdue\": {{faker 'random.boolean'}},\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"released\": {{faker 'random.boolean'}},\n                \"self\": \"\",\n                \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"userReleaseDate\": \"\",\n                \"userStartDate\": \"\"\n              }\n            ]\n          },\n          \"role\": {\n            \"actors\": [\n              {\n                \"actorGroup\": {\n                  \"displayName\": \"\",\n                  \"name\": \"\"\n                },\n                \"actorUser\": {\n                  \"accountId\": \"\"\n                },\n                \"avatarUrl\": \"\",\n                \"displayName\": \"\",\n                \"id\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n              }\n            ],\n            \"admin\": {{faker 'random.boolean'}},\n            \"currentUserRole\": {{faker 'random.boolean'}},\n            \"default\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"roleConfigurable\": {{faker 'random.boolean'}},\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"translatedName\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n          \"user\": {\n            \"accountId\": \"\",\n            \"active\": {{faker 'random.boolean'}},\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        }\n      ],\n      \"id\": \"\",\n      \"isFavourite\": {{faker 'random.boolean'}},\n      \"isWritable\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"owner\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"popularity\": {{faker 'random.number'}},\n      \"rank\": {{faker 'random.number'}},\n      \"self\": \"\",\n      \"sharePermissions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"project\": {\n            \"archived\": {{faker 'random.boolean'}},\n            \"archivedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"components\": [\n              {\n                \"assignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"description\": \"\",\n                \"id\": \"\",\n                \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n                \"lead\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"leadAccountId\": \"\",\n                \"leadUserName\": \"\",\n                \"name\": \"\",\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"realAssignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"self\": \"\"\n              }\n            ],\n            \"deleted\": {{faker 'random.boolean'}},\n            \"deletedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"email\": \"\",\n            \"expand\": \"\",\n            \"favourite\": {{faker 'random.boolean'}},\n            \"id\": \"\",\n            \"insight\": {\n              \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n              \"totalIssueCount\": {{faker 'random.number'}}\n            },\n            \"isPrivate\": {{faker 'random.boolean'}},\n            \"issueTypeHierarchy\": {\n              \"baseLevelId\": {{faker 'random.number'}},\n              \"levels\": [\n                {\n                  \"aboveLevelId\": {{faker 'random.number'}},\n                  \"belowLevelId\": {{faker 'random.number'}},\n                  \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                  \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                  \"id\": {{faker 'random.number'}},\n                  \"issueTypeIds\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"level\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"projectConfigurationId\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"issueTypes\": [\n              {\n                \"avatarId\": {{faker 'random.number'}},\n                \"description\": \"\",\n                \"entityId\": \"{{faker 'random.uuid'}}\",\n                \"hierarchyLevel\": {{faker 'random.number'}},\n                \"iconUrl\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"scope\": {\n                  \"project\": {\n                    \"avatarUrls\": {\n                      \"16x16\": \"\",\n                      \"24x24\": \"\",\n                      \"32x32\": \"\",\n                      \"48x48\": \"\"\n                    },\n                    \"id\": \"\",\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"projectCategory\": {\n                      \"description\": \"\",\n                      \"id\": \"\",\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    },\n                    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                    \"self\": \"\",\n                    \"simplified\": {{faker 'random.boolean'}}\n                  },\n                  \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n                },\n                \"self\": \"\",\n                \"subtask\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"key\": \"\",\n            \"landingPageInfo\": {\n              \"boardId\": {{faker 'random.number'}},\n              \"projectKey\": \"\",\n              \"projectType\": \"\",\n              \"simplified\": {{faker 'random.boolean'}},\n              \"url\": \"\"\n            },\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"name\": \"\",\n            \"permissions\": {\n              \"canEdit\": {{faker 'random.boolean'}}\n            },\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"properties\": {},\n            \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n            \"roles\": {},\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n            \"url\": \"\",\n            \"uuid\": \"{{faker 'random.uuid'}}\",\n            \"versions\": [\n              {\n                \"archived\": {{faker 'random.boolean'}},\n                \"description\": \"\",\n                \"expand\": \"\",\n                \"id\": \"\",\n                \"issuesStatusForFixVersion\": {\n                  \"done\": {{faker 'random.number'}},\n                  \"inProgress\": {{faker 'random.number'}},\n                  \"toDo\": {{faker 'random.number'}},\n                  \"unmapped\": {{faker 'random.number'}}\n                },\n                \"moveUnfixedIssuesTo\": \"\",\n                \"name\": \"\",\n                \"operations\": [\n                  {\n                    \"href\": \"\",\n                    \"iconClass\": \"\",\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"styleClass\": \"\",\n                    \"title\": \"\",\n                    \"weight\": {{faker 'random.number'}}\n                  }\n                ],\n                \"overdue\": {{faker 'random.boolean'}},\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"released\": {{faker 'random.boolean'}},\n                \"self\": \"\",\n                \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"userReleaseDate\": \"\",\n                \"userStartDate\": \"\"\n              }\n            ]\n          },\n          \"role\": {\n            \"actors\": [\n              {\n                \"actorGroup\": {\n                  \"displayName\": \"\",\n                  \"name\": \"\"\n                },\n                \"actorUser\": {\n                  \"accountId\": \"\"\n                },\n                \"avatarUrl\": \"\",\n                \"displayName\": \"\",\n                \"id\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n              }\n            ],\n            \"admin\": {{faker 'random.boolean'}},\n            \"currentUserRole\": {{faker 'random.boolean'}},\n            \"default\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"roleConfigurable\": {{faker 'random.boolean'}},\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"translatedName\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n          \"user\": {\n            \"accountId\": \"\",\n            \"active\": {{faker 'random.boolean'}},\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        }\n      ],\n      \"view\": \"\"\n    }\n  ],\n  \"maxResults\": {{faker 'random.number'}},\n  \"next\": \"\",\n  \"prev\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create dashboard",
                      "method": "post",
                      "endpoint": "rest/api/3/dashboard",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"editPermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"id\": \"\",\n  \"isFavourite\": {{faker 'random.boolean'}},\n  \"isWritable\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"popularity\": {{faker 'random.number'}},\n  \"rank\": {{faker 'random.number'}},\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"view\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Search for dashboards",
                      "method": "get",
                      "endpoint": "rest/api/3/dashboard/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"editPermissions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"project\": {\n            \"archived\": {{faker 'random.boolean'}},\n            \"archivedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"components\": [\n              {\n                \"assignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"description\": \"\",\n                \"id\": \"\",\n                \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n                \"lead\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"leadAccountId\": \"\",\n                \"leadUserName\": \"\",\n                \"name\": \"\",\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"realAssignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"self\": \"\"\n              }\n            ],\n            \"deleted\": {{faker 'random.boolean'}},\n            \"deletedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"email\": \"\",\n            \"expand\": \"\",\n            \"favourite\": {{faker 'random.boolean'}},\n            \"id\": \"\",\n            \"insight\": {\n              \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n              \"totalIssueCount\": {{faker 'random.number'}}\n            },\n            \"isPrivate\": {{faker 'random.boolean'}},\n            \"issueTypeHierarchy\": {\n              \"baseLevelId\": {{faker 'random.number'}},\n              \"levels\": [\n                {\n                  \"aboveLevelId\": {{faker 'random.number'}},\n                  \"belowLevelId\": {{faker 'random.number'}},\n                  \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                  \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                  \"id\": {{faker 'random.number'}},\n                  \"issueTypeIds\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"level\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"projectConfigurationId\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"issueTypes\": [\n              {\n                \"avatarId\": {{faker 'random.number'}},\n                \"description\": \"\",\n                \"entityId\": \"{{faker 'random.uuid'}}\",\n                \"hierarchyLevel\": {{faker 'random.number'}},\n                \"iconUrl\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"scope\": {\n                  \"project\": {\n                    \"avatarUrls\": {\n                      \"16x16\": \"\",\n                      \"24x24\": \"\",\n                      \"32x32\": \"\",\n                      \"48x48\": \"\"\n                    },\n                    \"id\": \"\",\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"projectCategory\": {\n                      \"description\": \"\",\n                      \"id\": \"\",\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    },\n                    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                    \"self\": \"\",\n                    \"simplified\": {{faker 'random.boolean'}}\n                  },\n                  \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n                },\n                \"self\": \"\",\n                \"subtask\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"key\": \"\",\n            \"landingPageInfo\": {\n              \"boardId\": {{faker 'random.number'}},\n              \"projectKey\": \"\",\n              \"projectType\": \"\",\n              \"simplified\": {{faker 'random.boolean'}},\n              \"url\": \"\"\n            },\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"name\": \"\",\n            \"permissions\": {\n              \"canEdit\": {{faker 'random.boolean'}}\n            },\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"properties\": {},\n            \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n            \"roles\": {},\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n            \"url\": \"\",\n            \"uuid\": \"{{faker 'random.uuid'}}\",\n            \"versions\": [\n              {\n                \"archived\": {{faker 'random.boolean'}},\n                \"description\": \"\",\n                \"expand\": \"\",\n                \"id\": \"\",\n                \"issuesStatusForFixVersion\": {\n                  \"done\": {{faker 'random.number'}},\n                  \"inProgress\": {{faker 'random.number'}},\n                  \"toDo\": {{faker 'random.number'}},\n                  \"unmapped\": {{faker 'random.number'}}\n                },\n                \"moveUnfixedIssuesTo\": \"\",\n                \"name\": \"\",\n                \"operations\": [\n                  {\n                    \"href\": \"\",\n                    \"iconClass\": \"\",\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"styleClass\": \"\",\n                    \"title\": \"\",\n                    \"weight\": {{faker 'random.number'}}\n                  }\n                ],\n                \"overdue\": {{faker 'random.boolean'}},\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"released\": {{faker 'random.boolean'}},\n                \"self\": \"\",\n                \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"userReleaseDate\": \"\",\n                \"userStartDate\": \"\"\n              }\n            ]\n          },\n          \"role\": {\n            \"actors\": [\n              {\n                \"actorGroup\": {\n                  \"displayName\": \"\",\n                  \"name\": \"\"\n                },\n                \"actorUser\": {\n                  \"accountId\": \"\"\n                },\n                \"avatarUrl\": \"\",\n                \"displayName\": \"\",\n                \"id\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n              }\n            ],\n            \"admin\": {{faker 'random.boolean'}},\n            \"currentUserRole\": {{faker 'random.boolean'}},\n            \"default\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"roleConfigurable\": {{faker 'random.boolean'}},\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"translatedName\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n          \"user\": {\n            \"accountId\": \"\",\n            \"active\": {{faker 'random.boolean'}},\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        }\n      ],\n      \"id\": \"\",\n      \"isFavourite\": {{faker 'random.boolean'}},\n      \"isWritable\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"owner\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"popularity\": {{faker 'random.number'}},\n      \"rank\": {{faker 'random.number'}},\n      \"self\": \"\",\n      \"sharePermissions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"project\": {\n            \"archived\": {{faker 'random.boolean'}},\n            \"archivedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"components\": [\n              {\n                \"assignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"description\": \"\",\n                \"id\": \"\",\n                \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n                \"lead\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"leadAccountId\": \"\",\n                \"leadUserName\": \"\",\n                \"name\": \"\",\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"realAssignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"self\": \"\"\n              }\n            ],\n            \"deleted\": {{faker 'random.boolean'}},\n            \"deletedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"email\": \"\",\n            \"expand\": \"\",\n            \"favourite\": {{faker 'random.boolean'}},\n            \"id\": \"\",\n            \"insight\": {\n              \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n              \"totalIssueCount\": {{faker 'random.number'}}\n            },\n            \"isPrivate\": {{faker 'random.boolean'}},\n            \"issueTypeHierarchy\": {\n              \"baseLevelId\": {{faker 'random.number'}},\n              \"levels\": [\n                {\n                  \"aboveLevelId\": {{faker 'random.number'}},\n                  \"belowLevelId\": {{faker 'random.number'}},\n                  \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                  \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                  \"id\": {{faker 'random.number'}},\n                  \"issueTypeIds\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"level\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"projectConfigurationId\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"issueTypes\": [\n              {\n                \"avatarId\": {{faker 'random.number'}},\n                \"description\": \"\",\n                \"entityId\": \"{{faker 'random.uuid'}}\",\n                \"hierarchyLevel\": {{faker 'random.number'}},\n                \"iconUrl\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"scope\": {\n                  \"project\": {\n                    \"avatarUrls\": {\n                      \"16x16\": \"\",\n                      \"24x24\": \"\",\n                      \"32x32\": \"\",\n                      \"48x48\": \"\"\n                    },\n                    \"id\": \"\",\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"projectCategory\": {\n                      \"description\": \"\",\n                      \"id\": \"\",\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    },\n                    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                    \"self\": \"\",\n                    \"simplified\": {{faker 'random.boolean'}}\n                  },\n                  \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n                },\n                \"self\": \"\",\n                \"subtask\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"key\": \"\",\n            \"landingPageInfo\": {\n              \"boardId\": {{faker 'random.number'}},\n              \"projectKey\": \"\",\n              \"projectType\": \"\",\n              \"simplified\": {{faker 'random.boolean'}},\n              \"url\": \"\"\n            },\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"name\": \"\",\n            \"permissions\": {\n              \"canEdit\": {{faker 'random.boolean'}}\n            },\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"properties\": {},\n            \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n            \"roles\": {},\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n            \"url\": \"\",\n            \"uuid\": \"{{faker 'random.uuid'}}\",\n            \"versions\": [\n              {\n                \"archived\": {{faker 'random.boolean'}},\n                \"description\": \"\",\n                \"expand\": \"\",\n                \"id\": \"\",\n                \"issuesStatusForFixVersion\": {\n                  \"done\": {{faker 'random.number'}},\n                  \"inProgress\": {{faker 'random.number'}},\n                  \"toDo\": {{faker 'random.number'}},\n                  \"unmapped\": {{faker 'random.number'}}\n                },\n                \"moveUnfixedIssuesTo\": \"\",\n                \"name\": \"\",\n                \"operations\": [\n                  {\n                    \"href\": \"\",\n                    \"iconClass\": \"\",\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"styleClass\": \"\",\n                    \"title\": \"\",\n                    \"weight\": {{faker 'random.number'}}\n                  }\n                ],\n                \"overdue\": {{faker 'random.boolean'}},\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"released\": {{faker 'random.boolean'}},\n                \"self\": \"\",\n                \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"userReleaseDate\": \"\",\n                \"userStartDate\": \"\"\n              }\n            ]\n          },\n          \"role\": {\n            \"actors\": [\n              {\n                \"actorGroup\": {\n                  \"displayName\": \"\",\n                  \"name\": \"\"\n                },\n                \"actorUser\": {\n                  \"accountId\": \"\"\n                },\n                \"avatarUrl\": \"\",\n                \"displayName\": \"\",\n                \"id\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n              }\n            ],\n            \"admin\": {{faker 'random.boolean'}},\n            \"currentUserRole\": {{faker 'random.boolean'}},\n            \"default\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"roleConfigurable\": {{faker 'random.boolean'}},\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"translatedName\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n          \"user\": {\n            \"accountId\": \"\",\n            \"active\": {{faker 'random.boolean'}},\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        }\n      ],\n      \"view\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `orderBy` is invalid.\n *  `expand` includes an invalid value.\n *  `accountId` and `owner` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "401 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get dashboard item property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/dashboard/:dashboardId/items/:itemId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard or dashboard item is not found, or the dashboard is not owned by or shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete dashboard item property",
                      "method": "delete",
                      "endpoint": "rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the dashboard item property is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the dashboard or dashboard item ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not the owner of the dashboard.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard item is not found or the dashboard is not shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get dashboard item property",
                      "method": "get",
                      "endpoint": "rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard, the dashboard item, or dashboard item property is not found, or the dashboard is not owned by or shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set dashboard item property",
                      "method": "put",
                      "endpoint": "rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the dashboard item property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the dashboard item property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user is not the owner of the dashboard.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard item is not found or the dashboard is not shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete dashboard",
                      "method": "delete",
                      "endpoint": "rest/api/3/dashboard/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the dashboard is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "400 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get dashboard",
                      "method": "get",
                      "endpoint": "rest/api/3/dashboard/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"editPermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"id\": \"\",\n  \"isFavourite\": {{faker 'random.boolean'}},\n  \"isWritable\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"popularity\": {{faker 'random.number'}},\n  \"rank\": {{faker 'random.number'}},\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"view\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "400 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update dashboard",
                      "method": "put",
                      "endpoint": "rest/api/3/dashboard/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"editPermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"id\": \"\",\n  \"isFavourite\": {{faker 'random.boolean'}},\n  \"isWritable\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"popularity\": {{faker 'random.number'}},\n  \"rank\": {{faker 'random.number'}},\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"view\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard is not found or the dashboard is not owned by the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Copy dashboard",
                      "method": "post",
                      "endpoint": "rest/api/3/dashboard/:id/copy",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"editPermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"id\": \"\",\n  \"isFavourite\": {{faker 'random.boolean'}},\n  \"isWritable\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"popularity\": {{faker 'random.number'}},\n  \"rank\": {{faker 'random.number'}},\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"view\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Analyse Jira expression",
                      "method": "post",
                      "endpoint": "rest/api/3/expression/analyse",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"results\": [\n    {\n      \"complexity\": {\n        \"expensiveOperations\": \"\",\n        \"variables\": {}\n      },\n      \"errors\": [\n        {\n          \"column\": {{faker 'random.number'}},\n          \"expression\": \"\",\n          \"line\": {{faker 'random.number'}},\n          \"message\": \"!, -, typeof, (, IDENTIFIER, null, true, false, NUMBER, STRING, TEMPLATE_LITERAL, new, [ or { expected, > encountered.\",\n          \"type\": \"{{oneOf (array 'syntax' 'type' 'other')}}\"\n        }\n      ],\n      \"expression\": \"\",\n      \"type\": \"\",\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "400 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "404 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Evaluate Jira expression",
                      "method": "post",
                      "endpoint": "rest/api/3/expression/eval",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"meta\": {\n    \"complexity\": {\n      \"beans\": {\n        \"limit\": {{faker 'random.number'}},\n        \"value\": {{faker 'random.number'}}\n      },\n      \"expensiveOperations\": {\n        \"limit\": {{faker 'random.number'}},\n        \"value\": {{faker 'random.number'}}\n      },\n      \"primitiveValues\": {\n        \"limit\": {{faker 'random.number'}},\n        \"value\": {{faker 'random.number'}}\n      },\n      \"steps\": {\n        \"limit\": {{faker 'random.number'}},\n        \"value\": {{faker 'random.number'}}\n      }\n    },\n    \"issues\": {\n      \"jql\": {\n        \"count\": {{faker 'random.number'}},\n        \"maxResults\": {{faker 'random.number'}},\n        \"startAt\": {{faker 'random.number'}},\n        \"totalCount\": {{faker 'random.number'}},\n        \"validationWarnings\": [\n          \"\"\n        ]\n      }\n    }\n  },\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the evaluation results in a value. The result is a JSON primitive value, list, or object.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the request is invalid, that is:\n    \n     *  invalid data is provided, such as a request including issue ID and key.\n     *  the expression is invalid and can not be parsed.\n *  evaluation fails at runtime. This may happen for various reasons. For example, accessing a property on a null object (such as the expression `issue.id` where `issue` is `null`). In this case an error message is provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any object provided in the request context is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get fields",
                      "method": "get",
                      "endpoint": "rest/api/3/field",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"clauseNames\": [\n      \"\"\n    ],\n    \"custom\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"navigable\": {{faker 'random.boolean'}},\n    \"orderable\": {{faker 'random.boolean'}},\n    \"schema\": {\n      \"configuration\": {},\n      \"custom\": \"\",\n      \"customId\": {{faker 'random.number'}},\n      \"items\": \"\",\n      \"system\": \"\",\n      \"type\": \"\"\n    },\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"searchable\": {{faker 'random.boolean'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create custom field",
                      "method": "post",
                      "endpoint": "rest/api/3/field",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"clauseNames\": [\n    \"\"\n  ],\n  \"custom\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"key\": \"\",\n  \"name\": \"\",\n  \"navigable\": {{faker 'random.boolean'}},\n  \"orderable\": {{faker 'random.boolean'}},\n  \"schema\": {\n    \"configuration\": {},\n    \"custom\": \"\",\n    \"customId\": {{faker 'random.number'}},\n    \"items\": \"\",\n    \"system\": \"\",\n    \"type\": \"\"\n  },\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"searchable\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the custom field is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the user does not have permission to create custom fields.\n *  any of the request object properties have invalid or missing values.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get fields paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/field/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"contextsCount\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isLocked\": {{faker 'random.boolean'}},\n      \"key\": \"\",\n      \"lastUsed\": {\n        \"type\": \"{{oneOf (array 'TRACKED' 'NOT_TRACKED' 'NO_INFORMATION')}}\",\n        \"value\": \"{{faker 'date.recent' 365}}\"\n      },\n      \"name\": \"\",\n      \"schema\": {\n        \"configuration\": {},\n        \"custom\": \"\",\n        \"customId\": {{faker 'random.number'}},\n        \"items\": \"\",\n        \"system\": \"\",\n        \"type\": \"\"\n      },\n      \"screensCount\": {{faker 'random.number'}},\n      \"searcherKey\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update custom field",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get custom field contexts",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/context",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAnyIssueType\": {{faker 'random.boolean'}},\n      \"isGlobalContext\": {{faker 'random.boolean'}},\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field was not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create custom field context",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldId/context",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"issueTypeIds\": [\n    \"\"\n  ],\n  \"name\": \"\",\n  \"projectIds\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the custom field context is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field, project, or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get custom field contexts default values",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/context/defaultValue",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"cascadingOptionId\": \"\",\n      \"contextId\": \"\",\n      \"optionId\": \"\",\n      \"type\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set custom field contexts default values",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/defaultValue",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, a context, an option, or a cascading option is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue types for custom field context",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/context/issuetypemapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"contextId\": \"\",\n      \"isAnyIssueType\": {{faker 'random.boolean'}},\n      \"issueTypeId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get custom field contexts for projects and issue types",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldId/context/mapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"contextId\": \"\",\n      \"issueTypeId\": \"\",\n      \"projectId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, project, or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project mappings for custom field context",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/context/projectmapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"contextId\": \"\",\n      \"isGlobalContext\": {{faker 'random.boolean'}},\n      \"projectId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete custom field context",
                      "method": "delete",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the context is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field or the context is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update custom field context",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the context is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field or the context is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add issue types to context",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/issuetype",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, context, or one or more issue types are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove issue types from context",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/issuetype/remove",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, context, or one or more issue types are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get custom field options (context)",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/option",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"disabled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"optionId\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found or the context doesn't match the custom field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create custom field options (context)",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/option",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"options\": [\n    {\n      \"disabled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"optionId\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field is not found or the context doesn't match the custom field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update custom field options (context)",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/option",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"options\": [\n    {\n      \"disabled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field, context, or one or more options is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Reorder custom field options (context)",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/option/move",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if options are reordered.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field, the context, or one or more of the options is not found..",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete custom field options (context)",
                      "method": "delete",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/option/:optionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the option is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field, the context, or the option is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign custom field context to projects",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, context, or project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove custom field context from projects",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldId/context/:contextId/project/remove",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the custom field context is removed from the projects.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the custom field, context, or one or more projects are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get contexts for a field",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/contexts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get screens for a field",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldId/screens",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"tab\": {\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all issue field options",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldKey/option",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"config\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ],\n        \"scope\": {\n          \"global\": {\n            \"attributes\": [\n              \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n            ]\n          },\n          \"projects\": [\n            {{faker 'random.number'}}\n          ],\n          \"projects2\": [\n            {\n              \"attributes\": [\n                \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n              ],\n              \"id\": {{faker 'random.number'}}\n            }\n          ]\n        }\n      },\n      \"id\": {{faker 'random.number'}},\n      \"properties\": {},\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the field is not found or does not support options.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue field option",
                      "method": "post",
                      "endpoint": "rest/api/3/field/:fieldKey/option",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"config\": {\n    \"attributes\": [\n      \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n    ],\n    \"scope\": {\n      \"global\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ]\n      },\n      \"projects\": [\n        {{faker 'random.number'}}\n      ],\n      \"projects2\": [\n        {\n          \"attributes\": [\n            \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n          ],\n          \"id\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  },\n  \"id\": {{faker 'random.number'}},\n  \"properties\": {},\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the option is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field is not found or does not support options.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get selectable issue field options",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldKey/option/suggestions/edit",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"config\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ],\n        \"scope\": {\n          \"global\": {\n            \"attributes\": [\n              \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n            ]\n          },\n          \"projects\": [\n            {{faker 'random.number'}}\n          ],\n          \"projects2\": [\n            {\n              \"attributes\": [\n                \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n              ],\n              \"id\": {{faker 'random.number'}}\n            }\n          ]\n        }\n      },\n      \"id\": {{faker 'random.number'}},\n      \"properties\": {},\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field is not found or does not support options.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get visible issue field options",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldKey/option/suggestions/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"config\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ],\n        \"scope\": {\n          \"global\": {\n            \"attributes\": [\n              \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n            ]\n          },\n          \"projects\": [\n            {{faker 'random.number'}}\n          ],\n          \"projects2\": [\n            {\n              \"attributes\": [\n                \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n              ],\n              \"id\": {{faker 'random.number'}}\n            }\n          ]\n        }\n      },\n      \"id\": {{faker 'random.number'}},\n      \"properties\": {},\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field is not found or does not support options.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue field option",
                      "method": "delete",
                      "endpoint": "rest/api/3/field/:fieldKey/option/:optionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the field option is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field or option is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the option is selected for the field in any issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue field option",
                      "method": "get",
                      "endpoint": "rest/api/3/field/:fieldKey/option/:optionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"config\": {\n    \"attributes\": [\n      \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n    ],\n    \"scope\": {\n      \"global\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ]\n      },\n      \"projects\": [\n        {{faker 'random.number'}}\n      ],\n      \"projects2\": [\n        {\n          \"attributes\": [\n            \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n          ],\n          \"id\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  },\n  \"id\": {{faker 'random.number'}},\n  \"properties\": {},\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the requested option is returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the field is not found or does not support options.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the option is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue field option",
                      "method": "put",
                      "endpoint": "rest/api/3/field/:fieldKey/option/:optionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"config\": {\n    \"attributes\": [\n      \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n    ],\n    \"scope\": {\n      \"global\": {\n        \"attributes\": [\n          \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n        ]\n      },\n      \"projects\": [\n        {{faker 'random.number'}}\n      ],\n      \"projects2\": [\n        {\n          \"attributes\": [\n            \"{{oneOf (array 'notSelectable' 'defaultValue')}}\"\n          ],\n          \"id\": {{faker 'random.number'}}\n        }\n      ]\n    }\n  },\n  \"id\": {{faker 'random.number'}},\n  \"properties\": {},\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the option is updated or created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the option is invalid, or the *ID* in the request object does not match the *optionId* parameter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the request is not authenticated as a Jira administrator or the app that provided the field.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Replace issue field option",
                      "method": "delete",
                      "endpoint": "rest/api/3/field/:fieldKey/option/:optionId/issue",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"elapsedRuntime\": {{faker 'random.number'}},\n  \"finished\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"lastUpdate\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"progress\": {{faker 'random.number'}},\n  \"result\": {\n    \"errors\": {\n      \"errorMessages\": [\n        \"\"\n      ],\n      \"errors\": {},\n      \"httpStatusCode\": {{faker 'random.number'}}\n    },\n    \"modifiedIssues\": [\n      {{faker 'random.number'}}\n    ],\n    \"unmodifiedIssues\": [\n      {{faker 'random.number'}}\n    ]\n  },\n  \"self\": \"\",\n  \"started\": {{faker 'random.number'}},\n  \"status\": \"{{oneOf (array 'ENQUEUED' 'RUNNING' 'COMPLETE' 'FAILED' 'CANCEL_REQUESTED' 'CANCELLED' 'DEAD')}}\",\n  \"submitted\": {{faker 'random.number'}},\n  \"submittedBy\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the long-running task to deselect the option is started.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the JQL query is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field is not found or does not support options, or the options to be replaced are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all field configurations",
                      "method": "get",
                      "endpoint": "rest/api/3/fieldconfiguration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"isDefault\": {{faker 'random.boolean'}},\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field configuration items",
                      "method": "get",
                      "endpoint": "rest/api/3/fieldconfiguration/:id/fields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isHidden\": {{faker 'random.boolean'}},\n      \"isRequired\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field configuration is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all field configuration schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/fieldconfigurationscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field configuration issue type items",
                      "method": "get",
                      "endpoint": "rest/api/3/fieldconfigurationscheme/mapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"fieldConfigurationId\": \"\",\n      \"fieldConfigurationSchemeId\": \"\",\n      \"issueTypeId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if no field configuration schemes are found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field configuration schemes for projects",
                      "method": "get",
                      "endpoint": "rest/api/3/fieldconfigurationscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"fieldConfigurationScheme\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"projectIds\": [\n        \"\"\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign field configuration scheme to project",
                      "method": "put",
                      "endpoint": "rest/api/3/fieldconfigurationscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the project is not a classic project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get filters",
                      "method": "get",
                      "endpoint": "rest/api/3/filter",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"favourite\": {{faker 'random.boolean'}},\n    \"favouritedCount\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"jql\": \"\",\n    \"name\": \"\",\n    \"owner\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"searchUrl\": \"\",\n    \"self\": \"\",\n    \"sharePermissions\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"project\": {\n          \"archived\": {{faker 'random.boolean'}},\n          \"archivedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"components\": [\n            {\n              \"assignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"description\": \"\",\n              \"id\": \"\",\n              \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n              \"lead\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"leadAccountId\": \"\",\n              \"leadUserName\": \"\",\n              \"name\": \"\",\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"realAssignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"self\": \"\"\n            }\n          ],\n          \"deleted\": {{faker 'random.boolean'}},\n          \"deletedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"\",\n          \"expand\": \"\",\n          \"favourite\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"insight\": {\n            \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n            \"totalIssueCount\": {{faker 'random.number'}}\n          },\n          \"isPrivate\": {{faker 'random.boolean'}},\n          \"issueTypeHierarchy\": {\n            \"baseLevelId\": {{faker 'random.number'}},\n            \"levels\": [\n              {\n                \"aboveLevelId\": {{faker 'random.number'}},\n                \"belowLevelId\": {{faker 'random.number'}},\n                \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                \"id\": {{faker 'random.number'}},\n                \"issueTypeIds\": [\n                  {{faker 'random.number'}}\n                ],\n                \"level\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"projectConfigurationId\": {{faker 'random.number'}}\n              }\n            ]\n          },\n          \"issueTypes\": [\n            {\n              \"avatarId\": {{faker 'random.number'}},\n              \"description\": \"\",\n              \"entityId\": \"{{faker 'random.uuid'}}\",\n              \"hierarchyLevel\": {{faker 'random.number'}},\n              \"iconUrl\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"scope\": {\n                \"project\": {\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"id\": \"\",\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"projectCategory\": {\n                    \"description\": \"\",\n                    \"id\": \"\",\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  },\n                  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                  \"self\": \"\",\n                  \"simplified\": {{faker 'random.boolean'}}\n                },\n                \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n              },\n              \"self\": \"\",\n              \"subtask\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"key\": \"\",\n          \"landingPageInfo\": {\n            \"boardId\": {{faker 'random.number'}},\n            \"projectKey\": \"\",\n            \"projectType\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"url\": \"\"\n          },\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"name\": \"\",\n          \"permissions\": {\n            \"canEdit\": {{faker 'random.boolean'}}\n          },\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"properties\": {},\n          \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n          \"roles\": {},\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n          \"url\": \"\",\n          \"uuid\": \"{{faker 'random.uuid'}}\",\n          \"versions\": [\n            {\n              \"archived\": {{faker 'random.boolean'}},\n              \"description\": \"\",\n              \"expand\": \"\",\n              \"id\": \"\",\n              \"issuesStatusForFixVersion\": {\n                \"done\": {{faker 'random.number'}},\n                \"inProgress\": {{faker 'random.number'}},\n                \"toDo\": {{faker 'random.number'}},\n                \"unmapped\": {{faker 'random.number'}}\n              },\n              \"moveUnfixedIssuesTo\": \"\",\n              \"name\": \"\",\n              \"operations\": [\n                {\n                  \"href\": \"\",\n                  \"iconClass\": \"\",\n                  \"id\": \"\",\n                  \"label\": \"\",\n                  \"styleClass\": \"\",\n                  \"title\": \"\",\n                  \"weight\": {{faker 'random.number'}}\n                }\n              ],\n              \"overdue\": {{faker 'random.boolean'}},\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"released\": {{faker 'random.boolean'}},\n              \"self\": \"\",\n              \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"userReleaseDate\": \"\",\n              \"userStartDate\": \"\"\n            }\n          ]\n        },\n        \"role\": {\n          \"actors\": [\n            {\n              \"actorGroup\": {\n                \"displayName\": \"\",\n                \"name\": \"\"\n              },\n              \"actorUser\": {\n                \"accountId\": \"\"\n              },\n              \"avatarUrl\": \"\",\n              \"displayName\": \"\",\n              \"id\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n            }\n          ],\n          \"admin\": {{faker 'random.boolean'}},\n          \"currentUserRole\": {{faker 'random.boolean'}},\n          \"default\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"roleConfigurable\": {{faker 'random.boolean'}},\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"translatedName\": \"\"\n        },\n        \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n        \"user\": {\n          \"accountId\": \"\",\n          \"active\": {{faker 'random.boolean'}},\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      }\n    ],\n    \"sharedUsers\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"subscriptions\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"user\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          }\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"viewUrl\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create filter",
                      "method": "post",
                      "endpoint": "rest/api/3/filter",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"favouritedCount\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"jql\": \"\",\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"searchUrl\": \"\",\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"sharedUsers\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"subscriptions\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"user\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"viewUrl\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get default share scope",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/defaultShareScope",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"scope\": \"{{oneOf (array 'GLOBAL' 'AUTHENTICATED' 'PRIVATE')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set default share scope",
                      "method": "put",
                      "endpoint": "rest/api/3/filter/defaultShareScope",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"scope\": \"{{oneOf (array 'GLOBAL' 'AUTHENTICATED' 'PRIVATE')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if an invalid scope is set.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get favorite filters",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/favourite",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"favourite\": {{faker 'random.boolean'}},\n    \"favouritedCount\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"jql\": \"\",\n    \"name\": \"\",\n    \"owner\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"searchUrl\": \"\",\n    \"self\": \"\",\n    \"sharePermissions\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"project\": {\n          \"archived\": {{faker 'random.boolean'}},\n          \"archivedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"components\": [\n            {\n              \"assignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"description\": \"\",\n              \"id\": \"\",\n              \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n              \"lead\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"leadAccountId\": \"\",\n              \"leadUserName\": \"\",\n              \"name\": \"\",\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"realAssignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"self\": \"\"\n            }\n          ],\n          \"deleted\": {{faker 'random.boolean'}},\n          \"deletedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"\",\n          \"expand\": \"\",\n          \"favourite\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"insight\": {\n            \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n            \"totalIssueCount\": {{faker 'random.number'}}\n          },\n          \"isPrivate\": {{faker 'random.boolean'}},\n          \"issueTypeHierarchy\": {\n            \"baseLevelId\": {{faker 'random.number'}},\n            \"levels\": [\n              {\n                \"aboveLevelId\": {{faker 'random.number'}},\n                \"belowLevelId\": {{faker 'random.number'}},\n                \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                \"id\": {{faker 'random.number'}},\n                \"issueTypeIds\": [\n                  {{faker 'random.number'}}\n                ],\n                \"level\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"projectConfigurationId\": {{faker 'random.number'}}\n              }\n            ]\n          },\n          \"issueTypes\": [\n            {\n              \"avatarId\": {{faker 'random.number'}},\n              \"description\": \"\",\n              \"entityId\": \"{{faker 'random.uuid'}}\",\n              \"hierarchyLevel\": {{faker 'random.number'}},\n              \"iconUrl\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"scope\": {\n                \"project\": {\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"id\": \"\",\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"projectCategory\": {\n                    \"description\": \"\",\n                    \"id\": \"\",\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  },\n                  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                  \"self\": \"\",\n                  \"simplified\": {{faker 'random.boolean'}}\n                },\n                \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n              },\n              \"self\": \"\",\n              \"subtask\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"key\": \"\",\n          \"landingPageInfo\": {\n            \"boardId\": {{faker 'random.number'}},\n            \"projectKey\": \"\",\n            \"projectType\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"url\": \"\"\n          },\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"name\": \"\",\n          \"permissions\": {\n            \"canEdit\": {{faker 'random.boolean'}}\n          },\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"properties\": {},\n          \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n          \"roles\": {},\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n          \"url\": \"\",\n          \"uuid\": \"{{faker 'random.uuid'}}\",\n          \"versions\": [\n            {\n              \"archived\": {{faker 'random.boolean'}},\n              \"description\": \"\",\n              \"expand\": \"\",\n              \"id\": \"\",\n              \"issuesStatusForFixVersion\": {\n                \"done\": {{faker 'random.number'}},\n                \"inProgress\": {{faker 'random.number'}},\n                \"toDo\": {{faker 'random.number'}},\n                \"unmapped\": {{faker 'random.number'}}\n              },\n              \"moveUnfixedIssuesTo\": \"\",\n              \"name\": \"\",\n              \"operations\": [\n                {\n                  \"href\": \"\",\n                  \"iconClass\": \"\",\n                  \"id\": \"\",\n                  \"label\": \"\",\n                  \"styleClass\": \"\",\n                  \"title\": \"\",\n                  \"weight\": {{faker 'random.number'}}\n                }\n              ],\n              \"overdue\": {{faker 'random.boolean'}},\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"released\": {{faker 'random.boolean'}},\n              \"self\": \"\",\n              \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"userReleaseDate\": \"\",\n              \"userStartDate\": \"\"\n            }\n          ]\n        },\n        \"role\": {\n          \"actors\": [\n            {\n              \"actorGroup\": {\n                \"displayName\": \"\",\n                \"name\": \"\"\n              },\n              \"actorUser\": {\n                \"accountId\": \"\"\n              },\n              \"avatarUrl\": \"\",\n              \"displayName\": \"\",\n              \"id\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n            }\n          ],\n          \"admin\": {{faker 'random.boolean'}},\n          \"currentUserRole\": {{faker 'random.boolean'}},\n          \"default\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"roleConfigurable\": {{faker 'random.boolean'}},\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"translatedName\": \"\"\n        },\n        \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n        \"user\": {\n          \"accountId\": \"\",\n          \"active\": {{faker 'random.boolean'}},\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      }\n    ],\n    \"sharedUsers\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"subscriptions\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"user\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          }\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"viewUrl\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get my filters",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/my",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"favourite\": {{faker 'random.boolean'}},\n    \"favouritedCount\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"jql\": \"\",\n    \"name\": \"\",\n    \"owner\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"searchUrl\": \"\",\n    \"self\": \"\",\n    \"sharePermissions\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"project\": {\n          \"archived\": {{faker 'random.boolean'}},\n          \"archivedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"components\": [\n            {\n              \"assignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"description\": \"\",\n              \"id\": \"\",\n              \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n              \"lead\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"leadAccountId\": \"\",\n              \"leadUserName\": \"\",\n              \"name\": \"\",\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"realAssignee\": {\n                \"accountId\": \"\",\n                \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                \"active\": {{faker 'random.boolean'}},\n                \"applicationRoles\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"defaultGroups\": [\n                        \"\"\n                      ],\n                      \"defined\": {{faker 'random.boolean'}},\n                      \"groups\": [\n                        \"\"\n                      ],\n                      \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                      \"key\": \"\",\n                      \"name\": \"\",\n                      \"numberOfSeats\": {{faker 'random.number'}},\n                      \"platform\": {{faker 'random.boolean'}},\n                      \"remainingSeats\": {{faker 'random.number'}},\n                      \"selectedByDefault\": {{faker 'random.boolean'}},\n                      \"userCount\": {{faker 'random.number'}},\n                      \"userCountDescription\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"displayName\": \"\",\n                \"emailAddress\": \"\",\n                \"expand\": \"\",\n                \"groups\": {\n                  \"callback\": {},\n                  \"items\": [\n                    {\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    }\n                  ],\n                  \"max-results\": {{faker 'random.number'}},\n                  \"pagingCallback\": {},\n                  \"size\": {{faker 'random.number'}}\n                },\n                \"key\": \"\",\n                \"locale\": \"\",\n                \"name\": \"\",\n                \"self\": \"\",\n                \"timeZone\": \"\"\n              },\n              \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n              \"self\": \"\"\n            }\n          ],\n          \"deleted\": {{faker 'random.boolean'}},\n          \"deletedBy\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n          \"description\": \"\",\n          \"email\": \"\",\n          \"expand\": \"\",\n          \"favourite\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"insight\": {\n            \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n            \"totalIssueCount\": {{faker 'random.number'}}\n          },\n          \"isPrivate\": {{faker 'random.boolean'}},\n          \"issueTypeHierarchy\": {\n            \"baseLevelId\": {{faker 'random.number'}},\n            \"levels\": [\n              {\n                \"aboveLevelId\": {{faker 'random.number'}},\n                \"belowLevelId\": {{faker 'random.number'}},\n                \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                \"id\": {{faker 'random.number'}},\n                \"issueTypeIds\": [\n                  {{faker 'random.number'}}\n                ],\n                \"level\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"projectConfigurationId\": {{faker 'random.number'}}\n              }\n            ]\n          },\n          \"issueTypes\": [\n            {\n              \"avatarId\": {{faker 'random.number'}},\n              \"description\": \"\",\n              \"entityId\": \"{{faker 'random.uuid'}}\",\n              \"hierarchyLevel\": {{faker 'random.number'}},\n              \"iconUrl\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"scope\": {\n                \"project\": {\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"id\": \"\",\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"projectCategory\": {\n                    \"description\": \"\",\n                    \"id\": \"\",\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  },\n                  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                  \"self\": \"\",\n                  \"simplified\": {{faker 'random.boolean'}}\n                },\n                \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n              },\n              \"self\": \"\",\n              \"subtask\": {{faker 'random.boolean'}}\n            }\n          ],\n          \"key\": \"\",\n          \"landingPageInfo\": {\n            \"boardId\": {{faker 'random.number'}},\n            \"projectKey\": \"\",\n            \"projectType\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"url\": \"\"\n          },\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"name\": \"\",\n          \"permissions\": {\n            \"canEdit\": {{faker 'random.boolean'}}\n          },\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"properties\": {},\n          \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n          \"roles\": {},\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n          \"url\": \"\",\n          \"uuid\": \"{{faker 'random.uuid'}}\",\n          \"versions\": [\n            {\n              \"archived\": {{faker 'random.boolean'}},\n              \"description\": \"\",\n              \"expand\": \"\",\n              \"id\": \"\",\n              \"issuesStatusForFixVersion\": {\n                \"done\": {{faker 'random.number'}},\n                \"inProgress\": {{faker 'random.number'}},\n                \"toDo\": {{faker 'random.number'}},\n                \"unmapped\": {{faker 'random.number'}}\n              },\n              \"moveUnfixedIssuesTo\": \"\",\n              \"name\": \"\",\n              \"operations\": [\n                {\n                  \"href\": \"\",\n                  \"iconClass\": \"\",\n                  \"id\": \"\",\n                  \"label\": \"\",\n                  \"styleClass\": \"\",\n                  \"title\": \"\",\n                  \"weight\": {{faker 'random.number'}}\n                }\n              ],\n              \"overdue\": {{faker 'random.boolean'}},\n              \"project\": \"\",\n              \"projectId\": {{faker 'random.number'}},\n              \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"released\": {{faker 'random.boolean'}},\n              \"self\": \"\",\n              \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n              \"userReleaseDate\": \"\",\n              \"userStartDate\": \"\"\n            }\n          ]\n        },\n        \"role\": {\n          \"actors\": [\n            {\n              \"actorGroup\": {\n                \"displayName\": \"\",\n                \"name\": \"\"\n              },\n              \"actorUser\": {\n                \"accountId\": \"\"\n              },\n              \"avatarUrl\": \"\",\n              \"displayName\": \"\",\n              \"id\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n            }\n          ],\n          \"admin\": {{faker 'random.boolean'}},\n          \"currentUserRole\": {{faker 'random.boolean'}},\n          \"default\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"roleConfigurable\": {{faker 'random.boolean'}},\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"translatedName\": \"\"\n        },\n        \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n        \"user\": {\n          \"accountId\": \"\",\n          \"active\": {{faker 'random.boolean'}},\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      }\n    ],\n    \"sharedUsers\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"subscriptions\": {\n      \"end-index\": {{faker 'random.number'}},\n      \"items\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"user\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          }\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"size\": {{faker 'random.number'}},\n      \"start-index\": {{faker 'random.number'}}\n    },\n    \"viewUrl\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Search for filters",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"favourite\": {{faker 'random.boolean'}},\n      \"favouritedCount\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"jql\": \"\",\n      \"name\": \"\",\n      \"owner\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"searchUrl\": \"\",\n      \"self\": \"\",\n      \"sharePermissions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"project\": {\n            \"archived\": {{faker 'random.boolean'}},\n            \"archivedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"components\": [\n              {\n                \"assignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"description\": \"\",\n                \"id\": \"\",\n                \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n                \"lead\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"leadAccountId\": \"\",\n                \"leadUserName\": \"\",\n                \"name\": \"\",\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"realAssignee\": {\n                  \"accountId\": \"\",\n                  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n                  \"active\": {{faker 'random.boolean'}},\n                  \"applicationRoles\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"defaultGroups\": [\n                          \"\"\n                        ],\n                        \"defined\": {{faker 'random.boolean'}},\n                        \"groups\": [\n                          \"\"\n                        ],\n                        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                        \"key\": \"\",\n                        \"name\": \"\",\n                        \"numberOfSeats\": {{faker 'random.number'}},\n                        \"platform\": {{faker 'random.boolean'}},\n                        \"remainingSeats\": {{faker 'random.number'}},\n                        \"selectedByDefault\": {{faker 'random.boolean'}},\n                        \"userCount\": {{faker 'random.number'}},\n                        \"userCountDescription\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"avatarUrls\": {\n                    \"16x16\": \"\",\n                    \"24x24\": \"\",\n                    \"32x32\": \"\",\n                    \"48x48\": \"\"\n                  },\n                  \"displayName\": \"\",\n                  \"emailAddress\": \"\",\n                  \"expand\": \"\",\n                  \"groups\": {\n                    \"callback\": {},\n                    \"items\": [\n                      {\n                        \"name\": \"\",\n                        \"self\": \"\"\n                      }\n                    ],\n                    \"max-results\": {{faker 'random.number'}},\n                    \"pagingCallback\": {},\n                    \"size\": {{faker 'random.number'}}\n                  },\n                  \"key\": \"\",\n                  \"locale\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\",\n                  \"timeZone\": \"\"\n                },\n                \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n                \"self\": \"\"\n              }\n            ],\n            \"deleted\": {{faker 'random.boolean'}},\n            \"deletedBy\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n            \"description\": \"\",\n            \"email\": \"\",\n            \"expand\": \"\",\n            \"favourite\": {{faker 'random.boolean'}},\n            \"id\": \"\",\n            \"insight\": {\n              \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n              \"totalIssueCount\": {{faker 'random.number'}}\n            },\n            \"isPrivate\": {{faker 'random.boolean'}},\n            \"issueTypeHierarchy\": {\n              \"baseLevelId\": {{faker 'random.number'}},\n              \"levels\": [\n                {\n                  \"aboveLevelId\": {{faker 'random.number'}},\n                  \"belowLevelId\": {{faker 'random.number'}},\n                  \"externalUuid\": \"{{faker 'random.uuid'}}\",\n                  \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n                  \"id\": {{faker 'random.number'}},\n                  \"issueTypeIds\": [\n                    {{faker 'random.number'}}\n                  ],\n                  \"level\": {{faker 'random.number'}},\n                  \"name\": \"\",\n                  \"projectConfigurationId\": {{faker 'random.number'}}\n                }\n              ]\n            },\n            \"issueTypes\": [\n              {\n                \"avatarId\": {{faker 'random.number'}},\n                \"description\": \"\",\n                \"entityId\": \"{{faker 'random.uuid'}}\",\n                \"hierarchyLevel\": {{faker 'random.number'}},\n                \"iconUrl\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"scope\": {\n                  \"project\": {\n                    \"avatarUrls\": {\n                      \"16x16\": \"\",\n                      \"24x24\": \"\",\n                      \"32x32\": \"\",\n                      \"48x48\": \"\"\n                    },\n                    \"id\": \"\",\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"projectCategory\": {\n                      \"description\": \"\",\n                      \"id\": \"\",\n                      \"name\": \"\",\n                      \"self\": \"\"\n                    },\n                    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                    \"self\": \"\",\n                    \"simplified\": {{faker 'random.boolean'}}\n                  },\n                  \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n                },\n                \"self\": \"\",\n                \"subtask\": {{faker 'random.boolean'}}\n              }\n            ],\n            \"key\": \"\",\n            \"landingPageInfo\": {\n              \"boardId\": {{faker 'random.number'}},\n              \"projectKey\": \"\",\n              \"projectType\": \"\",\n              \"simplified\": {{faker 'random.boolean'}},\n              \"url\": \"\"\n            },\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"name\": \"\",\n            \"permissions\": {\n              \"canEdit\": {{faker 'random.boolean'}}\n            },\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"properties\": {},\n            \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n            \"roles\": {},\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}},\n            \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n            \"url\": \"\",\n            \"uuid\": \"{{faker 'random.uuid'}}\",\n            \"versions\": [\n              {\n                \"archived\": {{faker 'random.boolean'}},\n                \"description\": \"\",\n                \"expand\": \"\",\n                \"id\": \"\",\n                \"issuesStatusForFixVersion\": {\n                  \"done\": {{faker 'random.number'}},\n                  \"inProgress\": {{faker 'random.number'}},\n                  \"toDo\": {{faker 'random.number'}},\n                  \"unmapped\": {{faker 'random.number'}}\n                },\n                \"moveUnfixedIssuesTo\": \"\",\n                \"name\": \"\",\n                \"operations\": [\n                  {\n                    \"href\": \"\",\n                    \"iconClass\": \"\",\n                    \"id\": \"\",\n                    \"label\": \"\",\n                    \"styleClass\": \"\",\n                    \"title\": \"\",\n                    \"weight\": {{faker 'random.number'}}\n                  }\n                ],\n                \"overdue\": {{faker 'random.boolean'}},\n                \"project\": \"\",\n                \"projectId\": {{faker 'random.number'}},\n                \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"released\": {{faker 'random.boolean'}},\n                \"self\": \"\",\n                \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n                \"userReleaseDate\": \"\",\n                \"userStartDate\": \"\"\n              }\n            ]\n          },\n          \"role\": {\n            \"actors\": [\n              {\n                \"actorGroup\": {\n                  \"displayName\": \"\",\n                  \"name\": \"\"\n                },\n                \"actorUser\": {\n                  \"accountId\": \"\"\n                },\n                \"avatarUrl\": \"\",\n                \"displayName\": \"\",\n                \"id\": {{faker 'random.number'}},\n                \"name\": \"\",\n                \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n              }\n            ],\n            \"admin\": {{faker 'random.boolean'}},\n            \"currentUserRole\": {{faker 'random.boolean'}},\n            \"default\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"roleConfigurable\": {{faker 'random.boolean'}},\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"translatedName\": \"\"\n          },\n          \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n          \"user\": {\n            \"accountId\": \"\",\n            \"active\": {{faker 'random.boolean'}},\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        }\n      ],\n      \"subscriptions\": [\n        {\n          \"group\": {\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"user\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          }\n        }\n      ],\n      \"viewUrl\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `owner` and `accountId` are provided.\n *  `expand` includes an invalid value.\n *  `orderBy` is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete filter",
                      "method": "delete",
                      "endpoint": "rest/api/3/filter/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the filter is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the user does not have permission to delete the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get filter",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"favouritedCount\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"jql\": \"\",\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"searchUrl\": \"\",\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"sharedUsers\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"subscriptions\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"user\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"viewUrl\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the filter is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update filter",
                      "method": "put",
                      "endpoint": "rest/api/3/filter/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"favouritedCount\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"jql\": \"\",\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"searchUrl\": \"\",\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"sharedUsers\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"subscriptions\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"user\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"viewUrl\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request object is invalid. For example, the `name` is not unique or the project ID is not specified for a project role share permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Reset columns",
                      "method": "delete",
                      "endpoint": "rest/api/3/filter/:id/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get columns",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/:id/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"label\": \"\",\n    \"value\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if a column configuration is not set for the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set columns",
                      "method": "put",
                      "endpoint": "rest/api/3/filter/:id/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  a non-navigable field is set as a column.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove filter as favorite",
                      "method": "delete",
                      "endpoint": "rest/api/3/filter/:id/favourite",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"favouritedCount\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"jql\": \"\",\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"searchUrl\": \"\",\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"sharedUsers\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"subscriptions\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"user\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"viewUrl\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add filter as favorite",
                      "method": "put",
                      "endpoint": "rest/api/3/filter/:id/favourite",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"favouritedCount\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"jql\": \"\",\n  \"name\": \"\",\n  \"owner\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"searchUrl\": \"\",\n  \"self\": \"\",\n  \"sharePermissions\": [\n    {\n      \"group\": {\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"project\": {\n        \"archived\": {{faker 'random.boolean'}},\n        \"archivedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"components\": [\n          {\n            \"assignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"description\": \"\",\n            \"id\": \"\",\n            \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n            \"lead\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"leadAccountId\": \"\",\n            \"leadUserName\": \"\",\n            \"name\": \"\",\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"realAssignee\": {\n              \"accountId\": \"\",\n              \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n              \"active\": {{faker 'random.boolean'}},\n              \"applicationRoles\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"defaultGroups\": [\n                      \"\"\n                    ],\n                    \"defined\": {{faker 'random.boolean'}},\n                    \"groups\": [\n                      \"\"\n                    ],\n                    \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                    \"key\": \"\",\n                    \"name\": \"\",\n                    \"numberOfSeats\": {{faker 'random.number'}},\n                    \"platform\": {{faker 'random.boolean'}},\n                    \"remainingSeats\": {{faker 'random.number'}},\n                    \"selectedByDefault\": {{faker 'random.boolean'}},\n                    \"userCount\": {{faker 'random.number'}},\n                    \"userCountDescription\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"displayName\": \"\",\n              \"emailAddress\": \"\",\n              \"expand\": \"\",\n              \"groups\": {\n                \"callback\": {},\n                \"items\": [\n                  {\n                    \"name\": \"\",\n                    \"self\": \"\"\n                  }\n                ],\n                \"max-results\": {{faker 'random.number'}},\n                \"pagingCallback\": {},\n                \"size\": {{faker 'random.number'}}\n              },\n              \"key\": \"\",\n              \"locale\": \"\",\n              \"name\": \"\",\n              \"self\": \"\",\n              \"timeZone\": \"\"\n            },\n            \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n            \"self\": \"\"\n          }\n        ],\n        \"deleted\": {{faker 'random.boolean'}},\n        \"deletedBy\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n        \"description\": \"\",\n        \"email\": \"\",\n        \"expand\": \"\",\n        \"favourite\": {{faker 'random.boolean'}},\n        \"id\": \"\",\n        \"insight\": {\n          \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n          \"totalIssueCount\": {{faker 'random.number'}}\n        },\n        \"isPrivate\": {{faker 'random.boolean'}},\n        \"issueTypeHierarchy\": {\n          \"baseLevelId\": {{faker 'random.number'}},\n          \"levels\": [\n            {\n              \"aboveLevelId\": {{faker 'random.number'}},\n              \"belowLevelId\": {{faker 'random.number'}},\n              \"externalUuid\": \"{{faker 'random.uuid'}}\",\n              \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n              \"id\": {{faker 'random.number'}},\n              \"issueTypeIds\": [\n                {{faker 'random.number'}}\n              ],\n              \"level\": {{faker 'random.number'}},\n              \"name\": \"\",\n              \"projectConfigurationId\": {{faker 'random.number'}}\n            }\n          ]\n        },\n        \"issueTypes\": [\n          {\n            \"avatarId\": {{faker 'random.number'}},\n            \"description\": \"\",\n            \"entityId\": \"{{faker 'random.uuid'}}\",\n            \"hierarchyLevel\": {{faker 'random.number'}},\n            \"iconUrl\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"scope\": {\n              \"project\": {\n                \"avatarUrls\": {\n                  \"16x16\": \"\",\n                  \"24x24\": \"\",\n                  \"32x32\": \"\",\n                  \"48x48\": \"\"\n                },\n                \"id\": \"\",\n                \"key\": \"\",\n                \"name\": \"\",\n                \"projectCategory\": {\n                  \"description\": \"\",\n                  \"id\": \"\",\n                  \"name\": \"\",\n                  \"self\": \"\"\n                },\n                \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n                \"self\": \"\",\n                \"simplified\": {{faker 'random.boolean'}}\n              },\n              \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n            },\n            \"self\": \"\",\n            \"subtask\": {{faker 'random.boolean'}}\n          }\n        ],\n        \"key\": \"\",\n        \"landingPageInfo\": {\n          \"boardId\": {{faker 'random.number'}},\n          \"projectKey\": \"\",\n          \"projectType\": \"\",\n          \"simplified\": {{faker 'random.boolean'}},\n          \"url\": \"\"\n        },\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"permissions\": {\n          \"canEdit\": {{faker 'random.boolean'}}\n        },\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"properties\": {},\n        \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n        \"roles\": {},\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n        \"url\": \"\",\n        \"uuid\": \"{{faker 'random.uuid'}}\",\n        \"versions\": [\n          {\n            \"archived\": {{faker 'random.boolean'}},\n            \"description\": \"\",\n            \"expand\": \"\",\n            \"id\": \"\",\n            \"issuesStatusForFixVersion\": {\n              \"done\": {{faker 'random.number'}},\n              \"inProgress\": {{faker 'random.number'}},\n              \"toDo\": {{faker 'random.number'}},\n              \"unmapped\": {{faker 'random.number'}}\n            },\n            \"moveUnfixedIssuesTo\": \"\",\n            \"name\": \"\",\n            \"operations\": [\n              {\n                \"href\": \"\",\n                \"iconClass\": \"\",\n                \"id\": \"\",\n                \"label\": \"\",\n                \"styleClass\": \"\",\n                \"title\": \"\",\n                \"weight\": {{faker 'random.number'}}\n              }\n            ],\n            \"overdue\": {{faker 'random.boolean'}},\n            \"project\": \"\",\n            \"projectId\": {{faker 'random.number'}},\n            \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"released\": {{faker 'random.boolean'}},\n            \"self\": \"\",\n            \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n            \"userReleaseDate\": \"\",\n            \"userStartDate\": \"\"\n          }\n        ]\n      },\n      \"role\": {\n        \"actors\": [\n          {\n            \"actorGroup\": {\n              \"displayName\": \"\",\n              \"name\": \"\"\n            },\n            \"actorUser\": {\n              \"accountId\": \"\"\n            },\n            \"avatarUrl\": \"\",\n            \"displayName\": \"\",\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n          }\n        ],\n        \"admin\": {{faker 'random.boolean'}},\n        \"currentUserRole\": {{faker 'random.boolean'}},\n        \"default\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"roleConfigurable\": {{faker 'random.boolean'}},\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"translatedName\": \"\"\n      },\n      \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n      \"user\": {\n        \"accountId\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    }\n  ],\n  \"sharedUsers\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"subscriptions\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"group\": {\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"id\": {{faker 'random.number'}},\n        \"user\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        }\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  },\n  \"viewUrl\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to favorite the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get share permissions",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/:id/permission",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"group\": {\n      \"name\": \"\",\n      \"self\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"project\": {\n      \"archived\": {{faker 'random.boolean'}},\n      \"archivedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"components\": [\n        {\n          \"assignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"description\": \"\",\n          \"id\": \"\",\n          \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"leadAccountId\": \"\",\n          \"leadUserName\": \"\",\n          \"name\": \"\",\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"realAssignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"self\": \"\"\n        }\n      ],\n      \"deleted\": {{faker 'random.boolean'}},\n      \"deletedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"\",\n      \"expand\": \"\",\n      \"favourite\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"insight\": {\n        \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"totalIssueCount\": {{faker 'random.number'}}\n      },\n      \"isPrivate\": {{faker 'random.boolean'}},\n      \"issueTypeHierarchy\": {\n        \"baseLevelId\": {{faker 'random.number'}},\n        \"levels\": [\n          {\n            \"aboveLevelId\": {{faker 'random.number'}},\n            \"belowLevelId\": {{faker 'random.number'}},\n            \"externalUuid\": \"{{faker 'random.uuid'}}\",\n            \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n            \"id\": {{faker 'random.number'}},\n            \"issueTypeIds\": [\n              {{faker 'random.number'}}\n            ],\n            \"level\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"projectConfigurationId\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"issueTypes\": [\n        {\n          \"avatarId\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"entityId\": \"{{faker 'random.uuid'}}\",\n          \"hierarchyLevel\": {{faker 'random.number'}},\n          \"iconUrl\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"subtask\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"key\": \"\",\n      \"landingPageInfo\": {\n        \"boardId\": {{faker 'random.number'}},\n        \"projectKey\": \"\",\n        \"projectType\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"url\": \"\"\n      },\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"name\": \"\",\n      \"permissions\": {\n        \"canEdit\": {{faker 'random.boolean'}}\n      },\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"properties\": {},\n      \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n      \"roles\": {},\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}},\n      \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n      \"url\": \"\",\n      \"uuid\": \"{{faker 'random.uuid'}}\",\n      \"versions\": [\n        {\n          \"archived\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"expand\": \"\",\n          \"id\": \"\",\n          \"issuesStatusForFixVersion\": {\n            \"done\": {{faker 'random.number'}},\n            \"inProgress\": {{faker 'random.number'}},\n            \"toDo\": {{faker 'random.number'}},\n            \"unmapped\": {{faker 'random.number'}}\n          },\n          \"moveUnfixedIssuesTo\": \"\",\n          \"name\": \"\",\n          \"operations\": [\n            {\n              \"href\": \"\",\n              \"iconClass\": \"\",\n              \"id\": \"\",\n              \"label\": \"\",\n              \"styleClass\": \"\",\n              \"title\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ],\n          \"overdue\": {{faker 'random.boolean'}},\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"released\": {{faker 'random.boolean'}},\n          \"self\": \"\",\n          \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"userReleaseDate\": \"\",\n          \"userStartDate\": \"\"\n        }\n      ]\n    },\n    \"role\": {\n      \"actors\": [\n        {\n          \"actorGroup\": {\n            \"displayName\": \"\",\n            \"name\": \"\"\n          },\n          \"actorUser\": {\n            \"accountId\": \"\"\n          },\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n        }\n      ],\n      \"admin\": {{faker 'random.boolean'}},\n      \"currentUserRole\": {{faker 'random.boolean'}},\n      \"default\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"roleConfigurable\": {{faker 'random.boolean'}},\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"translatedName\": \"\"\n    },\n    \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n    \"user\": {\n      \"accountId\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add share permission",
                      "method": "post",
                      "endpoint": "rest/api/3/filter/:id/permission",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"group\": {\n      \"name\": \"\",\n      \"self\": \"\"\n    },\n    \"id\": {{faker 'random.number'}},\n    \"project\": {\n      \"archived\": {{faker 'random.boolean'}},\n      \"archivedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"components\": [\n        {\n          \"assignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"description\": \"\",\n          \"id\": \"\",\n          \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"leadAccountId\": \"\",\n          \"leadUserName\": \"\",\n          \"name\": \"\",\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"realAssignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"self\": \"\"\n        }\n      ],\n      \"deleted\": {{faker 'random.boolean'}},\n      \"deletedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"\",\n      \"expand\": \"\",\n      \"favourite\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"insight\": {\n        \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"totalIssueCount\": {{faker 'random.number'}}\n      },\n      \"isPrivate\": {{faker 'random.boolean'}},\n      \"issueTypeHierarchy\": {\n        \"baseLevelId\": {{faker 'random.number'}},\n        \"levels\": [\n          {\n            \"aboveLevelId\": {{faker 'random.number'}},\n            \"belowLevelId\": {{faker 'random.number'}},\n            \"externalUuid\": \"{{faker 'random.uuid'}}\",\n            \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n            \"id\": {{faker 'random.number'}},\n            \"issueTypeIds\": [\n              {{faker 'random.number'}}\n            ],\n            \"level\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"projectConfigurationId\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"issueTypes\": [\n        {\n          \"avatarId\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"entityId\": \"{{faker 'random.uuid'}}\",\n          \"hierarchyLevel\": {{faker 'random.number'}},\n          \"iconUrl\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"subtask\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"key\": \"\",\n      \"landingPageInfo\": {\n        \"boardId\": {{faker 'random.number'}},\n        \"projectKey\": \"\",\n        \"projectType\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"url\": \"\"\n      },\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"name\": \"\",\n      \"permissions\": {\n        \"canEdit\": {{faker 'random.boolean'}}\n      },\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"properties\": {},\n      \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n      \"roles\": {},\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}},\n      \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n      \"url\": \"\",\n      \"uuid\": \"{{faker 'random.uuid'}}\",\n      \"versions\": [\n        {\n          \"archived\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"expand\": \"\",\n          \"id\": \"\",\n          \"issuesStatusForFixVersion\": {\n            \"done\": {{faker 'random.number'}},\n            \"inProgress\": {{faker 'random.number'}},\n            \"toDo\": {{faker 'random.number'}},\n            \"unmapped\": {{faker 'random.number'}}\n          },\n          \"moveUnfixedIssuesTo\": \"\",\n          \"name\": \"\",\n          \"operations\": [\n            {\n              \"href\": \"\",\n              \"iconClass\": \"\",\n              \"id\": \"\",\n              \"label\": \"\",\n              \"styleClass\": \"\",\n              \"title\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ],\n          \"overdue\": {{faker 'random.boolean'}},\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"released\": {{faker 'random.boolean'}},\n          \"self\": \"\",\n          \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"userReleaseDate\": \"\",\n          \"userStartDate\": \"\"\n        }\n      ]\n    },\n    \"role\": {\n      \"actors\": [\n        {\n          \"actorGroup\": {\n            \"displayName\": \"\",\n            \"name\": \"\"\n          },\n          \"actorUser\": {\n            \"accountId\": \"\"\n          },\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n        }\n      ],\n      \"admin\": {{faker 'random.boolean'}},\n      \"currentUserRole\": {{faker 'random.boolean'}},\n      \"default\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"roleConfigurable\": {{faker 'random.boolean'}},\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"translatedName\": \"\"\n    },\n    \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n    \"user\": {\n      \"accountId\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  }\n]",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the request object is invalid. For example, it contains an invalid type, the ID does not match the type, or the project or group is not found.\n *  the user does not own the filter.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete share permission",
                      "method": "delete",
                      "endpoint": "rest/api/3/filter/:id/permission/:permissionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the user does not own the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get share permission",
                      "method": "get",
                      "endpoint": "rest/api/3/filter/:id/permission/:permissionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"group\": {\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"project\": {\n    \"archived\": {{faker 'random.boolean'}},\n    \"archivedBy\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n    \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"components\": [\n      {\n        \"assignee\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"description\": \"\",\n        \"id\": \"\",\n        \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"leadAccountId\": \"\",\n        \"leadUserName\": \"\",\n        \"name\": \"\",\n        \"project\": \"\",\n        \"projectId\": {{faker 'random.number'}},\n        \"realAssignee\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"self\": \"\"\n      }\n    ],\n    \"deleted\": {{faker 'random.boolean'}},\n    \"deletedBy\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"\",\n    \"expand\": \"\",\n    \"favourite\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"insight\": {\n      \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalIssueCount\": {{faker 'random.number'}}\n    },\n    \"isPrivate\": {{faker 'random.boolean'}},\n    \"issueTypeHierarchy\": {\n      \"baseLevelId\": {{faker 'random.number'}},\n      \"levels\": [\n        {\n          \"aboveLevelId\": {{faker 'random.number'}},\n          \"belowLevelId\": {{faker 'random.number'}},\n          \"externalUuid\": \"{{faker 'random.uuid'}}\",\n          \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n          \"id\": {{faker 'random.number'}},\n          \"issueTypeIds\": [\n            {{faker 'random.number'}}\n          ],\n          \"level\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"projectConfigurationId\": {{faker 'random.number'}}\n        }\n      ]\n    },\n    \"issueTypes\": [\n      {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"key\": \"\",\n    \"landingPageInfo\": {\n      \"boardId\": {{faker 'random.number'}},\n      \"projectKey\": \"\",\n      \"projectType\": \"\",\n      \"simplified\": {{faker 'random.boolean'}},\n      \"url\": \"\"\n    },\n    \"lead\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"name\": \"\",\n    \"permissions\": {\n      \"canEdit\": {{faker 'random.boolean'}}\n    },\n    \"projectCategory\": {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    },\n    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n    \"properties\": {},\n    \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n    \"roles\": {},\n    \"self\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n    \"url\": \"\",\n    \"uuid\": \"{{faker 'random.uuid'}}\",\n    \"versions\": [\n      {\n        \"archived\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"expand\": \"\",\n        \"id\": \"\",\n        \"issuesStatusForFixVersion\": {\n          \"done\": {{faker 'random.number'}},\n          \"inProgress\": {{faker 'random.number'}},\n          \"toDo\": {{faker 'random.number'}},\n          \"unmapped\": {{faker 'random.number'}}\n        },\n        \"moveUnfixedIssuesTo\": \"\",\n        \"name\": \"\",\n        \"operations\": [\n          {\n            \"href\": \"\",\n            \"iconClass\": \"\",\n            \"id\": \"\",\n            \"label\": \"\",\n            \"styleClass\": \"\",\n            \"title\": \"\",\n            \"weight\": {{faker 'random.number'}}\n          }\n        ],\n        \"overdue\": {{faker 'random.boolean'}},\n        \"project\": \"\",\n        \"projectId\": {{faker 'random.number'}},\n        \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n        \"released\": {{faker 'random.boolean'}},\n        \"self\": \"\",\n        \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n        \"userReleaseDate\": \"\",\n        \"userStartDate\": \"\"\n      }\n    ]\n  },\n  \"role\": {\n    \"actors\": [\n      {\n        \"actorGroup\": {\n          \"displayName\": \"\",\n          \"name\": \"\"\n        },\n        \"actorUser\": {\n          \"accountId\": \"\"\n        },\n        \"avatarUrl\": \"\",\n        \"displayName\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n      }\n    ],\n    \"admin\": {{faker 'random.boolean'}},\n    \"currentUserRole\": {{faker 'random.boolean'}},\n    \"default\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"roleConfigurable\": {{faker 'random.boolean'}},\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"translatedName\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'user' 'group' 'project' 'projectRole' 'global' 'loggedin' 'authenticated' 'project-unknown')}}\",\n  \"user\": {\n    \"accountId\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the filter is not found.\n *  the permission is not found.\n *  the user does not have permission to view the filter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove group",
                      "method": "delete",
                      "endpoint": "rest/api/3/group",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the group name is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing from the request.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the group is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get group",
                      "method": "get",
                      "endpoint": "rest/api/3/group",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"users\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the group name is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the calling user does not have the Administer Jira global permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the group is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create group",
                      "method": "post",
                      "endpoint": "rest/api/3/group",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"users\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if group name is not specified or the group name is in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk get groups",
                      "method": "get",
                      "endpoint": "rest/api/3/group/bulk",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"groupId\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get users from group",
                      "method": "get",
                      "endpoint": "rest/api/3/group/member",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"accountId\": \"\",\n      \"accountType\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the group name is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the calling user does not have the Administer Jira global permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the group is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove user from group",
                      "method": "delete",
                      "endpoint": "rest/api/3/group/user",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `groupName` is missing.\n *  `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing from the request.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the group or user are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add user to group",
                      "method": "post",
                      "endpoint": "rest/api/3/group/user",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"users\": {\n    \"end-index\": {{faker 'random.number'}},\n    \"items\": [\n      {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"size\": {{faker 'random.number'}},\n    \"start-index\": {{faker 'random.number'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `groupname` is not provided.\n *  `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing from the request.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the calling user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the group or user are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find groups",
                      "method": "get",
                      "endpoint": "rest/api/3/groups/picker",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"groups\": [\n    {\n      \"groupId\": \"\",\n      \"html\": \"\",\n      \"labels\": [\n        {\n          \"text\": \"\",\n          \"title\": \"\",\n          \"type\": \"{{oneOf (array 'ADMIN' 'SINGLE' 'MULTIPLE')}}\"\n        }\n      ],\n      \"name\": \"\"\n    }\n  ],\n  \"header\": \"\",\n  \"total\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users and groups",
                      "method": "get",
                      "endpoint": "rest/api/3/groupuserpicker",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"groups\": {\n    \"groups\": [\n      {\n        \"groupId\": \"\",\n        \"html\": \"\",\n        \"labels\": [\n          {\n            \"text\": \"\",\n            \"title\": \"\",\n            \"type\": \"{{oneOf (array 'ADMIN' 'SINGLE' 'MULTIPLE')}}\"\n          }\n        ],\n        \"name\": \"\"\n      }\n    ],\n    \"header\": \"\",\n    \"total\": {{faker 'random.number'}}\n  },\n  \"users\": {\n    \"header\": \"\",\n    \"total\": {{faker 'random.number'}},\n    \"users\": [\n      {\n        \"accountId\": \"\",\n        \"avatarUrl\": \"\",\n        \"displayName\": \"\",\n        \"html\": \"\",\n        \"key\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the query parameter is not provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get license",
                      "method": "get",
                      "endpoint": "rest/api/3/instance/license",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"applications\": [\n    {\n      \"id\": \"\",\n      \"plan\": \"{{oneOf (array 'UNLICENSED' 'FREE' 'PAID')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue",
                      "method": "post",
                      "endpoint": "rest/api/3/issue",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"key\": \"\",\n  \"self\": \"\",\n  \"transition\": {\n    \"errorCollection\": {\n      \"errorMessages\": [\n        \"\"\n      ],\n      \"errors\": {},\n      \"status\": {{faker 'random.number'}}\n    },\n    \"status\": {{faker 'random.number'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk create issue",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/bulk",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"errors\": [\n    {\n      \"elementErrors\": {\n        \"errorMessages\": [\n          \"\"\n        ],\n        \"errors\": {},\n        \"status\": {{faker 'random.number'}}\n      },\n      \"failedElementNumber\": {{faker 'random.number'}},\n      \"status\": {{faker 'random.number'}}\n    }\n  ],\n  \"issues\": [\n    {\n      \"id\": \"\",\n      \"key\": \"\",\n      \"self\": \"\",\n      \"transition\": {\n        \"errorCollection\": {\n          \"errorMessages\": [\n            \"\"\n          ],\n          \"errors\": {},\n          \"status\": {{faker 'random.number'}}\n        },\n        \"status\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if any of the issue or subtask creation requests were successful. A request may be unsuccessful when it:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errors\": [\n    {\n      \"elementErrors\": {\n        \"errorMessages\": [\n          \"\"\n        ],\n        \"errors\": {},\n        \"status\": {{faker 'random.number'}}\n      },\n      \"failedElementNumber\": {{faker 'random.number'}},\n      \"status\": {{faker 'random.number'}}\n    }\n  ],\n  \"issues\": [\n    {\n      \"id\": \"\",\n      \"key\": \"\",\n      \"self\": \"\",\n      \"transition\": {\n        \"errorCollection\": {\n          \"errorMessages\": [\n            \"\"\n          ],\n          \"errors\": {},\n          \"status\": {{faker 'random.number'}}\n        },\n        \"status\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if all requests are invalid. Requests may be unsuccessful when they:\n\n *  are missing required fields.\n *  contain invalid field values.\n *  contain fields that cannot be set for the issue type.\n *  are by a user who does not have the necessary permission.\n *  are to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  are invalid for any other reason.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get create issue metadata",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/createmeta",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"projects\": [\n    {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuetypes\": [\n        {\n          \"avatarId\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"entityId\": \"{{faker 'random.uuid'}}\",\n          \"expand\": \"\",\n          \"fields\": {},\n          \"hierarchyLevel\": {{faker 'random.number'}},\n          \"iconUrl\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"subtask\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue picker suggestions",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/picker",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"sections\": [\n    {\n      \"id\": \"\",\n      \"issues\": [\n        {\n          \"id\": {{faker 'random.number'}},\n          \"img\": \"\",\n          \"key\": \"\",\n          \"keyHtml\": \"\",\n          \"summary\": \"\",\n          \"summaryText\": \"\"\n        }\n      ],\n      \"label\": \"\",\n      \"msg\": \"\",\n      \"sub\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk set issues properties",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the operation is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Return if the request is invalid or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk delete issue property",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk set issue property",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue has subtasks and `deleteSubtasks` is not set to *true*.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to delete the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Edit issue",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the request body is missing.\n *  the user does not have the necessary permission to edit one or more fields.\n *  the request includes one or more fields that are not found or are not associated with the issue's edit screen.\n *  the request includes an invalid transition.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user uses `overrideScreenSecurity` or `overrideEditableFlag` but doesn't have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign issue",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/assignee",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the user is not found.\n *  `name`, `key`, or `accountId` is missing.\n *  more than one of `name`, `key`, and `accountId` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add attachment",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/attachments",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"author\": {\n      \"accountId\": \"\",\n      \"accountType\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"content\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"filename\": \"\",\n    \"id\": \"\",\n    \"mimeType\": \"\",\n    \"self\": \"\",\n    \"size\": {{faker 'random.number'}},\n    \"thumbnail\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  the issue is not found.\n *  the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 413,
                              "label": "The attachments exceed the maximum attachment size for issues. See [Configuring file attachments](https://confluence.atlassian.com/x/wIXKM) for details.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get changelogs",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/changelog",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"author\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"historyMetadata\": {\n        \"activityDescription\": \"\",\n        \"activityDescriptionKey\": \"\",\n        \"actor\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"cause\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"description\": \"\",\n        \"descriptionKey\": \"\",\n        \"emailDescription\": \"\",\n        \"emailDescriptionKey\": \"\",\n        \"extraData\": {},\n        \"generator\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"type\": \"\"\n      },\n      \"id\": \"\",\n      \"items\": [\n        {\n          \"field\": \"\",\n          \"fieldId\": \"\",\n          \"fieldtype\": \"\",\n          \"from\": \"\",\n          \"fromString\": \"\",\n          \"to\": \"\"\n        }\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get changelogs by IDs",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/changelog/list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"histories\": [\n    {\n      \"author\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"historyMetadata\": {\n        \"activityDescription\": \"\",\n        \"activityDescriptionKey\": \"\",\n        \"actor\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"cause\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"description\": \"\",\n        \"descriptionKey\": \"\",\n        \"emailDescription\": \"\",\n        \"emailDescriptionKey\": \"\",\n        \"extraData\": {},\n        \"generator\": {\n          \"avatarUrl\": \"\",\n          \"displayName\": \"\",\n          \"displayNameKey\": \"\",\n          \"id\": \"\",\n          \"type\": \"\",\n          \"url\": \"\"\n        },\n        \"type\": \"\"\n      },\n      \"id\": \"\",\n      \"items\": [\n        {\n          \"field\": \"\",\n          \"fieldId\": \"\",\n          \"fieldtype\": \"\",\n          \"from\": \"\",\n          \"fromString\": \"\",\n          \"to\": \"\"\n        }\n      ]\n    }\n  ],\n  \"maxResults\": {{faker 'random.number'}},\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get comments",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/comment",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"comments\": [\n    {\n      \"author\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"body\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"\",\n      \"jsdPublic\": {{faker 'random.boolean'}},\n      \"properties\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"renderedBody\": \"\",\n      \"self\": \"\",\n      \"updateAuthor\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"updated\": \"{{faker 'date.recent' 365}}\",\n      \"visibility\": {\n        \"type\": \"{{oneOf (array 'group' 'role')}}\",\n        \"value\": \"\"\n      }\n    }\n  ],\n  \"maxResults\": {{faker 'random.number'}},\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `orderBy` is set to a value other than *created*.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add comment",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/comment",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"body\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"jsdPublic\": {{faker 'random.boolean'}},\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"renderedBody\": \"\",\n  \"self\": \"\",\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete comment",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/comment/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the user does not have permission to delete the comment.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 405,
                              "label": "Returned if an anonymous call is made to the operation.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get comment",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/comment/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"body\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"jsdPublic\": {{faker 'random.boolean'}},\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"renderedBody\": \"\",\n  \"self\": \"\",\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update comment",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/comment/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"body\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"jsdPublic\": {{faker 'random.boolean'}},\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"renderedBody\": \"\",\n  \"self\": \"\",\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the user does not have permission to edit the comment or the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or comment is not found or the user does not have permission to view the issue or comment.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get edit issue metadata",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/editmeta",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"fields\": {}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user uses an override parameter but doesn't have permission to do so.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Send notification for issue",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/notify",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the email is queued for sending.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the recipient is the same as the calling user.\n *  the recipient is invalid. For example, the recipient is set to the assignee, but the issue is unassigned.\n *  the request is invalid. For example, required fields are missing or have invalid values.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n\n *  outgoing emails are disabled.\n *  no SMTP server is configured.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permissions to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue property",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or property is not found, or the user does not have permission to edit the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue property",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or property is not found or the user does not have permission to see the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set issue property",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the issue property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the issue property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to edit the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete remote issue link by global ID",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if a global ID isn't provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to link issues.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get remote issue links",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"application\": {\n    \"name\": \"\",\n    \"type\": \"\"\n  },\n  \"globalId\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"object\": {\n    \"icon\": {\n      \"link\": \"\",\n      \"title\": \"\",\n      \"url16x16\": \"\"\n    },\n    \"status\": {\n      \"icon\": {\n        \"link\": \"\",\n        \"title\": \"\",\n        \"url16x16\": \"\"\n      },\n      \"resolved\": {{faker 'random.boolean'}}\n    },\n    \"summary\": \"\",\n    \"title\": \"\",\n    \"url\": \"\"\n  },\n  \"relationship\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if issue linking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create or update remote issue link",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the remote issue link is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the remote issue link is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to link issues.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete remote issue link by ID",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the link ID is invalid or the remote issue link does not belong to the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to link issues.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get remote issue link by ID",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"application\": {\n    \"name\": \"\",\n    \"type\": \"\"\n  },\n  \"globalId\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"object\": {\n    \"icon\": {\n      \"link\": \"\",\n      \"title\": \"\",\n      \"url16x16\": \"\"\n    },\n    \"status\": {\n      \"icon\": {\n        \"link\": \"\",\n        \"title\": \"\",\n        \"url16x16\": \"\"\n      },\n      \"resolved\": {{faker 'random.boolean'}}\n    },\n    \"summary\": \"\",\n    \"title\": \"\",\n    \"url\": \"\"\n  },\n  \"relationship\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the link ID is invalid or the remote issue link does not belong to the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if issue linking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update remote issue link by ID",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/remotelink/:linkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the link ID is invalid.\n *  the remote issue link does not belong to the issue.\n *  the request body is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to link issues.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get transitions",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/transitions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"transitions\": [\n    {\n      \"expand\": \"\",\n      \"fields\": {},\n      \"hasScreen\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"isAvailable\": {{faker 'random.boolean'}},\n      \"isConditional\": {{faker 'random.boolean'}},\n      \"isGlobal\": {{faker 'random.boolean'}},\n      \"isInitial\": {{faker 'random.boolean'}},\n      \"looped\": {{faker 'random.boolean'}},\n      \"name\": \"\",\n      \"to\": {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusCategory\": {\n          \"colorName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Transition issue",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/transitions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  no transition is specified.\n *  the user does not have permission to transition the issue.\n *  a field that isn't included on the transition screen is defined in `fields` or `update`.\n *  a field is specified in both `fields` and `update`.\n *  the request is invalid for any other reason.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete vote",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/votes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  voting is disabled.\n *  the user has not voted on the issue.\n *  the issue is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get votes",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/votes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"hasVoted\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"voters\": [\n    {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    }\n  ],\n  \"votes\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  voting is disabled.\n *  the user does not have permission to view the issue.\n *  the issue is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add vote",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/votes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  voting is disabled.\n *  the issue is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete watcher",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/watchers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountId` is not supplied.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the permission to manage the watcher list.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or the user is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue watchers",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/watchers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isWatching\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"watchCount\": {{faker 'random.number'}},\n  \"watchers\": [\n    {\n      \"accountId\": \"\",\n      \"accountType\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add watcher",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/watchers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the permission to manage the watcher list.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or the user is not found or the user does not have permission to view the issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue worklogs",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"maxResults\": {{faker 'random.number'}},\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"worklogs\": [\n    {\n      \"author\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"comment\": \"\",\n      \"created\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"\",\n      \"issueId\": \"\",\n      \"properties\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"self\": \"\",\n      \"started\": \"{{faker 'date.recent' 365}}\",\n      \"timeSpent\": \"\",\n      \"timeSpentSeconds\": {{faker 'random.number'}},\n      \"updateAuthor\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"updated\": \"{{faker 'date.recent' 365}}\",\n      \"visibility\": {\n        \"type\": \"{{oneOf (array 'group' 'role')}}\",\n        \"value\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue is not found or the user does not have permission to view the issue.\n *  `startAt` or `maxResults` has non-numeric values.\n *  time tracking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add worklog",
                      "method": "post",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"comment\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"issueId\": \"\",\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"self\": \"\",\n  \"started\": \"{{faker 'date.recent' 365}}\",\n  \"timeSpent\": \"\",\n  \"timeSpentSeconds\": {{faker 'random.number'}},\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to add the worklog.\n *  the request JSON is malformed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete worklog",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  `adjustEstimate` is set to `manual` but `reduceBy` is not provided or is invalid.\n *  the user does not have permission to delete the worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get worklog",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"comment\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"issueId\": \"\",\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"self\": \"\",\n  \"started\": \"{{faker 'date.recent' 365}}\",\n  \"timeSpent\": \"\",\n  \"timeSpentSeconds\": {{faker 'random.number'}},\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue is not found or the user does not have permission to view it.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.\n\n.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update worklog",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"author\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"comment\": \"\",\n  \"created\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"issueId\": \"\",\n  \"properties\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"self\": \"\",\n  \"started\": \"{{faker 'date.recent' 365}}\",\n  \"timeSpent\": \"\",\n  \"timeSpentSeconds\": {{faker 'random.number'}},\n  \"updateAuthor\": {\n    \"accountId\": \"\",\n    \"accountType\": \"\",\n    \"active\": {{faker 'random.boolean'}},\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"updated\": \"{{faker 'date.recent' 365}}\",\n  \"visibility\": {\n    \"type\": \"{{oneOf (array 'group' 'role')}}\",\n    \"value\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `adjustEstimate` is set to `new` but `newEstimate` is not provided or is invalid.\n *  the user does not have permission to update the worklog.\n *  the request JSON is malformed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue is not found or user does not have permission to view the issue.\n *  the worklog is not found or the user does not have permission to view it.\n *  time tracking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get worklog property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the worklog ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete worklog property",
                      "method": "delete",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the worklog property is removed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the worklog key or id is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to edit the worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get worklog property",
                      "method": "get",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the worklog ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue, worklog, or property is not found.\n *  the user does not have permission to view the issue or worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set worklog property",
                      "method": "put",
                      "endpoint": "rest/api/3/issue/:issueIdOrKey/worklog/:worklogId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the worklog property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the worklog property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the worklog ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to edit the worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue or worklog is not found.\n *  the user does not have permission to view the issue or worklog.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue link",
                      "method": "post",
                      "endpoint": "rest/api/3/issueLink",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the comment is not created. The response contains an error message indicating why the comment wasn't created. The issue link is also not created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the user cannot view one or both of the issues. For example, the user doesn't have *Browse project* project permission for a project containing one of the issues.\n *  the user does not have *link issues* project permission.\n *  either of the link issues are not found.\n *  the issue link type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue link",
                      "method": "delete",
                      "endpoint": "rest/api/3/issueLink/:linkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "200 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue link ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue link",
                      "method": "get",
                      "endpoint": "rest/api/3/issueLink/:linkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"inwardIssue\": {\n    \"fields\": {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"issueType\": {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      },\n      \"issuetype\": {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      },\n      \"priority\": {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusColor\": \"\"\n      },\n      \"status\": {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusCategory\": {\n          \"colorName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      },\n      \"summary\": \"\",\n      \"timetracking\": {\n        \"originalEstimate\": \"\",\n        \"originalEstimateSeconds\": {{faker 'random.number'}},\n        \"remainingEstimate\": \"\",\n        \"remainingEstimateSeconds\": {{faker 'random.number'}},\n        \"timeSpent\": \"\",\n        \"timeSpentSeconds\": {{faker 'random.number'}}\n      }\n    },\n    \"id\": \"\",\n    \"key\": \"\",\n    \"self\": \"\"\n  },\n  \"outwardIssue\": {\n    \"fields\": {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"\",\n        \"active\": {{faker 'random.boolean'}},\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"issueType\": {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      },\n      \"issuetype\": {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      },\n      \"priority\": {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusColor\": \"\"\n      },\n      \"status\": {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusCategory\": {\n          \"colorName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      },\n      \"summary\": \"\",\n      \"timetracking\": {\n        \"originalEstimate\": \"\",\n        \"originalEstimateSeconds\": {{faker 'random.number'}},\n        \"remainingEstimate\": \"\",\n        \"remainingEstimateSeconds\": {{faker 'random.number'}},\n        \"timeSpent\": \"\",\n        \"timeSpentSeconds\": {{faker 'random.number'}}\n      }\n    },\n    \"id\": \"\",\n    \"key\": \"\",\n    \"self\": \"\"\n  },\n  \"self\": \"\",\n  \"type\": {\n    \"id\": \"\",\n    \"inward\": \"\",\n    \"name\": \"\",\n    \"outward\": \"\",\n    \"self\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue link ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link is not found.\n *  the user doesn't have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue link types",
                      "method": "get",
                      "endpoint": "rest/api/3/issueLinkType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueLinkTypes\": [\n    {\n      \"id\": \"\",\n      \"inward\": \"\",\n      \"name\": \"\",\n      \"outward\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if issue linking is disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue link type",
                      "method": "post",
                      "endpoint": "rest/api/3/issueLinkType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"inward\": \"\",\n  \"name\": \"\",\n  \"outward\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type name is in use.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue link type",
                      "method": "delete",
                      "endpoint": "rest/api/3/issueLinkType/:issueLinkTypeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue link type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue link type",
                      "method": "get",
                      "endpoint": "rest/api/3/issueLinkType/:issueLinkTypeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"inward\": \"\",\n  \"name\": \"\",\n  \"outward\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue link type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue link type",
                      "method": "put",
                      "endpoint": "rest/api/3/issueLinkType/:issueLinkTypeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"inward\": \"\",\n  \"name\": \"\",\n  \"outward\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue link type ID or the request body are invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  issue linking is disabled.\n *  the issue link type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue security schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/issuesecurityschemes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueSecuritySchemes\": [\n    {\n      \"defaultSecurityLevelId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"levels\": [\n        {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to administer issue security schemes.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue security scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/issuesecurityschemes/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultSecurityLevelId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"levels\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the administrator permission and the scheme is not used in any project where the user has administrative permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue security level members",
                      "method": "get",
                      "endpoint": "rest/api/3/issuesecurityschemes/:issueSecuritySchemeId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"issueSecurityLevelId\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if no issue security level members are found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all issue types for user",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"avatarId\": {{faker 'random.number'}},\n    \"description\": \"\",\n    \"entityId\": \"{{faker 'random.uuid'}}\",\n    \"hierarchyLevel\": {{faker 'random.number'}},\n    \"iconUrl\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"subtask\": {{faker 'random.boolean'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue type",
                      "method": "post",
                      "endpoint": "rest/api/3/issuetype",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"avatarId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"entityId\": \"{{faker 'random.uuid'}}\",\n  \"hierarchyLevel\": {{faker 'random.number'}},\n  \"iconUrl\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"subtask\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  a subtask issue type is requested on an instance where subtasks are disabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type name is in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue types for project",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"avatarId\": {{faker 'random.number'}},\n    \"description\": \"\",\n    \"entityId\": \"{{faker 'random.uuid'}}\",\n    \"hierarchyLevel\": {{faker 'random.number'}},\n    \"iconUrl\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"subtask\": {{faker 'random.boolean'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project is not found.\n *  the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue type",
                      "method": "delete",
                      "endpoint": "rest/api/3/issuetype/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if any issues cannot be updated with the alternative issue type.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue type is in use and an alternative issue type is not specified.\n *  the issue type or alternative issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type is in use and:\n\n *  also specified as the alternative issue type.\n *  is a *standard* issue type and the alternative issue type is a *subtask*.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"avatarId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"entityId\": \"{{faker 'random.uuid'}}\",\n  \"hierarchyLevel\": {{faker 'random.number'}},\n  \"iconUrl\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"subtask\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue type",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetype/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"avatarId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"entityId\": \"{{faker 'random.uuid'}}\",\n  \"hierarchyLevel\": {{faker 'random.number'}},\n  \"iconUrl\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"subtask\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid because:\n\n *  no content is sent.\n *  the issue type name exceeds 60 characters.\n *  the avatar is not associated with this issue type.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type name is in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get alternative issue types",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype/:id/alternatives",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"avatarId\": {{faker 'random.number'}},\n    \"description\": \"\",\n    \"entityId\": \"{{faker 'random.uuid'}}\",\n    \"hierarchyLevel\": {{faker 'random.number'}},\n    \"iconUrl\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"subtask\": {{faker 'random.boolean'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Load issue type avatar",
                      "method": "post",
                      "endpoint": "rest/api/3/issuetype/:id/avatar2",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"fileName\": \"\",\n  \"id\": \"\",\n  \"isDeletable\": {{faker 'random.boolean'}},\n  \"isSelected\": {{faker 'random.boolean'}},\n  \"isSystemAvatar\": {{faker 'random.boolean'}},\n  \"owner\": \"\",\n  \"urls\": {}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.\n *  `cropSize` is missing.\n *  the issue type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype/:issueTypeId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue type property",
                      "method": "delete",
                      "endpoint": "rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the issue type property is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type or property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type property",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the issue type ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type or property is not found or the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set issue type property",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetype/:issueTypeId/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the issue type property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the issue type property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the issue type ID is invalid.\n *  a property value is not provided.\n *  the property value JSON content is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to modify the issue type.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the issue type is not found.\n *  the user does not have the permission view the issue type.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all issue type schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"defaultIssueTypeId\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isDefault\": {{faker 'random.boolean'}},\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue type scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/issuetypescheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueTypeSchemeId\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the scheme name is used by another scheme.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type scheme items",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescheme/mapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"issueTypeId\": \"\",\n      \"issueTypeSchemeId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type schemes for projects",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"issueTypeScheme\": {\n        \"defaultIssueTypeId\": \"\",\n        \"description\": \"\",\n        \"id\": \"\",\n        \"isDefault\": {{faker 'random.boolean'}},\n        \"name\": \"\"\n      },\n      \"projectIds\": [\n        \"\"\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign issue type scheme to project",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type scheme or the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue type scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/issuetypescheme/:issueTypeSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the issue type scheme is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is to delete the default issue type scheme.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue type scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescheme/:issueTypeSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add issue types to issue type scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type or the issue type scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change order of issue types",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/move",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove issue type from issue type scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/issuetypescheme/:issueTypeSchemeId/issuetype/:issueTypeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type scheme is missing or the issue type is not found in the issue type scheme.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type screen schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescreenscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create issue type screen scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/issuetypescreenscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type or screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type screen scheme items",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescreenscheme/mapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"issueTypeId\": \"\",\n      \"issueTypeScreenSchemeId\": \"\",\n      \"screenSchemeId\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type screen schemes for projects",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescreenscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"issueTypeScreenScheme\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"projectIds\": [\n        \"\"\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign issue type screen scheme to project",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescreenscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  project is not found.\n *  issue type screen scheme is not found.\n *  the project is not a classic project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme or the project are missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue type screen scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the issue type screen scheme is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue type screen scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Append mappings to issue type screen scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme, issue type, or screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the issue type is a sub-task, but sub-tasks are disabled in Jira settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update issue type screen scheme default screen scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme or the screen screen is not found, or the screen scheme isn't used in classic projects.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove mappings from issue type screen scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/mapping/remove",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the screen scheme mappings are removed from the issue type screen scheme.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue type screen scheme or one or more issue type mappings are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue type screen scheme projects",
                      "method": "get",
                      "endpoint": "rest/api/3/issuetypescreenscheme/:issueTypeScreenSchemeId/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field reference data (GET)",
                      "method": "get",
                      "endpoint": "rest/api/3/jql/autocompletedata",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"jqlReservedWords\": [\n    \"\"\n  ],\n  \"visibleFieldNames\": [\n    {\n      \"auto\": \"{{oneOf (array 'true' 'false')}}\",\n      \"cfid\": \"\",\n      \"displayName\": \"\",\n      \"operators\": [\n        \"\"\n      ],\n      \"orderable\": \"{{oneOf (array 'true' 'false')}}\",\n      \"searchable\": \"{{oneOf (array 'true' 'false')}}\",\n      \"types\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  ],\n  \"visibleFunctionNames\": [\n    {\n      \"displayName\": \"\",\n      \"isList\": \"{{oneOf (array 'true' 'false')}}\",\n      \"types\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field reference data (POST)",
                      "method": "post",
                      "endpoint": "rest/api/3/jql/autocompletedata",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"jqlReservedWords\": [\n    \"\"\n  ],\n  \"visibleFieldNames\": [\n    {\n      \"auto\": \"{{oneOf (array 'true' 'false')}}\",\n      \"cfid\": \"\",\n      \"displayName\": \"\",\n      \"operators\": [\n        \"\"\n      ],\n      \"orderable\": \"{{oneOf (array 'true' 'false')}}\",\n      \"searchable\": \"{{oneOf (array 'true' 'false')}}\",\n      \"types\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  ],\n  \"visibleFunctionNames\": [\n    {\n      \"displayName\": \"\",\n      \"isList\": \"{{oneOf (array 'true' 'false')}}\",\n      \"types\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get field auto complete suggestions",
                      "method": "get",
                      "endpoint": "rest/api/3/jql/autocompletedata/suggestions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"results\": [\n    {\n      \"displayName\": \"\",\n      \"value\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if an invalid combination of parameters is passed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Check issues against JQL",
                      "method": "post",
                      "endpoint": "rest/api/3/jql/match",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"matches\": [\n    {\n      \"errors\": [\n        \"\"\n      ],\n      \"matchedIssues\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `jqls` exceeds the maximum number of JQL queries or `issueIds` exceeds the maximum number of issue IDs.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Parse JQL query",
                      "method": "post",
                      "endpoint": "rest/api/3/jql/parse",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Convert user identifiers to account IDs in JQL queries",
                      "method": "post",
                      "endpoint": "rest/api/3/jql/pdcleaner",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"queriesWithUnknownUsers\": [\n    {\n      \"convertedQuery\": \"\",\n      \"originalQuery\": \"\"\n    }\n  ],\n  \"queryStrings\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. Note that the JQL queries are returned in the same order that they were passed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if at least one of the queries cannot be converted. For example, the JQL has invalid operators or invalid keywords, or the users in the query cannot be found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all labels",
                      "method": "get",
                      "endpoint": "rest/api/3/label",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get my permissions",
                      "method": "get",
                      "endpoint": "rest/api/3/mypermissions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"permissions\": {}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `permissions` is empty or the permission key it contains is not found or deprecated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or issue is not found or the user does not have permission to view the project or issue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete preference",
                      "method": "delete",
                      "endpoint": "rest/api/3/mypreferences",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the key is not provided or not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get preference",
                      "method": "get",
                      "endpoint": "rest/api/3/mypreferences",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the key is not provided or not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set preference",
                      "method": "put",
                      "endpoint": "rest/api/3/mypreferences",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the key or value is not provided or invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete locale",
                      "method": "delete",
                      "endpoint": "rest/api/3/mypreferences/locale",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get locale",
                      "method": "get",
                      "endpoint": "rest/api/3/mypreferences/locale",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"locale\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set locale",
                      "method": "put",
                      "endpoint": "rest/api/3/mypreferences/locale",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get current user",
                      "method": "get",
                      "endpoint": "rest/api/3/myself",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"accountId\": \"\",\n  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n  \"active\": {{faker 'random.boolean'}},\n  \"applicationRoles\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"defaultGroups\": [\n          \"\"\n        ],\n        \"defined\": {{faker 'random.boolean'}},\n        \"groups\": [\n          \"\"\n        ],\n        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n        \"key\": \"\",\n        \"name\": \"\",\n        \"numberOfSeats\": {{faker 'random.number'}},\n        \"platform\": {{faker 'random.boolean'}},\n        \"remainingSeats\": {{faker 'random.number'}},\n        \"selectedByDefault\": {{faker 'random.boolean'}},\n        \"userCount\": {{faker 'random.number'}},\n        \"userCountDescription\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"displayName\": \"\",\n  \"emailAddress\": \"\",\n  \"expand\": \"\",\n  \"groups\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"key\": \"\",\n  \"locale\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"timeZone\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get notification schemes paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/notificationscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. Only returns notification schemes that the user has permission to access. An empty list is returned if the user lacks permission to access all notification schemes.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get notification scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/notificationscheme/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the notification scheme is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all permissions",
                      "method": "get",
                      "endpoint": "rest/api/3/permissions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"permissions\": {}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get bulk permissions",
                      "method": "post",
                      "endpoint": "rest/api/3/permissions/check",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"globalPermissions\": [\n    \"\"\n  ],\n  \"projectPermissions\": [\n    {\n      \"issues\": [\n        {{faker 'random.number'}}\n      ],\n      \"permission\": \"\",\n      \"projects\": [\n        {{faker 'random.number'}}\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `projectPermissions` is provided without at least one project permission being provided.\n *  an invalid global permission is provided in the global permissions list.\n *  an invalid project permission is provided in the project permissions list.\n *  more than 1000 valid project IDs or more than 1000 valid issue IDs are provided.\n *  an invalid account ID is provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get permitted projects",
                      "method": "post",
                      "endpoint": "rest/api/3/permissions/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"projects\": [\n    {\n      \"id\": {{faker 'random.number'}},\n      \"key\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if a project permission is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all permission schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/permissionscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"permissionSchemes\": [\n    {\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"permissions\": [\n        {\n          \"holder\": {\n            \"expand\": \"\",\n            \"parameter\": \"\",\n            \"type\": \"\"\n          },\n          \"id\": {{faker 'random.number'}},\n          \"permission\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create permission scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/permissionscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the permission scheme is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or the feature is not available in the Jira plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete permission scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the permission scheme is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the permission scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get permission scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the permission scheme is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update permission scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the scheme is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n\n *  the user does not have the necessary permission to update permission schemes.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be updated on free plans.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the permission scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get permission scheme grants",
                      "method": "get",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId/permission",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expand\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the permission schemes is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create permission grant",
                      "method": "post",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId/permission",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"holder\": {\n    \"expand\": \"\",\n    \"parameter\": \"\",\n    \"type\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"permission\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the scheme permission is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the value for expand is invalid or the same permission grant is present.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete permission scheme grant",
                      "method": "delete",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the permission grant is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if permission grant with the provided ID is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get permission scheme grant",
                      "method": "get",
                      "endpoint": "rest/api/3/permissionscheme/:schemeId/permission/:permissionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"holder\": {\n    \"expand\": \"\",\n    \"parameter\": \"\",\n    \"type\": \"\"\n  },\n  \"id\": {{faker 'random.number'}},\n  \"permission\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the permission scheme or permission grant is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get priorities",
                      "method": "get",
                      "endpoint": "rest/api/3/priority",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"iconUrl\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"statusColor\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get priority",
                      "method": "get",
                      "endpoint": "rest/api/3/priority/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"iconUrl\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"statusColor\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue priority is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all projects",
                      "method": "get",
                      "endpoint": "rest/api/3/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"archived\": {{faker 'random.boolean'}},\n    \"archivedBy\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n    \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"components\": [\n      {\n        \"assignee\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"description\": \"\",\n        \"id\": \"\",\n        \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n        \"lead\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"leadAccountId\": \"\",\n        \"leadUserName\": \"\",\n        \"name\": \"\",\n        \"project\": \"\",\n        \"projectId\": {{faker 'random.number'}},\n        \"realAssignee\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n        \"self\": \"\"\n      }\n    ],\n    \"deleted\": {{faker 'random.boolean'}},\n    \"deletedBy\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n    \"description\": \"\",\n    \"email\": \"\",\n    \"expand\": \"\",\n    \"favourite\": {{faker 'random.boolean'}},\n    \"id\": \"\",\n    \"insight\": {\n      \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n      \"totalIssueCount\": {{faker 'random.number'}}\n    },\n    \"isPrivate\": {{faker 'random.boolean'}},\n    \"issueTypeHierarchy\": {\n      \"baseLevelId\": {{faker 'random.number'}},\n      \"levels\": [\n        {\n          \"aboveLevelId\": {{faker 'random.number'}},\n          \"belowLevelId\": {{faker 'random.number'}},\n          \"externalUuid\": \"{{faker 'random.uuid'}}\",\n          \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n          \"id\": {{faker 'random.number'}},\n          \"issueTypeIds\": [\n            {{faker 'random.number'}}\n          ],\n          \"level\": {{faker 'random.number'}},\n          \"name\": \"\",\n          \"projectConfigurationId\": {{faker 'random.number'}}\n        }\n      ]\n    },\n    \"issueTypes\": [\n      {\n        \"avatarId\": {{faker 'random.number'}},\n        \"description\": \"\",\n        \"entityId\": \"{{faker 'random.uuid'}}\",\n        \"hierarchyLevel\": {{faker 'random.number'}},\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"scope\": {\n          \"project\": {\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"id\": \"\",\n            \"key\": \"\",\n            \"name\": \"\",\n            \"projectCategory\": {\n              \"description\": \"\",\n              \"id\": \"\",\n              \"name\": \"\",\n              \"self\": \"\"\n            },\n            \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n            \"self\": \"\",\n            \"simplified\": {{faker 'random.boolean'}}\n          },\n          \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n        },\n        \"self\": \"\",\n        \"subtask\": {{faker 'random.boolean'}}\n      }\n    ],\n    \"key\": \"\",\n    \"landingPageInfo\": {\n      \"boardId\": {{faker 'random.number'}},\n      \"projectKey\": \"\",\n      \"projectType\": \"\",\n      \"simplified\": {{faker 'random.boolean'}},\n      \"url\": \"\"\n    },\n    \"lead\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"name\": \"\",\n    \"permissions\": {\n      \"canEdit\": {{faker 'random.boolean'}}\n    },\n    \"projectCategory\": {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    },\n    \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n    \"properties\": {},\n    \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n    \"roles\": {},\n    \"self\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n    \"url\": \"\",\n    \"uuid\": \"{{faker 'random.uuid'}}\",\n    \"versions\": [\n      {\n        \"archived\": {{faker 'random.boolean'}},\n        \"description\": \"\",\n        \"expand\": \"\",\n        \"id\": \"\",\n        \"issuesStatusForFixVersion\": {\n          \"done\": {{faker 'random.number'}},\n          \"inProgress\": {{faker 'random.number'}},\n          \"toDo\": {{faker 'random.number'}},\n          \"unmapped\": {{faker 'random.number'}}\n        },\n        \"moveUnfixedIssuesTo\": \"\",\n        \"name\": \"\",\n        \"operations\": [\n          {\n            \"href\": \"\",\n            \"iconClass\": \"\",\n            \"id\": \"\",\n            \"label\": \"\",\n            \"styleClass\": \"\",\n            \"title\": \"\",\n            \"weight\": {{faker 'random.number'}}\n          }\n        ],\n        \"overdue\": {{faker 'random.boolean'}},\n        \"project\": \"\",\n        \"projectId\": {{faker 'random.number'}},\n        \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n        \"released\": {{faker 'random.boolean'}},\n        \"self\": \"\",\n        \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n        \"userReleaseDate\": \"\",\n        \"userStartDate\": \"\"\n      }\n    ]\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create project",
                      "method": "post",
                      "endpoint": "rest/api/3/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the project is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid and the project could not be created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to create projects.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get projects paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/project/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"archivedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"components\": [\n        {\n          \"assignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"description\": \"\",\n          \"id\": \"\",\n          \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n          \"lead\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"leadAccountId\": \"\",\n          \"leadUserName\": \"\",\n          \"name\": \"\",\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"realAssignee\": {\n            \"accountId\": \"\",\n            \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n            \"active\": {{faker 'random.boolean'}},\n            \"applicationRoles\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"defaultGroups\": [\n                    \"\"\n                  ],\n                  \"defined\": {{faker 'random.boolean'}},\n                  \"groups\": [\n                    \"\"\n                  ],\n                  \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                  \"key\": \"\",\n                  \"name\": \"\",\n                  \"numberOfSeats\": {{faker 'random.number'}},\n                  \"platform\": {{faker 'random.boolean'}},\n                  \"remainingSeats\": {{faker 'random.number'}},\n                  \"selectedByDefault\": {{faker 'random.boolean'}},\n                  \"userCount\": {{faker 'random.number'}},\n                  \"userCountDescription\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"avatarUrls\": {\n              \"16x16\": \"\",\n              \"24x24\": \"\",\n              \"32x32\": \"\",\n              \"48x48\": \"\"\n            },\n            \"displayName\": \"\",\n            \"emailAddress\": \"\",\n            \"expand\": \"\",\n            \"groups\": {\n              \"callback\": {},\n              \"items\": [\n                {\n                  \"name\": \"\",\n                  \"self\": \"\"\n                }\n              ],\n              \"max-results\": {{faker 'random.number'}},\n              \"pagingCallback\": {},\n              \"size\": {{faker 'random.number'}}\n            },\n            \"key\": \"\",\n            \"locale\": \"\",\n            \"name\": \"\",\n            \"self\": \"\",\n            \"timeZone\": \"\"\n          },\n          \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n          \"self\": \"\"\n        }\n      ],\n      \"deleted\": {{faker 'random.boolean'}},\n      \"deletedBy\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n      \"description\": \"\",\n      \"email\": \"\",\n      \"expand\": \"\",\n      \"favourite\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"insight\": {\n        \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n        \"totalIssueCount\": {{faker 'random.number'}}\n      },\n      \"isPrivate\": {{faker 'random.boolean'}},\n      \"issueTypeHierarchy\": {\n        \"baseLevelId\": {{faker 'random.number'}},\n        \"levels\": [\n          {\n            \"aboveLevelId\": {{faker 'random.number'}},\n            \"belowLevelId\": {{faker 'random.number'}},\n            \"externalUuid\": \"{{faker 'random.uuid'}}\",\n            \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n            \"id\": {{faker 'random.number'}},\n            \"issueTypeIds\": [\n              {{faker 'random.number'}}\n            ],\n            \"level\": {{faker 'random.number'}},\n            \"name\": \"\",\n            \"projectConfigurationId\": {{faker 'random.number'}}\n          }\n        ]\n      },\n      \"issueTypes\": [\n        {\n          \"avatarId\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"entityId\": \"{{faker 'random.uuid'}}\",\n          \"hierarchyLevel\": {{faker 'random.number'}},\n          \"iconUrl\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"scope\": {\n            \"project\": {\n              \"avatarUrls\": {\n                \"16x16\": \"\",\n                \"24x24\": \"\",\n                \"32x32\": \"\",\n                \"48x48\": \"\"\n              },\n              \"id\": \"\",\n              \"key\": \"\",\n              \"name\": \"\",\n              \"projectCategory\": {\n                \"description\": \"\",\n                \"id\": \"\",\n                \"name\": \"\",\n                \"self\": \"\"\n              },\n              \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n              \"self\": \"\",\n              \"simplified\": {{faker 'random.boolean'}}\n            },\n            \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n          },\n          \"self\": \"\",\n          \"subtask\": {{faker 'random.boolean'}}\n        }\n      ],\n      \"key\": \"\",\n      \"landingPageInfo\": {\n        \"boardId\": {{faker 'random.number'}},\n        \"projectKey\": \"\",\n        \"projectType\": \"\",\n        \"simplified\": {{faker 'random.boolean'}},\n        \"url\": \"\"\n      },\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"name\": \"\",\n      \"permissions\": {\n        \"canEdit\": {{faker 'random.boolean'}}\n      },\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"properties\": {},\n      \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n      \"roles\": {},\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}},\n      \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n      \"url\": \"\",\n      \"uuid\": \"{{faker 'random.uuid'}}\",\n      \"versions\": [\n        {\n          \"archived\": {{faker 'random.boolean'}},\n          \"description\": \"\",\n          \"expand\": \"\",\n          \"id\": \"\",\n          \"issuesStatusForFixVersion\": {\n            \"done\": {{faker 'random.number'}},\n            \"inProgress\": {{faker 'random.number'}},\n            \"toDo\": {{faker 'random.number'}},\n            \"unmapped\": {{faker 'random.number'}}\n          },\n          \"moveUnfixedIssuesTo\": \"\",\n          \"name\": \"\",\n          \"operations\": [\n            {\n              \"href\": \"\",\n              \"iconClass\": \"\",\n              \"id\": \"\",\n              \"label\": \"\",\n              \"styleClass\": \"\",\n              \"title\": \"\",\n              \"weight\": {{faker 'random.number'}}\n            }\n          ],\n          \"overdue\": {{faker 'random.boolean'}},\n          \"project\": \"\",\n          \"projectId\": {{faker 'random.number'}},\n          \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"released\": {{faker 'random.boolean'}},\n          \"self\": \"\",\n          \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n          \"userReleaseDate\": \"\",\n          \"userStartDate\": \"\"\n        }\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if no projects matching the search criteria are found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all project types",
                      "method": "get",
                      "endpoint": "rest/api/3/project/type",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"color\": \"\",\n    \"descriptionI18nKey\": \"\",\n    \"formattedKey\": \"\",\n    \"icon\": \"\",\n    \"key\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get licensed project types",
                      "method": "get",
                      "endpoint": "rest/api/3/project/type/accessible",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"color\": \"\",\n    \"descriptionI18nKey\": \"\",\n    \"formattedKey\": \"\",\n    \"icon\": \"\",\n    \"key\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project type by key",
                      "method": "get",
                      "endpoint": "rest/api/3/project/type/:projectTypeKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"color\": \"\",\n  \"descriptionI18nKey\": \"\",\n  \"formattedKey\": \"\",\n  \"icon\": \"\",\n  \"key\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get accessible project type by key",
                      "method": "get",
                      "endpoint": "rest/api/3/project/type/:projectTypeKey/accessible",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"color\": \"\",\n  \"descriptionI18nKey\": \"\",\n  \"formattedKey\": \"\",\n  \"icon\": \"\",\n  \"key\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project type is not accessible to the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project",
                      "method": "delete",
                      "endpoint": "rest/api/3/project/:projectIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the project is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to delete it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"archivedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"components\": [\n    {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"leadAccountId\": \"\",\n      \"leadUserName\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"realAssignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"self\": \"\"\n    }\n  ],\n  \"deleted\": {{faker 'random.boolean'}},\n  \"deletedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"\",\n  \"expand\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"insight\": {\n    \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"totalIssueCount\": {{faker 'random.number'}}\n  },\n  \"isPrivate\": {{faker 'random.boolean'}},\n  \"issueTypeHierarchy\": {\n    \"baseLevelId\": {{faker 'random.number'}},\n    \"levels\": [\n      {\n        \"aboveLevelId\": {{faker 'random.number'}},\n        \"belowLevelId\": {{faker 'random.number'}},\n        \"externalUuid\": \"{{faker 'random.uuid'}}\",\n        \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n        \"id\": {{faker 'random.number'}},\n        \"issueTypeIds\": [\n          {{faker 'random.number'}}\n        ],\n        \"level\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"projectConfigurationId\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"issueTypes\": [\n    {\n      \"avatarId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"entityId\": \"{{faker 'random.uuid'}}\",\n      \"hierarchyLevel\": {{faker 'random.number'}},\n      \"iconUrl\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"subtask\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"key\": \"\",\n  \"landingPageInfo\": {\n    \"boardId\": {{faker 'random.number'}},\n    \"projectKey\": \"\",\n    \"projectType\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"url\": \"\"\n  },\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"permissions\": {\n    \"canEdit\": {{faker 'random.boolean'}}\n  },\n  \"projectCategory\": {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n  \"properties\": {},\n  \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n  \"roles\": {},\n  \"self\": \"\",\n  \"simplified\": {{faker 'random.boolean'}},\n  \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n  \"url\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\",\n  \"versions\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuesStatusForFixVersion\": {\n        \"done\": {{faker 'random.number'}},\n        \"inProgress\": {{faker 'random.number'}},\n        \"toDo\": {{faker 'random.number'}},\n        \"unmapped\": {{faker 'random.number'}}\n      },\n      \"moveUnfixedIssuesTo\": \"\",\n      \"name\": \"\",\n      \"operations\": [\n        {\n          \"href\": \"\",\n          \"iconClass\": \"\",\n          \"id\": \"\",\n          \"label\": \"\",\n          \"styleClass\": \"\",\n          \"title\": \"\",\n          \"weight\": {{faker 'random.number'}}\n        }\n      ],\n      \"overdue\": {{faker 'random.boolean'}},\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"released\": {{faker 'random.boolean'}},\n      \"self\": \"\",\n      \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"userReleaseDate\": \"\",\n      \"userStartDate\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update project",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectIdOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"archivedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"components\": [\n    {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"leadAccountId\": \"\",\n      \"leadUserName\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"realAssignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"self\": \"\"\n    }\n  ],\n  \"deleted\": {{faker 'random.boolean'}},\n  \"deletedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"\",\n  \"expand\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"insight\": {\n    \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"totalIssueCount\": {{faker 'random.number'}}\n  },\n  \"isPrivate\": {{faker 'random.boolean'}},\n  \"issueTypeHierarchy\": {\n    \"baseLevelId\": {{faker 'random.number'}},\n    \"levels\": [\n      {\n        \"aboveLevelId\": {{faker 'random.number'}},\n        \"belowLevelId\": {{faker 'random.number'}},\n        \"externalUuid\": \"{{faker 'random.uuid'}}\",\n        \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n        \"id\": {{faker 'random.number'}},\n        \"issueTypeIds\": [\n          {{faker 'random.number'}}\n        ],\n        \"level\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"projectConfigurationId\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"issueTypes\": [\n    {\n      \"avatarId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"entityId\": \"{{faker 'random.uuid'}}\",\n      \"hierarchyLevel\": {{faker 'random.number'}},\n      \"iconUrl\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"subtask\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"key\": \"\",\n  \"landingPageInfo\": {\n    \"boardId\": {{faker 'random.number'}},\n    \"projectKey\": \"\",\n    \"projectType\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"url\": \"\"\n  },\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"permissions\": {\n    \"canEdit\": {{faker 'random.boolean'}}\n  },\n  \"projectCategory\": {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n  \"properties\": {},\n  \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n  \"roles\": {},\n  \"self\": \"\",\n  \"simplified\": {{faker 'random.boolean'}},\n  \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n  \"url\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\",\n  \"versions\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuesStatusForFixVersion\": {\n        \"done\": {{faker 'random.number'}},\n        \"inProgress\": {{faker 'random.number'}},\n        \"toDo\": {{faker 'random.number'}},\n        \"unmapped\": {{faker 'random.number'}}\n      },\n      \"moveUnfixedIssuesTo\": \"\",\n      \"name\": \"\",\n      \"operations\": [\n        {\n          \"href\": \"\",\n          \"iconClass\": \"\",\n          \"id\": \"\",\n          \"label\": \"\",\n          \"styleClass\": \"\",\n          \"title\": \"\",\n          \"weight\": {{faker 'random.number'}}\n        }\n      ],\n      \"overdue\": {{faker 'random.boolean'}},\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"released\": {{faker 'random.boolean'}},\n      \"self\": \"\",\n      \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"userReleaseDate\": \"\",\n      \"userStartDate\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the project is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n\n *  the user does not have the necessary permission to update project details.\n *  the permission scheme is being changed and the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be changed on free plans.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Archive project",
                      "method": "post",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/archive",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set project avatar",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/avatar",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to administer the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or avatar is not found or the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project avatar",
                      "method": "delete",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/avatar/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the avatar is a system avatar or the user does not have permission to administer the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or avatar is not found or the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Load project avatar",
                      "method": "post",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/avatar2",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"fileName\": \"\",\n  \"id\": \"\",\n  \"isDeletable\": {{faker 'random.boolean'}},\n  \"isSelected\": {{faker 'random.boolean'}},\n  \"isSystemAvatar\": {{faker 'random.boolean'}},\n  \"owner\": \"\",\n  \"urls\": {}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to administer the project or an anonymous call is made to the operation.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all project avatars",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/avatars",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom\": [\n    {\n      \"fileName\": \"\",\n      \"id\": \"\",\n      \"isDeletable\": {{faker 'random.boolean'}},\n      \"isSelected\": {{faker 'random.boolean'}},\n      \"isSystemAvatar\": {{faker 'random.boolean'}},\n      \"owner\": \"\",\n      \"urls\": {}\n    }\n  ],\n  \"system\": [\n    {\n      \"fileName\": \"\",\n      \"id\": \"\",\n      \"isDeletable\": {{faker 'random.boolean'}},\n      \"isSelected\": {{faker 'random.boolean'}},\n      \"isSystemAvatar\": {{faker 'random.boolean'}},\n      \"owner\": \"\",\n      \"urls\": {}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project components paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/component",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n      \"issueCount\": {{faker 'random.number'}},\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"name\": \"\",\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"realAssignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project components",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/components",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"assignee\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n    \"lead\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"leadAccountId\": \"\",\n    \"leadUserName\": \"\",\n    \"name\": \"\",\n    \"project\": \"\",\n    \"projectId\": {{faker 'random.number'}},\n    \"realAssignee\": {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n    \"self\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project asynchronously",
                      "method": "post",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/delete",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"elapsedRuntime\": {{faker 'random.number'}},\n  \"finished\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"lastUpdate\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"progress\": {{faker 'random.number'}},\n  \"result\": \"\",\n  \"self\": \"\",\n  \"started\": {{faker 'random.number'}},\n  \"status\": \"{{oneOf (array 'ENQUEUED' 'RUNNING' 'COMPLETE' 'FAILED' 'CANCEL_REQUESTED' 'CANCELLED' 'DEAD')}}\",\n  \"submitted\": {{faker 'random.number'}},\n  \"submittedBy\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project property",
                      "method": "delete",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the project property is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to administer the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project property",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set project property",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the project property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the project property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the project key or id is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to administer the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Restore deleted project",
                      "method": "post",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/restore",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"archivedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"components\": [\n    {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"leadAccountId\": \"\",\n      \"leadUserName\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"realAssignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"self\": \"\"\n    }\n  ],\n  \"deleted\": {{faker 'random.boolean'}},\n  \"deletedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"\",\n  \"expand\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"insight\": {\n    \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"totalIssueCount\": {{faker 'random.number'}}\n  },\n  \"isPrivate\": {{faker 'random.boolean'}},\n  \"issueTypeHierarchy\": {\n    \"baseLevelId\": {{faker 'random.number'}},\n    \"levels\": [\n      {\n        \"aboveLevelId\": {{faker 'random.number'}},\n        \"belowLevelId\": {{faker 'random.number'}},\n        \"externalUuid\": \"{{faker 'random.uuid'}}\",\n        \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n        \"id\": {{faker 'random.number'}},\n        \"issueTypeIds\": [\n          {{faker 'random.number'}}\n        ],\n        \"level\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"projectConfigurationId\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"issueTypes\": [\n    {\n      \"avatarId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"entityId\": \"{{faker 'random.uuid'}}\",\n      \"hierarchyLevel\": {{faker 'random.number'}},\n      \"iconUrl\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"subtask\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"key\": \"\",\n  \"landingPageInfo\": {\n    \"boardId\": {{faker 'random.number'}},\n    \"projectKey\": \"\",\n    \"projectType\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"url\": \"\"\n  },\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"permissions\": {\n    \"canEdit\": {{faker 'random.boolean'}}\n  },\n  \"projectCategory\": {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n  \"properties\": {},\n  \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n  \"roles\": {},\n  \"self\": \"\",\n  \"simplified\": {{faker 'random.boolean'}},\n  \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n  \"url\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\",\n  \"versions\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuesStatusForFixVersion\": {\n        \"done\": {{faker 'random.number'}},\n        \"inProgress\": {{faker 'random.number'}},\n        \"toDo\": {{faker 'random.number'}},\n        \"unmapped\": {{faker 'random.number'}}\n      },\n      \"moveUnfixedIssuesTo\": \"\",\n      \"name\": \"\",\n      \"operations\": [\n        {\n          \"href\": \"\",\n          \"iconClass\": \"\",\n          \"id\": \"\",\n          \"label\": \"\",\n          \"styleClass\": \"\",\n          \"title\": \"\",\n          \"weight\": {{faker 'random.number'}}\n        }\n      ],\n      \"overdue\": {{faker 'random.boolean'}},\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"released\": {{faker 'random.boolean'}},\n      \"self\": \"\",\n      \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"userReleaseDate\": \"\",\n      \"userStartDate\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project roles for project",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/role",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing or if the user lacks administrative permissions for the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or or if the user does not have administrative permissions for the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete actors from project role",
                      "method": "delete",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project or project role is not found.\n *  the calling user does not have administrative permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project role for project",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project or project role is not found.\n *  the user does not have administrative permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add actors to project role",
                      "method": "post",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. The complete list of actors for the project is returned.\n\nFor example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a `user` actor for this project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project is not found.\n *  the user or group is not found.\n *  the group or user is not active.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set actors for project role",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful. The complete list of actors for the project is returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing or if the calling user lacks administrative permissions for the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project is not found.\n *  a user or group is not found.\n *  a group or user is not active.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project role details",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/roledetails",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"admin\": {{faker 'random.boolean'}},\n    \"default\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"roleConfigurable\": {{faker 'random.boolean'}},\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"translatedName\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or if the user does not have the necessary permissions for the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all statuses for project",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/statuses",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"statuses\": [\n      {\n        \"description\": \"\",\n        \"iconUrl\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"statusCategory\": {\n          \"colorName\": \"\",\n          \"id\": {{faker 'random.number'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      }\n    ],\n    \"subtask\": {{faker 'random.boolean'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update project type",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/type/:newProjectTypeKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"archivedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"archivedDate\": \"{{faker 'date.recent' 365}}\",\n  \"assigneeType\": \"{{oneOf (array 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"components\": [\n    {\n      \"assignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"assigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"isAssigneeTypeValid\": {{faker 'random.boolean'}},\n      \"lead\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"leadAccountId\": \"\",\n      \"leadUserName\": \"\",\n      \"name\": \"\",\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"realAssignee\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"realAssigneeType\": \"{{oneOf (array 'PROJECT_DEFAULT' 'COMPONENT_LEAD' 'PROJECT_LEAD' 'UNASSIGNED')}}\",\n      \"self\": \"\"\n    }\n  ],\n  \"deleted\": {{faker 'random.boolean'}},\n  \"deletedBy\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"deletedDate\": \"{{faker 'date.recent' 365}}\",\n  \"description\": \"\",\n  \"email\": \"\",\n  \"expand\": \"\",\n  \"favourite\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"insight\": {\n    \"lastIssueUpdateTime\": \"{{faker 'date.recent' 365}}\",\n    \"totalIssueCount\": {{faker 'random.number'}}\n  },\n  \"isPrivate\": {{faker 'random.boolean'}},\n  \"issueTypeHierarchy\": {\n    \"baseLevelId\": {{faker 'random.number'}},\n    \"levels\": [\n      {\n        \"aboveLevelId\": {{faker 'random.number'}},\n        \"belowLevelId\": {{faker 'random.number'}},\n        \"externalUuid\": \"{{faker 'random.uuid'}}\",\n        \"globalHierarchyLevel\": \"{{oneOf (array 'SUBTASK' 'BASE' 'EPIC')}}\",\n        \"id\": {{faker 'random.number'}},\n        \"issueTypeIds\": [\n          {{faker 'random.number'}}\n        ],\n        \"level\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"projectConfigurationId\": {{faker 'random.number'}}\n      }\n    ]\n  },\n  \"issueTypes\": [\n    {\n      \"avatarId\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"entityId\": \"{{faker 'random.uuid'}}\",\n      \"hierarchyLevel\": {{faker 'random.number'}},\n      \"iconUrl\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      },\n      \"self\": \"\",\n      \"subtask\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"key\": \"\",\n  \"landingPageInfo\": {\n    \"boardId\": {{faker 'random.number'}},\n    \"projectKey\": \"\",\n    \"projectType\": \"\",\n    \"simplified\": {{faker 'random.boolean'}},\n    \"url\": \"\"\n  },\n  \"lead\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"permissions\": {\n    \"canEdit\": {{faker 'random.boolean'}}\n  },\n  \"projectCategory\": {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  },\n  \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n  \"properties\": {},\n  \"retentionTillDate\": \"{{faker 'date.recent' 365}}\",\n  \"roles\": {},\n  \"self\": \"\",\n  \"simplified\": {{faker 'random.boolean'}},\n  \"style\": \"{{oneOf (array 'classic' 'next-gen')}}\",\n  \"url\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\",\n  \"versions\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuesStatusForFixVersion\": {\n        \"done\": {{faker 'random.number'}},\n        \"inProgress\": {{faker 'random.number'}},\n        \"toDo\": {{faker 'random.number'}},\n        \"unmapped\": {{faker 'random.number'}}\n      },\n      \"moveUnfixedIssuesTo\": \"\",\n      \"name\": \"\",\n      \"operations\": [\n        {\n          \"href\": \"\",\n          \"iconClass\": \"\",\n          \"id\": \"\",\n          \"label\": \"\",\n          \"styleClass\": \"\",\n          \"title\": \"\",\n          \"weight\": {{faker 'random.number'}}\n        }\n      ],\n      \"overdue\": {{faker 'random.boolean'}},\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"released\": {{faker 'random.boolean'}},\n      \"self\": \"\",\n      \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"userReleaseDate\": \"\",\n      \"userStartDate\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the project type is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project versions paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/version",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"archived\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"expand\": \"\",\n      \"id\": \"\",\n      \"issuesStatusForFixVersion\": {\n        \"done\": {{faker 'random.number'}},\n        \"inProgress\": {{faker 'random.number'}},\n        \"toDo\": {{faker 'random.number'}},\n        \"unmapped\": {{faker 'random.number'}}\n      },\n      \"moveUnfixedIssuesTo\": \"\",\n      \"name\": \"\",\n      \"operations\": [\n        {\n          \"href\": \"\",\n          \"iconClass\": \"\",\n          \"id\": \"\",\n          \"label\": \"\",\n          \"styleClass\": \"\",\n          \"title\": \"\",\n          \"weight\": {{faker 'random.number'}}\n        }\n      ],\n      \"overdue\": {{faker 'random.boolean'}},\n      \"project\": \"\",\n      \"projectId\": {{faker 'random.number'}},\n      \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"released\": {{faker 'random.boolean'}},\n      \"self\": \"\",\n      \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"userReleaseDate\": \"\",\n      \"userStartDate\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project versions",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectIdOrKey/versions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"archived\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"expand\": \"\",\n    \"id\": \"\",\n    \"issuesStatusForFixVersion\": {\n      \"done\": {{faker 'random.number'}},\n      \"inProgress\": {{faker 'random.number'}},\n      \"toDo\": {{faker 'random.number'}},\n      \"unmapped\": {{faker 'random.number'}}\n    },\n    \"moveUnfixedIssuesTo\": \"\",\n    \"name\": \"\",\n    \"operations\": [\n      {\n        \"href\": \"\",\n        \"iconClass\": \"\",\n        \"id\": \"\",\n        \"label\": \"\",\n        \"styleClass\": \"\",\n        \"title\": \"\",\n        \"weight\": {{faker 'random.number'}}\n      }\n    ],\n    \"overdue\": {{faker 'random.boolean'}},\n    \"project\": \"\",\n    \"projectId\": {{faker 'random.number'}},\n    \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n    \"released\": {{faker 'random.boolean'}},\n    \"self\": \"\",\n    \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n    \"userReleaseDate\": \"\",\n    \"userStartDate\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project's sender email",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectId/email",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"emailAddress\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to read project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or project's sender email address is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set project's sender email",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectId/email",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the project's sender email address is successfully set.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid, if the email address is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to read project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project issue type hierarchy",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectId/hierarchy",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"hierarchy\": [\n    {\n      \"entityId\": \"{{faker 'random.uuid'}}\",\n      \"issueTypes\": [\n        {\n          \"avatarId\": {{faker 'random.number'}},\n          \"id\": {{faker 'random.number'}},\n          \"name\": \"\"\n        }\n      ],\n      \"level\": {{faker 'random.number'}},\n      \"name\": \"\"\n    }\n  ],\n  \"projectId\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project issue security scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectKeyOrId/issuesecuritylevelscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultSecurityLevelId\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"levels\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the project is visible to the user but the user doesn't have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project notification scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectKeyOrId/notificationscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user is not an administrator.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get assigned permission scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectKeyOrId/permissionscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to view the project's configuration.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view the project.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign permission scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/project/:projectKeyOrId/permissionscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"permissions\": [\n    {\n      \"holder\": {\n        \"expand\": \"\",\n        \"parameter\": \"\",\n        \"type\": \"\"\n      },\n      \"id\": {{faker 'random.number'}},\n      \"permission\": \"\",\n      \"self\": \"\"\n    }\n  ],\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n\n *  the user does not have the necessary permission to edit the project's configuration.\n *  the Jira instance is Jira Core Free or Jira Software Free. Permission schemes cannot be assigned to projects on free plans.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project or permission scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project issue security levels",
                      "method": "get",
                      "endpoint": "rest/api/3/project/:projectKeyOrId/securitylevel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"levels\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project is not found or the user does not have permission to view it.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all project categories",
                      "method": "get",
                      "endpoint": "rest/api/3/projectCategory",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create project category",
                      "method": "post",
                      "endpoint": "rest/api/3/projectCategory",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `name` is not provided or exceeds 255 characters.\n *  `description` exceeds 1000 characters.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the project category name is in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project category",
                      "method": "delete",
                      "endpoint": "rest/api/3/projectCategory/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project category is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project category by ID",
                      "method": "get",
                      "endpoint": "rest/api/3/projectCategory/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project category is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update project category",
                      "method": "put",
                      "endpoint": "rest/api/3/projectCategory/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `name` has been modified and exceeds 255 characters.\n *  `description` has been modified and exceeds 1000 characters.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project category is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Validate project key",
                      "method": "get",
                      "endpoint": "rest/api/3/projectvalidate/key",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get valid project key",
                      "method": "get",
                      "endpoint": "rest/api/3/projectvalidate/validProjectKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get valid project name",
                      "method": "get",
                      "endpoint": "rest/api/3/projectvalidate/validProjectName",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if a valid project name cannot be generated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get resolutions",
                      "method": "get",
                      "endpoint": "rest/api/3/resolution",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get resolution",
                      "method": "get",
                      "endpoint": "rest/api/3/resolution/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue resolution value is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all project roles",
                      "method": "get",
                      "endpoint": "rest/api/3/role",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"actors\": [\n      {\n        \"actorGroup\": {\n          \"displayName\": \"\",\n          \"name\": \"\"\n        },\n        \"actorUser\": {\n          \"accountId\": \"\"\n        },\n        \"avatarUrl\": \"\",\n        \"displayName\": \"\",\n        \"id\": {{faker 'random.number'}},\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n      }\n    ],\n    \"admin\": {{faker 'random.boolean'}},\n    \"currentUserRole\": {{faker 'random.boolean'}},\n    \"default\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"roleConfigurable\": {{faker 'random.boolean'}},\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"self\": \"\",\n    \"translatedName\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create project role",
                      "method": "post",
                      "endpoint": "rest/api/3/role",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if a project role with the provided name already exists.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete project role",
                      "method": "delete",
                      "endpoint": "rest/api/3/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid or if the replacement project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role being deleted is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the project role being deleted is in use and a replacement project role is not specified in the request.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get project role by ID",
                      "method": "get",
                      "endpoint": "rest/api/3/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Partial update project role",
                      "method": "post",
                      "endpoint": "rest/api/3/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Fully update project role",
                      "method": "put",
                      "endpoint": "rest/api/3/role/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid. The `name` cannot be empty or start or end with whitespace.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete default actors from project role",
                      "method": "delete",
                      "endpoint": "rest/api/3/role/:id/actors",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get default actors for project role",
                      "method": "get",
                      "endpoint": "rest/api/3/role/:id/actors",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add default actors to project role",
                      "method": "post",
                      "endpoint": "rest/api/3/role/:id/actors",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"actors\": [\n    {\n      \"actorGroup\": {\n        \"displayName\": \"\",\n        \"name\": \"\"\n      },\n      \"actorUser\": {\n        \"accountId\": \"\"\n      },\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'atlassian-group-role-actor' 'atlassian-user-role-actor')}}\"\n    }\n  ],\n  \"admin\": {{faker 'random.boolean'}},\n  \"currentUserRole\": {{faker 'random.boolean'}},\n  \"default\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"roleConfigurable\": {{faker 'random.boolean'}},\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  },\n  \"self\": \"\",\n  \"translatedName\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have administrative permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project role is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get screens",
                      "method": "get",
                      "endpoint": "rest/api/3/screens",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"scope\": {\n        \"project\": {\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"name\": \"\",\n          \"projectCategory\": {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\",\n            \"self\": \"\"\n          },\n          \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n          \"self\": \"\",\n          \"simplified\": {{faker 'random.boolean'}}\n        },\n        \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create screen",
                      "method": "post",
                      "endpoint": "rest/api/3/screens",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add field to default screen",
                      "method": "post",
                      "endpoint": "rest/api/3/screens/addToDefault/:fieldId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the field it not found or the field is already present.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete screen",
                      "method": "delete",
                      "endpoint": "rest/api/3/screens/:screenId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update screen",
                      "method": "put",
                      "endpoint": "rest/api/3/screens/:screenId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\",\n  \"scope\": {\n    \"project\": {\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"id\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"projectCategory\": {\n        \"description\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"self\": \"\"\n      },\n      \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n      \"self\": \"\",\n      \"simplified\": {{faker 'random.boolean'}}\n    },\n    \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get available screen fields",
                      "method": "get",
                      "endpoint": "rest/api/3/screens/:screenId/availableFields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"id\": \"\",\n    \"name\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all screen tabs",
                      "method": "get",
                      "endpoint": "rest/api/3/screens/:screenId/tabs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"id\": {{faker 'random.number'}},\n    \"name\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the screen ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create screen tab",
                      "method": "post",
                      "endpoint": "rest/api/3/screens/:screenId/tabs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete screen tab",
                      "method": "delete",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen or screen tab is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update screen tab",
                      "method": "put",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen or screen tab is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all screen tab fields",
                      "method": "get",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId/fields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"id\": \"\",\n    \"name\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen or screen tab is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add screen tab field",
                      "method": "post",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId/fields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen, screen tab, or field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove screen tab field",
                      "method": "delete",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId/fields/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen, screen tab, or field is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Move screen tab field",
                      "method": "post",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId/fields/:id/move",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen, screen tab, or field is not found or the field can't be moved to the requested position.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Move screen tab",
                      "method": "post",
                      "endpoint": "rest/api/3/screens/:screenId/tabs/:tabId/move/:pos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen or screen tab is not found or the position is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get screen schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/screenscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"description\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"issueTypeScreenSchemes\": {\n        \"isLast\": {{faker 'random.boolean'}},\n        \"maxResults\": {{faker 'random.number'}},\n        \"nextPage\": \"\",\n        \"self\": \"\",\n        \"startAt\": {{faker 'random.number'}},\n        \"total\": {{faker 'random.number'}},\n        \"values\": [\n          {\n            \"description\": \"\",\n            \"id\": \"\",\n            \"name\": \"\"\n          }\n        ]\n      },\n      \"name\": \"\",\n      \"screens\": {\n        \"create\": {{faker 'random.number'}},\n        \"default\": {{faker 'random.number'}},\n        \"edit\": {{faker 'random.number'}},\n        \"view\": {{faker 'random.number'}}\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create screen scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/screenscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if a screen used as one of the screen types in the screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete screen scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/screenscheme/:screenSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the screen scheme is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the screen scheme is used in an issue type screen scheme.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update screen scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/screenscheme/:screenSchemeId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the screen scheme or a screen used as one of the screen types is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Search for issues using JQL (GET)",
                      "method": "get",
                      "endpoint": "rest/api/3/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the JQL query is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Search for issues using JQL (POST)",
                      "method": "post",
                      "endpoint": "rest/api/3/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the JQL query is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue security level",
                      "method": "get",
                      "endpoint": "rest/api/3/securitylevel/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue security level is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Jira instance info",
                      "method": "get",
                      "endpoint": "rest/api/3/serverInfo",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"baseUrl\": \"\",\n  \"buildDate\": \"{{faker 'date.recent' 365}}\",\n  \"buildNumber\": {{faker 'random.number'}},\n  \"deploymentType\": \"\",\n  \"healthChecks\": [\n    {\n      \"description\": \"\",\n      \"name\": \"\",\n      \"passed\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"scmInfo\": \"\",\n  \"serverTime\": \"{{faker 'date.recent' 365}}\",\n  \"serverTitle\": \"\",\n  \"version\": \"\",\n  \"versionNumbers\": [\n    {{faker 'random.number'}}\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue navigator default columns",
                      "method": "get",
                      "endpoint": "rest/api/3/settings/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"label\": \"\",\n    \"value\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set issue navigator default columns",
                      "method": "put",
                      "endpoint": "rest/api/3/settings/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if invalid parameters are passed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if a navigable field value is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all statuses",
                      "method": "get",
                      "endpoint": "rest/api/3/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"description\": \"\",\n    \"iconUrl\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"statusCategory\": {\n      \"colorName\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\"\n    }\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get status",
                      "method": "get",
                      "endpoint": "rest/api/3/status/:idOrName",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"iconUrl\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"statusCategory\": {\n    \"colorName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the status is not found.\n *  the status is not associated with a workflow.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all status categories",
                      "method": "get",
                      "endpoint": "rest/api/3/statuscategory",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"colorName\": \"\",\n    \"id\": {{faker 'random.number'}},\n    \"key\": \"\",\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get status category",
                      "method": "get",
                      "endpoint": "rest/api/3/statuscategory/:idOrKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"colorName\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"key\": \"\",\n  \"name\": \"\",\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the status category is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get task",
                      "method": "get",
                      "endpoint": "rest/api/3/task/:taskId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"elapsedRuntime\": {{faker 'random.number'}},\n  \"finished\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"lastUpdate\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"progress\": {{faker 'random.number'}},\n  \"result\": \"\",\n  \"self\": \"\",\n  \"started\": {{faker 'random.number'}},\n  \"status\": \"{{oneOf (array 'ENQUEUED' 'RUNNING' 'COMPLETE' 'FAILED' 'CANCEL_REQUESTED' 'CANCELLED' 'DEAD')}}\",\n  \"submitted\": {{faker 'random.number'}},\n  \"submittedBy\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the task is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Cancel task",
                      "method": "post",
                      "endpoint": "rest/api/3/task/:taskId/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 202,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "[\n  \"\"\n]",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if cancellation of the task is not possible.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "[\n  \"\"\n]",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "[\n  \"\"\n]",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "[\n  \"\"\n]",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the task is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get avatars",
                      "method": "get",
                      "endpoint": "rest/api/3/universal_avatar/type/:type/owner/:entityId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom\": [\n    {\n      \"fileName\": \"\",\n      \"id\": \"\",\n      \"isDeletable\": {{faker 'random.boolean'}},\n      \"isSelected\": {{faker 'random.boolean'}},\n      \"isSystemAvatar\": {{faker 'random.boolean'}},\n      \"owner\": \"\",\n      \"urls\": {}\n    }\n  ],\n  \"system\": [\n    {\n      \"fileName\": \"\",\n      \"id\": \"\",\n      \"isDeletable\": {{faker 'random.boolean'}},\n      \"isSelected\": {{faker 'random.boolean'}},\n      \"isSystemAvatar\": {{faker 'random.boolean'}},\n      \"owner\": \"\",\n      \"urls\": {}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Load avatar",
                      "method": "post",
                      "endpoint": "rest/api/3/universal_avatar/type/:type/owner/:entityId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"fileName\": \"\",\n  \"id\": \"\",\n  \"isDeletable\": {{faker 'random.boolean'}},\n  \"isSelected\": {{faker 'random.boolean'}},\n  \"isSystemAvatar\": {{faker 'random.boolean'}},\n  \"owner\": \"\",\n  \"urls\": {}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  an image isn't included in the request.\n *  the image type is unsupported.\n *  the crop parameters extend the crop area beyond the edge of the image.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the avatar type is invalid, the associated item ID is missing, or the item is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete avatar",
                      "method": "delete",
                      "endpoint": "rest/api/3/universal_avatar/type/:type/owner/:owningObjectId/avatar/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have permission to delete the avatar, the avatar is not deletable.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the avatar type, associated item ID, or avatar ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete user",
                      "method": "delete",
                      "endpoint": "rest/api/3/user",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the user cannot be removed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user",
                      "method": "get",
                      "endpoint": "rest/api/3/user",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"accountId\": \"\",\n  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n  \"active\": {{faker 'random.boolean'}},\n  \"applicationRoles\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"defaultGroups\": [\n          \"\"\n        ],\n        \"defined\": {{faker 'random.boolean'}},\n        \"groups\": [\n          \"\"\n        ],\n        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n        \"key\": \"\",\n        \"name\": \"\",\n        \"numberOfSeats\": {{faker 'random.number'}},\n        \"platform\": {{faker 'random.boolean'}},\n        \"remainingSeats\": {{faker 'random.number'}},\n        \"selectedByDefault\": {{faker 'random.boolean'}},\n        \"userCount\": {{faker 'random.number'}},\n        \"userCountDescription\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"displayName\": \"\",\n  \"emailAddress\": \"\",\n  \"expand\": \"\",\n  \"groups\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"key\": \"\",\n  \"locale\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"timeZone\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the calling user does not have the *Browse users and groups* global permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create user",
                      "method": "post",
                      "endpoint": "rest/api/3/user",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"accountId\": \"\",\n  \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n  \"active\": {{faker 'random.boolean'}},\n  \"applicationRoles\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"defaultGroups\": [\n          \"\"\n        ],\n        \"defined\": {{faker 'random.boolean'}},\n        \"groups\": [\n          \"\"\n        ],\n        \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n        \"key\": \"\",\n        \"name\": \"\",\n        \"numberOfSeats\": {{faker 'random.number'}},\n        \"platform\": {{faker 'random.boolean'}},\n        \"remainingSeats\": {{faker 'random.number'}},\n        \"selectedByDefault\": {{faker 'random.boolean'}},\n        \"userCount\": {{faker 'random.number'}},\n        \"userCountDescription\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"avatarUrls\": {\n    \"16x16\": \"\",\n    \"24x24\": \"\",\n    \"32x32\": \"\",\n    \"48x48\": \"\"\n  },\n  \"displayName\": \"\",\n  \"emailAddress\": \"\",\n  \"expand\": \"\",\n  \"groups\": {\n    \"callback\": {},\n    \"items\": [\n      {\n        \"name\": \"\",\n        \"self\": \"\"\n      }\n    ],\n    \"max-results\": {{faker 'random.number'}},\n    \"pagingCallback\": {},\n    \"size\": {{faker 'random.number'}}\n  },\n  \"key\": \"\",\n  \"locale\": \"\",\n  \"name\": \"\",\n  \"self\": \"\",\n  \"timeZone\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid or the number of licensed users is exceeded.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users assignable to projects",
                      "method": "get",
                      "endpoint": "rest/api/3/user/assignable/multiProjectSearch",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `projectKeys` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if one or more of the projects is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users assignable to issues",
                      "method": "get",
                      "endpoint": "rest/api/3/user/assignable/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `issueKey` or `project` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the project, issue, or transition is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk get users",
                      "method": "get",
                      "endpoint": "rest/api/3/user/bulk",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountID` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get account IDs for users",
                      "method": "get",
                      "endpoint": "rest/api/3/user/bulk/migration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"key\": \"\",\n    \"username\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `key` or `username`",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Reset user default columns",
                      "method": "delete",
                      "endpoint": "rest/api/3/user/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user default columns",
                      "method": "get",
                      "endpoint": "rest/api/3/user/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"label\": \"\",\n    \"value\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the requested user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set user default columns",
                      "method": "put",
                      "endpoint": "rest/api/3/user/columns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the requested user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 500,
                              "label": "Returned if an invalid issue table column ID is sent.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user email",
                      "method": "get",
                      "endpoint": "rest/api/3/user/email",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"accountId\": \"\",\n  \"email\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the calling app is not approved to use this API.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing from the request (for example if a user is trying to access this API).",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if a user with the given `accountId` doesn't exist",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 503,
                              "label": "Indicates the API is not currently enabled",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user email bulk",
                      "method": "get",
                      "endpoint": "rest/api/3/user/email/bulk",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"accountId\": \"\",\n  \"email\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the calling app is not approved to use this API.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect, or missing from the request (for example if a user is trying to access this API).",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 503,
                              "label": "Indicates the API is not currently enabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user groups",
                      "method": "get",
                      "endpoint": "rest/api/3/user/groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"name\": \"\",\n    \"self\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the calling user does not have the *Browse users and groups* global permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  `accountId` is missing.\n *  the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users with permissions",
                      "method": "get",
                      "endpoint": "rest/api/3/user/permission/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.\n *  `permissions` is empty or contains an invalid entry.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users for picker",
                      "method": "get",
                      "endpoint": "rest/api/3/user/picker",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"header\": \"\",\n  \"total\": {{faker 'random.number'}},\n  \"users\": [\n    {\n      \"accountId\": \"\",\n      \"avatarUrl\": \"\",\n      \"displayName\": \"\",\n      \"html\": \"\",\n      \"key\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `exclude` and `excludeAccountIds` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user property keys",
                      "method": "get",
                      "endpoint": "rest/api/3/user/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete user property",
                      "method": "delete",
                      "endpoint": "rest/api/3/user/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the user property is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the user or the property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user property",
                      "method": "get",
                      "endpoint": "rest/api/3/user/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set user property",
                      "method": "put",
                      "endpoint": "rest/api/3/user/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the user property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the user property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if `accountId` is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission or is not accessing their user record.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the user is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 405,
                              "label": "Returned if the property key is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users",
                      "method": "get",
                      "endpoint": "rest/api/3/user/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `accountId`, `query` or `property` is missing.\n *  `query` and `accountId` are provided.\n *  `property` parameter is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users by query",
                      "method": "get",
                      "endpoint": "rest/api/3/user/search/query",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"accountId\": \"\",\n      \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n      \"active\": {{faker 'random.boolean'}},\n      \"applicationRoles\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"defaultGroups\": [\n              \"\"\n            ],\n            \"defined\": {{faker 'random.boolean'}},\n            \"groups\": [\n              \"\"\n            ],\n            \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n            \"key\": \"\",\n            \"name\": \"\",\n            \"numberOfSeats\": {{faker 'random.number'}},\n            \"platform\": {{faker 'random.boolean'}},\n            \"remainingSeats\": {{faker 'random.number'}},\n            \"selectedByDefault\": {{faker 'random.boolean'}},\n            \"userCount\": {{faker 'random.number'}},\n            \"userCountDescription\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"expand\": \"\",\n      \"groups\": {\n        \"callback\": {},\n        \"items\": [\n          {\n            \"name\": \"\",\n            \"self\": \"\"\n          }\n        ],\n        \"max-results\": {{faker 'random.number'}},\n        \"pagingCallback\": {},\n        \"size\": {{faker 'random.number'}}\n      },\n      \"key\": \"\",\n      \"locale\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the query is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 408,
                              "label": "Returned if the search is timed out.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find user keys by query",
                      "method": "get",
                      "endpoint": "rest/api/3/user/search/query/key",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"accountId\": \"\",\n      \"key\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the query is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 408,
                              "label": "Returned if the search is timed out.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Find users with browse permission",
                      "method": "get",
                      "endpoint": "rest/api/3/user/viewissue/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  `issueKey` or `projectKey` is missing.\n *  `query` or `accountId` is missing.\n *  `query` and `accountId` are provided.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the issue or project is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all users default",
                      "method": "get",
                      "endpoint": "rest/api/3/users",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user doesn't have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the request takes longer than 10 seconds or is interrupted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all users",
                      "method": "get",
                      "endpoint": "rest/api/3/users/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user doesn't have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "Returned if the request takes longer than 10 seconds or is interrupted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create version",
                      "method": "post",
                      "endpoint": "rest/api/3/version",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": \"\",\n  \"issuesStatusForFixVersion\": {\n    \"done\": {{faker 'random.number'}},\n    \"inProgress\": {{faker 'random.number'}},\n    \"toDo\": {{faker 'random.number'}},\n    \"unmapped\": {{faker 'random.number'}}\n  },\n  \"moveUnfixedIssuesTo\": \"\",\n  \"name\": \"\",\n  \"operations\": [\n    {\n      \"href\": \"\",\n      \"iconClass\": \"\",\n      \"id\": \"\",\n      \"label\": \"\",\n      \"styleClass\": \"\",\n      \"title\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ],\n  \"overdue\": {{faker 'random.boolean'}},\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"released\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"userReleaseDate\": \"\",\n  \"userStartDate\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the project is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete version",
                      "method": "delete",
                      "endpoint": "rest/api/3/version/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the version is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if:\n\n *  the authentication credentials are incorrect.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the version is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get version",
                      "method": "get",
                      "endpoint": "rest/api/3/version/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": \"\",\n  \"issuesStatusForFixVersion\": {\n    \"done\": {{faker 'random.number'}},\n    \"inProgress\": {{faker 'random.number'}},\n    \"toDo\": {{faker 'random.number'}},\n    \"unmapped\": {{faker 'random.number'}}\n  },\n  \"moveUnfixedIssuesTo\": \"\",\n  \"name\": \"\",\n  \"operations\": [\n    {\n      \"href\": \"\",\n      \"iconClass\": \"\",\n      \"id\": \"\",\n      \"label\": \"\",\n      \"styleClass\": \"\",\n      \"title\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ],\n  \"overdue\": {{faker 'random.boolean'}},\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"released\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"userReleaseDate\": \"\",\n  \"userStartDate\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the version is not found or the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update version",
                      "method": "put",
                      "endpoint": "rest/api/3/version/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": \"\",\n  \"issuesStatusForFixVersion\": {\n    \"done\": {{faker 'random.number'}},\n    \"inProgress\": {{faker 'random.number'}},\n    \"toDo\": {{faker 'random.number'}},\n    \"unmapped\": {{faker 'random.number'}}\n  },\n  \"moveUnfixedIssuesTo\": \"\",\n  \"name\": \"\",\n  \"operations\": [\n    {\n      \"href\": \"\",\n      \"iconClass\": \"\",\n      \"id\": \"\",\n      \"label\": \"\",\n      \"styleClass\": \"\",\n      \"title\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ],\n  \"overdue\": {{faker 'random.boolean'}},\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"released\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"userReleaseDate\": \"\",\n  \"userStartDate\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  the request is invalid.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the version is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Merge versions",
                      "method": "put",
                      "endpoint": "rest/api/3/version/:id/mergeto/:moveIssuesTo",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the version is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if:\n\n *  the authentication credentials are incorrect or missing.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the version to be deleted or the version to merge to are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Move version",
                      "method": "post",
                      "endpoint": "rest/api/3/version/:id/move",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"archived\": {{faker 'random.boolean'}},\n  \"description\": \"\",\n  \"expand\": \"\",\n  \"id\": \"\",\n  \"issuesStatusForFixVersion\": {\n    \"done\": {{faker 'random.number'}},\n    \"inProgress\": {{faker 'random.number'}},\n    \"toDo\": {{faker 'random.number'}},\n    \"unmapped\": {{faker 'random.number'}}\n  },\n  \"moveUnfixedIssuesTo\": \"\",\n  \"name\": \"\",\n  \"operations\": [\n    {\n      \"href\": \"\",\n      \"iconClass\": \"\",\n      \"id\": \"\",\n      \"label\": \"\",\n      \"styleClass\": \"\",\n      \"title\": \"\",\n      \"weight\": {{faker 'random.number'}}\n    }\n  ],\n  \"overdue\": {{faker 'random.boolean'}},\n  \"project\": \"\",\n  \"projectId\": {{faker 'random.number'}},\n  \"releaseDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"released\": {{faker 'random.boolean'}},\n  \"self\": \"\",\n  \"startDate\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"userReleaseDate\": \"\",\n  \"userStartDate\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n\n *  no body parameters are provided.\n *  `after` and `position` are provided.\n *  `position` is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if:\n\n *  the authentication credentials are incorrect or missing\n *  the user does not have the required commissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the version or move after version are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get version's related issues count",
                      "method": "get",
                      "endpoint": "rest/api/3/version/:id/relatedIssueCounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"customFieldUsage\": [\n    {\n      \"customFieldId\": {{faker 'random.number'}},\n      \"fieldName\": \"\",\n      \"issueCountWithVersionInCustomField\": {{faker 'random.number'}}\n    }\n  ],\n  \"issueCountWithCustomFieldsShowingVersion\": {{faker 'random.number'}},\n  \"issuesAffectedCount\": {{faker 'random.number'}},\n  \"issuesFixedCount\": {{faker 'random.number'}},\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete and replace version",
                      "method": "post",
                      "endpoint": "rest/api/3/version/:id/removeAndSwap",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the version is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the version to delete is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get version's unresolved issues count",
                      "method": "get",
                      "endpoint": "rest/api/3/version/:id/unresolvedIssueCount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issuesCount\": {{faker 'random.number'}},\n  \"issuesUnresolvedCount\": {{faker 'random.number'}},\n  \"self\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the version is not found.\n *  the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete webhooks by ID",
                      "method": "delete",
                      "endpoint": "rest/api/3/webhook",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 202,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the list of webhook IDs is missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not an app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get dynamic webhooks for app",
                      "method": "get",
                      "endpoint": "rest/api/3/webhook",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"events\": [\n        \"{{oneOf (array 'jira:issue_created' 'jira:issue_updated' 'jira:issue_deleted' 'comment_created' 'comment_updated' 'comment_deleted' 'issue_property_set' 'issue_property_deleted')}}\"\n      ],\n      \"expirationDate\": {{faker 'random.number'}},\n      \"fieldIdsFilter\": [\n        \"\"\n      ],\n      \"id\": {{faker 'random.number'}},\n      \"issuePropertyKeysFilter\": [\n        \"\"\n      ],\n      \"jqlFilter\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not an app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Register dynamic webhooks",
                      "method": "post",
                      "endpoint": "rest/api/3/webhook",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"webhookRegistrationResult\": [\n    {\n      \"createdWebhookId\": {{faker 'random.number'}},\n      \"errors\": [\n        \"\"\n      ]\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not an app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get failed webhooks",
                      "method": "get",
                      "endpoint": "rest/api/3/webhook/failed",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"maxResults\": {{faker 'random.number'}},\n  \"next\": \"\",\n  \"values\": [\n    {\n      \"body\": \"\",\n      \"failureTime\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"url\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "400 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Extend webhook life",
                      "method": "put",
                      "endpoint": "rest/api/3/webhook/refresh",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"expirationDate\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not an app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all workflows",
                      "method": "get",
                      "endpoint": "rest/api/3/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"default\": {{faker 'random.boolean'}},\n    \"description\": \"\",\n    \"lastModifiedDate\": \"\",\n    \"lastModifiedUser\": \"\",\n    \"lastModifiedUserAccountId\": \"\",\n    \"name\": \"\",\n    \"scope\": {\n      \"project\": {\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"id\": \"\",\n        \"key\": \"\",\n        \"name\": \"\",\n        \"projectCategory\": {\n          \"description\": \"\",\n          \"id\": \"\",\n          \"name\": \"\",\n          \"self\": \"\"\n        },\n        \"projectTypeKey\": \"{{oneOf (array 'software' 'service_desk' 'business')}}\",\n        \"self\": \"\",\n        \"simplified\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array 'PROJECT' 'TEMPLATE')}}\"\n    },\n    \"steps\": {{faker 'random.number'}}\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create workflow",
                      "method": "post",
                      "endpoint": "rest/api/3/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"entityId\": \"\",\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the workflow is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if one or more statuses is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow transition rule configurations",
                      "method": "get",
                      "endpoint": "rest/api/3/workflow/rule/config",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"conditions\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"postFunctions\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"validators\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"workflowId\": {\n        \"draft\": {{faker 'random.boolean'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the any transition rule type is not supported.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update workflow transition rule configurations",
                      "method": "put",
                      "endpoint": "rest/api/3/workflow/rule/config",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"updateResults\": [\n    {\n      \"ruleUpdateErrors\": {},\n      \"updateErrors\": [\n        \"\"\n      ],\n      \"workflowId\": {\n        \"draft\": {{faker 'random.boolean'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete workflow transition rule configurations",
                      "method": "put",
                      "endpoint": "rest/api/3/workflow/rule/config/delete",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"updateResults\": [\n    {\n      \"ruleUpdateErrors\": {},\n      \"updateErrors\": [\n        \"\"\n      ],\n      \"workflowId\": {\n        \"draft\": {{faker 'random.boolean'}},\n        \"name\": \"\"\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the caller is not a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflows paginated",
                      "method": "get",
                      "endpoint": "rest/api/3/workflow/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"errorMessages\": [\n    \"\"\n  ],\n  \"errors\": {},\n  \"status\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete workflow transition property",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflow/transitions/:transitionId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "200 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 304,
                              "label": "Returned if no changes were made by the request. For example, trying to delete a property that cannot be found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow transition is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow transition properties",
                      "method": "get",
                      "endpoint": "rest/api/3/workflow/transitions/:transitionId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "200 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have admin permission",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow transition or property is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create workflow transition property",
                      "method": "post",
                      "endpoint": "rest/api/3/workflow/transitions/:transitionId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "200 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if a workflow property with the same key is present on the transition.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow transition is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update workflow transition property",
                      "method": "put",
                      "endpoint": "rest/api/3/workflow/transitions/:transitionId/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "200 response",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 304,
                              "label": "Returned if no changes were made by the request. For example, attempting to update a property with its current value.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow transition is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete inactive workflow",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflow/:entityId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the workflow is deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get all workflow schemes",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"isLast\": {{faker 'random.boolean'}},\n  \"maxResults\": {{faker 'random.number'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"startAt\": {{faker 'random.number'}},\n  \"total\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"defaultWorkflow\": \"\",\n      \"description\": \"\",\n      \"draft\": {{faker 'random.boolean'}},\n      \"id\": {{faker 'random.number'}},\n      \"issueTypeMappings\": {},\n      \"issueTypes\": {},\n      \"lastModified\": \"\",\n      \"lastModifiedUser\": {\n        \"accountId\": \"\",\n        \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n        \"active\": {{faker 'random.boolean'}},\n        \"applicationRoles\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"defaultGroups\": [\n                \"\"\n              ],\n              \"defined\": {{faker 'random.boolean'}},\n              \"groups\": [\n                \"\"\n              ],\n              \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n              \"key\": \"\",\n              \"name\": \"\",\n              \"numberOfSeats\": {{faker 'random.number'}},\n              \"platform\": {{faker 'random.boolean'}},\n              \"remainingSeats\": {{faker 'random.number'}},\n              \"selectedByDefault\": {{faker 'random.boolean'}},\n              \"userCount\": {{faker 'random.number'}},\n              \"userCountDescription\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"avatarUrls\": {\n          \"16x16\": \"\",\n          \"24x24\": \"\",\n          \"32x32\": \"\",\n          \"48x48\": \"\"\n        },\n        \"displayName\": \"\",\n        \"emailAddress\": \"\",\n        \"expand\": \"\",\n        \"groups\": {\n          \"callback\": {},\n          \"items\": [\n            {\n              \"name\": \"\",\n              \"self\": \"\"\n            }\n          ],\n          \"max-results\": {{faker 'random.number'}},\n          \"pagingCallback\": {},\n          \"size\": {{faker 'random.number'}}\n        },\n        \"key\": \"\",\n        \"locale\": \"\",\n        \"name\": \"\",\n        \"self\": \"\",\n        \"timeZone\": \"\"\n      },\n      \"name\": \"\",\n      \"originalDefaultWorkflow\": \"\",\n      \"originalIssueTypeMappings\": {},\n      \"self\": \"\",\n      \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create workflow scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/workflowscheme",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow scheme project associations",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"values\": [\n    {\n      \"projectIds\": [\n        \"\"\n      ],\n      \"workflowScheme\": {\n        \"defaultWorkflow\": \"\",\n        \"description\": \"\",\n        \"draft\": {{faker 'random.boolean'}},\n        \"id\": {{faker 'random.number'}},\n        \"issueTypeMappings\": {},\n        \"issueTypes\": {},\n        \"lastModified\": \"\",\n        \"lastModifiedUser\": {\n          \"accountId\": \"\",\n          \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n          \"active\": {{faker 'random.boolean'}},\n          \"applicationRoles\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"defaultGroups\": [\n                  \"\"\n                ],\n                \"defined\": {{faker 'random.boolean'}},\n                \"groups\": [\n                  \"\"\n                ],\n                \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n                \"key\": \"\",\n                \"name\": \"\",\n                \"numberOfSeats\": {{faker 'random.number'}},\n                \"platform\": {{faker 'random.boolean'}},\n                \"remainingSeats\": {{faker 'random.number'}},\n                \"selectedByDefault\": {{faker 'random.boolean'}},\n                \"userCount\": {{faker 'random.number'}},\n                \"userCountDescription\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"avatarUrls\": {\n            \"16x16\": \"\",\n            \"24x24\": \"\",\n            \"32x32\": \"\",\n            \"48x48\": \"\"\n          },\n          \"displayName\": \"\",\n          \"emailAddress\": \"\",\n          \"expand\": \"\",\n          \"groups\": {\n            \"callback\": {},\n            \"items\": [\n              {\n                \"name\": \"\",\n                \"self\": \"\"\n              }\n            ],\n            \"max-results\": {{faker 'random.number'}},\n            \"pagingCallback\": {},\n            \"size\": {{faker 'random.number'}}\n          },\n          \"key\": \"\",\n          \"locale\": \"\",\n          \"name\": \"\",\n          \"self\": \"\",\n          \"timeZone\": \"\"\n        },\n        \"name\": \"\",\n        \"originalDefaultWorkflow\": \"\",\n        \"originalIssueTypeMappings\": {},\n        \"self\": \"\",\n        \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n      }\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign workflow scheme to project",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/project",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the required permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or the project are not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the scheme is active.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create draft workflow scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/workflowscheme/:id/createdraft",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete default workflow",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get default workflow",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update default workflow",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the workflow scheme cannot be edited and `updateDraftIfNeeded` is not `true`.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete draft workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission..",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get draft workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update draft workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if:\n\n *  the original active workflow scheme is not found.\n *  the original active workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete draft default workflow",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get draft default workflow",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission..",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update draft default workflow",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/default",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete workflow for issue type in draft workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow for issue type in draft workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueType\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set workflow for issue type in draft workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Publish draft workflow scheme",
                      "method": "post",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/publish",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is only for validation and is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"elapsedRuntime\": {{faker 'random.number'}},\n  \"finished\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"lastUpdate\": {{faker 'random.number'}},\n  \"message\": \"\",\n  \"progress\": {{faker 'random.number'}},\n  \"result\": \"\",\n  \"self\": \"\",\n  \"started\": {{faker 'random.number'}},\n  \"status\": \"{{oneOf (array 'ENQUEUED' 'RUNNING' 'COMPLETE' 'FAILED' 'CANCEL_REQUESTED' 'CANCELLED' 'DEAD')}}\",\n  \"submitted\": {{faker 'random.number'}},\n  \"submittedBy\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 303,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of these are true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  A new status in the draft workflow scheme is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue types for workflow in draft workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue types for workflows in draft workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultMapping\": {{faker 'random.boolean'}},\n  \"issueTypes\": [\n    \"\"\n  ],\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if either the workflow scheme or workflow (if specified) is not found. session.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set issue types for workflow in workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/draft/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow scheme does not have a draft.\n *  The workflow is not found.\n *  The workflow is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete workflow for issue type in workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow for issue type in workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"issueType\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set workflow for issue type in workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/issuetype/:issueType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is false.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the workflow scheme or issue type is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete issue types for workflow in workflow scheme",
                      "method": "delete",
                      "endpoint": "rest/api/3/workflowscheme/:id/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the workflow cannot be edited and `updateDraftIfNeeded` is not true.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issue types for workflows in workflow scheme",
                      "method": "get",
                      "endpoint": "rest/api/3/workflowscheme/:id/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultMapping\": {{faker 'random.boolean'}},\n  \"issueTypes\": [\n    \"\"\n  ],\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}},\n  \"workflow\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if either the workflow scheme or workflow is not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set issue types for workflow in workflow scheme",
                      "method": "put",
                      "endpoint": "rest/api/3/workflowscheme/:id/workflow",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"defaultWorkflow\": \"\",\n  \"description\": \"\",\n  \"draft\": {{faker 'random.boolean'}},\n  \"id\": {{faker 'random.number'}},\n  \"issueTypeMappings\": {},\n  \"issueTypes\": {},\n  \"lastModified\": \"\",\n  \"lastModifiedUser\": {\n    \"accountId\": \"\",\n    \"accountType\": \"{{oneOf (array 'atlassian' 'app' 'customer' 'unknown')}}\",\n    \"active\": {{faker 'random.boolean'}},\n    \"applicationRoles\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"defaultGroups\": [\n            \"\"\n          ],\n          \"defined\": {{faker 'random.boolean'}},\n          \"groups\": [\n            \"\"\n          ],\n          \"hasUnlimitedSeats\": {{faker 'random.boolean'}},\n          \"key\": \"\",\n          \"name\": \"\",\n          \"numberOfSeats\": {{faker 'random.number'}},\n          \"platform\": {{faker 'random.boolean'}},\n          \"remainingSeats\": {{faker 'random.number'}},\n          \"selectedByDefault\": {{faker 'random.boolean'}},\n          \"userCount\": {{faker 'random.number'}},\n          \"userCountDescription\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"avatarUrls\": {\n      \"16x16\": \"\",\n      \"24x24\": \"\",\n      \"32x32\": \"\",\n      \"48x48\": \"\"\n    },\n    \"displayName\": \"\",\n    \"emailAddress\": \"\",\n    \"expand\": \"\",\n    \"groups\": {\n      \"callback\": {},\n      \"items\": [\n        {\n          \"name\": \"\",\n          \"self\": \"\"\n        }\n      ],\n      \"max-results\": {{faker 'random.number'}},\n      \"pagingCallback\": {},\n      \"size\": {{faker 'random.number'}}\n    },\n    \"key\": \"\",\n    \"locale\": \"\",\n    \"name\": \"\",\n    \"self\": \"\",\n    \"timeZone\": \"\"\n  },\n  \"name\": \"\",\n  \"originalDefaultWorkflow\": \"\",\n  \"originalIssueTypeMappings\": {},\n  \"self\": \"\",\n  \"updateDraftIfNeeded\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the user does not have the necessary permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if any of the following is true:\n\n *  The workflow scheme is not found.\n *  The workflow is not found.\n *  The workflow is not specified.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get IDs of deleted worklogs",
                      "method": "get",
                      "endpoint": "rest/api/3/worklog/deleted",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"lastPage\": {{faker 'random.boolean'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"since\": {{faker 'random.number'}},\n  \"until\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"properties\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"updatedTime\": {{faker 'random.number'}},\n      \"worklogId\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get worklogs",
                      "method": "post",
                      "endpoint": "rest/api/3/worklog/list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "[\n  {\n    \"author\": {\n      \"accountId\": \"\",\n      \"accountType\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"comment\": \"\",\n    \"created\": \"{{faker 'date.recent' 365}}\",\n    \"id\": \"\",\n    \"issueId\": \"\",\n    \"properties\": [\n      {\n        \"key\": \"\",\n        \"value\": \"\"\n      }\n    ],\n    \"self\": \"\",\n    \"started\": \"{{faker 'date.recent' 365}}\",\n    \"timeSpent\": \"\",\n    \"timeSpentSeconds\": {{faker 'random.number'}},\n    \"updateAuthor\": {\n      \"accountId\": \"\",\n      \"accountType\": \"\",\n      \"active\": {{faker 'random.boolean'}},\n      \"avatarUrls\": {\n        \"16x16\": \"\",\n        \"24x24\": \"\",\n        \"32x32\": \"\",\n        \"48x48\": \"\"\n      },\n      \"displayName\": \"\",\n      \"emailAddress\": \"\",\n      \"key\": \"\",\n      \"name\": \"\",\n      \"self\": \"\",\n      \"timeZone\": \"\"\n    },\n    \"updated\": \"{{faker 'date.recent' 365}}\",\n    \"visibility\": {\n      \"type\": \"{{oneOf (array 'group' 'role')}}\",\n      \"value\": \"\"\n    }\n  }\n]",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request contains more than 1000 worklog IDs or is empty.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get IDs of updated worklogs",
                      "method": "get",
                      "endpoint": "rest/api/3/worklog/updated",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"lastPage\": {{faker 'random.boolean'}},\n  \"nextPage\": \"\",\n  \"self\": \"\",\n  \"since\": {{faker 'random.number'}},\n  \"until\": {{faker 'random.number'}},\n  \"values\": [\n    {\n      \"properties\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"updatedTime\": {{faker 'random.number'}},\n      \"worklogId\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get app properties",
                      "method": "get",
                      "endpoint": "rest/atlassian-connect/1/addons/:addonKey/properties",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"keys\": [\n    {\n      \"key\": \"\",\n      \"self\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete app property",
                      "method": "delete",
                      "endpoint": "rest/atlassian-connect/1/addons/:addonKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the property key is longer than 127 characters.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the property is not found or doesn't belong to the app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get app property",
                      "method": "get",
                      "endpoint": "rest/atlassian-connect/1/addons/:addonKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the property key is longer than 127 characters.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "Returned if the property is not found or doesn't belong to the app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set app property",
                      "method": "put",
                      "endpoint": "rest/atlassian-connect/1/addons/:addonKey/properties/:propertyKey",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the property is updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Returned is the property is created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n  * the property key is longer than 127 characters.\n  * the value is not valid JSON.\n  * the value is longer than 32768 characters.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"An example message.\",\n  \"statusCode\": 200\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the authentication credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove modules",
                      "method": "delete",
                      "endpoint": "rest/atlassian-connect/1/app/module/dynamic",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"The request is not from a Connect app.\"\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the call is not from a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get modules",
                      "method": "get",
                      "endpoint": "rest/atlassian-connect/1/app/module/dynamic",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"jiraEntityProperties\": [\n    {\n      \"entityType\": \"issue\",\n      \"key\": \"dynamic-attachment-entity-property\",\n      \"keyConfigurations\": [\n        {\n          \"extractions\": [\n            {\n              \"alias\": \"attachmentExtension\",\n              \"objectName\": \"extension\",\n              \"type\": \"text\"\n            }\n          ],\n          \"propertyKey\": \"attachment\"\n        }\n      ],\n      \"name\": {\n        \"value\": \"Attachment Index Document\"\n      }\n    }\n  ],\n  \"jiraIssueFields\": [\n    {\n      \"description\": {\n        \"value\": \"A dynamically added single-select field\"\n      },\n      \"extractions\": [\n        {\n          \"name\": \"categoryName\",\n          \"path\": \"category\",\n          \"type\": \"text\"\n        }\n      ],\n      \"key\": \"dynamic-select-field\",\n      \"name\": {\n        \"value\": \"Dynamic single select\"\n      },\n      \"type\": \"single_select\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"The request is not from a Connect app.\"\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the call is not from a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Register modules",
                      "method": "post",
                      "endpoint": "rest/atlassian-connect/1/app/module/dynamic",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"The request is not from a Connect app.\"\n}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if:\n* any of the provided modules is invalid. For example, required properties are missing.\n* any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\n\nDetails of the issues encountered are included in the error message.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"message\": \"The request is not from a Connect app.\"\n}",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "Returned if the call is not from a Connect app.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk update custom field value",
                      "method": "put",
                      "endpoint": "rest/atlassian-connect/1/migration/field",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if:\n* the transfer ID is not found.\n* the authorisation credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Bulk update entity properties",
                      "method": "put",
                      "endpoint": "rest/atlassian-connect/1/migration/properties/:entityType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the authorisation credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get workflow transition rule configurations",
                      "method": "post",
                      "endpoint": "rest/atlassian-connect/1/migration/workflow/rule/search",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"invalidRules\": [\n    \"55d44f1d-c859-42e5-9c27-2c5ec3f340b1\"\n  ],\n  \"validRules\": [\n    {\n      \"conditions\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"postFunctions\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"validators\": [\n        {\n          \"configuration\": {\n            \"value\": \"\"\n          },\n          \"id\": \"\",\n          \"key\": \"\",\n          \"transition\": {\n            \"id\": {{faker 'random.number'}},\n            \"name\": \"\"\n          }\n        }\n      ],\n      \"workflowId\": {\n        \"draft\": {{faker 'random.boolean'}},\n        \"name\": \"\"\n      }\n    }\n  ],\n  \"workflowEntityId\": \"a498d711-685d-428d-8c3e-bc03bb450ea7\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Returned if the request is successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "Returned if the request is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 403,
                              "label": "Returned if the authorisation credentials are incorrect or missing.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  }
              ],
              "proxyMode": false,
              "proxyHost": "",
              "proxyRemovePrefix": false,
              "https": false,
              "cors": true,
              "headers": [],
              "proxyReqHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ],
              "proxyResHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ]
          }
      }
  ]
}
