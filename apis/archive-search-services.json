{
  "uuid": "",
  "lastMigration": 17,
  "name": "Search Services",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "",
      "documentation": "Fields that can be requested",
      "method": "get",
      "endpoint": "search/v1/fields",
      "responses": [
        {
          "uuid": "",
          "body": "[\n  \"\"\n]",
          "latency": 0,
          "statusCode": 200,
          "label": "Fields that can be requested",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Return relevance-based results from search queries\n",
      "method": "get",
      "endpoint": "search/v1/organic",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"count\": {{faker 'random.number'}},\n  \"items\": [\n    {}\n  ],\n  \"total\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Organic Search API. Returns results in descending relevance order",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Scrape search results from Internet Archive, allowing a scrolling cursor\n",
      "method": "get",
      "endpoint": "search/v1/scrape",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"count\": {{faker 'random.number'}},\n  \"cursor\": \"\",\n  \"items\": [\n    {}\n  ],\n  \"previous\": \"\",\n  \"total\": {{faker 'random.number'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Scaping API",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"code\": {{faker 'random.number'}},\n  \"message\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Unexpected error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "https": false,
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}
