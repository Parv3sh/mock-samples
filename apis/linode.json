{
  "uuid": "",
  "lastMigration": 17,
  "name": "Linode API",
  "endpointPrefix": "v4",
  "latency": 0,
  "port": 3000,
  "hostname": "0.0.0.0",
  "routes": [
    {
      "uuid": "",
      "documentation": "Account View",
      "method": "get",
      "endpoint": "account",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"active_promotions\": [\n    {\n      \"credit_monthly_cap\": \"10.00\",\n      \"credit_remaining\": \"50.00\",\n      \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n      \"expire_dt\": \"2018-01-31T23:59:59.000Z\",\n      \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n      \"service_type\": \"{{oneOf (array 'all' 'backup' 'blockstorage' 'db_mysql' 'ip_v4' 'linode' 'linode_disk' 'linode_memory' 'longview' 'managed' 'nodebalancer' 'objectstorage' 'transfer_tx')}}\",\n      \"summary\": \"$10 off your Linode a month!\",\n      \"this_month_credit_remaining\": \"10.00\"\n    }\n  ],\n  \"active_since\": \"2018-01-01T00:01:01.000Z\",\n  \"address_1\": \"123 Main Street\",\n  \"address_2\": \"Suite A\",\n  \"balance\": 200,\n  \"balance_uninvoiced\": 145,\n  \"capabilities\": [\n    \"Linodes\",\n    \"NodeBalancers\",\n    \"Block Storage\",\n    \"Object Storage\"\n  ],\n  \"city\": \"Philadelphia\",\n  \"company\": \"Linode LLC\",\n  \"country\": \"US\",\n  \"credit_card\": {\n    \"expiry\": \"11/2022\",\n    \"last_four\": 1111\n  },\n  \"email\": \"john.smith@linode.com\",\n  \"euuid\": \"E1AF5EEC-526F-487D-B317EBEB34C87D71\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"phone\": \"215-555-1212\",\n  \"state\": \"Pennsylvania\",\n  \"tax_id\": \"ATU99999999\",\n  \"zip\": \"19102-1234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Account object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Account Update",
      "method": "put",
      "endpoint": "account",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"active_promotions\": [\n    {\n      \"credit_monthly_cap\": \"10.00\",\n      \"credit_remaining\": \"50.00\",\n      \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n      \"expire_dt\": \"2018-01-31T23:59:59.000Z\",\n      \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n      \"service_type\": \"{{oneOf (array 'all' 'backup' 'blockstorage' 'db_mysql' 'ip_v4' 'linode' 'linode_disk' 'linode_memory' 'longview' 'managed' 'nodebalancer' 'objectstorage' 'transfer_tx')}}\",\n      \"summary\": \"$10 off your Linode a month!\",\n      \"this_month_credit_remaining\": \"10.00\"\n    }\n  ],\n  \"active_since\": \"2018-01-01T00:01:01.000Z\",\n  \"address_1\": \"123 Main Street\",\n  \"address_2\": \"Suite A\",\n  \"balance\": 200,\n  \"balance_uninvoiced\": 145,\n  \"capabilities\": [\n    \"Linodes\",\n    \"NodeBalancers\",\n    \"Block Storage\",\n    \"Object Storage\"\n  ],\n  \"city\": \"Philadelphia\",\n  \"company\": \"Linode LLC\",\n  \"country\": \"US\",\n  \"credit_card\": {\n    \"expiry\": \"11/2022\",\n    \"last_four\": 1111\n  },\n  \"email\": \"john.smith@linode.com\",\n  \"euuid\": \"E1AF5EEC-526F-487D-B317EBEB34C87D71\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"phone\": \"215-555-1212\",\n  \"state\": \"Pennsylvania\",\n  \"tax_id\": \"ATU99999999\",\n  \"zip\": \"19102-1234\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Account Cancel",
      "method": "post",
      "endpoint": "account/cancel",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"survey_link\": \"https://alinktothesurvey.com\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Account cancelled",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"reason\": \"We were unable to charge your credit card for services rendered. We cannot cancel this account until the balance has been paid.\\n\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 409,
          "label": "Could not charge the credit card on file",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Credit Card Add/Edit",
      "method": "post",
      "endpoint": "account/credit-card",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credit Card updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Entity Transfers List",
      "method": "get",
      "endpoint": "account/entity-transfers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2021-02-11T16:37:03.000Z\",\n      \"entities\": {\n        \"linodes\": [\n          111,\n          222\n        ]\n      },\n      \"expiry\": \"2021-02-12T16:37:03.000Z\",\n      \"is_sender\": true,\n      \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n      \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n      \"updated\": \"2021-02-11T16:37:03.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Entity Transfer objects containing the details of all transfers that have been created and accepted by this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Entity Transfer Create",
      "method": "post",
      "endpoint": "account/entity-transfers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2021-02-11T16:37:03.000Z\",\n  \"entities\": {\n    \"linodes\": [\n      111,\n      222\n    ]\n  },\n  \"expiry\": \"2021-02-12T16:37:03.000Z\",\n  \"is_sender\": true,\n  \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n  \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n  \"updated\": \"2021-02-11T16:37:03.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an Entity Transfer object for the request.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Entity Transfer Cancel",
      "method": "delete",
      "endpoint": "account/entity-transfers/:token",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Entity Transfer cancelled.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Entity Transfer View",
      "method": "get",
      "endpoint": "account/entity-transfers/:token",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2021-02-11T16:37:03.000Z\",\n  \"entities\": {\n    \"linodes\": [\n      111,\n      222\n    ]\n  },\n  \"expiry\": \"2021-02-12T16:37:03.000Z\",\n  \"is_sender\": true,\n  \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n  \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n  \"updated\": \"2021-02-11T16:37:03.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an Entity Transfer object containing the details of the transfer for the specified token.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Entity Transfer Accept",
      "method": "post",
      "endpoint": "account/entity-transfers/:token/accept",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Entity Transfer accepted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Events List",
      "method": "get",
      "endpoint": "account/events",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"action\": \"{{oneOf (array 'account_update' 'account_settings_update' 'backups_enable' 'backups_cancel' 'backups_restore' 'community_question_reply' 'community_like' 'credit_card_updated' 'disk_create' 'disk_delete' 'disk_update' 'disk_duplicate' 'disk_imagize' 'disk_resize' 'dns_record_create' 'dns_record_delete' 'dns_record_update' 'dns_zone_create' 'dns_zone_delete' 'dns_zone_import' 'dns_zone_update' 'entity_transfer_accept' 'entity_transfer_cancel' 'entity_transfer_create' 'entity_transfer_fail' 'entity_transfer_stale' 'firewall_create' 'firewall_delete' 'firewall_disable' 'firewall_enable' 'firewall_update' 'firewall_device_add' 'firewall_device_remove' 'host_reboot' 'image_delete' 'image_update' 'image_upload' 'ipaddress_update' 'lassie_reboot' 'lish_boot' 'linode_addip' 'linode_boot' 'linode_clone' 'linode_create' 'linode_delete' 'linode_update' 'linode_deleteip' 'linode_migrate' 'linode_migrate_datacenter' 'linode_migrate_datacenter_create' 'linode_mutate' 'linode_mutate_create' 'linode_reboot' 'linode_rebuild' 'linode_resize' 'linode_resize_create' 'linode_shutdown' 'linode_snapshot' 'linode_config_create' 'linode_config_delete' 'linode_config_update' 'lke_node_create' 'longviewclient_create' 'longviewclient_delete' 'longviewclient_update' 'managed_disabled' 'managed_enabled' 'managed_service_create' 'managed_service_delete' 'nodebalancer_create' 'nodebalancer_delete' 'nodebalancer_update' 'nodebalancer_config_create' 'nodebalancer_config_delete' 'nodebalancer_config_update' 'nodebalancer_node_create' 'nodebalancer_node_delete' 'nodebalancer_node_update' 'oauth_client_create' 'oauth_client_delete' 'oauth_client_secret_reset' 'oauth_client_update' 'password_reset' 'payment_submitted' 'profile_update' 'stackscript_create' 'stackscript_delete' 'stackscript_update' 'stackscript_publicize' 'stackscript_revise' 'tag_create' 'tag_delete' 'tfa_disabled' 'tfa_enabled' 'ticket_attachment_upload' 'ticket_create' 'ticket_update' 'token_create' 'token_delete' 'token_update' 'user_create' 'user_update' 'user_delete' 'user_ssh_key_add' 'user_ssh_key_delete' 'user_ssh_key_update' 'vlan_attach' 'vlan_detach' 'volume_attach' 'volume_clone' 'volume_create' 'volume_delete' 'volume_update' 'volume_detach' 'volume_resize')}}\",\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"duration\": 300.56,\n      \"entity\": {\n        \"id\": 11111,\n        \"label\": \"Problem booting my Linode\",\n        \"type\": \"{{oneOf (array 'account' 'backups' 'community' 'disks' 'domain' 'entity_transfer' 'firewall' 'image' 'ipaddress' 'linode' 'longview' 'managed_service' 'nodebalancer' 'oauth_client' 'profile' 'stackscript' 'tag' 'ticket' 'token' 'user' 'user_ssh_key' 'volume')}}\",\n        \"url\": \"/v4/support/tickets/11111\"\n      },\n      \"id\": 123,\n      \"message\": \"None\",\n      \"percent_complete\": {{faker 'random.number'}},\n      \"rate\": \"\",\n      \"read\": true,\n      \"secondary_entity\": {\n        \"id\": \"linode/debian9\",\n        \"label\": \"linode1234\",\n        \"type\": \"linode\",\n        \"url\": \"/v4/linode/instances/1234\"\n      },\n      \"seen\": true,\n      \"status\": \"{{oneOf (array 'failed' 'finished' 'notification' 'scheduled' 'started')}}\",\n      \"time_remaining\": \"\",\n      \"username\": \"exampleUser\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated lists of Event objects from the last 90 days.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Event View",
      "method": "get",
      "endpoint": "account/events/:eventId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"action\": \"{{oneOf (array 'account_update' 'account_settings_update' 'backups_enable' 'backups_cancel' 'backups_restore' 'community_question_reply' 'community_like' 'credit_card_updated' 'disk_create' 'disk_delete' 'disk_update' 'disk_duplicate' 'disk_imagize' 'disk_resize' 'dns_record_create' 'dns_record_delete' 'dns_record_update' 'dns_zone_create' 'dns_zone_delete' 'dns_zone_import' 'dns_zone_update' 'entity_transfer_accept' 'entity_transfer_cancel' 'entity_transfer_create' 'entity_transfer_fail' 'entity_transfer_stale' 'firewall_create' 'firewall_delete' 'firewall_disable' 'firewall_enable' 'firewall_update' 'firewall_device_add' 'firewall_device_remove' 'host_reboot' 'image_delete' 'image_update' 'image_upload' 'ipaddress_update' 'lassie_reboot' 'lish_boot' 'linode_addip' 'linode_boot' 'linode_clone' 'linode_create' 'linode_delete' 'linode_update' 'linode_deleteip' 'linode_migrate' 'linode_migrate_datacenter' 'linode_migrate_datacenter_create' 'linode_mutate' 'linode_mutate_create' 'linode_reboot' 'linode_rebuild' 'linode_resize' 'linode_resize_create' 'linode_shutdown' 'linode_snapshot' 'linode_config_create' 'linode_config_delete' 'linode_config_update' 'lke_node_create' 'longviewclient_create' 'longviewclient_delete' 'longviewclient_update' 'managed_disabled' 'managed_enabled' 'managed_service_create' 'managed_service_delete' 'nodebalancer_create' 'nodebalancer_delete' 'nodebalancer_update' 'nodebalancer_config_create' 'nodebalancer_config_delete' 'nodebalancer_config_update' 'nodebalancer_node_create' 'nodebalancer_node_delete' 'nodebalancer_node_update' 'oauth_client_create' 'oauth_client_delete' 'oauth_client_secret_reset' 'oauth_client_update' 'password_reset' 'payment_submitted' 'profile_update' 'stackscript_create' 'stackscript_delete' 'stackscript_update' 'stackscript_publicize' 'stackscript_revise' 'tag_create' 'tag_delete' 'tfa_disabled' 'tfa_enabled' 'ticket_attachment_upload' 'ticket_create' 'ticket_update' 'token_create' 'token_delete' 'token_update' 'user_create' 'user_update' 'user_delete' 'user_ssh_key_add' 'user_ssh_key_delete' 'user_ssh_key_update' 'vlan_attach' 'vlan_detach' 'volume_attach' 'volume_clone' 'volume_create' 'volume_delete' 'volume_update' 'volume_detach' 'volume_resize')}}\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"duration\": 300.56,\n  \"entity\": {\n    \"id\": 11111,\n    \"label\": \"Problem booting my Linode\",\n    \"type\": \"{{oneOf (array 'account' 'backups' 'community' 'disks' 'domain' 'entity_transfer' 'firewall' 'image' 'ipaddress' 'linode' 'longview' 'managed_service' 'nodebalancer' 'oauth_client' 'profile' 'stackscript' 'tag' 'ticket' 'token' 'user' 'user_ssh_key' 'volume')}}\",\n    \"url\": \"/v4/support/tickets/11111\"\n  },\n  \"id\": 123,\n  \"message\": \"None\",\n  \"percent_complete\": {{faker 'random.number'}},\n  \"rate\": \"\",\n  \"read\": true,\n  \"secondary_entity\": {\n    \"id\": \"linode/debian9\",\n    \"label\": \"linode1234\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/1234\"\n  },\n  \"seen\": true,\n  \"status\": \"{{oneOf (array 'failed' 'finished' 'notification' 'scheduled' 'started')}}\",\n  \"time_remaining\": \"\",\n  \"username\": \"exampleUser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An Event object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Event Mark as Read",
      "method": "post",
      "endpoint": "account/events/:eventId/read",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Event read.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Event Mark as Seen",
      "method": "post",
      "endpoint": "account/events/:eventId/seen",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Events seen.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Invoices List",
      "method": "get",
      "endpoint": "account/invoices",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"date\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 123,\n      \"label\": \"Invoice\",\n      \"subtotal\": 120.25,\n      \"tax\": 12.25,\n      \"total\": 132.5\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Invoice objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Invoice View",
      "method": "get",
      "endpoint": "account/invoices/:invoiceId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123,\n  \"label\": \"Invoice\",\n  \"subtotal\": 120.25,\n  \"tax\": 12.25,\n  \"total\": 132.5\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An Invoice object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Invoice Items List",
      "method": "get",
      "endpoint": "account/invoices/:invoiceId/items",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"amount\": 20.2,\n      \"from\": \"2018-01-01T00:01:01.000Z\",\n      \"label\": \"Linode 123\",\n      \"quantity\": 4,\n      \"tax\": 1.25,\n      \"to\": \"2018-01-31T11:59:59.000Z\",\n      \"total\": 21.45,\n      \"type\": \"{{oneOf (array 'hourly' 'misc')}}\",\n      \"unit_price\": 5.05\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of InvoiceItem objects",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Logins List All",
      "method": "get",
      "endpoint": "account/logins",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"datetime\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 1234,\n      \"ip\": \"192.0.2.0\",\n      \"restricted\": true,\n      \"username\": \"example_user\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of successful logins for all users on the account during the last 90 days.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Login View",
      "method": "get",
      "endpoint": "account/logins/:loginId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"datetime\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 1234,\n  \"ip\": \"192.0.2.0\",\n  \"restricted\": true,\n  \"username\": \"example_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested login object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Maintenance List",
      "method": "get",
      "endpoint": "account/maintenance",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"entity\": {\n        \"id\": 1234,\n        \"label\": \"demo-linode\",\n        \"type\": \"Linode\",\n        \"url\": \"https://api.linode.com/v4/linode/instances/{linodeId}\"\n      },\n      \"reason\": \"This maintenance will allow us to update the BIOS on the host’s motherboard.\",\n      \"status\": \"{{oneOf (array 'pending' 'started')}}\",\n      \"type\": \"{{oneOf (array 'reboot' 'cold_migration' 'live_migration')}}\",\n      \"when\": {}\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Maintenance objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Notifications List",
      "method": "get",
      "endpoint": "account/notifications",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"body\": \"\",\n      \"entity\": {\n        \"id\": 3456,\n        \"label\": \"Linode not booting.\",\n        \"type\": \"ticket\",\n        \"url\": \"/support/tickets/3456\"\n      },\n      \"label\": \"You have an important ticket open!\",\n      \"message\": \"You have an important ticket open!\",\n      \"severity\": \"{{oneOf (array 'minor' 'major' 'critical')}}\",\n      \"type\": \"{{oneOf (array 'migration_scheduled' 'migration_imminent' 'migration_pending' 'reboot_scheduled' 'outage' 'payment_due' 'ticket_important' 'ticket_abuse' 'notice' 'maintenance' 'promotion')}}\",\n      \"until\": \"{{faker 'date.recent' 365}}\",\n      \"when\": \"{{faker 'date.recent' 365}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Notification objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Clients List",
      "method": "get",
      "endpoint": "account/oauth-clients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"id\": \"2737bf16b39ab5d7b4a1\",\n      \"label\": \"Test_Client_1\",\n      \"public\": {{faker 'random.boolean'}},\n      \"redirect_uri\": \"https://example.org/oauth/callback\",\n      \"secret\": \"<REDACTED>\",\n      \"status\": \"{{oneOf (array 'active' 'disabled' 'suspended')}}\",\n      \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of OAuth Clients.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Create",
      "method": "post",
      "endpoint": "account/oauth-clients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": \"2737bf16b39ab5d7b4a1\",\n  \"label\": \"Test_Client_1\",\n  \"public\": {{faker 'random.boolean'}},\n  \"redirect_uri\": \"https://example.org/oauth/callback\",\n  \"secret\": \"<REDACTED>\",\n  \"status\": \"{{oneOf (array 'active' 'disabled' 'suspended')}}\",\n  \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Delete",
      "method": "delete",
      "endpoint": "account/oauth-clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client View",
      "method": "get",
      "endpoint": "account/oauth-clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": \"2737bf16b39ab5d7b4a1\",\n  \"label\": \"Test_Client_1\",\n  \"public\": {{faker 'random.boolean'}},\n  \"redirect_uri\": \"https://example.org/oauth/callback\",\n  \"secret\": \"<REDACTED>\",\n  \"status\": \"{{oneOf (array 'active' 'disabled' 'suspended')}}\",\n  \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Information about the requested client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Update",
      "method": "put",
      "endpoint": "account/oauth-clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": \"2737bf16b39ab5d7b4a1\",\n  \"label\": \"Test_Client_1\",\n  \"public\": {{faker 'random.boolean'}},\n  \"redirect_uri\": \"https://example.org/oauth/callback\",\n  \"secret\": \"<REDACTED>\",\n  \"status\": \"{{oneOf (array 'active' 'disabled' 'suspended')}}\",\n  \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Secret Reset",
      "method": "post",
      "endpoint": "account/oauth-clients/:clientId/reset-secret",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": \"2737bf16b39ab5d7b4a1\",\n  \"label\": \"Test_Client_1\",\n  \"public\": {{faker 'random.boolean'}},\n  \"redirect_uri\": \"https://example.org/oauth/callback\",\n  \"secret\": \"<REDACTED>\",\n  \"status\": \"{{oneOf (array 'active' 'disabled' 'suspended')}}\",\n  \"thumbnail_url\": \"https://api.linode.com/v4/account/clients/2737bf16b39ab5d7b4a1/thumbnail\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Client secret reset successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Thumbnail View",
      "method": "get",
      "endpoint": "account/oauth-clients/:clientId/thumbnail",
      "responses": [
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 200,
          "label": "The client's thumbnail.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "image/png"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "OAuth Client Thumbnail Update",
      "method": "put",
      "endpoint": "account/oauth-clients/:clientId/thumbnail",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Thumbnail updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Payment Methods List",
      "method": "get",
      "endpoint": "account/payment-methods",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-15T00:01:01.000Z\",\n      \"data\": {\n        \"card_type\": \"\",\n        \"expiry\": \"06/2022\",\n        \"last_four\": \"1234\"\n      },\n      \"is_default\": true,\n      \"type\": \"{{oneOf (array 'credit_card')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Payment Method objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Payment Method Add",
      "method": "post",
      "endpoint": "account/payment-methods",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payment Method added.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Payments List",
      "method": "get",
      "endpoint": "account/payments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"date\": \"2018-01-15T00:01:01.000Z\",\n      \"id\": 123,\n      \"usd\": \"120.50\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Payment objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Payment Make",
      "method": "post",
      "endpoint": "account/payments",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2018-01-15T00:01:01.000Z\",\n  \"id\": 123,\n  \"usd\": \"120.50\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Payment made.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "PayPal Payment Stage",
      "method": "post",
      "endpoint": "account/payments/paypal",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"checkout_token\": \"EC-1A2B3C4D5E6F7G8H9\",\n  \"payment_id\": \"PAY-1234567890ABCDEFGHIJKLMN\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "PayPal Payment staged.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Staged/Approved PayPal Payment Execute",
      "method": "post",
      "endpoint": "account/payments/paypal/execute",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "PayPal Payment executed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Payment View",
      "method": "get",
      "endpoint": "account/payments/:paymentId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"date\": \"2018-01-15T00:01:01.000Z\",\n  \"id\": 123,\n  \"usd\": \"120.50\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Payment object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Promo Credit Add",
      "method": "post",
      "endpoint": "account/promo-codes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"credit_monthly_cap\": \"10.00\",\n  \"credit_remaining\": \"50.00\",\n  \"description\": \"Receive up to $10 off your services every month for 6 months! Unused credits will expire once this promotion period ends.\",\n  \"expire_dt\": \"2018-01-31T23:59:59.000Z\",\n  \"image_url\": \"https://linode.com/10_a_month_promotion.svg\",\n  \"service_type\": \"{{oneOf (array 'all' 'backup' 'blockstorage' 'db_mysql' 'ip_v4' 'linode' 'linode_disk' 'linode_memory' 'longview' 'managed' 'nodebalancer' 'objectstorage' 'transfer_tx')}}\",\n  \"summary\": \"$10 off your Linode a month!\",\n  \"this_month_credit_remaining\": \"10.00\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Promo Credit successfully added.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Service Transfers List",
      "method": "get",
      "endpoint": "account/service-transfers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2021-02-11T16:37:03.000Z\",\n      \"entities\": {\n        \"linodes\": [\n          111,\n          222\n        ]\n      },\n      \"expiry\": \"2021-02-12T16:37:03.000Z\",\n      \"is_sender\": true,\n      \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n      \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n      \"updated\": \"2021-02-11T16:37:03.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Service Transfer objects containing the details of all transfers that have been created and accepted by this account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Service Transfer Create",
      "method": "post",
      "endpoint": "account/service-transfers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2021-02-11T16:37:03.000Z\",\n  \"entities\": {\n    \"linodes\": [\n      111,\n      222\n    ]\n  },\n  \"expiry\": \"2021-02-12T16:37:03.000Z\",\n  \"is_sender\": true,\n  \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n  \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n  \"updated\": \"2021-02-11T16:37:03.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a Service Transfer object for the request.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Service Transfer Cancel",
      "method": "delete",
      "endpoint": "account/service-transfers/:token",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service Transfer cancelled.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Service Transfer View",
      "method": "get",
      "endpoint": "account/service-transfers/:token",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2021-02-11T16:37:03.000Z\",\n  \"entities\": {\n    \"linodes\": [\n      111,\n      222\n    ]\n  },\n  \"expiry\": \"2021-02-12T16:37:03.000Z\",\n  \"is_sender\": true,\n  \"status\": \"{{oneOf (array 'accepted' 'cancelled' 'completed' 'failed' 'pending' 'stale')}}\",\n  \"token\": \"123E4567-E89B-12D3-A456-426614174000\",\n  \"updated\": \"2021-02-11T16:37:03.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a Service Transfer object containing the details of the transfer for the specified token.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Service Transfer Accept",
      "method": "post",
      "endpoint": "account/service-transfers/:token/accept",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service Transfer accepted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Account Settings View",
      "method": "get",
      "endpoint": "account/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"backups_enabled\": true,\n  \"longview_subscription\": \"longview-3\",\n  \"managed\": true,\n  \"network_helper\": {{faker 'random.boolean'}},\n  \"object_storage\": \"{{oneOf (array 'disabled' 'suspended' 'active')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Account settings object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Account Settings Update",
      "method": "put",
      "endpoint": "account/settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"backups_enabled\": true,\n  \"longview_subscription\": \"longview-3\",\n  \"managed\": true,\n  \"network_helper\": {{faker 'random.boolean'}},\n  \"object_storage\": \"{{oneOf (array 'disabled' 'suspended' 'active')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Account settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Managed Enable",
      "method": "post",
      "endpoint": "account/settings/managed-enable",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Managed services enabled for account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Network Utilization View",
      "method": "get",
      "endpoint": "account/transfer",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"billable\": {{faker 'random.number'}},\n  \"quota\": 9141,\n  \"used\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Transfer object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Users List",
      "method": "get",
      "endpoint": "account/users",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"email\": \"example_user@linode.com\",\n      \"restricted\": true,\n      \"ssh_keys\": [\n        \"home-pc\",\n        \"laptop\"\n      ],\n      \"tfa_enabled\": {{faker 'random.boolean'}},\n      \"username\": \"example_user\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Users.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Create",
      "method": "post",
      "endpoint": "account/users",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example_user@linode.com\",\n  \"restricted\": true,\n  \"ssh_keys\": [\n    \"home-pc\",\n    \"laptop\"\n  ],\n  \"tfa_enabled\": {{faker 'random.boolean'}},\n  \"username\": \"example_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "New User created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Delete",
      "method": "delete",
      "endpoint": "account/users/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "User deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User View",
      "method": "get",
      "endpoint": "account/users/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example_user@linode.com\",\n  \"restricted\": true,\n  \"ssh_keys\": [\n    \"home-pc\",\n    \"laptop\"\n  ],\n  \"tfa_enabled\": {{faker 'random.boolean'}},\n  \"username\": \"example_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested User object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Update",
      "method": "put",
      "endpoint": "account/users/:username",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"example_user@linode.com\",\n  \"restricted\": true,\n  \"ssh_keys\": [\n    \"home-pc\",\n    \"laptop\"\n  ],\n  \"tfa_enabled\": {{faker 'random.boolean'}},\n  \"username\": \"example_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User's Grants View",
      "method": "get",
      "endpoint": "account/users/:username/grants",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"domain\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"global\": {\n    \"account_access\": \"{{oneOf (array 'read_only' 'read_write')}}\",\n    \"add_domains\": true,\n    \"add_images\": true,\n    \"add_linodes\": true,\n    \"add_longview\": true,\n    \"add_nodebalancers\": true,\n    \"add_stackscripts\": true,\n    \"add_volumes\": true,\n    \"cancel_account\": {{faker 'random.boolean'}},\n    \"longview_subscription\": true\n  },\n  \"image\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"linode\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"longview\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"nodebalancer\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"stackscript\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"volume\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The User's grants.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "This is an unrestricted User, and therefore has no grants to return. This User may access everything on the Account and perform all actions.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User's Grants Update",
      "method": "put",
      "endpoint": "account/users/:username/grants",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"domain\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"global\": {\n    \"account_access\": \"{{oneOf (array 'read_only' 'read_write')}}\",\n    \"add_domains\": true,\n    \"add_images\": true,\n    \"add_linodes\": true,\n    \"add_longview\": true,\n    \"add_nodebalancers\": true,\n    \"add_stackscripts\": true,\n    \"add_volumes\": true,\n    \"cancel_account\": {{faker 'random.boolean'}},\n    \"longview_subscription\": true\n  },\n  \"image\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"linode\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"longview\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"nodebalancer\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"stackscript\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"volume\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Grants updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domains List",
      "method": "get",
      "endpoint": "domains",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"axfr_ips\": [],\n      \"description\": \"\",\n      \"domain\": \"example.org\",\n      \"expire_sec\": 300,\n      \"group\": \"\",\n      \"id\": 1234,\n      \"master_ips\": [],\n      \"refresh_sec\": 300,\n      \"retry_sec\": 300,\n      \"soa_email\": \"admin@example.org\",\n      \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"ttl_sec\": 300,\n      \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Domains you have registered.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Create",
      "method": "post",
      "endpoint": "domains",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"axfr_ips\": [],\n  \"description\": \"\",\n  \"domain\": \"example.org\",\n  \"expire_sec\": 300,\n  \"group\": \"\",\n  \"id\": 1234,\n  \"master_ips\": [],\n  \"refresh_sec\": 300,\n  \"retry_sec\": 300,\n  \"soa_email\": \"admin@example.org\",\n  \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"ttl_sec\": 300,\n  \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Domain added successfully.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Import",
      "method": "post",
      "endpoint": "domains/import",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"axfr_ips\": [],\n  \"description\": \"\",\n  \"domain\": \"example.org\",\n  \"expire_sec\": 300,\n  \"group\": \"\",\n  \"id\": 1234,\n  \"master_ips\": [],\n  \"refresh_sec\": 300,\n  \"retry_sec\": 300,\n  \"soa_email\": \"admin@example.org\",\n  \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"ttl_sec\": 300,\n  \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Domain in Linode's DNS Manager.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Delete",
      "method": "delete",
      "endpoint": "domains/:domainId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Domain deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain View",
      "method": "get",
      "endpoint": "domains/:domainId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"axfr_ips\": [],\n  \"description\": \"\",\n  \"domain\": \"example.org\",\n  \"expire_sec\": 300,\n  \"group\": \"\",\n  \"id\": 1234,\n  \"master_ips\": [],\n  \"refresh_sec\": 300,\n  \"retry_sec\": 300,\n  \"soa_email\": \"admin@example.org\",\n  \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"ttl_sec\": 300,\n  \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Domain in Linode's DNS Manager.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Update",
      "method": "put",
      "endpoint": "domains/:domainId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"axfr_ips\": [],\n  \"description\": \"\",\n  \"domain\": \"example.org\",\n  \"expire_sec\": 300,\n  \"group\": \"\",\n  \"id\": 1234,\n  \"master_ips\": [],\n  \"refresh_sec\": 300,\n  \"retry_sec\": 300,\n  \"soa_email\": \"admin@example.org\",\n  \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"ttl_sec\": 300,\n  \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Domain update successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Clone",
      "method": "post",
      "endpoint": "domains/:domainId/clone",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"axfr_ips\": [],\n  \"description\": \"\",\n  \"domain\": \"example.org\",\n  \"expire_sec\": 300,\n  \"group\": \"\",\n  \"id\": 1234,\n  \"master_ips\": [],\n  \"refresh_sec\": 300,\n  \"retry_sec\": 300,\n  \"soa_email\": \"admin@example.org\",\n  \"status\": \"{{oneOf (array 'disabled' 'active')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"ttl_sec\": 300,\n  \"type\": \"{{oneOf (array 'master' 'slave')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A new Domain in Linode's DNS Manager, based on a cloned Domain.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Records List",
      "method": "get",
      "endpoint": "domains/:domainId/records",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 123456,\n      \"name\": \"test\",\n      \"port\": 80,\n      \"priority\": 50,\n      \"protocol\": \"\",\n      \"service\": \"\",\n      \"tag\": \"{{oneOf (array 'issue' 'issuewild' 'iodef')}}\",\n      \"target\": \"192.0.2.0\",\n      \"ttl_sec\": 604800,\n      \"type\": \"{{oneOf (array 'A' 'AAAA' 'NS' 'MX' 'CNAME' 'TXT' 'SRV' 'PTR' 'CAA')}}\",\n      \"updated\": \"2018-01-01T00:01:01.000Z\",\n      \"weight\": 50\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A list of Domain Records.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Record Create",
      "method": "post",
      "endpoint": "domains/:domainId/records",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123456,\n  \"name\": \"test\",\n  \"port\": 80,\n  \"priority\": 50,\n  \"protocol\": \"\",\n  \"service\": \"\",\n  \"tag\": \"{{oneOf (array 'issue' 'issuewild' 'iodef')}}\",\n  \"target\": \"192.0.2.0\",\n  \"ttl_sec\": 604800,\n  \"type\": \"{{oneOf (array 'A' 'AAAA' 'NS' 'MX' 'CNAME' 'TXT' 'SRV' 'PTR' 'CAA')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Domain Record created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Record Delete",
      "method": "delete",
      "endpoint": "domains/:domainId/records/:recordId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Record deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Record View",
      "method": "get",
      "endpoint": "domains/:domainId/records/:recordId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123456,\n  \"name\": \"test\",\n  \"port\": 80,\n  \"priority\": 50,\n  \"protocol\": \"\",\n  \"service\": \"\",\n  \"tag\": \"{{oneOf (array 'issue' 'issuewild' 'iodef')}}\",\n  \"target\": \"192.0.2.0\",\n  \"ttl_sec\": 604800,\n  \"type\": \"{{oneOf (array 'A' 'AAAA' 'NS' 'MX' 'CNAME' 'TXT' 'SRV' 'PTR' 'CAA')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Domain Record object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Record Update",
      "method": "put",
      "endpoint": "domains/:domainId/records/:recordId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123456,\n  \"name\": \"test\",\n  \"port\": 80,\n  \"priority\": 50,\n  \"protocol\": \"\",\n  \"service\": \"\",\n  \"tag\": \"{{oneOf (array 'issue' 'issuewild' 'iodef')}}\",\n  \"target\": \"192.0.2.0\",\n  \"ttl_sec\": 604800,\n  \"type\": \"{{oneOf (array 'A' 'AAAA' 'NS' 'MX' 'CNAME' 'TXT' 'SRV' 'PTR' 'CAA')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Domain Record updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Domain Zone File View",
      "method": "get",
      "endpoint": "domains/:domainId/zone-file",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"zone_file\": [\n    \"; example.com [123]\",\n    \"$TTL 864000\",\n    \"@  IN  SOA  ns1.linode.com. user.example.com. 2021000066 14400 14400 1209600 86400\",\n    \"@    NS  ns1.linode.com.\",\n    \"@    NS  ns2.linode.com.\",\n    \"@    NS  ns3.linode.com.\",\n    \"@    NS  ns4.linode.com.\",\n    \"@    NS  ns5.linode.com.\"\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An array containing the lines of the domain zone file.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Images List",
      "method": "get",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"created_by\": \"linode\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"description\": \"\",\n      \"eol\": \"2200-10-23T00:00:00.000Z\",\n      \"expiry\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"linode/ubuntu17.10\",\n      \"is_public\": true,\n      \"label\": \"Ubuntu 17.10\",\n      \"size\": 2500,\n      \"status\": \"{{oneOf (array 'creating' 'pending_upload' 'available')}}\",\n      \"type\": \"{{oneOf (array 'manual' 'automatic')}}\",\n      \"updated\": \"2019-01-02T00:01:01.000Z\",\n      \"vendor\": \"Ubuntu\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Images.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Image Create",
      "method": "post",
      "endpoint": "images",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"created_by\": \"somename\",\n  \"deprecated\": {{faker 'random.boolean'}},\n  \"description\": \"The detailed description of my Image.\",\n  \"eol\": \"2200-10-23T00:00:00.000Z\",\n  \"expiry\": \"2018-08-01T00:01:01.000Z\",\n  \"id\": \"private/67848373\",\n  \"is_public\": {{faker 'random.boolean'}},\n  \"label\": \"My gold-master image\",\n  \"size\": 2500,\n  \"status\": \"{{oneOf (array 'creating' 'pending_upload' 'available')}}\",\n  \"type\": \"{{oneOf (array 'manual' 'automatic')}}\",\n  \"updated\": \"2019-01-02T00:01:01.000Z\",\n  \"vendor\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "New private Image created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Image Upload",
      "method": "post",
      "endpoint": "images/upload",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"image\": {\n    \"created\": \"2018-01-01T00:01:01.000Z\",\n    \"created_by\": \"somename\",\n    \"deprecated\": {{faker 'random.boolean'}},\n    \"description\": \"The detailed description of my Image.\",\n    \"eol\": \"2200-10-23T00:00:00.000Z\",\n    \"expiry\": \"2018-08-01T00:01:01.000Z\",\n    \"id\": \"private/67848373\",\n    \"is_public\": {{faker 'random.boolean'}},\n    \"label\": \"My gold-master image\",\n    \"size\": 2500,\n    \"status\": \"{{oneOf (array 'creating' 'pending_upload' 'available')}}\",\n    \"type\": \"{{oneOf (array 'manual' 'automatic')}}\",\n    \"updated\": \"2019-01-02T00:01:01.000Z\",\n    \"vendor\": \"\"\n  },\n  \"upload_to\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new Image upload URL.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Image Delete",
      "method": "delete",
      "endpoint": "images/:imageId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Image View",
      "method": "get",
      "endpoint": "images/:imageId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"created_by\": \"somename\",\n  \"deprecated\": {{faker 'random.boolean'}},\n  \"description\": \"The detailed description of my Image.\",\n  \"eol\": \"2200-10-23T00:00:00.000Z\",\n  \"expiry\": \"2018-08-01T00:01:01.000Z\",\n  \"id\": \"private/67848373\",\n  \"is_public\": {{faker 'random.boolean'}},\n  \"label\": \"My gold-master image\",\n  \"size\": 2500,\n  \"status\": \"{{oneOf (array 'creating' 'pending_upload' 'available')}}\",\n  \"type\": \"{{oneOf (array 'manual' 'automatic')}}\",\n  \"updated\": \"2019-01-02T00:01:01.000Z\",\n  \"vendor\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Image object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Image Update",
      "method": "put",
      "endpoint": "images/:imageId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"created_by\": \"somename\",\n  \"deprecated\": {{faker 'random.boolean'}},\n  \"description\": \"The detailed description of my Image.\",\n  \"eol\": \"2200-10-23T00:00:00.000Z\",\n  \"expiry\": \"2018-08-01T00:01:01.000Z\",\n  \"id\": \"private/67848373\",\n  \"is_public\": {{faker 'random.boolean'}},\n  \"label\": \"My gold-master image\",\n  \"size\": 2500,\n  \"status\": \"{{oneOf (array 'creating' 'pending_upload' 'available')}}\",\n  \"type\": \"{{oneOf (array 'manual' 'automatic')}}\",\n  \"updated\": \"2019-01-02T00:01:01.000Z\",\n  \"vendor\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated image.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linodes List",
      "method": "get",
      "endpoint": "linode/instances",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"alerts\": {\n        \"cpu\": 180,\n        \"io\": 10000,\n        \"network_in\": 10,\n        \"network_out\": 10,\n        \"transfer_quota\": 80\n      },\n      \"backups\": {\n        \"enabled\": true,\n        \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n        \"schedule\": {\n          \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n          \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n        }\n      },\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"group\": \"Linode-Group\",\n      \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n      \"id\": 123,\n      \"image\": \"linode/debian10\",\n      \"ipv4\": [\n        \"203.0.113.1\",\n        \"192.0.2.1\"\n      ],\n      \"ipv6\": \"c001:d00d::1337/128\",\n      \"label\": \"linode123\",\n      \"region\": \"us-east\",\n      \"specs\": {\n        \"disk\": 81920,\n        \"memory\": 4096,\n        \"transfer\": 4000,\n        \"vcpus\": 2\n      },\n      \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"type\": \"g6-standard-1\",\n      \"updated\": \"2018-01-01T00:01:01.000Z\",\n      \"watchdog_enabled\": true\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of all Linodes on your Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Create",
      "method": "post",
      "endpoint": "linode/instances",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"alerts\": {\n    \"cpu\": 180,\n    \"io\": 10000,\n    \"network_in\": 10,\n    \"network_out\": 10,\n    \"transfer_quota\": 80\n  },\n  \"backups\": {\n    \"enabled\": true,\n    \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n    \"schedule\": {\n      \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n      \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n    }\n  },\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"group\": \"Linode-Group\",\n  \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n  \"id\": 123,\n  \"image\": \"linode/debian10\",\n  \"ipv4\": [\n    \"203.0.113.1\",\n    \"192.0.2.1\"\n  ],\n  \"ipv6\": \"c001:d00d::1337/128\",\n  \"label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"specs\": {\n    \"disk\": 81920,\n    \"memory\": 4096,\n    \"transfer\": 4000,\n    \"vcpus\": 2\n  },\n  \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-1\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"watchdog_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A new Linode is being created.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Delete",
      "method": "delete",
      "endpoint": "linode/instances/:linodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"alerts\": {\n    \"cpu\": 180,\n    \"io\": 10000,\n    \"network_in\": 10,\n    \"network_out\": 10,\n    \"transfer_quota\": 80\n  },\n  \"backups\": {\n    \"enabled\": true,\n    \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n    \"schedule\": {\n      \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n      \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n    }\n  },\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"group\": \"Linode-Group\",\n  \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n  \"id\": 123,\n  \"image\": \"linode/debian10\",\n  \"ipv4\": [\n    \"203.0.113.1\",\n    \"192.0.2.1\"\n  ],\n  \"ipv6\": \"c001:d00d::1337/128\",\n  \"label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"specs\": {\n    \"disk\": 81920,\n    \"memory\": 4096,\n    \"transfer\": 4000,\n    \"vcpus\": 2\n  },\n  \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-1\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"watchdog_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Linode object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Update",
      "method": "put",
      "endpoint": "linode/instances/:linodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"alerts\": {\n    \"cpu\": 180,\n    \"io\": 10000,\n    \"network_in\": 10,\n    \"network_out\": 10,\n    \"transfer_quota\": 80\n  },\n  \"backups\": {\n    \"enabled\": true,\n    \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n    \"schedule\": {\n      \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n      \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n    }\n  },\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"group\": \"Linode-Group\",\n  \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n  \"id\": 123,\n  \"image\": \"linode/debian10\",\n  \"ipv4\": [\n    \"203.0.113.1\",\n    \"192.0.2.1\"\n  ],\n  \"ipv6\": \"c001:d00d::1337/128\",\n  \"label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"specs\": {\n    \"disk\": 81920,\n    \"memory\": 4096,\n    \"transfer\": 4000,\n    \"vcpus\": 2\n  },\n  \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-1\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"watchdog_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Backups List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/backups",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"automatic\": [\n    {\n      \"configs\": [\n        \"My Debian 9 Config\"\n      ],\n      \"created\": \"2018-01-15T00:01:01.000Z\",\n      \"disks\": [\n        {\n          \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n          \"label\": \"My Debian 9 Disk\",\n          \"size\": 9001\n        }\n      ],\n      \"finished\": \"2018-01-15T00:01:01.000Z\",\n      \"id\": 123456,\n      \"label\": \"Webserver-Backup-2018\",\n      \"status\": \"{{oneOf (array 'paused' 'pending' 'running' 'needsPostProcessing' 'successful' 'failed' 'userAborted')}}\",\n      \"type\": \"{{oneOf (array 'auto' 'snapshot')}}\",\n      \"updated\": \"2018-01-15T00:01:01.000Z\"\n    }\n  ],\n  \"snapshot\": {\n    \"current\": {\n      \"configs\": [\n        \"My Debian 9 Config\"\n      ],\n      \"created\": \"2018-01-15T00:01:01.000Z\",\n      \"disks\": [\n        {\n          \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n          \"label\": \"My Debian 9 Disk\",\n          \"size\": 9001\n        }\n      ],\n      \"finished\": \"2018-01-15T00:01:01.000Z\",\n      \"id\": 123456,\n      \"label\": \"Webserver-Backup-2018\",\n      \"status\": \"{{oneOf (array 'paused' 'pending' 'running' 'needsPostProcessing' 'successful' 'failed' 'userAborted')}}\",\n      \"type\": \"{{oneOf (array 'auto' 'snapshot')}}\",\n      \"updated\": \"2018-01-15T00:01:01.000Z\"\n    },\n    \"in_progress\": {\n      \"configs\": [\n        \"My Debian 9 Config\"\n      ],\n      \"created\": \"2018-01-15T00:01:01.000Z\",\n      \"disks\": [\n        {\n          \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n          \"label\": \"My Debian 9 Disk\",\n          \"size\": 9001\n        }\n      ],\n      \"finished\": \"2018-01-15T00:01:01.000Z\",\n      \"id\": 123456,\n      \"label\": \"Webserver-Backup-2018\",\n      \"status\": \"{{oneOf (array 'paused' 'pending' 'running' 'needsPostProcessing' 'successful' 'failed' 'userAborted')}}\",\n      \"type\": \"{{oneOf (array 'auto' 'snapshot')}}\",\n      \"updated\": \"2018-01-15T00:01:01.000Z\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of the specified Linode's available backups.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Snapshot Create",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/backups",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"configs\": [\n    \"My Debian 9 Config\"\n  ],\n  \"created\": \"2018-01-15T00:01:01.000Z\",\n  \"disks\": [\n    {\n      \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n      \"label\": \"My Debian 9 Disk\",\n      \"size\": 9001\n    }\n  ],\n  \"finished\": \"2018-01-15T00:01:01.000Z\",\n  \"id\": 123456,\n  \"label\": \"Webserver-Backup-2018\",\n  \"status\": \"{{oneOf (array 'paused' 'pending' 'running' 'needsPostProcessing' 'successful' 'failed' 'userAborted')}}\",\n  \"type\": \"{{oneOf (array 'auto' 'snapshot')}}\",\n  \"updated\": \"2018-01-15T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Snapshot was successfully taken.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Backups Cancel",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/backups/cancel",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Backup service was cancelled for the specified Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Backups Enable",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/backups/enable",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Backup service was enabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Backup View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/backups/:backupId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"configs\": [\n    \"My Debian 9 Config\"\n  ],\n  \"created\": \"2018-01-15T00:01:01.000Z\",\n  \"disks\": [\n    {\n      \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n      \"label\": \"My Debian 9 Disk\",\n      \"size\": 9001\n    }\n  ],\n  \"finished\": \"2018-01-15T00:01:01.000Z\",\n  \"id\": 123456,\n  \"label\": \"Webserver-Backup-2018\",\n  \"status\": \"{{oneOf (array 'paused' 'pending' 'running' 'needsPostProcessing' 'successful' 'failed' 'userAborted')}}\",\n  \"type\": \"{{oneOf (array 'auto' 'snapshot')}}\",\n  \"updated\": \"2018-01-15T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Backup.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Backup Restore",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/backups/:backupId/restore",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Restore from Backup was initiated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Boot",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/boot",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Boot started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Clone",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/clone",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"alerts\": {\n    \"cpu\": 180,\n    \"io\": 10000,\n    \"network_in\": 10,\n    \"network_out\": 10,\n    \"transfer_quota\": 80\n  },\n  \"backups\": {\n    \"enabled\": true,\n    \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n    \"schedule\": {\n      \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n      \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n    }\n  },\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"group\": \"Linode-Group\",\n  \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n  \"id\": 123,\n  \"image\": \"linode/debian10\",\n  \"ipv4\": [\n    \"203.0.113.1\",\n    \"192.0.2.1\"\n  ],\n  \"ipv6\": \"c001:d00d::1337/128\",\n  \"label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"specs\": {\n    \"disk\": 81920,\n    \"memory\": 4096,\n    \"transfer\": 4000,\n    \"vcpus\": 2\n  },\n  \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-1\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"watchdog_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Clone started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configuration Profiles List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/configs",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"comments\": \"This is my main Config\",\n      \"devices\": {\n        \"sda\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdb\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdc\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdd\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sde\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdf\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdg\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        },\n        \"sdh\": {\n          \"disk_id\": 124458,\n          \"volume_id\": {{faker 'random.number'}}\n        }\n      },\n      \"helpers\": {\n        \"devtmpfs_automount\": {{faker 'random.boolean'}},\n        \"distro\": true,\n        \"modules_dep\": true,\n        \"network\": true,\n        \"updatedb_disabled\": true\n      },\n      \"id\": 23456,\n      \"interfaces\": [\n        {\n          \"ipam_address\": \"10.0.0.1/24\",\n          \"label\": \"example-interface\",\n          \"purpose\": \"{{oneOf (array 'public' 'vlan')}}\"\n        }\n      ],\n      \"kernel\": \"linode/latest-64bit\",\n      \"label\": \"My Config\",\n      \"memory_limit\": 2048,\n      \"root_device\": \"/dev/sda\",\n      \"run_level\": \"{{oneOf (array 'default' 'single' 'binbash')}}\",\n      \"virt_mode\": \"{{oneOf (array 'paravirt' 'fullvirt')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of Configuration profiles associated with this Linode.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configuration Profile Create",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/configs",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"comments\": \"This is my main Config\",\n  \"devices\": {\n    \"sda\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdb\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdc\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdd\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sde\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdf\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdg\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdh\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    }\n  },\n  \"helpers\": {\n    \"devtmpfs_automount\": {{faker 'random.boolean'}},\n    \"distro\": true,\n    \"modules_dep\": true,\n    \"network\": true,\n    \"updatedb_disabled\": true\n  },\n  \"id\": 23456,\n  \"interfaces\": [\n    {\n      \"ipam_address\": \"10.0.0.1/24\",\n      \"label\": \"example-interface\",\n      \"purpose\": \"{{oneOf (array 'public' 'vlan')}}\"\n    }\n  ],\n  \"kernel\": \"linode/latest-64bit\",\n  \"label\": \"My Config\",\n  \"memory_limit\": 2048,\n  \"root_device\": \"/dev/sda\",\n  \"run_level\": \"{{oneOf (array 'default' 'single' 'binbash')}}\",\n  \"virt_mode\": \"{{oneOf (array 'paravirt' 'fullvirt')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Configuration profile was created.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configuration Profile Delete",
      "method": "delete",
      "endpoint": "linode/instances/:linodeId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Configuration profile successfully deleted.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configuration Profile View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"comments\": \"This is my main Config\",\n  \"devices\": {\n    \"sda\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdb\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdc\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdd\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sde\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdf\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdg\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdh\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    }\n  },\n  \"helpers\": {\n    \"devtmpfs_automount\": {{faker 'random.boolean'}},\n    \"distro\": true,\n    \"modules_dep\": true,\n    \"network\": true,\n    \"updatedb_disabled\": true\n  },\n  \"id\": 23456,\n  \"interfaces\": [\n    {\n      \"ipam_address\": \"10.0.0.1/24\",\n      \"label\": \"example-interface\",\n      \"purpose\": \"{{oneOf (array 'public' 'vlan')}}\"\n    }\n  ],\n  \"kernel\": \"linode/latest-64bit\",\n  \"label\": \"My Config\",\n  \"memory_limit\": 2048,\n  \"root_device\": \"/dev/sda\",\n  \"run_level\": \"{{oneOf (array 'default' 'single' 'binbash')}}\",\n  \"virt_mode\": \"{{oneOf (array 'paravirt' 'fullvirt')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A Configuration profile object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configuration Profile Update",
      "method": "put",
      "endpoint": "linode/instances/:linodeId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"comments\": \"This is my main Config\",\n  \"devices\": {\n    \"sda\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdb\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdc\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdd\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sde\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdf\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdg\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    },\n    \"sdh\": {\n      \"disk_id\": 124458,\n      \"volume_id\": {{faker 'random.number'}}\n    }\n  },\n  \"helpers\": {\n    \"devtmpfs_automount\": {{faker 'random.boolean'}},\n    \"distro\": true,\n    \"modules_dep\": true,\n    \"network\": true,\n    \"updatedb_disabled\": true\n  },\n  \"id\": 23456,\n  \"interfaces\": [\n    {\n      \"ipam_address\": \"10.0.0.1/24\",\n      \"label\": \"example-interface\",\n      \"purpose\": \"{{oneOf (array 'public' 'vlan')}}\"\n    }\n  ],\n  \"kernel\": \"linode/latest-64bit\",\n  \"label\": \"My Config\",\n  \"memory_limit\": 2048,\n  \"root_device\": \"/dev/sda\",\n  \"run_level\": \"{{oneOf (array 'default' 'single' 'binbash')}}\",\n  \"virt_mode\": \"{{oneOf (array 'paravirt' 'fullvirt')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Configuration profile successfully updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disks List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/disks",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n      \"id\": 25674,\n      \"label\": \"Debian 9 Disk\",\n      \"size\": 48640,\n      \"status\": \"{{oneOf (array 'ready' 'not ready' 'deleting')}}\",\n      \"updated\": \"2018-01-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of disks associated with this Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Create",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/disks",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n  \"id\": 25674,\n  \"label\": \"Debian 9 Disk\",\n  \"size\": 48640,\n  \"status\": \"{{oneOf (array 'ready' 'not ready' 'deleting')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Disk created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Delete",
      "method": "delete",
      "endpoint": "linode/instances/:linodeId/disks/:diskId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/disks/:diskId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n  \"id\": 25674,\n  \"label\": \"Debian 9 Disk\",\n  \"size\": 48640,\n  \"status\": \"{{oneOf (array 'ready' 'not ready' 'deleting')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Disk object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Update",
      "method": "put",
      "endpoint": "linode/instances/:linodeId/disks/:diskId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n  \"id\": 25674,\n  \"label\": \"Debian 9 Disk\",\n  \"size\": 48640,\n  \"status\": \"{{oneOf (array 'ready' 'not ready' 'deleting')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Disk.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Clone",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/disks/:diskId/clone",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem\": \"{{oneOf (array 'raw' 'swap' 'ext3' 'ext4' 'initrd')}}\",\n  \"id\": 25674,\n  \"label\": \"Debian 9 Disk\",\n  \"size\": 48640,\n  \"status\": \"{{oneOf (array 'ready' 'not ready' 'deleting')}}\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Disk clone initiated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Root Password Reset",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/disks/:diskId/password",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Disk object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Disk Resize",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/disks/:diskId/resize",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Resize started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewalls List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/firewalls",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 123,\n      \"label\": \"firewall123\",\n      \"rules\": {\n        \"inbound\": [\n          {\n            \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            },\n            \"description\": \"An example firewall rule description.\",\n            \"label\": \"firewallrule123\",\n            \"ports\": \"22-24, 80, 443\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n          }\n        ],\n        \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"outbound\": [\n          {\n            \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            },\n            \"description\": \"An example firewall rule description.\",\n            \"label\": \"firewallrule123\",\n            \"ports\": \"22-24, 80, 443\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n          }\n        ],\n        \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n      },\n      \"status\": \"{{oneOf (array 'enabled' 'disabled' 'deleted')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"updated\": \"2018-01-02T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of Firewalls associated with this Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Networking Information List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ipv4\": {\n    \"private\": [\n      {\n        \"address\": \"192.168.133.234\",\n        \"gateway\": \"\",\n        \"linode_id\": 123,\n        \"prefix\": 17,\n        \"public\": {{faker 'random.boolean'}},\n        \"rdns\": \"\",\n        \"region\": \"us-east\",\n        \"subnet_mask\": \"255.255.128.0\",\n        \"type\": \"ipv4\"\n      }\n    ],\n    \"public\": [\n      {\n        \"address\": \"97.107.143.141\",\n        \"gateway\": \"97.107.143.1\",\n        \"linode_id\": 123,\n        \"prefix\": 24,\n        \"public\": true,\n        \"rdns\": \"test.example.org\",\n        \"region\": \"us-east\",\n        \"subnet_mask\": \"255.255.255.0\",\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n      }\n    ],\n    \"reserved\": [\n      {\n        \"address\": \"97.107.143.141\",\n        \"gateway\": \"97.107.143.1\",\n        \"linode_id\": 123,\n        \"prefix\": 24,\n        \"public\": true,\n        \"rdns\": \"test.example.org\",\n        \"region\": \"us-east\",\n        \"subnet_mask\": \"255.255.255.0\",\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n      }\n    ],\n    \"shared\": [\n      {\n        \"address\": \"97.107.143.141\",\n        \"gateway\": \"97.107.143.1\",\n        \"linode_id\": 123,\n        \"prefix\": 24,\n        \"public\": true,\n        \"rdns\": \"test.example.org\",\n        \"region\": \"us-east\",\n        \"subnet_mask\": \"255.255.255.0\",\n        \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n      }\n    ]\n  },\n  \"ipv6\": {\n    \"global\": {\n      \"prefix\": 124,\n      \"range\": \"2600:3c01::2:5000:0\",\n      \"region\": \"us-east\",\n      \"route_target\": \"2600:3c01::2:5000:f\"\n    },\n    \"link_local\": {\n      \"address\": \"fe80::f03c:91ff:fe24:3a2f\",\n      \"gateway\": \"fe80::1\",\n      \"linode_id\": 123,\n      \"prefix\": 64,\n      \"public\": {{faker 'random.boolean'}},\n      \"rdns\": \"\",\n      \"region\": \"us-east\",\n      \"subnet_mask\": \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\n      \"type\": \"ipv6\"\n    },\n    \"slaac\": {\n      \"address\": \"2600:3c03::f03c:91ff:fe24:3a2f\",\n      \"gateway\": \"fe80::1\",\n      \"linode_id\": 123,\n      \"prefix\": 64,\n      \"public\": true,\n      \"rdns\": \"\",\n      \"region\": \"us-east\",\n      \"subnet_mask\": \"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\",\n      \"type\": \"ipv6\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Requested Linode's networking configuration.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IPv4 Address Allocate",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "IP address was successfully allocated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IPv4 Address Delete",
      "method": "delete",
      "endpoint": "linode/instances/:linodeId/ips/:address",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "IP address successfully removed.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Address View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/ips/:address",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single IP address.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Address Update",
      "method": "put",
      "endpoint": "linode/instances/:linodeId/ips/:address",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated IP address record.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "DC Migration/Pending Host Migration Initiate",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/migrate",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Scheduled migration started",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Upgrade",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/mutate",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Mutate started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Root Password Reset",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/password",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Password Reset.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Reboot",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/reboot",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reboot started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Rebuild",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/rebuild",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"alerts\": {\n    \"cpu\": 180,\n    \"io\": 10000,\n    \"network_in\": 10,\n    \"network_out\": 10,\n    \"transfer_quota\": 80\n  },\n  \"backups\": {\n    \"enabled\": true,\n    \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n    \"schedule\": {\n      \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n      \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n    }\n  },\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"group\": \"Linode-Group\",\n  \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n  \"id\": 123,\n  \"image\": \"linode/debian10\",\n  \"ipv4\": [\n    \"203.0.113.1\",\n    \"192.0.2.1\"\n  ],\n  \"ipv6\": \"c001:d00d::1337/128\",\n  \"label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"specs\": {\n    \"disk\": 81920,\n    \"memory\": 4096,\n    \"transfer\": 4000,\n    \"vcpus\": 2\n  },\n  \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-1\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"watchdog_enabled\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Rebuild started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Boot into Rescue Mode",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/rescue",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Rescue started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Resize",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/resize",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Resize started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Shut Down",
      "method": "post",
      "endpoint": "linode/instances/:linodeId/shutdown",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Shutdown started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode Statistics View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/stats",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"cpu\": [\n    [\n      [\n        1521483600000,\n        0.42\n      ]\n    ]\n  ],\n  \"io\": {\n    \"io\": [\n      [\n        [\n          1521484800000,\n          0.19\n        ]\n      ]\n    ],\n    \"swap\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ]\n  },\n  \"netv4\": {\n    \"in\": [\n      [\n        [\n          1521484800000,\n          2004.36\n        ]\n      ]\n    ],\n    \"out\": [\n      [\n        [\n          1521484800000,\n          3928.91\n        ]\n      ]\n    ],\n    \"private_in\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"private_out\": [\n      [\n        [\n          1521484800000,\n          5.6\n        ]\n      ]\n    ]\n  },\n  \"netv6\": {\n    \"in\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"out\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"private_in\": [\n      [\n        [\n          1521484800000,\n          195.18\n        ]\n      ]\n    ],\n    \"private_out\": [\n      [\n        [\n          1521484800000,\n          5.6\n        ]\n      ]\n    ]\n  },\n  \"title\": \"linode.com - my-linode (linode123456) - day (5 min avg)\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Linode's stats for the past 24 hours.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Statistics View (year/month)",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/stats/:year/:month",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"cpu\": [\n    [\n      [\n        1521483600000,\n        0.42\n      ]\n    ]\n  ],\n  \"io\": {\n    \"io\": [\n      [\n        [\n          1521484800000,\n          0.19\n        ]\n      ]\n    ],\n    \"swap\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ]\n  },\n  \"netv4\": {\n    \"in\": [\n      [\n        [\n          1521484800000,\n          2004.36\n        ]\n      ]\n    ],\n    \"out\": [\n      [\n        [\n          1521484800000,\n          3928.91\n        ]\n      ]\n    ],\n    \"private_in\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"private_out\": [\n      [\n        [\n          1521484800000,\n          5.6\n        ]\n      ]\n    ]\n  },\n  \"netv6\": {\n    \"in\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"out\": [\n      [\n        [\n          1521484800000,\n          0\n        ]\n      ]\n    ],\n    \"private_in\": [\n      [\n        [\n          1521484800000,\n          195.18\n        ]\n      ]\n    ],\n    \"private_out\": [\n      [\n        [\n          1521484800000,\n          5.6\n        ]\n      ]\n    ]\n  },\n  \"title\": \"linode.com - my-linode (linode123456) - day (5 min avg)\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Linode's statistics for the requested period.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Network Transfer View",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/transfer",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"billable\": {{faker 'random.number'}},\n  \"quota\": 2000,\n  \"used\": 22956600198\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of the specified Linode's network transfer statistics.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Network Transfer View (year/month)",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/transfer/:year/:month",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"bytes_in\": 30471077120,\n  \"bytes_out\": 22956600198,\n  \"bytes_total\": 53427677318\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of the specified Linode's network transfer statistics for the requested month.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode's Volumes List",
      "method": "get",
      "endpoint": "linode/instances/:linodeId/volumes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n      \"id\": 12345,\n      \"label\": \"my-volume\",\n      \"linode_id\": 12346,\n      \"linode_label\": \"linode123\",\n      \"region\": \"us-east\",\n      \"size\": 30,\n      \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"updated\": \"2018-01-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of Block Storage Volumes attached to this Linode.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kernels List",
      "method": "get",
      "endpoint": "linode/kernels",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"architecture\": \"{{oneOf (array 'x86_64' 'i386')}}\",\n      \"deprecated\": {{faker 'random.boolean'}},\n      \"id\": \"linode/latest-64bit\",\n      \"kvm\": true,\n      \"label\": \"Latest 64 bit (4.15.7-x86_64-linode102)\",\n      \"pvops\": {{faker 'random.boolean'}},\n      \"version\": \"4.15.7\",\n      \"xen\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of Kernels.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kernel View",
      "method": "get",
      "endpoint": "linode/kernels/:kernelId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"architecture\": \"{{oneOf (array 'x86_64' 'i386')}}\",\n  \"deprecated\": {{faker 'random.boolean'}},\n  \"id\": \"linode/latest-64bit\",\n  \"kvm\": true,\n  \"label\": \"Latest 64 bit (4.15.7-x86_64-linode102)\",\n  \"pvops\": {{faker 'random.boolean'}},\n  \"version\": \"4.15.7\",\n  \"xen\": {{faker 'random.boolean'}}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Kernel object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "StackScripts List",
      "method": "get",
      "endpoint": "linode/stackscripts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"deployments_active\": 1,\n      \"deployments_total\": 12,\n      \"description\": \"This StackScript installs and configures MySQL\\n\",\n      \"id\": 10079,\n      \"images\": [\n        \"linode/debian9\",\n        \"linode/debian8\"\n      ],\n      \"is_public\": true,\n      \"label\": \"a-stackscript\",\n      \"mine\": true,\n      \"rev_note\": \"Set up MySQL\",\n      \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n      \"updated\": \"2018-01-01T00:01:01.000Z\",\n      \"user_defined_fields\": {\n        \"example\": \"hunter2\",\n        \"label\": \"Enter the DB password\",\n        \"name\": \"DB_PASSWORD\"\n      },\n      \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n      \"username\": \"myuser\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A list of StackScripts available to the User, including private StackScripts owned by the User if the request is authenticated.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "StackScript Create",
      "method": "post",
      "endpoint": "linode/stackscripts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"deployments_active\": 1,\n  \"deployments_total\": 12,\n  \"description\": \"This StackScript installs and configures MySQL\\n\",\n  \"id\": 10079,\n  \"images\": [\n    \"linode/debian9\",\n    \"linode/debian8\"\n  ],\n  \"is_public\": true,\n  \"label\": \"a-stackscript\",\n  \"mine\": true,\n  \"rev_note\": \"Set up MySQL\",\n  \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"user_defined_fields\": {\n    \"example\": \"hunter2\",\n    \"label\": \"Enter the DB password\",\n    \"name\": \"DB_PASSWORD\"\n  },\n  \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n  \"username\": \"myuser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "StackScript successfully created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "StackScript Delete",
      "method": "delete",
      "endpoint": "linode/stackscripts/:stackscriptId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "StackScript was deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "StackScript View",
      "method": "get",
      "endpoint": "linode/stackscripts/:stackscriptId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"deployments_active\": 1,\n  \"deployments_total\": 12,\n  \"description\": \"This StackScript installs and configures MySQL\\n\",\n  \"id\": 10079,\n  \"images\": [\n    \"linode/debian9\",\n    \"linode/debian8\"\n  ],\n  \"is_public\": true,\n  \"label\": \"a-stackscript\",\n  \"mine\": true,\n  \"rev_note\": \"Set up MySQL\",\n  \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"user_defined_fields\": {\n    \"example\": \"hunter2\",\n    \"label\": \"Enter the DB password\",\n    \"name\": \"DB_PASSWORD\"\n  },\n  \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n  \"username\": \"myuser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single StackScript.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "StackScript Update",
      "method": "put",
      "endpoint": "linode/stackscripts/:stackscriptId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"deployments_active\": 1,\n  \"deployments_total\": 12,\n  \"description\": \"This StackScript installs and configures MySQL\\n\",\n  \"id\": 10079,\n  \"images\": [\n    \"linode/debian9\",\n    \"linode/debian8\"\n  ],\n  \"is_public\": true,\n  \"label\": \"a-stackscript\",\n  \"mine\": true,\n  \"rev_note\": \"Set up MySQL\",\n  \"script\": \"\\\"#!/bin/bash\\\"\\n\",\n  \"updated\": \"2018-01-01T00:01:01.000Z\",\n  \"user_defined_fields\": {\n    \"example\": \"hunter2\",\n    \"label\": \"Enter the DB password\",\n    \"name\": \"DB_PASSWORD\"\n  },\n  \"user_gravatar_id\": \"a445b305abda30ebc766bc7fda037c37\",\n  \"username\": \"myuser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "StackScript was successfully modified.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Types List",
      "method": "get",
      "endpoint": "linode/types",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"addons\": {\n        \"backups\": {\n          \"price\": {\n            \"hourly\": 0.008,\n            \"monthly\": 5\n          }\n        }\n      },\n      \"class\": \"{{oneOf (array 'nanode' 'standard' 'dedicated' 'gpu' 'highmem')}}\",\n      \"disk\": 81920,\n      \"gpus\": {{faker 'random.number'}},\n      \"id\": \"g6-standard-2\",\n      \"label\": \"Linode 4GB\",\n      \"memory\": 4096,\n      \"network_out\": 1000,\n      \"price\": {\n        \"hourly\": 0.03,\n        \"monthly\": 20\n      },\n      \"successor\": \"\",\n      \"transfer\": 4000,\n      \"vcpus\": 2\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A collection of Linode Types.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Type View",
      "method": "get",
      "endpoint": "linode/types/:typeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"addons\": {\n    \"backups\": {\n      \"price\": {\n        \"hourly\": 0.008,\n        \"monthly\": 5\n      }\n    }\n  },\n  \"class\": \"{{oneOf (array 'nanode' 'standard' 'dedicated' 'gpu' 'highmem')}}\",\n  \"disk\": 81920,\n  \"gpus\": {{faker 'random.number'}},\n  \"id\": \"g6-standard-2\",\n  \"label\": \"Linode 4GB\",\n  \"memory\": 4096,\n  \"network_out\": 1000,\n  \"price\": {\n    \"hourly\": 0.03,\n    \"monthly\": 20\n  },\n  \"successor\": \"\",\n  \"transfer\": 4000,\n  \"vcpus\": 2\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Linode Type.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Clusters List",
      "method": "get",
      "endpoint": "lke/clusters",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2019-09-12T21:25:30.000Z\",\n      \"id\": 1234,\n      \"k8s_version\": \"1.16\",\n      \"label\": \"lkecluster12345\",\n      \"region\": \"us-central\",\n      \"tags\": [\n        \"ecomm\",\n        \"blogs\"\n      ],\n      \"updated\": \"2019-09-13T21:24:16.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of all Kubernetes clusters on your Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Cluster Create",
      "method": "post",
      "endpoint": "lke/clusters",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2019-09-12T21:25:30.000Z\",\n  \"id\": 1234,\n  \"k8s_version\": \"1.16\",\n  \"label\": \"lkecluster12345\",\n  \"region\": \"us-central\",\n  \"tags\": [\n    \"ecomm\",\n    \"blogs\"\n  ],\n  \"updated\": \"2019-09-13T21:24:16.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Kubernetes cluster creation has started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Cluster Delete",
      "method": "delete",
      "endpoint": "lke/clusters/:clusterId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Cluster View",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2019-09-12T21:25:30.000Z\",\n  \"id\": 1234,\n  \"k8s_version\": \"1.16\",\n  \"label\": \"lkecluster12345\",\n  \"region\": \"us-central\",\n  \"tags\": [\n    \"ecomm\",\n    \"blogs\"\n  ],\n  \"updated\": \"2019-09-13T21:24:16.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Kubernetes cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Cluster Update",
      "method": "put",
      "endpoint": "lke/clusters/:clusterId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2019-09-12T21:25:30.000Z\",\n  \"k8s_version\": \"1.16\",\n  \"label\": \"lkecluster12345\",\n  \"region\": \"us-central\",\n  \"tags\": [\n    \"prod\",\n    \"monitoring\",\n    \"ecomm\",\n    \"blog\"\n  ],\n  \"updated\": \"2019-09-13T21:24:16.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Kubernetes cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes API Endpoints List",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId/api-endpoints",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"endpoint\": \"https://192.0.2.1:6443\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the Kubernetes API server endpoints for this cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubeconfig View",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId/kubeconfig",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"kubeconfig\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the Base64-encoded Kubeconfig file for this Kubernetes cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Delete",
      "method": "delete",
      "endpoint": "lke/clusters/:clusterId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node View",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": {\n    \"id\": \"12345-6aa78910bc\",\n    \"instance_id\": 123456,\n    \"status\": \"{{oneOf (array 'ready' 'not_ready')}}\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the values of a node object in the form that it appears currently in the node pool array.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Recycle",
      "method": "post",
      "endpoint": "lke/clusters/:clusterId/nodes/:nodeId/recycle",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Recycle request succeeded and is in progress.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pools List",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId/pools",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"count\": 6,\n      \"disks\": [\n        {\n          \"size\": 1024,\n          \"type\": \"{{oneOf (array 'raw' 'ext4')}}\"\n        }\n      ],\n      \"id\": 456,\n      \"nodes\": [\n        {\n          \"id\": \"123456\",\n          \"instance_id\": 123458,\n          \"status\": \"{{oneOf (array 'ready' 'not_ready')}}\"\n        }\n      ],\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"type\": \"g6-standard-4\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of all Pools in this Kubernetes cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pool Create",
      "method": "post",
      "endpoint": "lke/clusters/:clusterId/pools",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"count\": 6,\n  \"disks\": [\n    {\n      \"size\": 1024,\n      \"type\": \"{{oneOf (array 'raw' 'ext4')}}\"\n    }\n  ],\n  \"id\": 456,\n  \"nodes\": [\n    {\n      \"id\": \"123456\",\n      \"instance_id\": 123458,\n      \"status\": \"{{oneOf (array 'ready' 'not_ready')}}\"\n    }\n  ],\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-4\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Node Pool has been created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pool Delete",
      "method": "delete",
      "endpoint": "lke/clusters/:clusterId/pools/:poolId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pool View",
      "method": "get",
      "endpoint": "lke/clusters/:clusterId/pools/:poolId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"count\": 6,\n  \"disks\": [\n    {\n      \"size\": 1024,\n      \"type\": \"{{oneOf (array 'raw' 'ext4')}}\"\n    }\n  ],\n  \"id\": 456,\n  \"nodes\": [\n    {\n      \"id\": \"123456\",\n      \"instance_id\": 123458,\n      \"status\": \"{{oneOf (array 'ready' 'not_ready')}}\"\n    }\n  ],\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-4\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the requested Node Pool.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pool Update",
      "method": "put",
      "endpoint": "lke/clusters/:clusterId/pools/:poolId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"count\": 6,\n  \"disks\": [\n    {\n      \"size\": 1024,\n      \"type\": \"{{oneOf (array 'raw' 'ext4')}}\"\n    }\n  ],\n  \"id\": 456,\n  \"nodes\": [\n    {\n      \"id\": \"123456\",\n      \"instance_id\": 123458,\n      \"status\": \"{{oneOf (array 'ready' 'not_ready')}}\"\n    }\n  ],\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"type\": \"g6-standard-4\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Node Pool was successfully modified.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Pool Recycle",
      "method": "post",
      "endpoint": "lke/clusters/:clusterId/pools/:poolId/recycle",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Recycle request succeeded and is in progress.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Cluster Nodes Recycle",
      "method": "post",
      "endpoint": "lke/clusters/:clusterId/recycle",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Recycle request succeeded and is in progress.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Versions List",
      "method": "get",
      "endpoint": "lke/versions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"id\": \"1.16\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a list of Kubernetes versions available for deployment to a Kubernetes cluster.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Kubernetes Version View",
      "method": "get",
      "endpoint": "lke/versions/:version",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": \"1.16\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a Kubernetes version object that is available for deployment to a Kubernetes cluster.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Clients List",
      "method": "get",
      "endpoint": "longview/clients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n      \"apps\": {\n        \"apache\": true,\n        \"mysql\": true,\n        \"nginx\": {{faker 'random.boolean'}}\n      },\n      \"created\": {},\n      \"id\": 789,\n      \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n      \"label\": \"client789\",\n      \"updated\": {}\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Longview Clients.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Client Create",
      "method": "post",
      "endpoint": "longview/clients",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n  \"apps\": {\n    \"apache\": true,\n    \"mysql\": true,\n    \"nginx\": {{faker 'random.boolean'}}\n  },\n  \"created\": {},\n  \"id\": 789,\n  \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n  \"label\": \"client789\",\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Longview Client created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Client Delete",
      "method": "delete",
      "endpoint": "longview/clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Longview Client deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Client View",
      "method": "get",
      "endpoint": "longview/clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n  \"apps\": {\n    \"apache\": true,\n    \"mysql\": true,\n    \"nginx\": {{faker 'random.boolean'}}\n  },\n  \"created\": {},\n  \"id\": 789,\n  \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n  \"label\": \"client789\",\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Longview Client.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Client Update",
      "method": "put",
      "endpoint": "longview/clients/:clientId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"api_key\": \"BD1B4B54-D752-A76D-5A9BD8A17F39DB61\",\n  \"apps\": {\n    \"apache\": true,\n    \"mysql\": true,\n    \"nginx\": {{faker 'random.boolean'}}\n  },\n  \"created\": {},\n  \"id\": 789,\n  \"install_code\": \"BD1B5605-BF5E-D385-BA07AD518BE7F321\",\n  \"label\": \"client789\",\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Longview Client updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Plan View",
      "method": "get",
      "endpoint": "longview/plan",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"clients_included\": 10,\n  \"id\": \"{{oneOf (array 'longview-3' 'longview-10' 'longview-40' 'longview-100')}}\",\n  \"label\": \"Longview Pro 10 pack\",\n  \"price\": {\n    \"hourly\": 0.06,\n    \"monthly\": 40\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Longview plan details for this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Plan Update",
      "method": "put",
      "endpoint": "longview/plan",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"clients_included\": 10,\n  \"id\": \"{{oneOf (array 'longview-3' 'longview-10' 'longview-40' 'longview-100')}}\",\n  \"label\": \"Longview Pro 10 pack\",\n  \"price\": {\n    \"hourly\": 0.06,\n    \"monthly\": 40\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Longview plan details for this account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Subscriptions List",
      "method": "get",
      "endpoint": "longview/subscriptions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"clients_included\": 10,\n      \"id\": \"{{oneOf (array 'longview-3' 'longview-10' 'longview-40' 'longview-100')}}\",\n      \"label\": \"Longview Pro 10 pack\",\n      \"price\": {\n        \"hourly\": 0.06,\n        \"monthly\": 40\n      }\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Longview Subscriptions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Longview Subscription View",
      "method": "get",
      "endpoint": "longview/subscriptions/:subscriptionId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"clients_included\": 10,\n  \"id\": \"{{oneOf (array 'longview-3' 'longview-10' 'longview-40' 'longview-100')}}\",\n  \"label\": \"Longview Pro 10 pack\",\n  \"price\": {\n    \"hourly\": 0.06,\n    \"monthly\": 40\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Longview Subscription details.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Contacts List",
      "method": "get",
      "endpoint": "managed/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"email\": \"john.doe@example.org\",\n      \"group\": \"on-call\",\n      \"id\": 567,\n      \"name\": \"John Doe\",\n      \"phone\": {\n        \"primary\": \"123-456-7890\",\n        \"secondary\": \"\"\n      },\n      \"updated\": \"2018-01-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of ManagedContacts",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Contact Create",
      "method": "post",
      "endpoint": "managed/contacts",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"john.doe@example.org\",\n  \"group\": \"on-call\",\n  \"id\": 567,\n  \"name\": \"John Doe\",\n  \"phone\": {\n    \"primary\": \"123-456-7890\",\n    \"secondary\": \"\"\n  },\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Contact created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Contact Delete",
      "method": "delete",
      "endpoint": "managed/contacts/:contactId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Contact deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Contact View",
      "method": "get",
      "endpoint": "managed/contacts/:contactId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"john.doe@example.org\",\n  \"group\": \"on-call\",\n  \"id\": 567,\n  \"name\": \"John Doe\",\n  \"phone\": {\n    \"primary\": \"123-456-7890\",\n    \"secondary\": \"\"\n  },\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Managed Contact.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Contact Update",
      "method": "put",
      "endpoint": "managed/contacts/:contactId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"email\": \"john.doe@example.org\",\n  \"group\": \"on-call\",\n  \"id\": 567,\n  \"name\": \"John Doe\",\n  \"phone\": {\n    \"primary\": \"123-456-7890\",\n    \"secondary\": \"\"\n  },\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Contact updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credentials List",
      "method": "get",
      "endpoint": "managed/credentials",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"id\": 9991,\n      \"label\": \"prod-password-1\",\n      \"last_decrypted\": \"2018-01-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of ManagedCredentials",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credential Create",
      "method": "post",
      "endpoint": "managed/credentials",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 9991,\n  \"label\": \"prod-password-1\",\n  \"last_decrypted\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credential created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed SSH Key View",
      "method": "get",
      "endpoint": "managed/credentials/sshkey",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ssh_key\": \"ssh-rsa AAAAB...oD2ZQ== managedservices@linode\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Managed SSH public key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credential View",
      "method": "get",
      "endpoint": "managed/credentials/:credentialId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 9991,\n  \"label\": \"prod-password-1\",\n  \"last_decrypted\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Managed Credential.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credential Update",
      "method": "put",
      "endpoint": "managed/credentials/:credentialId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"id\": 9991,\n  \"label\": \"prod-password-1\",\n  \"last_decrypted\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credential updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credential Delete",
      "method": "post",
      "endpoint": "managed/credentials/:credentialId/revoke",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credential deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Credential Username and Password Update",
      "method": "post",
      "endpoint": "managed/credentials/:credentialId/update",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Credential username and password updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Issues List",
      "method": "get",
      "endpoint": "managed/issues",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"entity\": {\n        \"id\": 98765,\n        \"label\": \"Managed Issue opened!\",\n        \"type\": \"{{oneOf (array 'ticket')}}\",\n        \"url\": \"/support/tickets/98765\"\n      },\n      \"id\": 823,\n      \"services\": [\n        654\n      ]\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of open or ongoing Managed Issues.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Issue View",
      "method": "get",
      "endpoint": "managed/issues/:issueId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"entity\": {\n    \"id\": 98765,\n    \"label\": \"Managed Issue opened!\",\n    \"type\": \"{{oneOf (array 'ticket')}}\",\n    \"url\": \"/support/tickets/98765\"\n  },\n  \"id\": 823,\n  \"services\": [\n    654\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested issue.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Linode Settings List",
      "method": "get",
      "endpoint": "managed/linode-settings",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"group\": \"linodes\",\n      \"id\": 123,\n      \"label\": \"linode123\",\n      \"ssh\": {\n        \"access\": true,\n        \"ip\": \"12.34.56.78\",\n        \"port\": 22,\n        \"user\": \"linode\"\n      }\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Managed settings for your Linodes.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode's Managed Settings View",
      "method": "get",
      "endpoint": "managed/linode-settings/:linodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"group\": \"linodes\",\n  \"id\": 123,\n  \"label\": \"linode123\",\n  \"ssh\": {\n    \"access\": true,\n    \"ip\": \"12.34.56.78\",\n    \"port\": 22,\n    \"user\": \"linode\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Linode's Managed settings.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linode's Managed Settings Update",
      "method": "put",
      "endpoint": "managed/linode-settings/:linodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"group\": \"linodes\",\n  \"id\": 123,\n  \"label\": \"linode123\",\n  \"ssh\": {\n    \"access\": true,\n    \"ip\": \"12.34.56.78\",\n    \"port\": 22,\n    \"user\": \"linode\"\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Settings updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Services List",
      "method": "get",
      "endpoint": "managed/services",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"address\": \"https://example.org\",\n      \"body\": \"it worked\",\n      \"consultation_group\": \"on-call\",\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"credentials\": [\n        9991\n      ],\n      \"id\": 9944,\n      \"label\": \"prod-1\",\n      \"notes\": \"The service name is my-cool-application\",\n      \"region\": \"\",\n      \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n      \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n      \"timeout\": 30,\n      \"updated\": \"2018-03-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Managed Services",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service Create",
      "method": "post",
      "endpoint": "managed/services",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"https://example.org\",\n  \"body\": \"it worked\",\n  \"consultation_group\": \"on-call\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"credentials\": [\n    9991\n  ],\n  \"id\": 9944,\n  \"label\": \"prod-1\",\n  \"notes\": \"The service name is my-cool-application\",\n  \"region\": \"\",\n  \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n  \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n  \"timeout\": 30,\n  \"updated\": \"2018-03-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service Delete",
      "method": "delete",
      "endpoint": "managed/services/:serviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service View",
      "method": "get",
      "endpoint": "managed/services/:serviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"https://example.org\",\n  \"body\": \"it worked\",\n  \"consultation_group\": \"on-call\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"credentials\": [\n    9991\n  ],\n  \"id\": 9944,\n  \"label\": \"prod-1\",\n  \"notes\": \"The service name is my-cool-application\",\n  \"region\": \"\",\n  \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n  \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n  \"timeout\": 30,\n  \"updated\": \"2018-03-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Managed Service.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service Update",
      "method": "put",
      "endpoint": "managed/services/:serviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"https://example.org\",\n  \"body\": \"it worked\",\n  \"consultation_group\": \"on-call\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"credentials\": [\n    9991\n  ],\n  \"id\": 9944,\n  \"label\": \"prod-1\",\n  \"notes\": \"The service name is my-cool-application\",\n  \"region\": \"\",\n  \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n  \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n  \"timeout\": 30,\n  \"updated\": \"2018-03-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service Disable",
      "method": "post",
      "endpoint": "managed/services/:serviceId/disable",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"https://example.org\",\n  \"body\": \"it worked\",\n  \"consultation_group\": \"on-call\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"credentials\": [\n    9991\n  ],\n  \"id\": 9944,\n  \"label\": \"prod-1\",\n  \"notes\": \"The service name is my-cool-application\",\n  \"region\": \"\",\n  \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n  \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n  \"timeout\": 30,\n  \"updated\": \"2018-03-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service disabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Service Enable",
      "method": "post",
      "endpoint": "managed/services/:serviceId/enable",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"https://example.org\",\n  \"body\": \"it worked\",\n  \"consultation_group\": \"on-call\",\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"credentials\": [\n    9991\n  ],\n  \"id\": 9944,\n  \"label\": \"prod-1\",\n  \"notes\": \"The service name is my-cool-application\",\n  \"region\": \"\",\n  \"service_type\": \"{{oneOf (array 'url' 'tcp')}}\",\n  \"status\": \"{{oneOf (array 'disabled' 'pending' 'ok' 'problem')}}\",\n  \"timeout\": 30,\n  \"updated\": \"2018-03-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Service enabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Managed Stats List",
      "method": "get",
      "endpoint": "managed/stats",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": {\n    \"cpu\": [\n      {\n        \"x\": 11513761600000,\n        \"y\": 29.94\n      }\n    ],\n    \"disk\": [\n      {\n        \"x\": 11513761600000,\n        \"y\": 29.94\n      }\n    ],\n    \"net_in\": [\n      {\n        \"x\": 11513761600000,\n        \"y\": 29.94\n      }\n    ],\n    \"net_out\": [\n      {\n        \"x\": 11513761600000,\n        \"y\": 29.94\n      }\n    ],\n    \"swap\": [\n      {\n        \"x\": 11513761600000,\n        \"y\": 29.94\n      }\n    ]\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A list of Managed Stats from the last 24 hours.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewalls List",
      "method": "get",
      "endpoint": "networking/firewalls",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 123,\n      \"label\": \"firewall123\",\n      \"rules\": {\n        \"inbound\": [\n          {\n            \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            },\n            \"description\": \"An example firewall rule description.\",\n            \"label\": \"firewallrule123\",\n            \"ports\": \"22-24, 80, 443\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n          }\n        ],\n        \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"outbound\": [\n          {\n            \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n            \"addresses\": {\n              \"ipv4\": [\n                \"192.0.2.0/24\"\n              ],\n              \"ipv6\": [\n                \"2001:DB8::/32\"\n              ]\n            },\n            \"description\": \"An example firewall rule description.\",\n            \"label\": \"firewallrule123\",\n            \"ports\": \"22-24, 80, 443\",\n            \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n          }\n        ],\n        \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n      },\n      \"status\": \"{{oneOf (array 'enabled' 'disabled' 'deleted')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"updated\": \"2018-01-02T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of Firewalls.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Create",
      "method": "post",
      "endpoint": "networking/firewalls",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123,\n  \"label\": \"firewall123\",\n  \"rules\": {\n    \"inbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n    \"outbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n  },\n  \"status\": \"{{oneOf (array 'enabled' 'disabled' 'deleted')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-02T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns information about the created Firewall.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Delete",
      "method": "delete",
      "endpoint": "networking/firewalls/:firewallId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete Successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall View",
      "method": "get",
      "endpoint": "networking/firewalls/:firewallId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123,\n  \"label\": \"firewall123\",\n  \"rules\": {\n    \"inbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n    \"outbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n  },\n  \"status\": \"{{oneOf (array 'enabled' 'disabled' 'deleted')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-02T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns information about this Firewall.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Update",
      "method": "put",
      "endpoint": "networking/firewalls/:firewallId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 123,\n  \"label\": \"firewall123\",\n  \"rules\": {\n    \"inbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n    \"outbound\": [\n      {\n        \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n        \"addresses\": {\n          \"ipv4\": [\n            \"192.0.2.0/24\"\n          ],\n          \"ipv6\": [\n            \"2001:DB8::/32\"\n          ]\n        },\n        \"description\": \"An example firewall rule description.\",\n        \"label\": \"firewallrule123\",\n        \"ports\": \"22-24, 80, 443\",\n        \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n      }\n    ],\n    \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n  },\n  \"status\": \"{{oneOf (array 'enabled' 'disabled' 'deleted')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-02T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Firewall updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Devices List",
      "method": "get",
      "endpoint": "networking/firewalls/:firewallId/devices",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"entity\": {\n        \"id\": 123,\n        \"label\": \"my-linode\",\n        \"type\": \"{{oneOf (array 'linode')}}\",\n        \"url\": \"/v4/linode/instances/123\"\n      },\n      \"id\": 123,\n      \"updated\": \"2018-01-02T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Firewall Devices",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Device Create",
      "method": "post",
      "endpoint": "networking/firewalls/:firewallId/devices",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"entity\": {\n    \"id\": 123,\n    \"label\": \"my-linode\",\n    \"type\": \"{{oneOf (array 'linode')}}\",\n    \"url\": \"/v4/linode/instances/123\"\n  },\n  \"id\": 123,\n  \"updated\": \"2018-01-02T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns information about the created Firewall Device.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Device Delete",
      "method": "delete",
      "endpoint": "networking/firewalls/:firewallId/devices/:deviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Delete Successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Device View",
      "method": "get",
      "endpoint": "networking/firewalls/:firewallId/devices/:deviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"entity\": {\n    \"id\": 123,\n    \"label\": \"my-linode\",\n    \"type\": \"{{oneOf (array 'linode')}}\",\n    \"url\": \"/v4/linode/instances/123\"\n  },\n  \"id\": 123,\n  \"updated\": \"2018-01-02T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Firewall Device.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Rules List",
      "method": "get",
      "endpoint": "networking/firewalls/:firewallId/rules",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"inbound\": [\n    {\n      \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n      \"addresses\": {\n        \"ipv4\": [\n          \"192.0.2.0/24\"\n        ],\n        \"ipv6\": [\n          \"2001:DB8::/32\"\n        ]\n      },\n      \"description\": \"An example firewall rule description.\",\n      \"label\": \"firewallrule123\",\n      \"ports\": \"22-24, 80, 443\",\n      \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n    }\n  ],\n  \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n  \"outbound\": [\n    {\n      \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n      \"addresses\": {\n        \"ipv4\": [\n          \"192.0.2.0/24\"\n        ],\n        \"ipv6\": [\n          \"2001:DB8::/32\"\n        ]\n      },\n      \"description\": \"An example firewall rule description.\",\n      \"label\": \"firewallrule123\",\n      \"ports\": \"22-24, 80, 443\",\n      \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n    }\n  ],\n  \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Firewall Rules.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Firewall Rules Update",
      "method": "put",
      "endpoint": "networking/firewalls/:firewallId/rules",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"inbound\": [\n    {\n      \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n      \"addresses\": {\n        \"ipv4\": [\n          \"192.0.2.0/24\"\n        ],\n        \"ipv6\": [\n          \"2001:DB8::/32\"\n        ]\n      },\n      \"description\": \"An example firewall rule description.\",\n      \"label\": \"firewallrule123\",\n      \"ports\": \"22-24, 80, 443\",\n      \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n    }\n  ],\n  \"inbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n  \"outbound\": [\n    {\n      \"action\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\",\n      \"addresses\": {\n        \"ipv4\": [\n          \"192.0.2.0/24\"\n        ],\n        \"ipv6\": [\n          \"2001:DB8::/32\"\n        ]\n      },\n      \"description\": \"An example firewall rule description.\",\n      \"label\": \"firewallrule123\",\n      \"ports\": \"22-24, 80, 443\",\n      \"protocol\": \"{{oneOf (array 'TCP' 'UDP' 'ICMP')}}\"\n    }\n  ],\n  \"outbound_policy\": \"{{oneOf (array 'ACCEPT' 'DROP')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Firewall Rules updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Addresses List",
      "method": "get",
      "endpoint": "networking/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"address\": \"97.107.143.141\",\n      \"gateway\": \"97.107.143.1\",\n      \"linode_id\": 123,\n      \"prefix\": 24,\n      \"public\": true,\n      \"rdns\": \"test.example.org\",\n      \"region\": \"us-east\",\n      \"subnet_mask\": \"255.255.255.0\",\n      \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of IP Addresses.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Address Allocate",
      "method": "post",
      "endpoint": "networking/ips",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "IP Address allocated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Address View",
      "method": "get",
      "endpoint": "networking/ips/:address",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested IP Address.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Address RDNS Update",
      "method": "put",
      "endpoint": "networking/ips/:address",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"97.107.143.141\",\n  \"gateway\": \"97.107.143.1\",\n  \"linode_id\": 123,\n  \"prefix\": 24,\n  \"public\": true,\n  \"rdns\": \"test.example.org\",\n  \"region\": \"us-east\",\n  \"subnet_mask\": \"255.255.255.0\",\n  \"type\": \"{{oneOf (array 'ipv4' 'ipv6' 'ipv6/pool' 'ipv6/range')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "RDNS set successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Linodes Assign IPs",
      "method": "post",
      "endpoint": "networking/ipv4/assign",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "All assignments completed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IP Sharing Configure",
      "method": "post",
      "endpoint": "networking/ipv4/share",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Sharing configured successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IPv6 Pools List",
      "method": "get",
      "endpoint": "networking/ipv6/pools",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"prefix\": 124,\n      \"range\": \"2600:3c01::2:5000:0\",\n      \"region\": \"us-east\",\n      \"route_target\": \"2600:3c01::2:5000:f\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The IPv6 pools on your Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "IPv6 Ranges List",
      "method": "get",
      "endpoint": "networking/ipv6/ranges",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"prefix\": 64,\n      \"range\": \"2600:3c01::\",\n      \"region\": \"us-east\",\n      \"route_target\": \"2600:3c01::ffff:ffff:ffff:ffff\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The IPv6 ranges on your Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "VLANs List",
      "method": "get",
      "endpoint": "networking/vlans",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2020-01-01T00:01:01.000Z\",\n      \"label\": \"vlan-example\",\n      \"linodes\": [\n        111,\n        222\n      ],\n      \"region\": \"ap-west\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The VLANs available on this Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancers List",
      "method": "get",
      "endpoint": "nodebalancers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"client_conn_throttle\": {{faker 'random.number'}},\n      \"created\": {},\n      \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n      \"id\": 12345,\n      \"ipv4\": \"12.34.56.78\",\n      \"ipv6\": \"\",\n      \"label\": \"balancer12345\",\n      \"region\": \"us-east\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"transfer\": {\n        \"in\": 28.91200828552246,\n        \"out\": 3.5487728118896484,\n        \"total\": 32.46078109741211\n      },\n      \"updated\": {}\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of NodeBalancers.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancer Create",
      "method": "post",
      "endpoint": "nodebalancers",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"client_conn_throttle\": {{faker 'random.number'}},\n  \"created\": {},\n  \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n  \"id\": 12345,\n  \"ipv4\": \"12.34.56.78\",\n  \"ipv6\": \"\",\n  \"label\": \"balancer12345\",\n  \"region\": \"us-east\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n  },\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "NodeBalancer created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancer Delete",
      "method": "delete",
      "endpoint": "nodebalancers/:nodeBalancerId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "NodeBalancer deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancer View",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"client_conn_throttle\": {{faker 'random.number'}},\n  \"created\": {},\n  \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n  \"id\": 12345,\n  \"ipv4\": \"12.34.56.78\",\n  \"ipv6\": \"\",\n  \"label\": \"balancer12345\",\n  \"region\": \"us-east\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n  },\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested NodeBalancer object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancer Update",
      "method": "put",
      "endpoint": "nodebalancers/:nodeBalancerId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"client_conn_throttle\": {{faker 'random.number'}},\n  \"created\": {},\n  \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n  \"id\": 12345,\n  \"ipv4\": \"12.34.56.78\",\n  \"ipv6\": \"\",\n  \"label\": \"balancer12345\",\n  \"region\": \"us-east\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n  },\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "NodeBalancer updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Configs List",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId/configs",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"algorithm\": \"{{oneOf (array 'roundrobin' 'leastconn' 'source')}}\",\n      \"check\": \"{{oneOf (array 'none' 'connection' 'http' 'http_body')}}\",\n      \"check_attempts\": 3,\n      \"check_body\": \"it works\",\n      \"check_interval\": 90,\n      \"check_passive\": true,\n      \"check_path\": \"/test\",\n      \"check_timeout\": 10,\n      \"cipher_suite\": \"{{oneOf (array 'recommended' 'legacy')}}\",\n      \"id\": 4567,\n      \"nodebalancer_id\": 12345,\n      \"nodes_status\": {\n        \"down\": {{faker 'random.number'}},\n        \"up\": 4\n      },\n      \"port\": 80,\n      \"protocol\": \"{{oneOf (array 'http' 'https' 'tcp')}}\",\n      \"proxy_protocol\": \"{{oneOf (array 'none' 'v1' 'v2')}}\",\n      \"ssl_cert\": \"\",\n      \"ssl_commonname\": \"\",\n      \"ssl_fingerprint\": \"\",\n      \"ssl_key\": \"\",\n      \"stickiness\": \"{{oneOf (array 'none' 'table' 'http_cookie')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginted list of NodeBalancer Configs",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Config Create",
      "method": "post",
      "endpoint": "nodebalancers/:nodeBalancerId/configs",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"algorithm\": \"{{oneOf (array 'roundrobin' 'leastconn' 'source')}}\",\n  \"check\": \"{{oneOf (array 'none' 'connection' 'http' 'http_body')}}\",\n  \"check_attempts\": 3,\n  \"check_body\": \"it works\",\n  \"check_interval\": 90,\n  \"check_passive\": true,\n  \"check_path\": \"/test\",\n  \"check_timeout\": 10,\n  \"cipher_suite\": \"{{oneOf (array 'recommended' 'legacy')}}\",\n  \"id\": 4567,\n  \"nodebalancer_id\": 12345,\n  \"nodes_status\": {\n    \"down\": {{faker 'random.number'}},\n    \"up\": 4\n  },\n  \"port\": 80,\n  \"protocol\": \"{{oneOf (array 'http' 'https' 'tcp')}}\",\n  \"proxy_protocol\": \"{{oneOf (array 'none' 'v1' 'v2')}}\",\n  \"ssl_cert\": \"\",\n  \"ssl_commonname\": \"\",\n  \"ssl_fingerprint\": \"\",\n  \"ssl_key\": \"\",\n  \"stickiness\": \"{{oneOf (array 'none' 'table' 'http_cookie')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Config created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Config Delete",
      "method": "delete",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "NodeBalancer Config deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Config View",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"algorithm\": \"{{oneOf (array 'roundrobin' 'leastconn' 'source')}}\",\n  \"check\": \"{{oneOf (array 'none' 'connection' 'http' 'http_body')}}\",\n  \"check_attempts\": 3,\n  \"check_body\": \"it works\",\n  \"check_interval\": 90,\n  \"check_passive\": true,\n  \"check_path\": \"/test\",\n  \"check_timeout\": 10,\n  \"cipher_suite\": \"{{oneOf (array 'recommended' 'legacy')}}\",\n  \"id\": 4567,\n  \"nodebalancer_id\": 12345,\n  \"nodes_status\": {\n    \"down\": {{faker 'random.number'}},\n    \"up\": 4\n  },\n  \"port\": 80,\n  \"protocol\": \"{{oneOf (array 'http' 'https' 'tcp')}}\",\n  \"proxy_protocol\": \"{{oneOf (array 'none' 'v1' 'v2')}}\",\n  \"ssl_cert\": \"\",\n  \"ssl_commonname\": \"\",\n  \"ssl_fingerprint\": \"\",\n  \"ssl_key\": \"\",\n  \"stickiness\": \"{{oneOf (array 'none' 'table' 'http_cookie')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested NodeBalancer config.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Config Update",
      "method": "put",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"algorithm\": \"{{oneOf (array 'roundrobin' 'leastconn' 'source')}}\",\n  \"check\": \"{{oneOf (array 'none' 'connection' 'http' 'http_body')}}\",\n  \"check_attempts\": 3,\n  \"check_body\": \"it works\",\n  \"check_interval\": 90,\n  \"check_passive\": true,\n  \"check_path\": \"/test\",\n  \"check_timeout\": 10,\n  \"cipher_suite\": \"{{oneOf (array 'recommended' 'legacy')}}\",\n  \"id\": 4567,\n  \"nodebalancer_id\": 12345,\n  \"nodes_status\": {\n    \"down\": {{faker 'random.number'}},\n    \"up\": 4\n  },\n  \"port\": 80,\n  \"protocol\": \"{{oneOf (array 'http' 'https' 'tcp')}}\",\n  \"proxy_protocol\": \"{{oneOf (array 'none' 'v1' 'v2')}}\",\n  \"ssl_cert\": \"\",\n  \"ssl_commonname\": \"\",\n  \"ssl_fingerprint\": \"\",\n  \"ssl_key\": \"\",\n  \"stickiness\": \"{{oneOf (array 'none' 'table' 'http_cookie')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Config updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Nodes List",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/nodes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"address\": \"192.168.210.120:80\",\n      \"config_id\": 4567,\n      \"id\": 54321,\n      \"label\": \"node54321\",\n      \"mode\": \"{{oneOf (array 'accept' 'reject' 'drain' 'backup')}}\",\n      \"nodebalancer_id\": 12345,\n      \"status\": \"{{oneOf (array 'unknown' 'UP' 'DOWN')}}\",\n      \"weight\": 50\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of NodeBalancer nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Create",
      "method": "post",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/nodes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"192.168.210.120:80\",\n  \"config_id\": 4567,\n  \"id\": 54321,\n  \"label\": \"node54321\",\n  \"mode\": \"{{oneOf (array 'accept' 'reject' 'drain' 'backup')}}\",\n  \"nodebalancer_id\": 12345,\n  \"status\": \"{{oneOf (array 'unknown' 'UP' 'DOWN')}}\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Node created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Delete",
      "method": "delete",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Node deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node View",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"192.168.210.120:80\",\n  \"config_id\": 4567,\n  \"id\": 54321,\n  \"label\": \"node54321\",\n  \"mode\": \"{{oneOf (array 'accept' 'reject' 'drain' 'backup')}}\",\n  \"nodebalancer_id\": 12345,\n  \"status\": \"{{oneOf (array 'unknown' 'UP' 'DOWN')}}\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of NodeBalancer nodes.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Node Update",
      "method": "put",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/nodes/:nodeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"address\": \"192.168.210.120:80\",\n  \"config_id\": 4567,\n  \"id\": 54321,\n  \"label\": \"node54321\",\n  \"mode\": \"{{oneOf (array 'accept' 'reject' 'drain' 'backup')}}\",\n  \"nodebalancer_id\": 12345,\n  \"status\": \"{{oneOf (array 'unknown' 'UP' 'DOWN')}}\",\n  \"weight\": 50\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Node updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Config Rebuild",
      "method": "post",
      "endpoint": "nodebalancers/:nodeBalancerId/configs/:configId/rebuild",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"client_conn_throttle\": {{faker 'random.number'}},\n  \"created\": {},\n  \"hostname\": \"nb-207-192-68-16.newark.nodebalancer.linode.com\",\n  \"id\": 12345,\n  \"ipv4\": \"12.34.56.78\",\n  \"ipv6\": \"\",\n  \"label\": \"balancer12345\",\n  \"region\": \"us-east\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"transfer\": {\n    \"in\": 28.91200828552246,\n    \"out\": 3.5487728118896484,\n    \"total\": 32.46078109741211\n  },\n  \"updated\": {}\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "NodeBalancer created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "NodeBalancer Statistics View",
      "method": "get",
      "endpoint": "nodebalancers/:nodeBalancerId/stats",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": {\n    \"connections\": [\n      [\n        1526391300000,\n        0\n      ]\n    ],\n    \"traffic\": {\n      \"in\": [\n        [\n          1526391300000,\n          631.21\n        ]\n      ],\n      \"out\": [\n        [\n          1526391300000,\n          103.44\n        ]\n      ]\n    }\n  },\n  \"title\": \"linode.com - balancer12345 (12345) - day (5 min avg)\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested stats.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Buckets List",
      "method": "get",
      "endpoint": "object-storage/buckets",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"cluster\": \"us-east-1\",\n      \"created\": {},\n      \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n      \"label\": \"example-bucket\",\n      \"objects\": 4,\n      \"size\": 188318981\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of buckets you own.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket Create",
      "method": "post",
      "endpoint": "object-storage/buckets",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"cluster\": \"us-east-1\",\n  \"created\": {},\n  \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n  \"label\": \"example-bucket\",\n  \"objects\": 4,\n  \"size\": 188318981\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The bucket created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Buckets in Cluster List",
      "method": "get",
      "endpoint": "object-storage/buckets/:clusterId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"cluster\": \"us-east-1\",\n      \"created\": {},\n      \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n      \"label\": \"example-bucket\",\n      \"objects\": 4,\n      \"size\": 188318981\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of buckets you own in this cluster.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket Remove",
      "method": "delete",
      "endpoint": "object-storage/buckets/:clusterId/:bucket",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Bucket deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket View",
      "method": "get",
      "endpoint": "object-storage/buckets/:clusterId/:bucket",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"cluster\": \"us-east-1\",\n  \"created\": {},\n  \"hostname\": \"example-bucket.us-east-1.linodeobjects.com\",\n  \"label\": \"example-bucket\",\n  \"objects\": 4,\n  \"size\": 188318981\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested bucket.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket Access Modify",
      "method": "post",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/access",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Access controls updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket Access Update",
      "method": "put",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/access",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Access controls updated.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Object ACL Config View",
      "method": "get",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/object-acl",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"acl\": \"{{oneOf (array 'private' 'public-read' 'authenticated-read' 'public-read-write' 'custom')}}\",\n  \"acl_xml\": \"<AccessControlPolicy>...</AccessControlPolicy>\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Object's canned ACL and policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Object ACL Config Update",
      "method": "put",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/object-acl",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"acl\": \"{{oneOf (array 'private' 'public-read' 'authenticated-read' 'public-read-write' 'custom')}}\",\n  \"acl_xml\": \"<AccessControlPolicy>...</AccessControlPolicy>\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The Object's canned ACL and policy.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Bucket Contents List",
      "method": "get",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/object-list",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"etag\": \"9f254c71e28e033bf9e0e5262e3e72ab\",\n      \"is_truncated\": true,\n      \"last_modified\": {},\n      \"name\": \"example\",\n      \"next_marker\": \"bd021c21-e734-4823-97a4-58b41c2cd4c8.892602.184\",\n      \"owner\": \"bfc70ab2-e3d4-42a4-ad55-83921822270c\",\n      \"size\": 123\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "One page of the requested bucket's contents.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Object URL Create",
      "method": "post",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/object-url",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"url\": \"https://us-east-1.linodeobjects.com/example-bucket/example?Signature=qr98TEucCntPgEG%2BsZQGDsJg93c%3D&Expires=1567609905&AWSAccessKeyId=G4YAF81XWY61DQM94SE0\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The URL with which to access your object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage TLS/SSL Cert Delete",
      "method": "delete",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/ssl",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Deletes this Object Storage bucket's user uploaded TLS/SSL certificate and private key.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage TLS/SSL Cert View",
      "method": "get",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/ssl",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ssl\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a boolean value indicating if this bucket has a corresponding TLS/SSL certificate that was uploaded by an Account user.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage TLS/SSL Cert Upload",
      "method": "post",
      "endpoint": "object-storage/buckets/:clusterId/:bucket/ssl",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"ssl\": true\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns whether this bucket has a corresponding TLS/SSL certificate that was uploaded by a user.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Cancel",
      "method": "post",
      "endpoint": "object-storage/cancel",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Object Storage cancellation successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Clusters List",
      "method": "get",
      "endpoint": "object-storage/clusters",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"domain\": \"us-east-1.linodeobjects.com\",\n      \"id\": \"us-east-1\",\n      \"region\": \"us-east\",\n      \"static_site_domain\": \"website-us-east-1.linodeobjects.com\",\n      \"status\": \"{{oneOf (array 'available' 'unavailable')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of available clusters.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Cluster View",
      "method": "get",
      "endpoint": "object-storage/clusters/:clusterId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"domain\": \"us-east-1.linodeobjects.com\",\n  \"id\": \"us-east-1\",\n  \"region\": \"us-east\",\n  \"static_site_domain\": \"website-us-east-1.linodeobjects.com\",\n  \"status\": \"{{oneOf (array 'available' 'unavailable')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested Cluster",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Keys List",
      "method": "get",
      "endpoint": "object-storage/keys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n      \"bucket_access\": [\n        {\n          \"bucket_name\": \"example-bucket\",\n          \"cluster\": \"ap-south-1\",\n          \"permissions\": \"{{oneOf (array 'read_write' 'read_only')}}\"\n        }\n      ],\n      \"id\": 123,\n      \"label\": \"my-key\",\n      \"limited\": true,\n      \"secret_key\": \"OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Object Storage Keys",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Key Create",
      "method": "post",
      "endpoint": "object-storage/keys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n  \"bucket_access\": [\n    {\n      \"bucket_name\": \"example-bucket\",\n      \"cluster\": \"ap-south-1\",\n      \"permissions\": \"{{oneOf (array 'read_write' 'read_only')}}\"\n    }\n  ],\n  \"id\": 123,\n  \"label\": \"my-key\",\n  \"limited\": true,\n  \"secret_key\": \"OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new keypair.  **This is the only time** the secret key is returned.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Key Revoke",
      "method": "delete",
      "endpoint": "object-storage/keys/:keyId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Deletion successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Key View",
      "method": "get",
      "endpoint": "object-storage/keys/:keyId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n  \"bucket_access\": [\n    {\n      \"bucket_name\": \"example-bucket\",\n      \"cluster\": \"ap-south-1\",\n      \"permissions\": \"{{oneOf (array 'read_write' 'read_only')}}\"\n    }\n  ],\n  \"id\": 123,\n  \"label\": \"my-key\",\n  \"limited\": true,\n  \"secret_key\": \"OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The keypair",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Key Update",
      "method": "put",
      "endpoint": "object-storage/keys/:keyId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"access_key\": \"KVAKUTGBA4WTR2NSJQ81\",\n  \"bucket_access\": [\n    {\n      \"bucket_name\": \"example-bucket\",\n      \"cluster\": \"ap-south-1\",\n      \"permissions\": \"{{oneOf (array 'read_write' 'read_only')}}\"\n    }\n  ],\n  \"id\": 123,\n  \"label\": \"my-key\",\n  \"limited\": true,\n  \"secret_key\": \"OiA6F5r0niLs3QA2stbyq7mY5VCV7KqOzcmitmHw\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Update Successful",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Object Storage Transfer View",
      "method": "get",
      "endpoint": "object-storage/transfer",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"used\": 12956600198\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns the amount of outbound data transfer used by your account's Object Storage buckets.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Profile View",
      "method": "get",
      "endpoint": "profile",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"authentication_type\": \"{{oneOf (array 'password' 'github')}}\",\n  \"authorized_keys\": [\n    \"\"\n  ],\n  \"email\": \"example-user@gmail.com\",\n  \"email_notifications\": true,\n  \"ip_whitelist_enabled\": {{faker 'random.boolean'}},\n  \"lish_auth_method\": \"{{oneOf (array 'password_keys' 'keys_only' 'disabled')}}\",\n  \"referrals\": {\n    \"code\": \"871be32f49c1411b14f29f618aaf0c14637fb8d3\",\n    \"completed\": {{faker 'random.number'}},\n    \"credit\": {{faker 'random.number'}},\n    \"pending\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}},\n    \"url\": \"https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3\"\n  },\n  \"restricted\": {{faker 'random.boolean'}},\n  \"timezone\": \"US/Eastern\",\n  \"two_factor_auth\": true,\n  \"uid\": 1234,\n  \"username\": \"exampleUser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Profile response.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Profile Update",
      "method": "put",
      "endpoint": "profile",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"authentication_type\": \"{{oneOf (array 'password' 'github')}}\",\n  \"authorized_keys\": [\n    \"\"\n  ],\n  \"email\": \"example-user@gmail.com\",\n  \"email_notifications\": true,\n  \"ip_whitelist_enabled\": {{faker 'random.boolean'}},\n  \"lish_auth_method\": \"{{oneOf (array 'password_keys' 'keys_only' 'disabled')}}\",\n  \"referrals\": {\n    \"code\": \"871be32f49c1411b14f29f618aaf0c14637fb8d3\",\n    \"completed\": {{faker 'random.number'}},\n    \"credit\": {{faker 'random.number'}},\n    \"pending\": {{faker 'random.number'}},\n    \"total\": {{faker 'random.number'}},\n    \"url\": \"https://www.linode.com/?r=871be32f49c1411b14f29f618aaf0c14637fb8d3\"\n  },\n  \"restricted\": {{faker 'random.boolean'}},\n  \"timezone\": \"US/Eastern\",\n  \"two_factor_auth\": true,\n  \"uid\": 1234,\n  \"username\": \"exampleUser\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Profile updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Authorized Apps List",
      "method": "get",
      "endpoint": "profile/apps",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"expiry\": \"2018-01-15T00:01:01.000Z\",\n      \"id\": 123,\n      \"label\": \"example-app\",\n      \"scopes\": \"linodes:read_only\",\n      \"thumbnail_url\": \"\",\n      \"website\": \"example.org\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of apps you've authorized.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "App Access Revoke",
      "method": "delete",
      "endpoint": "profile/apps/:appId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "App's authorization has been revoked.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Authorized App View",
      "method": "get",
      "endpoint": "profile/apps/:appId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"expiry\": \"2018-01-15T00:01:01.000Z\",\n  \"id\": 123,\n  \"label\": \"example-app\",\n  \"scopes\": \"linodes:read_only\",\n  \"thumbnail_url\": \"\",\n  \"website\": \"example.org\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The app requested.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Trusted Devices List",
      "method": "get",
      "endpoint": "profile/devices",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T01:01:01.000Z\",\n      \"expiry\": \"2018-01-31T01:01:01.000Z\",\n      \"id\": 123,\n      \"last_authenticated\": \"2018-01-05T12:57:12.000Z\",\n      \"last_remote_addr\": \"12.34.56.78\",\n      \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\\n\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of TrustedDevice objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Trusted Device Revoke",
      "method": "delete",
      "endpoint": "profile/devices/:deviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Session revoked successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Trusted Device View",
      "method": "get",
      "endpoint": "profile/devices/:deviceId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T01:01:01.000Z\",\n  \"expiry\": \"2018-01-31T01:01:01.000Z\",\n  \"id\": 123,\n  \"last_authenticated\": \"2018-01-05T12:57:12.000Z\",\n  \"last_remote_addr\": \"12.34.56.78\",\n  \"user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36 Vivaldi/2.1.1337.36\\n\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested TrustedDevice object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Grants List",
      "method": "get",
      "endpoint": "profile/grants",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"domain\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"global\": {\n    \"account_access\": \"{{oneOf (array 'read_only' 'read_write')}}\",\n    \"add_domains\": true,\n    \"add_images\": true,\n    \"add_linodes\": true,\n    \"add_longview\": true,\n    \"add_nodebalancers\": true,\n    \"add_stackscripts\": true,\n    \"add_volumes\": true,\n    \"cancel_account\": {{faker 'random.boolean'}},\n    \"longview_subscription\": true\n  },\n  \"image\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"linode\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"longview\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"nodebalancer\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"stackscript\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ],\n  \"volume\": [\n    {\n      \"id\": 123,\n      \"label\": \"example-entity\",\n      \"permissions\": \"{{oneOf (array 'read_only' 'read_write')}}\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "GrantsResponse",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "",
          "latency": 0,
          "statusCode": 204,
          "label": "This is an unrestricted User, who has no grants. This User can access everything on the Account.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Logins List",
      "method": "get",
      "endpoint": "profile/logins",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"datetime\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 1234,\n      \"ip\": \"192.0.2.0\",\n      \"restricted\": true,\n      \"username\": \"example_user\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An array of successful account logins from this user during the last 90 days.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Login View",
      "method": "get",
      "endpoint": "profile/logins/:loginId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"datetime\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 1234,\n  \"ip\": \"192.0.2.0\",\n  \"restricted\": true,\n  \"username\": \"example_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested login object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Preferences View",
      "method": "get",
      "endpoint": "profile/preferences",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an object of user preferences.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "User Preferences Update",
      "method": "put",
      "endpoint": "profile/preferences",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an object of user preferences.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "SSH Keys List",
      "method": "get",
      "endpoint": "profile/sshkeys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"id\": 42,\n      \"label\": \"My SSH Key\",\n      \"ssh_key\": \"\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of SSH Key objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "SSH Key Add",
      "method": "post",
      "endpoint": "profile/sshkeys",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 42,\n  \"label\": \"My SSH Key\",\n  \"ssh_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SSH Key associated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "SSH Key Delete",
      "method": "delete",
      "endpoint": "profile/sshkeys/:sshKeyId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "SSH Key deleted successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "SSH Key View",
      "method": "get",
      "endpoint": "profile/sshkeys/:sshKeyId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 42,\n  \"label\": \"My SSH Key\",\n  \"ssh_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "An SSH Key object",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "SSH Key Update",
      "method": "put",
      "endpoint": "profile/sshkeys/:sshKeyId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"id\": 42,\n  \"label\": \"My SSH Key\",\n  \"ssh_key\": \"\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "SSH Key updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Two Factor Authentication Disable",
      "method": "post",
      "endpoint": "profile/tfa-disable",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "TFA disabled.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Two Factor Secret Create",
      "method": "post",
      "endpoint": "profile/tfa-enable",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"expiry\": {},\n  \"secret\": \"5FXX6KLACOC33GTC\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Two Factor secret generated",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Two Factor Authentication Confirm/Enable",
      "method": "post",
      "endpoint": "profile/tfa-enable-confirm",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"scratch\": \"sample two factor scratch\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "TFA enabled successfully",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Personal Access Tokens List",
      "method": "get",
      "endpoint": "profile/tokens",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": {},\n      \"expiry\": \"2018-01-01T13:46:32.000Z\",\n      \"id\": 123,\n      \"label\": \"linode-cli\",\n      \"scopes\": \"*\",\n      \"token\": \"abcdefghijklmnop\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of active tokens.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Personal Access Token Create",
      "method": "post",
      "endpoint": "profile/tokens",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": {},\n  \"expiry\": \"2018-01-01T13:46:32.000Z\",\n  \"id\": 123,\n  \"label\": \"linode-cli\",\n  \"scopes\": \"*\",\n  \"token\": \"abcdefghijklmnop\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Token created successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Personal Access Token Revoke",
      "method": "delete",
      "endpoint": "profile/tokens/:tokenId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Token revoked successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Personal Access Token View",
      "method": "get",
      "endpoint": "profile/tokens/:tokenId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": {},\n  \"expiry\": \"2018-01-01T13:46:32.000Z\",\n  \"id\": 123,\n  \"label\": \"linode-cli\",\n  \"scopes\": \"*\",\n  \"token\": \"abcdefghijklmnop\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The requested token.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Personal Access Token Update",
      "method": "put",
      "endpoint": "profile/tokens/:tokenId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": {},\n  \"expiry\": \"2018-01-01T13:46:32.000Z\",\n  \"id\": 123,\n  \"label\": \"linode-cli\",\n  \"scopes\": \"*\",\n  \"token\": \"abcdefghijklmnop\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Token updated successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Regions List",
      "method": "get",
      "endpoint": "regions",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"capabilities\": [\n        \"Linodes\",\n        \"NodeBalancers\",\n        \"Block Storage\",\n        \"Object Storage\"\n      ],\n      \"country\": \"us\",\n      \"id\": \"us-east\",\n      \"resolvers\": {\n        \"ipv4\": \"192.0.2.0,192.0.2.1\",\n        \"ipv6\": \"2001:0db8::,2001:0db8::1\"\n      },\n      \"status\": \"{{oneOf (array 'ok' 'outage')}}\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of Regions.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Region View",
      "method": "get",
      "endpoint": "regions/:regionId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"capabilities\": [\n    \"Linodes\",\n    \"NodeBalancers\",\n    \"Block Storage\",\n    \"Object Storage\"\n  ],\n  \"country\": \"us\",\n  \"id\": \"us-east\",\n  \"resolvers\": {\n    \"ipv4\": \"192.0.2.0,192.0.2.1\",\n    \"ipv6\": \"2001:0db8::,2001:0db8::1\"\n  },\n  \"status\": \"{{oneOf (array 'ok' 'outage')}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A single Region object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Support Tickets List",
      "method": "get",
      "endpoint": "support/tickets",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"attachments\": [\n        [\n          \"screenshot.jpg\",\n          \"screenshot.txt\"\n        ]\n      ],\n      \"closable\": {{faker 'random.boolean'}},\n      \"closed\": \"2015-06-04T16:07:03.000Z\",\n      \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n      \"entity\": {\n        \"id\": 10400,\n        \"label\": \"linode123456\",\n        \"type\": \"linode\",\n        \"url\": \"/v4/linode/instances/123456\"\n      },\n      \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n      \"id\": 11223344,\n      \"opened\": \"2015-06-04T14:16:44.000Z\",\n      \"opened_by\": \"some_user\",\n      \"status\": \"{{oneOf (array 'closed' 'new' 'open')}}\",\n      \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n      \"updated\": \"2015-06-04T16:07:03.000Z\",\n      \"updated_by\": \"some_other_user\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of SupportTicket objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Support Ticket Open",
      "method": "post",
      "endpoint": "support/tickets",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"attachments\": [\n    [\n      \"screenshot.jpg\",\n      \"screenshot.txt\"\n    ]\n  ],\n  \"closable\": {{faker 'random.boolean'}},\n  \"closed\": \"2015-06-04T16:07:03.000Z\",\n  \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n  \"entity\": {\n    \"id\": 10400,\n    \"label\": \"linode123456\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/123456\"\n  },\n  \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n  \"id\": 11223344,\n  \"opened\": \"2015-06-04T14:16:44.000Z\",\n  \"opened_by\": \"some_user\",\n  \"status\": \"{{oneOf (array 'closed' 'new' 'open')}}\",\n  \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n  \"updated\": \"2015-06-04T16:07:03.000Z\",\n  \"updated_by\": \"some_other_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Support Ticket opened.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Support Ticket View",
      "method": "get",
      "endpoint": "support/tickets/:ticketId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"attachments\": [\n    [\n      \"screenshot.jpg\",\n      \"screenshot.txt\"\n    ]\n  ],\n  \"closable\": {{faker 'random.boolean'}},\n  \"closed\": \"2015-06-04T16:07:03.000Z\",\n  \"description\": \"I'm having trouble setting the root password on my Linode. I tried following the instructions but something is not working and I'm not sure what I'm doing wrong. Can you please help me figure out how I can reset it?\\n\",\n  \"entity\": {\n    \"id\": 10400,\n    \"label\": \"linode123456\",\n    \"type\": \"linode\",\n    \"url\": \"/v4/linode/instances/123456\"\n  },\n  \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n  \"id\": 11223344,\n  \"opened\": \"2015-06-04T14:16:44.000Z\",\n  \"opened_by\": \"some_user\",\n  \"status\": \"{{oneOf (array 'closed' 'new' 'open')}}\",\n  \"summary\": \"Having trouble resetting root password on my Linode\\n\",\n  \"updated\": \"2015-06-04T16:07:03.000Z\",\n  \"updated_by\": \"some_other_user\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single SupportTicket object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Ticket Attachment Create",
      "method": "post",
      "endpoint": "support/tickets/:ticketId/attachments",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Attachment created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Support Ticket Close",
      "method": "post",
      "endpoint": "support/tickets/:ticketId/close",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Support Ticket closed successfully.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Replies List",
      "method": "get",
      "endpoint": "support/tickets/:ticketId/replies",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2015-06-02T14:31:41.000Z\",\n      \"created_by\": \"John Q. Linode\",\n      \"description\": \"Hello,\\\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\\\n \\\\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\\\n\\\\nIf you have, please reply with any additional steps you have also taken.\\\\n\\\\nRegards, Linode Support Team\\n\",\n      \"from_linode\": true,\n      \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n      \"id\": 11223345\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a paginated list of SupportTicketReply objects.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Reply Create",
      "method": "post",
      "endpoint": "support/tickets/:ticketId/replies",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2015-06-02T14:31:41.000Z\",\n  \"created_by\": \"John Q. Linode\",\n  \"description\": \"Hello,\\\\nI'm sorry to hear that you are having trouble resetting the root password of your Linode. Just to be sure, have you tried to follow the instructions in our online documentation? The link is here:\\\\n \\\\nhttps://linode.com/docs/quick-answers/linode-platform/reset-the-root-password-on-your-linode/ \\\\n\\\\nIf you have, please reply with any additional steps you have also taken.\\\\n\\\\nRegards, Linode Support Team\\n\",\n  \"from_linode\": true,\n  \"gravatar_id\": \"474a1b7373ae0be4132649e69c36ce30\",\n  \"id\": 11223345\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Reply created.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Tags List",
      "method": "get",
      "endpoint": "tags",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"label\": \"example tag\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of Tags",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "New Tag Create",
      "method": "post",
      "endpoint": "tags",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"label\": \"example tag\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The new Tag.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Tag Delete",
      "method": "delete",
      "endpoint": "tags/:label",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Tag deleted.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Tagged Objects List",
      "method": "get",
      "endpoint": "tags/:label",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"data\": {\n        \"alerts\": {\n          \"cpu\": 180,\n          \"io\": 10000,\n          \"network_in\": 10,\n          \"network_out\": 10,\n          \"transfer_quota\": 80\n        },\n        \"backups\": {\n          \"enabled\": true,\n          \"last_successful\": \"2018-01-01T00:01:01.000Z\",\n          \"schedule\": {\n            \"day\": \"{{oneOf (array 'Scheduling' 'Sunday' 'Monday' 'Tuesday' 'Wednesday' 'Thursday' 'Friday' 'Saturday')}}\",\n            \"window\": \"{{oneOf (array 'Scheduling' 'W0' 'W2' 'W4' 'W6' 'W8' 'W10' 'W12' 'W14' 'W16' 'W18' 'W20' 'W22')}}\"\n          }\n        },\n        \"created\": \"2018-01-01T00:01:01.000Z\",\n        \"group\": \"Linode-Group\",\n        \"hypervisor\": \"{{oneOf (array 'kvm')}}\",\n        \"id\": 123,\n        \"image\": \"linode/debian10\",\n        \"ipv4\": [\n          \"203.0.113.1\",\n          \"192.0.2.1\"\n        ],\n        \"ipv6\": \"c001:d00d::1337/128\",\n        \"label\": \"linode123\",\n        \"region\": \"us-east\",\n        \"specs\": {\n          \"disk\": 81920,\n          \"memory\": 4096,\n          \"transfer\": 4000,\n          \"vcpus\": 2\n        },\n        \"status\": \"{{oneOf (array 'running' 'offline' 'booting' 'rebooting' 'shutting_down' 'provisioning' 'deleting' 'migrating' 'rebuilding' 'cloning' 'restoring' 'stopped')}}\",\n        \"tags\": [\n          \"example tag\",\n          \"another example\"\n        ],\n        \"type\": \"g6-standard-1\",\n        \"updated\": \"2018-01-01T00:01:01.000Z\",\n        \"watchdog_enabled\": true\n      },\n      \"type\": \"linode\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "A paginated list of objects, organized by type, that have been tagged with the requested Tag.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volumes List",
      "method": "get",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"data\": [\n    {\n      \"created\": \"2018-01-01T00:01:01.000Z\",\n      \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n      \"id\": 12345,\n      \"label\": \"my-volume\",\n      \"linode_id\": 12346,\n      \"linode_label\": \"linode123\",\n      \"region\": \"us-east\",\n      \"size\": 30,\n      \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n      \"tags\": [\n        \"example tag\",\n        \"another example\"\n      ],\n      \"updated\": \"2018-01-01T00:01:01.000Z\"\n    }\n  ],\n  \"page\": 1,\n  \"pages\": 1,\n  \"results\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns an array of all Volumes on your Account.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Create",
      "method": "post",
      "endpoint": "volumes",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n  \"id\": 12345,\n  \"label\": \"my-volume\",\n  \"linode_id\": 12346,\n  \"linode_label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"size\": 30,\n  \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Creating Volume.\n",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Delete",
      "method": "delete",
      "endpoint": "volumes/:volumeId",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Volume deletion successful.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume View",
      "method": "get",
      "endpoint": "volumes/:volumeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n  \"id\": 12345,\n  \"label\": \"my-volume\",\n  \"linode_id\": 12346,\n  \"linode_label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"size\": 30,\n  \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Returns a single Volume object.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Update",
      "method": "put",
      "endpoint": "volumes/:volumeId",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n  \"id\": 12345,\n  \"label\": \"my-volume\",\n  \"linode_id\": 12346,\n  \"linode_label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"size\": 30,\n  \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "The updated Volume.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Attach",
      "method": "post",
      "endpoint": "volumes/:volumeId/attach",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n  \"id\": 12345,\n  \"label\": \"my-volume\",\n  \"linode_id\": 12346,\n  \"linode_label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"size\": 30,\n  \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Volume was attached to a Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Clone",
      "method": "post",
      "endpoint": "volumes/:volumeId/clone",
      "responses": [
        {
          "uuid": "",
          "body": "{\n  \"created\": \"2018-01-01T00:01:01.000Z\",\n  \"filesystem_path\": \"/dev/disk/by-id/scsi-0Linode_Volume_my-volume\",\n  \"id\": 12345,\n  \"label\": \"my-volume\",\n  \"linode_id\": 12346,\n  \"linode_label\": \"linode123\",\n  \"region\": \"us-east\",\n  \"size\": 30,\n  \"status\": \"{{oneOf (array 'creating' 'active' 'resizing' 'contact_support')}}\",\n  \"tags\": [\n    \"example tag\",\n    \"another example\"\n  ],\n  \"updated\": \"2018-01-01T00:01:01.000Z\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Clone started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Detach",
      "method": "post",
      "endpoint": "volumes/:volumeId/detach",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Volume was detached from a Linode.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    },
    {
      "uuid": "",
      "documentation": "Volume Resize",
      "method": "post",
      "endpoint": "volumes/:volumeId/resize",
      "responses": [
        {
          "uuid": "",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Volume resize started.",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        },
        {
          "uuid": "",
          "body": "{\n  \"errors\": [\n    {\n      \"field\": \"fieldname\",\n      \"reason\": \"fieldname must be a valid value\"\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Error",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "filePath": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false
        }
      ],
      "enabled": true,
      "randomResponse": false,
      "sequentialResponse": false
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "https": false,
  "cors": true,
  "headers": [],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ]
}
