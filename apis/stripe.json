{
  "source": "mockoon:1.15.0",
  "data": [
      {
          "type": "environment",
          "item": {
              "uuid": "",
              "lastMigration": 17,
              "name": "Stripe API",
              "endpointPrefix": "",
              "latency": 0,
              "port": 3000,
              "hostname": "0.0.0.0",
              "routes": [
                  {
                      "uuid": "",
                      "documentation": "<p>Initiate 3D Secure authentication.</p>",
                      "method": "post",
                      "endpoint": "v1/3d_secure",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a 3D Secure object.</p>",
                      "method": "get",
                      "endpoint": "v1/3d_secure/:three_d_secure",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>With <a href=\"/docs/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Accounts created using test-mode keys can be deleted at any time. Custom or Express accounts created using live-mode keys can only be deleted once all balances are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/account\">account information tab in your account settings</a> instead.</p>",
                      "method": "delete",
                      "endpoint": "v1/account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an account.</p>",
                      "method": "get",
                      "endpoint": "v1/account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a <a href=\"/docs/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are not supported for Standard accounts.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
                      "method": "post",
                      "endpoint": "v1/account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create an external account for a given account.</p>",
                      "method": "post",
                      "endpoint": "v1/account/bank_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified external account for a given account.</p>",
                      "method": "delete",
                      "endpoint": "v1/account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"currency\": \"\",\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'bank_account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a specified external account for a given account.</p>",
                      "method": "get",
                      "endpoint": "v1/account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
                      "method": "post",
                      "endpoint": "v1/account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/account/capabilities",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves information about the specified Account Capability.</p>",
                      "method": "get",
                      "endpoint": "v1/account/capabilities/:capability",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing Account Capability.</p>",
                      "method": "post",
                      "endpoint": "v1/account/capabilities/:capability",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List external accounts for an account.</p>",
                      "method": "get",
                      "endpoint": "v1/account/external_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create an external account for a given account.</p>",
                      "method": "post",
                      "endpoint": "v1/account/external_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified external account for a given account.</p>",
                      "method": "delete",
                      "endpoint": "v1/account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"currency\": \"\",\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'bank_account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a specified external account for a given account.</p>",
                      "method": "get",
                      "endpoint": "v1/account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
                      "method": "post",
                      "endpoint": "v1/account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
                      "method": "post",
                      "endpoint": "v1/account/login_links",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"object\": \"{{oneOf (array 'login_link')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/account/people",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new person.</p>",
                      "method": "post",
                      "endpoint": "v1/account/people",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
                      "method": "delete",
                      "endpoint": "v1/account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'person')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing person.</p>",
                      "method": "get",
                      "endpoint": "v1/account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing person.</p>",
                      "method": "post",
                      "endpoint": "v1/account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/account/persons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new person.</p>",
                      "method": "post",
                      "endpoint": "v1/account/persons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
                      "method": "delete",
                      "endpoint": "v1/account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'person')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing person.</p>",
                      "method": "get",
                      "endpoint": "v1/account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing person.</p>",
                      "method": "post",
                      "endpoint": "v1/account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>",
                      "method": "post",
                      "endpoint": "v1/account_links",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"expires_at\": {{faker 'random.number'}},\n  \"object\": \"{{oneOf (array 'account_link')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of accounts connected to your platform via <a href=\"/docs/connect\">Connect</a>. If you’re not a platform, the list is empty.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>With <a href=\"/docs/connect\">Connect</a>, you can create Stripe accounts for your users.\nTo do this, you’ll first need to <a href=\"https://dashboard.stripe.com/account/applications/settings\">register your platform</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>With <a href=\"/docs/connect\">Connect</a>, you can delete accounts you manage.</p>\n\n<p>Accounts created using test-mode keys can be deleted at any time. Custom or Express accounts created using live-mode keys can only be deleted once all balances are zero.</p>\n\n<p>If you want to delete your own account, use the <a href=\"https://dashboard.stripe.com/account\">account information tab in your account settings</a> instead.</p>",
                      "method": "delete",
                      "endpoint": "v1/accounts/:account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an account.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a <a href=\"/docs/connect/accounts\">connected account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are not supported for Standard accounts.</p>\n\n<p>To update your own account, use the <a href=\"https://dashboard.stripe.com/account\">Dashboard</a>. Refer to our <a href=\"/docs/connect/updating-accounts\">Connect</a> documentation to learn more about updating accounts.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create an external account for a given account.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/bank_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified external account for a given account.</p>",
                      "method": "delete",
                      "endpoint": "v1/accounts/:account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"currency\": \"\",\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'bank_account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a specified external account for a given account.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/capabilities",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves information about the specified Account Capability.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/capabilities/:capability",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing Account Capability.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/capabilities/:capability",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List external accounts for an account.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/external_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create an external account for a given account.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/external_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified external account for a given account.</p>",
                      "method": "delete",
                      "endpoint": "v1/accounts/:account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"currency\": \"\",\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'bank_account')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a specified external account for a given account.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata, account holder name, account holder type of a bank account belonging to a <a href=\"/docs/connect/custom-accounts\">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>\n\n<p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/external_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>\n\n<p><strong>You may only create login links for <a href=\"/docs/connect/express-accounts\">Express accounts</a> connected to your platform</strong>.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/login_links",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"object\": \"{{oneOf (array 'login_link')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/people",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new person.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/people",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
                      "method": "delete",
                      "endpoint": "v1/accounts/:account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'person')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing person.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing person.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/people/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/persons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new person.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/persons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>",
                      "method": "delete",
                      "endpoint": "v1/accounts/:account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'person')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing person.</p>",
                      "method": "get",
                      "endpoint": "v1/accounts/:account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing person.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/persons/:person",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>With <a href=\"/docs/connect\">Connect</a>, you may flag accounts as suspicious.</p>\n\n<p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>",
                      "method": "post",
                      "endpoint": "v1/accounts/:account/reject",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List apple pay domains.</p>",
                      "method": "get",
                      "endpoint": "v1/apple_pay/domains",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"created\": {{faker 'random.number'}},\n      \"domain_name\": \"\",\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'apple_pay_domain')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create an apple pay domain.</p>",
                      "method": "post",
                      "endpoint": "v1/apple_pay/domains",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"domain_name\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'apple_pay_domain')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete an apple pay domain.</p>",
                      "method": "delete",
                      "endpoint": "v1/apple_pay/domains/:domain",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'apple_pay_domain')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve an apple pay domain.</p>",
                      "method": "get",
                      "endpoint": "v1/apple_pay/domains/:domain",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"domain_name\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'apple_pay_domain')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/application_fees",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>",
                      "method": "get",
                      "endpoint": "v1/application_fees/:fee/refunds/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata as an argument.</p>",
                      "method": "post",
                      "endpoint": "v1/application_fees/:fee/refunds/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>",
                      "method": "get",
                      "endpoint": "v1/application_fees/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "",
                      "method": "post",
                      "endpoint": "v1/application_fees/:id/refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
                      "method": "get",
                      "endpoint": "v1/application_fees/:id/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Refunds an application fee that has previously been collected but not yet refunded.\nFunds will be refunded to the Stripe account from which the fee was originally collected.</p>\n\n<p>You can optionally refund only part of an application fee.\nYou can do so multiple times, until the entire fee has been refunded.</p>\n\n<p>Once entirely refunded, an application fee can’t be refunded again.\nThis method will raise an error when called on an already-refunded application fee,\nor when trying to refund more money than is left on an application fee.</p>",
                      "method": "post",
                      "endpoint": "v1/application_fees/:id/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the current account balance, based on the authentication that was used to make the request.\n For a sample request, see <a href=\"/docs/connect/account-balances#accounting-for-negative-balances\">Accounting for negative balances</a>.</p>",
                      "method": "get",
                      "endpoint": "v1/balance",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"object\": \"balance\",\r\n  \"available\": [\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -999999 max = 999999}},\r\n      \"currency\": \"nzd\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"czk\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"aud\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"usd\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"eur\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"cad\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"gbp\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"jpy\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"brl\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"sek\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    }\r\n  ],\r\n  \"connect_reserved\": [\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"nzd\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"czk\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"aud\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"usd\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"eur\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"cad\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"gbp\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"jpy\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"brl\"\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"sek\"\r\n    }\r\n  ],\r\n  \"livemode\": {{faker 'random.boolean'}},\r\n  \"pending\": [\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"nzd\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"czk\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"aud\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"usd\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"eur\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"cad\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"gbp\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"jpy\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"brl\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    },\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n      \"currency\": \"sek\",\r\n      \"source_types\": {\r\n        \"bank_account\": {{faker 'random.number' min = -99999999 max = 99999999}},\r\n        \"card\": {{faker 'random.number' min = -99999999 max = 99999999}}\r\n      }\r\n    }\r\n  ]\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>",
                      "method": "get",
                      "endpoint": "v1/balance/history",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>",
                      "method": "get",
                      "endpoint": "v1/balance/history/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>\n\n<p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>",
                      "method": "get",
                      "endpoint": "v1/balance_transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"object\": \"list\",\r\n  \"url\": \"/v1/balance_transactions\",\r\n  \"has_more\": {{oneOf (array true false)}},\r\n  \"data\": [\r\n    {{#repeat 10}}\r\n\r\n  {\r\n    \"id\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n    \"object\": \"balance_transaction\",\r\n    \"amount\": {{faker 'random.number' min = -999999 max = 999999}},\r\n    \"available_on\": {{faker 'random.number' max = 2147483647}},\r\n    \"created\": {{faker 'random.number' max = 2147483647}},\r\n    \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n    \"description\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}} for {{faker 'internet.email'}}\",\r\n    \"exchange_rate\": null,\r\n    \"fee\": {{faker 'random.number' min = -999 max = 999}},\r\n    \"fee_details\": [\r\n      {\r\n        \"amount\": {{faker 'random.number' min = -999 max = 999}},\r\n        \"application\": null,\r\n        \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n        \"description\": \"{{oneOf (array 'Stripe processing fees' 'Application processing fee' 'Tax fee')}}\",\r\n        \"type\": \"{{oneOf (array 'application_fee' 'stripe_fee' 'tax')}}\"\r\n      }\r\n    ],\r\n    \"net\": {{faker 'random.number' min = -999999 max = 999999}},\r\n    \"reporting_category\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}}\",\r\n    \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n    \"status\": \"{{oneOf (array 'available' 'pending')}}\",\r\n    \"type\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}}\"\r\n  }{{/repeat}}\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the balance transaction with the given ID.</p>\n\n<p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>",
                      "method": "get",
                      "endpoint": "v1/balance_transactions/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"id\": \"{{urlParam 'id'}}\",\r\n  \"object\": \"balance_transaction\",\r\n  \"amount\": {{faker 'random.number' min = -999999 max = 999999}},\r\n  \"available_on\": {{faker 'random.number' max = 2147483647}},\r\n  \"created\": {{faker 'random.number' max = 2147483647}},\r\n  \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n  \"description\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}} for {{faker 'internet.email'}}\",\r\n  \"exchange_rate\": null,\r\n  \"fee\": {{faker 'random.number' max = 999}},\r\n  \"fee_details\": [\r\n    {\r\n      \"amount\": {{faker 'random.number' min = -999 max = 999}},\r\n      \"application\": null,\r\n      \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n      \"description\": \"{{oneOf (array 'Stripe processing fees' 'Application processing fee' 'Tax fee')}}\",\r\n      \"type\": \"{{oneOf (array 'application_fee' 'stripe_fee' 'tax')}}\"\r\n    }\r\n  ],\r\n  \"net\": {{faker 'random.number' min = -999999 max = 999999}},\r\n  \"reporting_category\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}}\",\r\n  \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"status\": \"{{oneOf (array 'available' 'pending')}}\",\r\n  \"type\": \"{{oneOf (array 'adjustement' 'advance' 'advance_funding' 'anticipation_repayment' 'application_fee' 'application_fee_refund' 'charge' 'connect_collection_transfer' 'contribution' 'issuing_authorization_hold' 'issuing_authorization_release' 'issuing_dispute' 'issuing_transaction' 'payment_failure_refund' 'payment' 'payment_refund' 'payout' 'payout_cancel' 'payout_failure' 'refund' 'refund_failure' 'reserve_transaction' 'reserved_funds' 'stripe_fee' 'stripe_fx_fee' 'tax_fee' 'topup' 'topup_reversal' 'transfer' 'transfer_cancel' 'transfer_failure' 'transfer_refund')}}\"\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of configurations that describe the functionality of the customer portal.</p>",
                      "method": "get",
                      "endpoint": "v1/billing_portal/configurations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"application\": \"\",\n      \"business_profile\": {\n        \"headline\": \"\",\n        \"privacy_policy_url\": \"\",\n        \"terms_of_service_url\": \"\"\n      },\n      \"created\": {{faker 'random.number'}},\n      \"default_return_url\": \"\",\n      \"features\": {\n        \"customer_update\": {\n          \"allowed_updates\": [\n            \"{{oneOf (array 'address' 'email' 'phone' 'shipping' 'tax_id')}}\"\n          ],\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"invoice_history\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"payment_method_update\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subscription_cancel\": {\n          \"enabled\": {{faker 'random.boolean'}},\n          \"mode\": \"{{oneOf (array 'at_period_end' 'immediately')}}\",\n          \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n        },\n        \"subscription_pause\": {\n          \"enabled\": {{faker 'random.boolean'}}\n        },\n        \"subscription_update\": {\n          \"default_allowed_updates\": [\n            \"{{oneOf (array 'price' 'promotion_code' 'quantity')}}\"\n          ],\n          \"enabled\": {{faker 'random.boolean'}},\n          \"products\": [\n            {\n              \"prices\": [\n                \"\"\n              ],\n              \"product\": \"\"\n            }\n          ],\n          \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n        }\n      },\n      \"id\": \"\",\n      \"is_default\": {{faker 'random.boolean'}},\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'billing_portal.configuration')}}\",\n      \"updated\": {{faker 'random.number'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a configuration that describes the functionality and behavior of a PortalSession</p>",
                      "method": "post",
                      "endpoint": "v1/billing_portal/configurations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"application\": \"\",\n  \"business_profile\": {\n    \"headline\": \"\",\n    \"privacy_policy_url\": \"\",\n    \"terms_of_service_url\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"default_return_url\": \"\",\n  \"features\": {\n    \"customer_update\": {\n      \"allowed_updates\": [\n        \"{{oneOf (array 'address' 'email' 'phone' 'shipping' 'tax_id')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"invoice_history\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"payment_method_update\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_cancel\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"mode\": \"{{oneOf (array 'at_period_end' 'immediately')}}\",\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    },\n    \"subscription_pause\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_update\": {\n      \"default_allowed_updates\": [\n        \"{{oneOf (array 'price' 'promotion_code' 'quantity')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}},\n      \"products\": [\n        {\n          \"prices\": [\n            \"\"\n          ],\n          \"product\": \"\"\n        }\n      ],\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'billing_portal.configuration')}}\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a configuration that describes the functionality of the customer portal.</p>",
                      "method": "get",
                      "endpoint": "v1/billing_portal/configurations/:configuration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"application\": \"\",\n  \"business_profile\": {\n    \"headline\": \"\",\n    \"privacy_policy_url\": \"\",\n    \"terms_of_service_url\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"default_return_url\": \"\",\n  \"features\": {\n    \"customer_update\": {\n      \"allowed_updates\": [\n        \"{{oneOf (array 'address' 'email' 'phone' 'shipping' 'tax_id')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"invoice_history\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"payment_method_update\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_cancel\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"mode\": \"{{oneOf (array 'at_period_end' 'immediately')}}\",\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    },\n    \"subscription_pause\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_update\": {\n      \"default_allowed_updates\": [\n        \"{{oneOf (array 'price' 'promotion_code' 'quantity')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}},\n      \"products\": [\n        {\n          \"prices\": [\n            \"\"\n          ],\n          \"product\": \"\"\n        }\n      ],\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'billing_portal.configuration')}}\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a configuration that describes the functionality of the customer portal.</p>",
                      "method": "post",
                      "endpoint": "v1/billing_portal/configurations/:configuration",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"application\": \"\",\n  \"business_profile\": {\n    \"headline\": \"\",\n    \"privacy_policy_url\": \"\",\n    \"terms_of_service_url\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"default_return_url\": \"\",\n  \"features\": {\n    \"customer_update\": {\n      \"allowed_updates\": [\n        \"{{oneOf (array 'address' 'email' 'phone' 'shipping' 'tax_id')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"invoice_history\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"payment_method_update\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_cancel\": {\n      \"enabled\": {{faker 'random.boolean'}},\n      \"mode\": \"{{oneOf (array 'at_period_end' 'immediately')}}\",\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    },\n    \"subscription_pause\": {\n      \"enabled\": {{faker 'random.boolean'}}\n    },\n    \"subscription_update\": {\n      \"default_allowed_updates\": [\n        \"{{oneOf (array 'price' 'promotion_code' 'quantity')}}\"\n      ],\n      \"enabled\": {{faker 'random.boolean'}},\n      \"products\": [\n        {\n          \"prices\": [\n            \"\"\n          ],\n          \"product\": \"\"\n        }\n      ],\n      \"proration_behavior\": \"{{oneOf (array 'always_invoice' 'create_prorations' 'none')}}\"\n    }\n  },\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'billing_portal.configuration')}}\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a session of the customer portal.</p>",
                      "method": "post",
                      "endpoint": "v1/billing_portal/sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"configuration\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"customer\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"locale\": \"{{oneOf (array 'auto' 'bg' 'cs' 'da' 'de' 'el' 'en' 'en-AU' 'en-CA' 'en-GB' 'en-IE' 'en-IN' 'en-NZ' 'en-SG' 'es' 'es-419' 'et' 'fi' 'fil' 'fr' 'fr-CA' 'hr' 'hu' 'id' 'it' 'ja' 'ko' 'lt' 'lv' 'ms' 'mt' 'nb' 'nl' 'pl' 'pt' 'pt-BR' 'ro' 'ru' 'sk' 'sl' 'sv' 'th' 'tr' 'vi' 'zh' 'zh-HK' 'zh-TW')}}\",\n  \"object\": \"{{oneOf (array 'billing_portal.session')}}\",\n  \"on_behalf_of\": \"\",\n  \"return_url\": \"\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/bitcoin/receivers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"amount\": {{faker 'random.number'}},\n      \"amount_received\": {{faker 'random.number'}},\n      \"bitcoin_amount\": {{faker 'random.number'}},\n      \"bitcoin_amount_received\": {{faker 'random.number'}},\n      \"bitcoin_uri\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"customer\": \"\",\n      \"description\": \"\",\n      \"email\": \"\",\n      \"filled\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"inbound_address\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'bitcoin_receiver')}}\",\n      \"payment\": \"\",\n      \"refund_address\": \"\",\n      \"transactions\": {\n        \"data\": [\n          {\n            \"amount\": {{faker 'random.number'}},\n            \"bitcoin_amount\": {{faker 'random.number'}},\n            \"created\": {{faker 'random.number'}},\n            \"currency\": \"\",\n            \"id\": \"\",\n            \"object\": \"{{oneOf (array 'bitcoin_transaction')}}\",\n            \"receiver\": \"\"\n          }\n        ],\n        \"has_more\": {{faker 'random.boolean'}},\n        \"object\": \"{{oneOf (array 'list')}}\",\n        \"url\": \"\"\n      },\n      \"uncaptured_funds\": {{faker 'random.boolean'}},\n      \"used_for_payment\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the Bitcoin receiver with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/bitcoin/receivers/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"amount\": {{faker 'random.number'}},\n  \"amount_received\": {{faker 'random.number'}},\n  \"bitcoin_amount\": {{faker 'random.number'}},\n  \"bitcoin_amount_received\": {{faker 'random.number'}},\n  \"bitcoin_uri\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"customer\": \"\",\n  \"description\": \"\",\n  \"email\": \"\",\n  \"filled\": {{faker 'random.boolean'}},\n  \"id\": \"\",\n  \"inbound_address\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'bitcoin_receiver')}}\",\n  \"payment\": \"\",\n  \"refund_address\": \"\",\n  \"transactions\": {\n    \"data\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"bitcoin_amount\": {{faker 'random.number'}},\n        \"created\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"id\": \"\",\n        \"object\": \"{{oneOf (array 'bitcoin_transaction')}}\",\n        \"receiver\": \"\"\n      }\n    ],\n    \"has_more\": {{faker 'random.boolean'}},\n    \"object\": \"{{oneOf (array 'list')}}\",\n    \"url\": \"\"\n  },\n  \"uncaptured_funds\": {{faker 'random.boolean'}},\n  \"used_for_payment\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List bitcoin transacitons for a given receiver.</p>",
                      "method": "get",
                      "endpoint": "v1/bitcoin/receivers/:receiver/transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"amount\": {{faker 'random.number'}},\n      \"bitcoin_amount\": {{faker 'random.number'}},\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"object\": \"{{oneOf (array 'bitcoin_transaction')}}\",\n      \"receiver\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List bitcoin transacitons for a given receiver.</p>",
                      "method": "get",
                      "endpoint": "v1/bitcoin/transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"amount\": {{faker 'random.number'}},\n      \"bitcoin_amount\": {{faker 'random.number'}},\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"object\": \"{{oneOf (array 'bitcoin_transaction')}}\",\n      \"receiver\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/charges",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"object\": \"list\",\r\n  \"url\": \"/v1/charges\",\r\n  \"has_more\": false,\r\n  \"data\": [\r\n    {{#repeat 10}}\r\n    \r\n    {\r\n      \"id\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"object\": \"charge\",\r\n      \"amount\": {{faker 'random.number' max = 99999999}},\r\n      \"amount_captured\": {{faker 'random.number' max = 99999999}},\r\n      \"amount_refunded\": {{faker 'random.number' max = 99999999}},\r\n      \"application\": null,\r\n      \"application_fee\": null,\r\n      \"application_fee_amount\": null,\r\n      \"balance_transaction\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"billing_details\": {\r\n        \"address\": {\r\n          \"city\": \"{{faker 'address.city'}}\",\r\n          \"country\": \"{{faker 'address.countryCode'}}\",\r\n          \"line1\": null,\r\n          \"line2\": null,\r\n          \"postal_code\": \"{{faker 'address.zipCode'}}\",\r\n          \"state\": \"{{faker 'address.county'}}\"\r\n        },\r\n        \"email\": \"{{faker 'internet.email'}}\",\r\n        \"name\": \"{{faker 'name.firstName'}} {{faker 'name.lastName'}}\",\r\n        \"phone\": \"{{faker 'phone.phoneNumber'}}\"\r\n      },\r\n      \"calculated_statement_descriptor\": null,\r\n      \"captured\": {{oneOf (array true false)}},\r\n      \"created\": {{faker 'random.number' max = 2147483647}},,\r\n      \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n      \"customer\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"description\": \"My Test Charge using Mockoon\",\r\n      \"disputed\": {{oneOf (array true false)}},\r\n      \"failure_code\": null,\r\n      \"failure_message\": null,\r\n      \"fraud_details\": {},\r\n      \"invoice\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"livemode\": {{oneOf (array true false)}},\r\n      \"metadata\": {},\r\n      \"on_behalf_of\": null,\r\n      \"order\": null,\r\n      \"outcome\": null,\r\n      \"paid\": {{oneOf (array true false)}},\r\n      \"payment_intent\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"payment_method\": \"card_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"payment_method_details\": {\r\n        \"card\": {\r\n          \"brand\": \"{{oneOf (array 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n          \"checks\": {\r\n            \"address_line1_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n            \"address_postal_code_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n            \"cvc_check\": \"{{oneOf (array 'checked' 'unchecked')}}\"\r\n          },\r\n          \"country\": \"{{faker 'address.countryCode'}}\",\r\n          \"exp_month\": {{faker 'random.number' max = 12}},\r\n          \"exp_year\": {{faker 'random.number' min = 2000 max = 2021}},\r\n          \"fingerprint\": \"Xt5EWLLDS7FJjR1c\",\r\n          \"funding\": \"credit\",\r\n          \"installments\": null,\r\n          \"last4\": \"{{faker 'random.number' max = 9999}}\",\r\n          \"network\": \"{{oneOf (array 'cartes_bancaires' 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n          \"three_d_secure\": null,\r\n          \"wallet\": null\r\n        },\r\n        \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'stripe_account' 'wechat')}}\"\r\n      },\r\n      \"receipt_email\": \"{{faker 'internet.email'}}\",\r\n      \"receipt_number\": {{faker 'random.number'}},\r\n      \"receipt_url\": \"https://pay.stripe.com/receipts/acct_{{faker 'random.alphaNumeric' 25}}/ch_{{faker 'random.alphaNumeric' 25}}/rcpt_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"refunded\": {{oneOf (array true false)}},\r\n      \"refunds\": {\r\n        \"object\": \"list\",\r\n        \"data\": [],\r\n        \"has_more\": {{oneOf (array true false)}},\r\n        \"url\": \"/v1/charges/ch_{{faker 'random.alphaNumeric' 25}}/refunds\"\r\n      },\r\n      \"review\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n      \"shipping\": null,\r\n      \"source_transfer\": null,\r\n      \"statement_descriptor\": null,\r\n      \"statement_descriptor_suffix\": null,\r\n      \"status\": \"{{oneOf (array 'succeeded' 'pending' 'failed')}}\",\r\n      \"transfer_data\": null,\r\n      \"transfer_group\": null\r\n    }{{/repeat}}\r\n  ]\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>To charge a credit card or other payment source, you create a <code>Charge</code> object. If your API key is in test mode, the supplied payment source (e.g., card) won’t actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).</p>",
                      "method": "post",
                      "endpoint": "v1/charges",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"id\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"object\": \"charge\",\r\n  \"amount\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_captured\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_refunded\": {{faker 'random.number' max = 99999999}},\r\n  \"application\": null,\r\n  \"application_fee\": null,\r\n  \"application_fee_amount\": null,\r\n  \"balance_transaction\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"billing_details\": {\r\n    \"address\": {\r\n      \"city\": \"{{faker 'address.city'}}\",\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"line1\": null,\r\n      \"line2\": null,\r\n      \"postal_code\": \"{{faker 'address.zipCode'}}\",\r\n      \"state\": \"{{faker 'address.county'}}\"\r\n    },\r\n    \"email\": \"{{faker 'internet.email'}}\",\r\n    \"name\": \"{{faker 'name.firstName'}} {{faker 'name.lastName'}}\",\r\n    \"phone\": \"{{faker 'phone.phoneNumber'}}\"\r\n  },\r\n  \"calculated_statement_descriptor\": null,\r\n  \"captured\": {{oneOf (array true false)}},\r\n  \"created\": {{faker 'random.number' max = 2147483647}},,\r\n  \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n  \"customer\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"description\": \"My Test Charge using Mockoon\",\r\n  \"disputed\": {{oneOf (array true false)}},\r\n  \"failure_code\": null,\r\n  \"failure_message\": null,\r\n  \"fraud_details\": {},\r\n  \"invoice\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"livemode\": {{oneOf (array true false)}},\r\n  \"metadata\": {},\r\n  \"on_behalf_of\": null,\r\n  \"order\": null,\r\n  \"outcome\": null,\r\n  \"paid\": {{oneOf (array true false)}},\r\n  \"payment_intent\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method\": \"card_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method_details\": {\r\n    \"card\": {\r\n      \"brand\": \"{{oneOf (array 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"checks\": {\r\n        \"address_line1_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"address_postal_code_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"cvc_check\": \"{{oneOf (array 'checked' 'unchecked')}}\"\r\n      },\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"exp_month\": {{faker 'random.number' max = 12}},\r\n      \"exp_year\": {{faker 'random.number' min = 2000 max = 2021}},\r\n      \"fingerprint\": \"Xt5EWLLDS7FJjR1c\",\r\n      \"funding\": \"credit\",\r\n      \"installments\": null,\r\n      \"last4\": \"{{faker 'random.number' max = 9999}}\",\r\n      \"network\": \"{{oneOf (array 'cartes_bancaires' 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"three_d_secure\": null,\r\n      \"wallet\": null\r\n    },\r\n    \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'stripe_account' 'wechat')}}\"\r\n  },\r\n  \"receipt_email\": \"{{faker 'internet.email'}}\",\r\n  \"receipt_number\": {{faker 'random.number'}},\r\n  \"receipt_url\": \"https://pay.stripe.com/receipts/acct_{{faker 'random.alphaNumeric' 25}}/ch_{{faker 'random.alphaNumeric' 25}}/rcpt_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"refunded\": {{oneOf (array true false)}},\r\n  \"refunds\": {\r\n    \"object\": \"list\",\r\n    \"data\": [],\r\n    \"has_more\": {{oneOf (array true false)}},\r\n    \"url\": \"/v1/charges/ch_{{faker 'random.alphaNumeric' 25}}/refunds\"\r\n  },\r\n  \"review\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"shipping\": null,\r\n  \"source_transfer\": null,\r\n  \"statement_descriptor\": null,\r\n  \"statement_descriptor_suffix\": null,\r\n  \"status\": \"{{oneOf (array 'succeeded' 'pending' 'failed')}}\",\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null,\r\n  \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\"\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>",
                      "method": "get",
                      "endpoint": "v1/charges/:charge",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"id\": \"{{urlParam 'id'}}\",\r\n  \"object\": \"charge\",\r\n  \"amount\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_captured\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_refunded\": {{faker 'random.number' max = 99999999}},\r\n  \"application\": null,\r\n  \"application_fee\": null,\r\n  \"application_fee_amount\": null,\r\n  \"balance_transaction\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"billing_details\": {\r\n    \"address\": {\r\n      \"city\": \"{{faker 'address.city'}}\",\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"line1\": null,\r\n      \"line2\": null,\r\n      \"postal_code\": \"{{faker 'address.zipCode'}}\",\r\n      \"state\": \"{{faker 'address.county'}}\"\r\n    },\r\n    \"email\": \"{{faker 'internet.email'}}\",\r\n    \"name\": \"{{faker 'name.firstName'}} {{faker 'name.lastName'}}\",\r\n    \"phone\": \"{{faker 'phone.phoneNumber'}}\"\r\n  },\r\n  \"calculated_statement_descriptor\": null,\r\n  \"captured\": {{oneOf (array true false)}},\r\n  \"created\": {{faker 'random.number' max = 2147483647}},,\r\n  \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n  \"customer\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"description\": \"My Test Charge using Mockoon\",\r\n  \"disputed\": {{oneOf (array true false)}},\r\n  \"failure_code\": null,\r\n  \"failure_message\": null,\r\n  \"fraud_details\": {},\r\n  \"invoice\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"livemode\": {{oneOf (array true false)}},\r\n  \"metadata\": {},\r\n  \"on_behalf_of\": null,\r\n  \"order\": null,\r\n  \"outcome\": null,\r\n  \"paid\": {{oneOf (array true false)}},\r\n  \"payment_intent\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method\": \"card_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method_details\": {\r\n    \"card\": {\r\n      \"brand\": \"{{oneOf (array 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"checks\": {\r\n        \"address_line1_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"address_postal_code_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"cvc_check\": \"{{oneOf (array 'checked' 'unchecked')}}\"\r\n      },\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"exp_month\": {{faker 'random.number' max = 12}},\r\n      \"exp_year\": {{faker 'random.number' min = 2000 max = 2021}},\r\n      \"fingerprint\": \"Xt5EWLLDS7FJjR1c\",\r\n      \"funding\": \"credit\",\r\n      \"installments\": null,\r\n      \"last4\": \"{{faker 'random.number' max = 9999}}\",\r\n      \"network\": \"{{oneOf (array 'cartes_bancaires' 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"three_d_secure\": null,\r\n      \"wallet\": null\r\n    },\r\n    \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'stripe_account' 'wechat')}}\"\r\n  },\r\n  \"receipt_email\": \"{{faker 'internet.email'}}\",\r\n  \"receipt_number\": {{faker 'random.number'}},\r\n  \"receipt_url\": \"https://pay.stripe.com/receipts/acct_{{faker 'random.alphaNumeric' 25}}/{{urlParam 'id'}}/rcpt_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"refunded\": {{oneOf (array true false)}},\r\n  \"refunds\": {\r\n    \"object\": \"list\",\r\n    \"data\": [],\r\n    \"has_more\": {{oneOf (array true false)}},\r\n    \"url\": \"/v1/charges/{{urlParam 'id'}}/refunds\"\r\n  },\r\n  \"review\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"shipping\": null,\r\n  \"source_transfer\": null,\r\n  \"statement_descriptor\": null,\r\n  \"statement_descriptor_suffix\": null,\r\n  \"status\": \"{{oneOf (array 'succeeded' 'pending' 'failed')}}\",\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null,\r\n  \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\"\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/charges/:charge",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"id\": \"{{urlParam 'id'}}\",\r\n  \"object\": \"charge\",\r\n  \"amount\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_captured\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_refunded\": {{faker 'random.number' max = 99999999}},\r\n  \"application\": null,\r\n  \"application_fee\": null,\r\n  \"application_fee_amount\": null,\r\n  \"balance_transaction\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"billing_details\": {\r\n    \"address\": {\r\n      \"city\": \"{{faker 'address.city'}}\",\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"line1\": null,\r\n      \"line2\": null,\r\n      \"postal_code\": \"{{faker 'address.zipCode'}}\",\r\n      \"state\": \"{{faker 'address.county'}}\"\r\n    },\r\n    \"email\": \"{{faker 'internet.email'}}\",\r\n    \"name\": \"{{faker 'name.firstName'}} {{faker 'name.lastName'}}\",\r\n    \"phone\": \"{{faker 'phone.phoneNumber'}}\"\r\n  },\r\n  \"calculated_statement_descriptor\": null,\r\n  \"captured\": {{oneOf (array true false)}},\r\n  \"created\": {{faker 'random.number' max = 2147483647}},,\r\n  \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n  \"customer\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"description\": \"My Test Charge using Mockoon\",\r\n  \"disputed\": {{oneOf (array true false)}},\r\n  \"failure_code\": null,\r\n  \"failure_message\": null,\r\n  \"fraud_details\": {},\r\n  \"invoice\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"livemode\": {{oneOf (array true false)}},\r\n  \"metadata\": {\r\n    \"order_id\": \"{{faker 'random.number'}}\"\r\n  },\r\n  \"on_behalf_of\": null,\r\n  \"order\": null,\r\n  \"outcome\": null,\r\n  \"paid\": {{oneOf (array true false)}},\r\n  \"payment_intent\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method\": \"card_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method_details\": {\r\n    \"card\": {\r\n      \"brand\": \"{{oneOf (array 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"checks\": {\r\n        \"address_line1_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"address_postal_code_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"cvc_check\": \"{{oneOf (array 'checked' 'unchecked')}}\"\r\n      },\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"exp_month\": {{faker 'random.number' max = 12}},\r\n      \"exp_year\": {{faker 'random.number' min = 2000 max = 2021}},\r\n      \"fingerprint\": \"Xt5EWLLDS7FJjR1c\",\r\n      \"funding\": \"credit\",\r\n      \"installments\": null,\r\n      \"last4\": \"{{faker 'random.number' max = 9999}}\",\r\n      \"network\": \"{{oneOf (array 'cartes_bancaires' 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"three_d_secure\": null,\r\n      \"wallet\": null\r\n    },\r\n    \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'stripe_account' 'wechat')}}\"\r\n  },\r\n  \"receipt_email\": \"{{faker 'internet.email'}}\",\r\n  \"receipt_number\": {{faker 'random.number'}},\r\n  \"receipt_url\": \"https://pay.stripe.com/receipts/acct_{{faker 'random.alphaNumeric' 25}}/{{urlParam 'id'}}/rcpt_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"refunded\": {{oneOf (array true false)}},\r\n  \"refunds\": {\r\n    \"object\": \"list\",\r\n    \"data\": [],\r\n    \"has_more\": {{oneOf (array true false)}},\r\n    \"url\": \"/v1/charges/{{urlParam 'id'}}/refunds\"\r\n  },\r\n  \"review\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"shipping\": null,\r\n  \"source_transfer\": null,\r\n  \"statement_descriptor\": null,\r\n  \"statement_descriptor_suffix\": null,\r\n  \"status\": \"{{oneOf (array 'succeeded' 'pending' 'failed')}}\",\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null,\r\n  \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\"\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href=\"#create_charge\">created a charge</a> with the capture option set to false.</p>\n\n<p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/capture",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\r\n  \"id\": \"{{urlParam 'id'}}\",\r\n  \"object\": \"charge\",\r\n  \"amount\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_captured\": {{faker 'random.number' max = 99999999}},\r\n  \"amount_refunded\": {{faker 'random.number' max = 99999999}},\r\n  \"application\": null,\r\n  \"application_fee\": null,\r\n  \"application_fee_amount\": null,\r\n  \"balance_transaction\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"billing_details\": {\r\n    \"address\": {\r\n      \"city\": \"{{faker 'address.city'}}\",\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"line1\": null,\r\n      \"line2\": null,\r\n      \"postal_code\": \"{{faker 'address.zipCode'}}\",\r\n      \"state\": \"{{faker 'address.county'}}\"\r\n    },\r\n    \"email\": \"{{faker 'internet.email'}}\",\r\n    \"name\": \"{{faker 'name.firstName'}} {{faker 'name.lastName'}}\",\r\n    \"phone\": \"{{faker 'phone.phoneNumber'}}\"\r\n  },\r\n  \"calculated_statement_descriptor\": null,\r\n  \"captured\": {{oneOf (array true false)}},\r\n  \"created\": {{faker 'random.number' max = 2147483647}},,\r\n  \"currency\": \"{{oneOf (array 'nzd' 'czk' 'aud' 'usd' 'eur' 'cad' 'gbp' 'jpy' 'brl' 'sek')}}\",\r\n  \"customer\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"description\": \"My Test Charge using Mockoon\",\r\n  \"disputed\": {{oneOf (array true false)}},\r\n  \"failure_code\": null,\r\n  \"failure_message\": null,\r\n  \"fraud_details\": {},\r\n  \"invoice\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"livemode\": {{oneOf (array true false)}},\r\n  \"metadata\": {},\r\n  \"on_behalf_of\": null,\r\n  \"order\": null,\r\n  \"outcome\": null,\r\n  \"paid\": {{oneOf (array true false)}},\r\n  \"payment_intent\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method\": \"card_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"payment_method_details\": {\r\n    \"card\": {\r\n      \"brand\": \"{{oneOf (array 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"checks\": {\r\n        \"address_line1_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"address_postal_code_check\": \"{{oneOf (array 'checked' 'unchecked')}}\",\r\n        \"cvc_check\": \"{{oneOf (array 'checked' 'unchecked')}}\"\r\n      },\r\n      \"country\": \"{{faker 'address.countryCode'}}\",\r\n      \"exp_month\": {{faker 'random.number' max = 12}},\r\n      \"exp_year\": {{faker 'random.number' min = 2000 max = 2021}},\r\n      \"fingerprint\": \"Xt5EWLLDS7FJjR1c\",\r\n      \"funding\": \"credit\",\r\n      \"installments\": null,\r\n      \"last4\": \"{{faker 'random.number' max = 9999}}\",\r\n      \"network\": \"{{oneOf (array 'cartes_bancaires' 'amex' 'diners' 'discover' 'jcb' 'mastercard' 'unionpay' 'visa' 'unknown')}}\",\r\n      \"three_d_secure\": null,\r\n      \"wallet\": null\r\n    },\r\n    \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'stripe_account' 'wechat')}}\"\r\n  },\r\n  \"receipt_email\": \"{{faker 'internet.email'}}\",\r\n  \"receipt_number\": {{faker 'random.number'}},\r\n  \"receipt_url\": \"https://pay.stripe.com/receipts/acct_{{faker 'random.alphaNumeric' 25}}/{{urlParam 'id'}}/rcpt_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"refunded\": {{oneOf (array true false)}},\r\n  \"refunds\": {\r\n    \"object\": \"list\",\r\n    \"data\": [],\r\n    \"has_more\": {{oneOf (array true false)}},\r\n    \"url\": \"/v1/charges/{{urlParam 'id'}}/refunds\"\r\n  },\r\n  \"review\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\",\r\n  \"shipping\": null,\r\n  \"source_transfer\": null,\r\n  \"statement_descriptor\": null,\r\n  \"statement_descriptor_suffix\": null,\r\n  \"status\": \"{{oneOf (array 'succeeded' 'pending' 'failed')}}\",\r\n  \"transfer_data\": null,\r\n  \"transfer_group\": null,\r\n  \"source\": \"{{faker 'random.alpha' count = 3}}_{{faker 'random.alphaNumeric' 25}}\"\r\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a dispute for a specified charge.</p>",
                      "method": "get",
                      "endpoint": "v1/charges/:charge/dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/dispute/close",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>\n\n<p>Creating a new refund will refund a charge that has previously been created but not yet refunded.\nFunds will be refunded to the credit or debit card that was originally charged.</p>\n\n<p>You can optionally refund only part of a charge.\nYou can do so multiple times, until the entire charge has been refunded.</p>\n\n<p>Once entirely refunded, a charge can’t be refunded again.\nThis method will raise an error when called on an already-refunded charge,\nor when trying to refund more money than is left on a charge.</p>",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>",
                      "method": "get",
                      "endpoint": "v1/charges/:charge/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create a refund.</p>",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing refund.</p>",
                      "method": "get",
                      "endpoint": "v1/charges/:charge/refunds/:refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Update a specified refund.</p>",
                      "method": "post",
                      "endpoint": "v1/charges/:charge/refunds/:refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Checkout Sessions.</p>",
                      "method": "get",
                      "endpoint": "v1/checkout/sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a Session object.</p>",
                      "method": "post",
                      "endpoint": "v1/checkout/sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a Session object.</p>",
                      "method": "get",
                      "endpoint": "v1/checkout/sessions/:session",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving a Checkout Session, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/checkout/sessions/:session/line_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Lists all Country Spec objects available in the API.</p>",
                      "method": "get",
                      "endpoint": "v1/country_specs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"default_currency\": \"\",\n      \"id\": \"\",\n      \"object\": \"{{oneOf (array 'country_spec')}}\",\n      \"supported_bank_account_currencies\": {},\n      \"supported_payment_currencies\": [\n        \"\"\n      ],\n      \"supported_payment_methods\": [\n        \"\"\n      ],\n      \"supported_transfer_countries\": [\n        \"\"\n      ],\n      \"verification_fields\": {\n        \"company\": {\n          \"additional\": [\n            \"\"\n          ],\n          \"minimum\": [\n            \"\"\n          ]\n        },\n        \"individual\": {\n          \"additional\": [\n            \"\"\n          ],\n          \"minimum\": [\n            \"\"\n          ]\n        }\n      }\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a Country Spec for a given Country code.</p>",
                      "method": "get",
                      "endpoint": "v1/country_specs/:country",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"default_currency\": \"\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'country_spec')}}\",\n  \"supported_bank_account_currencies\": {},\n  \"supported_payment_currencies\": [\n    \"\"\n  ],\n  \"supported_payment_methods\": [\n    \"\"\n  ],\n  \"supported_transfer_countries\": [\n    \"\"\n  ],\n  \"verification_fields\": {\n    \"company\": {\n      \"additional\": [\n        \"\"\n      ],\n      \"minimum\": [\n        \"\"\n      ]\n    },\n    \"individual\": {\n      \"additional\": [\n        \"\"\n      ],\n      \"minimum\": [\n        \"\"\n      ]\n    }\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your coupons.</p>",
                      "method": "get",
                      "endpoint": "v1/coupons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"amount_off\": {{faker 'random.number'}},\n      \"applies_to\": {\n        \"products\": [\n          \"\"\n        ]\n      },\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"duration\": \"{{oneOf (array 'forever' 'once' 'repeating')}}\",\n      \"duration_in_months\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"max_redemptions\": {{faker 'random.number'}},\n      \"metadata\": {},\n      \"name\": \"\",\n      \"object\": \"{{oneOf (array 'coupon')}}\",\n      \"percent_off\": {{faker 'random.number'}},\n      \"redeem_by\": {{faker 'random.number'}},\n      \"times_redeemed\": {{faker 'random.number'}},\n      \"valid\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can create coupons easily via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>\n\n<p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>",
                      "method": "post",
                      "endpoint": "v1/coupons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"amount_off\": {{faker 'random.number'}},\n  \"applies_to\": {\n    \"products\": [\n      \"\"\n    ]\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"duration\": \"{{oneOf (array 'forever' 'once' 'repeating')}}\",\n  \"duration_in_months\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"max_redemptions\": {{faker 'random.number'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'coupon')}}\",\n  \"percent_off\": {{faker 'random.number'}},\n  \"redeem_by\": {{faker 'random.number'}},\n  \"times_redeemed\": {{faker 'random.number'}},\n  \"valid\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can delete coupons via the <a href=\"https://dashboard.stripe.com/coupons\">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>",
                      "method": "delete",
                      "endpoint": "v1/coupons/:coupon",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'coupon')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the coupon with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/coupons/:coupon",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"amount_off\": {{faker 'random.number'}},\n  \"applies_to\": {\n    \"products\": [\n      \"\"\n    ]\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"duration\": \"{{oneOf (array 'forever' 'once' 'repeating')}}\",\n  \"duration_in_months\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"max_redemptions\": {{faker 'random.number'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'coupon')}}\",\n  \"percent_off\": {{faker 'random.number'}},\n  \"redeem_by\": {{faker 'random.number'}},\n  \"times_redeemed\": {{faker 'random.number'}},\n  \"valid\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>",
                      "method": "post",
                      "endpoint": "v1/coupons/:coupon",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"amount_off\": {{faker 'random.number'}},\n  \"applies_to\": {\n    \"products\": [\n      \"\"\n    ]\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"duration\": \"{{oneOf (array 'forever' 'once' 'repeating')}}\",\n  \"duration_in_months\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"max_redemptions\": {{faker 'random.number'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'coupon')}}\",\n  \"percent_off\": {{faker 'random.number'}},\n  \"redeem_by\": {{faker 'random.number'}},\n  \"times_redeemed\": {{faker 'random.number'}},\n  \"valid\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of credit notes.</p>",
                      "method": "get",
                      "endpoint": "v1/credit_notes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Issue a credit note to adjust the amount of a finalized invoice. For a <code>status=open</code> invoice, a credit note reduces\nits <code>amount_due</code>. For a <code>status=paid</code> invoice, a credit note does not affect its <code>amount_due</code>. Instead, it can result\nin any combination of the following:</p>\n\n<ul>\n<li>Refund: create a new refund (using <code>refund_amount</code>) or link an existing refund (using <code>refund</code>).</li>\n<li>Customer balance credit: credit the customer’s balance (using <code>credit_amount</code>) which will be automatically applied to their next invoice when it’s finalized.</li>\n<li>Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using <code>out_of_band_amount</code>).</li>\n</ul>\n\n<p>For post-payment credit notes the sum of the refund, credit and outside of Stripe amounts must equal the credit note total.</p>\n\n<p>You may issue multiple credit notes for an invoice. Each credit note will increment the invoice’s <code>pre_payment_credit_notes_amount</code>\nor <code>post_payment_credit_notes_amount</code> depending on its <code>status</code> at the time of credit note creation.</p>",
                      "method": "post",
                      "endpoint": "v1/credit_notes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Get a preview of a credit note without creating it.</p>",
                      "method": "get",
                      "endpoint": "v1/credit_notes/preview",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving a credit note preview, you’ll get a <strong>lines</strong> property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/credit_notes/preview/lines",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving a credit note, you’ll get a <strong>lines</strong> property containing the the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/credit_notes/:credit_note/lines",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the credit note object with the given identifier.</p>",
                      "method": "get",
                      "endpoint": "v1/credit_notes/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing credit note.</p>",
                      "method": "post",
                      "endpoint": "v1/credit_notes/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Marks a credit note as void. Learn more about <a href=\"/docs/billing/invoices/credit-notes#voiding\">voiding credit notes</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/credit_notes/:id/void",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/customers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new customer object.</p>",
                      "method": "post",
                      "endpoint": "v1/customers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'customer')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>\n\n<p>This request accepts mostly the same arguments as the customer creation call.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of transactions that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/balance_transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates an immutable transaction that updates the customer’s credit <a href=\"/docs/billing/customer/balance\">balance</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/balance_transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a specific customer balance transaction that updated the customer’s <a href=\"/docs/billing/customer/balance\">balances</a>.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/balance_transactions/:transaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Most credit balance transaction fields are immutable, but you may update its <code>description</code> and <code>metadata</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/balance_transactions/:transaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/bank_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/bank_accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified source for a given customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Update a specified source for a given customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/bank_accounts/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Verify a specified bank account for a given customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/bank_accounts/:id/verify",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the cards belonging to a customer.\nNote that the 10 most recent sources are always available on the <code>Customer</code> object.\nIf you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/cards",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/cards",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified source for a given customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/cards/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/cards/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Update a specified source for a given customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/cards/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Removes the currently applied discount on a customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/discount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/discount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List sources for a specified customer.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/sources",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>\n\n<p>If the card’s owner has no default card, then the new card will become the default.\nHowever, if the owner already has a default, then it will not change.\nTo change the default, you should <a href=\"/docs/api#update_customer\">update the customer</a> to have a new <code>default_source</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/sources",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a specified source for a given customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/sources/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve a specified source for a given customer.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/sources/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Update a specified source for a given customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/sources/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Verify a specified bank account for a given customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/sources/:id/verify",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the customer’s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/subscriptions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new subscription on an existing customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/subscriptions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the subscription with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Removes the currently applied discount on a customer.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/subscriptions/:subscription_exposed_id/discount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/subscriptions/:subscription_exposed_id/discount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of tax IDs for a customer.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/tax_ids",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>TaxID</code> object for a customer.</p>",
                      "method": "post",
                      "endpoint": "v1/customers/:customer/tax_ids",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an existing <code>TaxID</code> object.</p>",
                      "method": "delete",
                      "endpoint": "v1/customers/:customer/tax_ids/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'tax_id')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the <code>TaxID</code> object with the given identifier.</p>",
                      "method": "get",
                      "endpoint": "v1/customers/:customer/tax_ids/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your disputes.</p>",
                      "method": "get",
                      "endpoint": "v1/disputes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the dispute with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/disputes/:dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href=\"https://dashboard.stripe.com/disputes\">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>\n\n<p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href=\"/docs/disputes/categories\">guide to dispute types</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/disputes/:dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>\n\n<p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>",
                      "method": "post",
                      "endpoint": "v1/disputes/:dispute/close",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a short-lived API key for a given resource.</p>",
                      "method": "post",
                      "endpoint": "v1/ephemeral_keys",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"expires\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'ephemeral_key')}}\",\n  \"secret\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Invalidates a short-lived API key for a given resource.</p>",
                      "method": "delete",
                      "endpoint": "v1/ephemeral_keys/:key",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"expires\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'ephemeral_key')}}\",\n  \"secret\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href=\"/docs/api/events/object\">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>",
                      "method": "get",
                      "endpoint": "v1/events",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"account\": \"\",\n      \"api_version\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"data\": {\n        \"object\": {},\n        \"previous_attributes\": {}\n      },\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'event')}}\",\n      \"pending_webhooks\": {{faker 'random.number'}},\n      \"request\": {\n        \"id\": \"\",\n        \"idempotency_key\": \"\"\n      },\n      \"type\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>",
                      "method": "get",
                      "endpoint": "v1/events/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"account\": \"\",\n  \"api_version\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"data\": {\n    \"object\": {},\n    \"previous_attributes\": {}\n  },\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'event')}}\",\n  \"pending_webhooks\": {{faker 'random.number'}},\n  \"request\": {\n    \"id\": \"\",\n    \"idempotency_key\": \"\"\n  },\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>",
                      "method": "get",
                      "endpoint": "v1/exchange_rates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"id\": \"\",\n      \"object\": \"{{oneOf (array 'exchange_rate')}}\",\n      \"rates\": {}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the exchange rates from the given currency to every supported currency.</p>",
                      "method": "get",
                      "endpoint": "v1/exchange_rates/:rate_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'exchange_rate')}}\",\n  \"rates\": {}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of file links.</p>",
                      "method": "get",
                      "endpoint": "v1/file_links",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new file link object.</p>",
                      "method": "post",
                      "endpoint": "v1/file_links",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the file link with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/file_links/:link",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing file link object. Expired links can no longer be updated.</p>",
                      "method": "post",
                      "endpoint": "v1/file_links/:link",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/files",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>To upload a file to Stripe, you’ll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p>\n\n<p>All of Stripe’s officially supported Client libraries should have support for sending <code>multipart/form-data</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/files",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing file object. Supply the unique file ID from a file, and Stripe will return the corresponding file object. To access file contents, see the <a href=\"/docs/file-upload#download-file-contents\">File Upload Guide</a>.</p>",
                      "method": "get",
                      "endpoint": "v1/files/:file",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List all verification reports.</p>",
                      "method": "get",
                      "endpoint": "v1/identity/verification_reports",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"created\": {{faker 'random.number'}},\n      \"document\": {\n        \"address\": {\n          \"city\": \"\",\n          \"country\": \"\",\n          \"line1\": \"\",\n          \"line2\": \"\",\n          \"postal_code\": \"\",\n          \"state\": \"\"\n        },\n        \"dob\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"error\": {\n          \"code\": \"{{oneOf (array 'document_expired' 'document_type_not_supported' 'document_unverified_other')}}\",\n          \"reason\": \"\"\n        },\n        \"expiration_date\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"files\": [\n          \"\"\n        ],\n        \"first_name\": \"\",\n        \"issued_date\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"issuing_country\": \"\",\n        \"last_name\": \"\",\n        \"number\": \"\",\n        \"status\": \"{{oneOf (array 'unverified' 'verified')}}\",\n        \"type\": \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      },\n      \"id\": \"\",\n      \"id_number\": {\n        \"dob\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"error\": {\n          \"code\": \"{{oneOf (array 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other')}}\",\n          \"reason\": \"\"\n        },\n        \"first_name\": \"\",\n        \"id_number\": \"\",\n        \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n        \"last_name\": \"\",\n        \"status\": \"{{oneOf (array 'unverified' 'verified')}}\"\n      },\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'identity.verification_report')}}\",\n      \"options\": {\n        \"document\": {\n          \"allowed_types\": [\n            \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n          ],\n          \"require_id_number\": {{faker 'random.boolean'}},\n          \"require_live_capture\": {{faker 'random.boolean'}},\n          \"require_matching_selfie\": {{faker 'random.boolean'}}\n        },\n        \"id_number\": {}\n      },\n      \"selfie\": {\n        \"document\": \"\",\n        \"error\": {\n          \"code\": \"{{oneOf (array 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other')}}\",\n          \"reason\": \"\"\n        },\n        \"selfie\": \"\",\n        \"status\": \"{{oneOf (array 'unverified' 'verified')}}\"\n      },\n      \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n      \"verification_session\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing VerificationReport</p>",
                      "method": "get",
                      "endpoint": "v1/identity/verification_reports/:report",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"document\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"error\": {\n      \"code\": \"{{oneOf (array 'document_expired' 'document_type_not_supported' 'document_unverified_other')}}\",\n      \"reason\": \"\"\n    },\n    \"expiration_date\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"files\": [\n      \"\"\n    ],\n    \"first_name\": \"\",\n    \"issued_date\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"issuing_country\": \"\",\n    \"last_name\": \"\",\n    \"number\": \"\",\n    \"status\": \"{{oneOf (array 'unverified' 'verified')}}\",\n    \"type\": \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n  },\n  \"id\": \"\",\n  \"id_number\": {\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"error\": {\n      \"code\": \"{{oneOf (array 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other')}}\",\n      \"reason\": \"\"\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\",\n    \"status\": \"{{oneOf (array 'unverified' 'verified')}}\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'identity.verification_report')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"selfie\": {\n    \"document\": \"\",\n    \"error\": {\n      \"code\": \"{{oneOf (array 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other')}}\",\n      \"reason\": \"\"\n    },\n    \"selfie\": \"\",\n    \"status\": \"{{oneOf (array 'unverified' 'verified')}}\"\n  },\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"verification_session\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of VerificationSessions</p>",
                      "method": "get",
                      "endpoint": "v1/identity/verification_sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"client_secret\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"last_error\": {\n        \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n        \"reason\": \"\"\n      },\n      \"last_verification_report\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n      \"options\": {\n        \"document\": {\n          \"allowed_types\": [\n            \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n          ],\n          \"require_id_number\": {{faker 'random.boolean'}},\n          \"require_live_capture\": {{faker 'random.boolean'}},\n          \"require_matching_selfie\": {{faker 'random.boolean'}}\n        },\n        \"id_number\": {}\n      },\n      \"redaction\": {\n        \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n      },\n      \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n      \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n      \"url\": \"\",\n      \"verified_outputs\": {\n        \"address\": {\n          \"city\": \"\",\n          \"country\": \"\",\n          \"line1\": \"\",\n          \"line2\": \"\",\n          \"postal_code\": \"\",\n          \"state\": \"\"\n        },\n        \"dob\": {\n          \"day\": {{faker 'random.number'}},\n          \"month\": {{faker 'random.number'}},\n          \"year\": {{faker 'random.number'}}\n        },\n        \"first_name\": \"\",\n        \"id_number\": \"\",\n        \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n        \"last_name\": \"\"\n      }\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a VerificationSession object.</p>\n\n<p>After the VerificationSession is created, display a verification modal using the session <code>client_secret</code> or send your users to the session’s <code>url</code>.</p>\n\n<p>If your API key is in test mode, verification checks won’t actually process, though everything else will occur as if in live mode.</p>\n\n<p>Related guide: <a href=\"/docs/identity/verify-identity-documents\">Verify your users’ identity documents</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/identity/verification_sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_secret\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"last_error\": {\n    \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n    \"reason\": \"\"\n  },\n  \"last_verification_report\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"redaction\": {\n    \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n  },\n  \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"url\": \"\",\n  \"verified_outputs\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a VerificationSession that was previously created.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to retrieve a valid\n<code>client_secret</code> or <code>url</code> to allow re-submission.</p>",
                      "method": "get",
                      "endpoint": "v1/identity/verification_sessions/:session",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_secret\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"last_error\": {\n    \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n    \"reason\": \"\"\n  },\n  \"last_verification_report\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"redaction\": {\n    \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n  },\n  \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"url\": \"\",\n  \"verified_outputs\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a VerificationSession object.</p>\n\n<p>When the session status is <code>requires_input</code>, you can use this method to update the\nverification check and options.</p>",
                      "method": "post",
                      "endpoint": "v1/identity/verification_sessions/:session",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_secret\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"last_error\": {\n    \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n    \"reason\": \"\"\n  },\n  \"last_verification_report\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"redaction\": {\n    \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n  },\n  \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"url\": \"\",\n  \"verified_outputs\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A VerificationSession object can be canceled when it is in <code>requires_input</code> <a href=\"/docs/identity/how-sessions-work\">status</a>.</p>\n\n<p>Once canceled, future submission attempts are disabled. This cannot be undone. <a href=\"/docs/identity/verification-sessions#cancel\">Learn more</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/identity/verification_sessions/:session/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_secret\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"last_error\": {\n    \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n    \"reason\": \"\"\n  },\n  \"last_verification_report\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"redaction\": {\n    \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n  },\n  \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"url\": \"\",\n  \"verified_outputs\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Redact a VerificationSession to remove all collected information from Stripe. This will redact\nthe VerificationSession and all objects related to it, including VerificationReports, Events,\nrequest logs, etc.</p>\n\n<p>A VerificationSession object can be redacted when it is in <code>requires_input</code> or <code>verified</code>\n<a href=\"/docs/identity/how-sessions-work\">status</a>. Redacting a VerificationSession in <code>requires_action</code>\nstate will automatically cancel it.</p>\n\n<p>The redaction process may take up to four days. When the redaction process is in progress, the\nVerificationSession’s <code>redaction.status</code> field will be set to <code>processing</code>; when the process is\nfinished, it will change to <code>redacted</code> and an <code>identity.verification_session.redacted</code> event\nwill be emitted.</p>\n\n<p>Redaction is irreversible. Redacted objects are still accessible in the Stripe API, but all the\nfields that contain personal data will be replaced by the string <code>[redacted]</code> or a similar\nplaceholder. The <code>metadata</code> field will also be erased. Redacted objects cannot be updated or\nused for any purpose.</p>\n\n<p><a href=\"/docs/identity/verification-sessions#redact\">Learn more</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/identity/verification_sessions/:session/redact",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_secret\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"last_error\": {\n    \"code\": \"{{oneOf (array 'abandoned' 'consent_declined' 'country_not_supported' 'device_not_supported' 'document_expired' 'document_type_not_supported' 'document_unverified_other' 'id_number_insufficient_document_data' 'id_number_mismatch' 'id_number_unverified_other' 'selfie_document_missing_photo' 'selfie_face_mismatch' 'selfie_manipulated' 'selfie_unverified_other' 'under_supported_age')}}\",\n    \"reason\": \"\"\n  },\n  \"last_verification_report\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'identity.verification_session')}}\",\n  \"options\": {\n    \"document\": {\n      \"allowed_types\": [\n        \"{{oneOf (array 'driving_license' 'id_card' 'passport')}}\"\n      ],\n      \"require_id_number\": {{faker 'random.boolean'}},\n      \"require_live_capture\": {{faker 'random.boolean'}},\n      \"require_matching_selfie\": {{faker 'random.boolean'}}\n    },\n    \"id_number\": {}\n  },\n  \"redaction\": {\n    \"status\": \"{{oneOf (array 'processing' 'redacted')}}\"\n  },\n  \"status\": \"{{oneOf (array 'canceled' 'processing' 'requires_input' 'verified')}}\",\n  \"type\": \"{{oneOf (array 'document' 'id_number')}}\",\n  \"url\": \"\",\n  \"verified_outputs\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"dob\": {\n      \"day\": {{faker 'random.number'}},\n      \"month\": {{faker 'random.number'}},\n      \"year\": {{faker 'random.number'}}\n    },\n    \"first_name\": \"\",\n    \"id_number\": \"\",\n    \"id_number_type\": \"{{oneOf (array 'br_cpf' 'sg_nric' 'us_ssn')}}\",\n    \"last_name\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/invoiceitems",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates an item to be added to a draft invoice (up to 250 items per invoice). If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>",
                      "method": "post",
                      "endpoint": "v1/invoiceitems",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they’re not attached to invoices, or if it’s attached to a draft invoice.</p>",
                      "method": "delete",
                      "endpoint": "v1/invoiceitems/:invoiceitem",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'invoiceitem')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the invoice item with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/invoiceitems/:invoiceitem",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>",
                      "method": "post",
                      "endpoint": "v1/invoiceitems/:invoiceitem",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/invoices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations. The invoice remains a draft until you <a href=\"#finalize_invoice\">finalize</a> the invoice, which allows you to <a href=\"#pay_invoice\">pay</a> or <a href=\"#send_invoice\">send</a> the invoice to your customers.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>\n\n<p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>\n\n<p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>",
                      "method": "get",
                      "endpoint": "v1/invoices/upcoming",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/invoices/upcoming/lines",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be <a href=\"#void_invoice\">voided</a>.</p>",
                      "method": "delete",
                      "endpoint": "v1/invoices/:invoice",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'invoice')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the invoice with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/invoices/:invoice",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Draft invoices are fully editable. Once an invoice is <a href=\"/docs/billing/invoices/workflow#finalized\">finalized</a>,\nmonetary values, as well as <code>collection_method</code>, become uneditable.</p>\n\n<p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,\nsending reminders for, or <a href=\"/docs/billing/invoices/reconciliation\">automatically reconciling</a> invoices, pass\n<code>auto_advance=false</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you’d like to finalize a draft invoice manually, you can do so using this method.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice/finalize",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving an invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/invoices/:invoice/lines",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice/mark_uncollectible",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice/pay",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Stripe will automatically send invoices to customers according to your <a href=\"https://dashboard.stripe.com/account/billing/automatic\">subscriptions settings</a>. However, if you’d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>\n\n<p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice/send",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href=\"#delete_invoice\">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>",
                      "method": "post",
                      "endpoint": "v1/invoices/:invoice/void",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of issuer fraud records.</p>",
                      "method": "get",
                      "endpoint": "v1/issuer_fraud_records",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an issuer fraud record that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#issuer_fraud_record_object\">issuer fraud record</a> object reference for more details.</p>",
                      "method": "get",
                      "endpoint": "v1/issuer_fraud_records/:issuer_fraud_record",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/authorizations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Authorization</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/authorizations/:authorization",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/authorizations/:authorization",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Approves a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real-time authorization</a> flow.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/authorizations/:authorization/approve",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Declines a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href=\"/docs/issuing/controls/real-time-authorizations\">real time authorization</a> flow.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/authorizations/:authorization/decline",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/cardholders",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/cardholders",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Cardholder</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/cardholders/:cardholder",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/cardholders/:cardholder",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/cards",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates an Issuing <code>Card</code> object.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/cards",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Card</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/cards/:card",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/cards/:card",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/disputes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates an Issuing <code>Dispute</code> object. Individual pieces of evidence within the <code>evidence</code> object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a> for more details about evidence requirements.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/disputes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Dispute</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/disputes/:dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the <code>evidence</code> object can be unset by passing in an empty string.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/disputes/:dispute",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Submits an Issuing <code>Dispute</code> to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see <a href=\"/docs/issuing/purchases/disputes#dispute-reasons-and-evidence\">Dispute reasons and evidence</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/disputes/:dispute/submit",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Settlement</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/settlements",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"bin\": \"\",\n      \"clearing_date\": {{faker 'random.number'}},\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"interchange_fees\": {{faker 'random.number'}},\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"net_total\": {{faker 'random.number'}},\n      \"network\": \"{{oneOf (array 'visa')}}\",\n      \"network_fees\": {{faker 'random.number'}},\n      \"network_settlement_identifier\": \"\",\n      \"object\": \"{{oneOf (array 'issuing.settlement')}}\",\n      \"settlement_service\": \"\",\n      \"transaction_count\": {{faker 'random.number'}},\n      \"transaction_volume\": {{faker 'random.number'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Settlement</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/settlements/:settlement",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"bin\": \"\",\n  \"clearing_date\": {{faker 'random.number'}},\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"interchange_fees\": {{faker 'random.number'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"net_total\": {{faker 'random.number'}},\n  \"network\": \"{{oneOf (array 'visa')}}\",\n  \"network_fees\": {{faker 'random.number'}},\n  \"network_settlement_identifier\": \"\",\n  \"object\": \"{{oneOf (array 'issuing.settlement')}}\",\n  \"settlement_service\": \"\",\n  \"transaction_count\": {{faker 'random.number'}},\n  \"transaction_volume\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/settlements/:settlement",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"bin\": \"\",\n  \"clearing_date\": {{faker 'random.number'}},\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"interchange_fees\": {{faker 'random.number'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"net_total\": {{faker 'random.number'}},\n  \"network\": \"{{oneOf (array 'visa')}}\",\n  \"network_fees\": {{faker 'random.number'}},\n  \"network_settlement_identifier\": \"\",\n  \"object\": \"{{oneOf (array 'issuing.settlement')}}\",\n  \"settlement_service\": \"\",\n  \"transaction_count\": {{faker 'random.number'}},\n  \"transaction_volume\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an Issuing <code>Transaction</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/issuing/transactions/:transaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/issuing/transactions/:transaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a Mandate object.</p>",
                      "method": "get",
                      "endpoint": "v1/mandates/:mandate",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/order_returns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.</p>",
                      "method": "get",
                      "endpoint": "v1/order_returns/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/orders",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new order object.</p>",
                      "method": "post",
                      "endpoint": "v1/orders",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>",
                      "method": "get",
                      "endpoint": "v1/orders/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/orders/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Pay an order by providing a <code>source</code> to create a payment.</p>",
                      "method": "post",
                      "endpoint": "v1/orders/:id/pay",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Return all or part of an order. The order must have a status of <code>paid</code> or <code>fulfilled</code> before it can be returned. Once all items have been returned, the order will become <code>canceled</code> or <code>returned</code> depending on which status the order started in.</p>",
                      "method": "post",
                      "endpoint": "v1/orders/:id/returns",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of PaymentIntents.</p>",
                      "method": "get",
                      "endpoint": "v1/payment_intents",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a PaymentIntent object.</p>\n\n<p>After the PaymentIntent is created, attach a payment method and <a href=\"/docs/api/payment_intents/confirm\">confirm</a>\nto continue the payment. You can read more about the different payment flows\navailable via the Payment Intents API <a href=\"/docs/payments/payment-intents\">here</a>.</p>\n\n<p>When <code>confirm=true</code> is used during creation, it is equivalent to creating\nand confirming the PaymentIntent in the same call. You may use any parameters\navailable in the <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> when <code>confirm=true</code>\nis supplied.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_intents",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a PaymentIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#payment_intent_object\">payment intent</a> object reference for more details.</p>",
                      "method": "get",
                      "endpoint": "v1/payment_intents/:intent",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates properties on a PaymentIntent object without confirming.</p>\n\n<p>Depending on which properties you update, you may need to confirm the\nPaymentIntent again. For example, updating the <code>payment_method</code> will\nalways require you to confirm the PaymentIntent again. If you prefer to\nupdate and confirm at the same time, we recommend updating properties via\nthe <a href=\"/docs/api/payment_intents/confirm\">confirm API</a> instead.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_intents/:intent",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A PaymentIntent object can be canceled when it is in one of these statuses: <code>requires_payment_method</code>, <code>requires_capture</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>\n\n<p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status=’requires_capture’</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_intents/:intent/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Capture the funds of an existing uncaptured PaymentIntent when its status is <code>requires_capture</code>.</p>\n\n<p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>\n\n<p>Learn more about <a href=\"/docs/payments/capture-later\">separate authorization and capture</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_intents/:intent/capture",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Confirm that your customer intends to pay with current or provided\npayment method. Upon confirmation, the PaymentIntent will attempt to initiate\na payment.</p>\n\n<p>If the selected payment method requires additional authentication steps, the\nPaymentIntent will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If payment fails,\nthe PaymentIntent will transition to the <code>requires_payment_method</code> status. If\npayment succeeds, the PaymentIntent will transition to the <code>succeeded</code>\nstatus (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>\n\n<p>If the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted\nusing our <a href=\"/docs/stripe-js/reference#stripe-handle-card-payment\">client SDKs</a>\nand the PaymentIntent’s <a href=\"#payment_intent_object-client_secret\">client_secret</a>.\nAfter <code>next_action</code>s are handled by the client, no additional\nconfirmation is required to complete the payment.</p>\n\n<p>If the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be\ninitiated using a secret key.\nIf any actions are required for the payment, the PaymentIntent will\nreturn to the <code>requires_confirmation</code> state\nafter those actions are completed. Your server needs to then\nexplicitly re-confirm the PaymentIntent to initiate the next payment\nattempt. Read the <a href=\"/docs/payments/payment-intents/web-manual\">expanded documentation</a>\nto learn more about manual confirmation.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_intents/:intent/confirm",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of PaymentMethods for a given Customer</p>",
                      "method": "get",
                      "endpoint": "v1/payment_methods",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a PaymentMethod object. Read the <a href=\"/docs/stripe-js/reference#stripe-create-payment-method\">Stripe.js reference</a> to learn how to create PaymentMethods via Stripe.js.</p>\n\n<p>Instead of creating a PaymentMethod directly, we recommend using the <a href=\"/docs/payments/accept-a-payment\">PaymentIntents</a> API to accept a payment immediately or the <a href=\"/docs/payments/save-and-reuse\">SetupIntent</a> API to collect payment method details ahead of a future payment.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_methods",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a PaymentMethod object.</p>",
                      "method": "get",
                      "endpoint": "v1/payment_methods/:payment_method",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_methods/:payment_method",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Attaches a PaymentMethod object to a Customer.</p>\n\n<p>To attach a new PaymentMethod to a customer for future payments, we recommend you use a <a href=\"/docs/api/setup_intents\">SetupIntent</a>\nor a PaymentIntent with <a href=\"/docs/api/payment_intents/create#create_payment_intent-setup_future_usage\">setup_future_usage</a>.\nThese approaches will perform any necessary steps to ensure that the PaymentMethod can be used in a future payment. Using the\n<code>/v1/payment_methods/:id/attach</code> endpoint does not ensure that future payments can be made with the attached PaymentMethod.\nSee <a href=\"/docs/payments/payment-intents#future-usage\">Optimizing cards for future payments</a> for more information about setting up future payments.</p>\n\n<p>To use this PaymentMethod as the default for invoice or subscription payments,\nset <a href=\"/docs/api/customers/update#update_customer-invoice_settings-default_payment_method\"><code>invoice_settings.default_payment_method</code></a>,\non the Customer to the PaymentMethod’s ID.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_methods/:payment_method/attach",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Detaches a PaymentMethod object from a Customer.</p>",
                      "method": "post",
                      "endpoint": "v1/payment_methods/:payment_method/detach",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/payouts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>To send funds to your own bank account, you create a new payout object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the payout amount, or you’ll receive an “Insufficient Funds” error.</p>\n\n<p>If your API key is in test mode, money won’t actually be sent, though everything else will occur as if in live mode.</p>\n\n<p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you’ll need to specify the source type balance that the payout should draw from. The <a href=\"#balance_object\">balance object</a> details available and pending amounts by source type.</p>",
                      "method": "post",
                      "endpoint": "v1/payouts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.</p>",
                      "method": "get",
                      "endpoint": "v1/payouts/:payout",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.</p>",
                      "method": "post",
                      "endpoint": "v1/payouts/:payout",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.</p>",
                      "method": "post",
                      "endpoint": "v1/payouts/:payout/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Reverses a payout by debiting the destination bank account. Only payouts for connected accounts to US bank accounts may be reversed at this time. If the payout is in the <code>pending</code> status, <code>/v1/payouts/:id/cancel</code> should be used instead.</p>\n\n<p>By requesting a reversal via <code>/v1/payouts/:id/reverse</code>, you confirm that the authorized signatory of the selected bank account has authorized the debit on the bank account and that no other authorization is required.</p>",
                      "method": "post",
                      "endpoint": "v1/payouts/:payout/reverse",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your plans.</p>",
                      "method": "get",
                      "endpoint": "v1/plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n      \"amount\": {{faker 'random.number'}},\n      \"amount_decimal\": \"\",\n      \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n      \"interval_count\": {{faker 'random.number'}},\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"nickname\": \"\",\n      \"object\": \"{{oneOf (array 'plan')}}\",\n      \"product\": \"\",\n      \"tiers\": [\n        {\n          \"flat_amount\": {{faker 'random.number'}},\n          \"flat_amount_decimal\": \"\",\n          \"unit_amount\": {{faker 'random.number'}},\n          \"unit_amount_decimal\": \"\",\n          \"up_to\": {{faker 'random.number'}}\n        }\n      ],\n      \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n      \"transform_usage\": {\n        \"divide_by\": {{faker 'random.number'}},\n        \"round\": \"{{oneOf (array 'down' 'up')}}\"\n      },\n      \"trial_period_days\": {{faker 'random.number'}},\n      \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can now model subscriptions more flexibly using the <a href=\"#prices\">Prices API</a>. It replaces the Plans API and is backwards compatible to simplify your migration.</p>",
                      "method": "post",
                      "endpoint": "v1/plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n  \"amount\": {{faker 'random.number'}},\n  \"amount_decimal\": \"\",\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n  \"interval_count\": {{faker 'random.number'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'plan')}}\",\n  \"product\": \"\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_usage\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"trial_period_days\": {{faker 'random.number'}},\n  \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>",
                      "method": "delete",
                      "endpoint": "v1/plans/:plan",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'plan')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the plan with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/plans/:plan",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n  \"amount\": {{faker 'random.number'}},\n  \"amount_decimal\": \"\",\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n  \"interval_count\": {{faker 'random.number'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'plan')}}\",\n  \"product\": \"\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_usage\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"trial_period_days\": {{faker 'random.number'}},\n  \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>",
                      "method": "post",
                      "endpoint": "v1/plans/:plan",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n  \"amount\": {{faker 'random.number'}},\n  \"amount_decimal\": \"\",\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n  \"interval_count\": {{faker 'random.number'}},\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'plan')}}\",\n  \"product\": \"\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_usage\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"trial_period_days\": {{faker 'random.number'}},\n  \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your prices.</p>",
                      "method": "get",
                      "endpoint": "v1/prices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"lookup_key\": \"\",\n      \"metadata\": {},\n      \"nickname\": \"\",\n      \"object\": \"{{oneOf (array 'price')}}\",\n      \"product\": \"\",\n      \"recurring\": {\n        \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n        \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n        \"interval_count\": {{faker 'random.number'}},\n        \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n      },\n      \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n      \"tiers\": [\n        {\n          \"flat_amount\": {{faker 'random.number'}},\n          \"flat_amount_decimal\": \"\",\n          \"unit_amount\": {{faker 'random.number'}},\n          \"unit_amount_decimal\": \"\",\n          \"up_to\": {{faker 'random.number'}}\n        }\n      ],\n      \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n      \"transform_quantity\": {\n        \"divide_by\": {{faker 'random.number'}},\n        \"round\": \"{{oneOf (array 'down' 'up')}}\"\n      },\n      \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new price for an existing product. The price can be recurring or one-time.</p>",
                      "method": "post",
                      "endpoint": "v1/prices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"lookup_key\": \"\",\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'price')}}\",\n  \"product\": \"\",\n  \"recurring\": {\n    \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n    \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n    \"interval_count\": {{faker 'random.number'}},\n    \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n  },\n  \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_quantity\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n  \"unit_amount\": {{faker 'random.number'}},\n  \"unit_amount_decimal\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the price with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/prices/:price",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"lookup_key\": \"\",\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'price')}}\",\n  \"product\": \"\",\n  \"recurring\": {\n    \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n    \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n    \"interval_count\": {{faker 'random.number'}},\n    \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n  },\n  \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_quantity\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n  \"unit_amount\": {{faker 'random.number'}},\n  \"unit_amount_decimal\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified price by setting the values of the parameters passed. Any parameters not provided are left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/prices/:price",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"lookup_key\": \"\",\n  \"metadata\": {},\n  \"nickname\": \"\",\n  \"object\": \"{{oneOf (array 'price')}}\",\n  \"product\": \"\",\n  \"recurring\": {\n    \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n    \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n    \"interval_count\": {{faker 'random.number'}},\n    \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n  },\n  \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n  \"tiers\": [\n    {\n      \"flat_amount\": {{faker 'random.number'}},\n      \"flat_amount_decimal\": \"\",\n      \"unit_amount\": {{faker 'random.number'}},\n      \"unit_amount_decimal\": \"\",\n      \"up_to\": {{faker 'random.number'}}\n    }\n  ],\n  \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n  \"transform_quantity\": {\n    \"divide_by\": {{faker 'random.number'}},\n    \"round\": \"{{oneOf (array 'down' 'up')}}\"\n  },\n  \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n  \"unit_amount\": {{faker 'random.number'}},\n  \"unit_amount_decimal\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/products",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"id\": \"\",\n      \"images\": [\n        \"\"\n      ],\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"name\": \"\",\n      \"object\": \"{{oneOf (array 'product')}}\",\n      \"package_dimensions\": {\n        \"height\": {{faker 'random.number'}},\n        \"length\": {{faker 'random.number'}},\n        \"weight\": {{faker 'random.number'}},\n        \"width\": {{faker 'random.number'}}\n      },\n      \"shippable\": {{faker 'random.boolean'}},\n      \"statement_descriptor\": \"\",\n      \"tax_code\": \"\",\n      \"unit_label\": \"\",\n      \"updated\": {{faker 'random.number'}},\n      \"url\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new product object.</p>",
                      "method": "post",
                      "endpoint": "v1/products",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"id\": \"\",\n  \"images\": [\n    \"\"\n  ],\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'product')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"shippable\": {{faker 'random.boolean'}},\n  \"statement_descriptor\": \"\",\n  \"tax_code\": \"\",\n  \"unit_label\": \"\",\n  \"updated\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a product. Deleting a product is only possible if it has no prices associated with it. Additionally, deleting a product with <code>type=good</code> is only possible if it has no SKUs associated with it.</p>",
                      "method": "delete",
                      "endpoint": "v1/products/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'product')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>",
                      "method": "get",
                      "endpoint": "v1/products/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"id\": \"\",\n  \"images\": [\n    \"\"\n  ],\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'product')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"shippable\": {{faker 'random.boolean'}},\n  \"statement_descriptor\": \"\",\n  \"tax_code\": \"\",\n  \"unit_label\": \"\",\n  \"updated\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/products/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"id\": \"\",\n  \"images\": [\n    \"\"\n  ],\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'product')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"shippable\": {{faker 'random.boolean'}},\n  \"statement_descriptor\": \"\",\n  \"tax_code\": \"\",\n  \"unit_label\": \"\",\n  \"updated\": {{faker 'random.number'}},\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your promotion codes.</p>",
                      "method": "get",
                      "endpoint": "v1/promotion_codes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A promotion code points to a coupon. You can optionally restrict the code to a specific customer, redemption limit, and expiration date.</p>",
                      "method": "post",
                      "endpoint": "v1/promotion_codes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the promotion code with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/promotion_codes/:promotion_code",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified promotion code by setting the values of the parameters passed. Most fields are, by design, not editable.</p>",
                      "method": "post",
                      "endpoint": "v1/promotion_codes/:promotion_code",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your quotes.</p>",
                      "method": "get",
                      "endpoint": "v1/quotes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A quote models prices and services for a customer. Default options for <code>header</code>, <code>description</code>, <code>footer</code>, and <code>expires_at</code> can be set in the dashboard via the <a href=\"https://dashboard.stripe.com/settings/billing/quote\">quote template</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/quotes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the quote with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/quotes/:quote",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A quote models prices and services for a customer.</p>",
                      "method": "post",
                      "endpoint": "v1/quotes/:quote",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Accepts the specified quote.</p>",
                      "method": "post",
                      "endpoint": "v1/quotes/:quote/accept",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Cancels the quote.</p>",
                      "method": "post",
                      "endpoint": "v1/quotes/:quote/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving a quote, there is an includable <a href=\"https://stripe.com/docs/api/quotes/object#quote_object-computed-upfront-line_items\"><strong>computed.upfront.line_items</strong></a> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of upfront line items.</p>",
                      "method": "get",
                      "endpoint": "v1/quotes/:quote/computed_upfront_line_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Finalizes the quote.</p>",
                      "method": "post",
                      "endpoint": "v1/quotes/:quote/finalize",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When retrieving a quote, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>",
                      "method": "get",
                      "endpoint": "v1/quotes/:quote/line_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Download the PDF for a finalized quote</p>",
                      "method": "get",
                      "endpoint": "v1/quotes/:quote/pdf",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/pdf"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of early fraud warnings.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/early_fraud_warnings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an early fraud warning that has previously been created. </p>\n\n<p>Please refer to the <a href=\"#early_fraud_warning_object\">early fraud warning</a> object reference for more details.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/early_fraud_warnings/:early_fraud_warning",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/value_list_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"created\": {{faker 'random.number'}},\n      \"created_by\": \"\",\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n      \"value\": \"\",\n      \"value_list\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>",
                      "method": "post",
                      "endpoint": "v1/radar/value_list_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"created_by\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n  \"value\": \"\",\n  \"value_list\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>",
                      "method": "delete",
                      "endpoint": "v1/radar/value_list_items/:item",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'radar.value_list_item')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a <code>ValueListItem</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/value_list_items/:item",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created\": {{faker 'random.number'}},\n  \"created_by\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n  \"value\": \"\",\n  \"value_list\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/value_lists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"alias\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"created_by\": \"\",\n      \"id\": \"\",\n      \"item_type\": \"{{oneOf (array 'card_bin' 'card_fingerprint' 'case_sensitive_string' 'country' 'email' 'ip_address' 'string')}}\",\n      \"list_items\": {\n        \"data\": [\n          {\n            \"created\": {{faker 'random.number'}},\n            \"created_by\": \"\",\n            \"id\": \"\",\n            \"livemode\": {{faker 'random.boolean'}},\n            \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n            \"value\": \"\",\n            \"value_list\": \"\"\n          }\n        ],\n        \"has_more\": {{faker 'random.boolean'}},\n        \"object\": \"{{oneOf (array 'list')}}\",\n        \"url\": \"\"\n      },\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"name\": \"\",\n      \"object\": \"{{oneOf (array 'radar.value_list')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>",
                      "method": "post",
                      "endpoint": "v1/radar/value_lists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"alias\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"created_by\": \"\",\n  \"id\": \"\",\n  \"item_type\": \"{{oneOf (array 'card_bin' 'card_fingerprint' 'case_sensitive_string' 'country' 'email' 'ip_address' 'string')}}\",\n  \"list_items\": {\n    \"data\": [\n      {\n        \"created\": {{faker 'random.number'}},\n        \"created_by\": \"\",\n        \"id\": \"\",\n        \"livemode\": {{faker 'random.boolean'}},\n        \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n        \"value\": \"\",\n        \"value_list\": \"\"\n      }\n    ],\n    \"has_more\": {{faker 'random.boolean'}},\n    \"object\": \"{{oneOf (array 'list')}}\",\n    \"url\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'radar.value_list')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>",
                      "method": "delete",
                      "endpoint": "v1/radar/value_lists/:value_list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'radar.value_list')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a <code>ValueList</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/radar/value_lists/:value_list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"alias\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"created_by\": \"\",\n  \"id\": \"\",\n  \"item_type\": \"{{oneOf (array 'card_bin' 'card_fingerprint' 'case_sensitive_string' 'country' 'email' 'ip_address' 'string')}}\",\n  \"list_items\": {\n    \"data\": [\n      {\n        \"created\": {{faker 'random.number'}},\n        \"created_by\": \"\",\n        \"id\": \"\",\n        \"livemode\": {{faker 'random.boolean'}},\n        \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n        \"value\": \"\",\n        \"value_list\": \"\"\n      }\n    ],\n    \"has_more\": {{faker 'random.boolean'}},\n    \"object\": \"{{oneOf (array 'list')}}\",\n    \"url\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'radar.value_list')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>",
                      "method": "post",
                      "endpoint": "v1/radar/value_lists/:value_list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"alias\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"created_by\": \"\",\n  \"id\": \"\",\n  \"item_type\": \"{{oneOf (array 'card_bin' 'card_fingerprint' 'case_sensitive_string' 'country' 'email' 'ip_address' 'string')}}\",\n  \"list_items\": {\n    \"data\": [\n      {\n        \"created\": {{faker 'random.number'}},\n        \"created_by\": \"\",\n        \"id\": \"\",\n        \"livemode\": {{faker 'random.boolean'}},\n        \"object\": \"{{oneOf (array 'radar.value_list_item')}}\",\n        \"value\": \"\",\n        \"value_list\": \"\"\n      }\n    ],\n    \"has_more\": {{faker 'random.boolean'}},\n    \"object\": \"{{oneOf (array 'list')}}\",\n    \"url\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'radar.value_list')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/recipients",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>Recipient</code> object and verifies the recipient’s identity.\nAlso verifies the recipient’s bank account information or debit card, if either is provided.</p>",
                      "method": "post",
                      "endpoint": "v1/recipients",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Permanently deletes a recipient. It cannot be undone.</p>",
                      "method": "delete",
                      "endpoint": "v1/recipients/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'recipient')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>",
                      "method": "get",
                      "endpoint": "v1/recipients/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified recipient by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged.</p>\n\n<p>If you update the name or tax ID, the identity verification will automatically be rerun.\nIf you update the bank account, the bank account validation will automatically be rerun.</p>",
                      "method": "post",
                      "endpoint": "v1/recipients/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of all refunds you’ve previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>",
                      "method": "get",
                      "endpoint": "v1/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Create a refund.</p>",
                      "method": "post",
                      "endpoint": "v1/refunds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing refund.</p>",
                      "method": "get",
                      "endpoint": "v1/refunds/:refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts <code>metadata</code> as an argument.</p>",
                      "method": "post",
                      "endpoint": "v1/refunds/:refund",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of Report Runs, with the most recent appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/reporting/report_runs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new object and begin running the report. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
                      "method": "post",
                      "endpoint": "v1/reporting/report_runs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing Report Run.</p>",
                      "method": "get",
                      "endpoint": "v1/reporting/report_runs/:report_run",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a full list of Report Types.</p>",
                      "method": "get",
                      "endpoint": "v1/reporting/report_types",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"data_available_end\": {{faker 'random.number'}},\n      \"data_available_start\": {{faker 'random.number'}},\n      \"default_columns\": [\n        \"\"\n      ],\n      \"id\": \"\",\n      \"name\": \"\",\n      \"object\": \"{{oneOf (array 'reporting.report_type')}}\",\n      \"updated\": {{faker 'random.number'}},\n      \"version\": {{faker 'random.number'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a Report Type. (Certain report types require a <a href=\"https://stripe.com/docs/keys#test-live-modes\">live-mode API key</a>.)</p>",
                      "method": "get",
                      "endpoint": "v1/reporting/report_types/:report_type",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data_available_end\": {{faker 'random.number'}},\n  \"data_available_start\": {{faker 'random.number'}},\n  \"default_columns\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'reporting.report_type')}}\",\n  \"updated\": {{faker 'random.number'}},\n  \"version\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/reviews",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a <code>Review</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/reviews/:review",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>",
                      "method": "post",
                      "endpoint": "v1/reviews/:review/approve",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of SetupAttempts associated with a provided SetupIntent.</p>",
                      "method": "get",
                      "endpoint": "v1/setup_attempts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of SetupIntents.</p>",
                      "method": "get",
                      "endpoint": "v1/setup_intents",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a SetupIntent object.</p>\n\n<p>After the SetupIntent is created, attach a payment method and <a href=\"/docs/api/setup_intents/confirm\">confirm</a>\nto collect any required permissions to charge the payment method later.</p>",
                      "method": "post",
                      "endpoint": "v1/setup_intents",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a SetupIntent that has previously been created. </p>\n\n<p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>\n\n<p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href=\"#setup_intent_object\">SetupIntent</a> object reference for more details.</p>",
                      "method": "get",
                      "endpoint": "v1/setup_intents/:intent",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a SetupIntent object.</p>",
                      "method": "post",
                      "endpoint": "v1/setup_intents/:intent",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A SetupIntent object can be canceled when it is in one of these statuses: <code>requires_payment_method</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>\n\n<p>Once canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.</p>",
                      "method": "post",
                      "endpoint": "v1/setup_intents/:intent/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Confirm that your customer intends to set up the current or\nprovided payment method. For example, you would confirm a SetupIntent\nwhen a customer hits the “Save” button on a payment method management\npage on your website.</p>\n\n<p>If the selected payment method does not require any additional\nsteps from the customer, the SetupIntent will transition to the\n<code>succeeded</code> status.</p>\n\n<p>Otherwise, it will transition to the <code>requires_action</code> status and\nsuggest additional actions via <code>next_action</code>. If setup fails,\nthe SetupIntent will transition to the\n<code>requires_payment_method</code> status.</p>",
                      "method": "post",
                      "endpoint": "v1/setup_intents/:intent/confirm",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of scheduled query runs.</p>",
                      "method": "get",
                      "endpoint": "v1/sigma/scheduled_query_runs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an scheduled query run.</p>",
                      "method": "get",
                      "endpoint": "v1/sigma/scheduled_query_runs/:scheduled_query_run",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/skus",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"attributes\": {},\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"id\": \"\",\n      \"image\": \"\",\n      \"inventory\": {\n        \"quantity\": {{faker 'random.number'}},\n        \"type\": \"\",\n        \"value\": \"\"\n      },\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'sku')}}\",\n      \"package_dimensions\": {\n        \"height\": {{faker 'random.number'}},\n        \"length\": {{faker 'random.number'}},\n        \"weight\": {{faker 'random.number'}},\n        \"width\": {{faker 'random.number'}}\n      },\n      \"price\": {{faker 'random.number'}},\n      \"product\": \"\",\n      \"updated\": {{faker 'random.number'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new SKU associated with a product.</p>",
                      "method": "post",
                      "endpoint": "v1/skus",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"attributes\": {},\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"image\": \"\",\n  \"inventory\": {\n    \"quantity\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"value\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'sku')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"price\": {{faker 'random.number'}},\n  \"product\": \"\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Delete a SKU. Deleting a SKU is only possible until it has been used in an order.</p>",
                      "method": "delete",
                      "endpoint": "v1/skus/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'sku')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>",
                      "method": "get",
                      "endpoint": "v1/skus/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"attributes\": {},\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"image\": \"\",\n  \"inventory\": {\n    \"quantity\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"value\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'sku')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"price\": {{faker 'random.number'}},\n  \"product\": \"\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>Note that a SKU’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>",
                      "method": "post",
                      "endpoint": "v1/skus/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"attributes\": {},\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"id\": \"\",\n  \"image\": \"\",\n  \"inventory\": {\n    \"quantity\": {{faker 'random.number'}},\n    \"type\": \"\",\n    \"value\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'sku')}}\",\n  \"package_dimensions\": {\n    \"height\": {{faker 'random.number'}},\n    \"length\": {{faker 'random.number'}},\n    \"weight\": {{faker 'random.number'}},\n    \"width\": {{faker 'random.number'}}\n  },\n  \"price\": {{faker 'random.number'}},\n  \"product\": \"\",\n  \"updated\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new source object.</p>",
                      "method": "post",
                      "endpoint": "v1/sources",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"ach_credit_transfer\": {\n    \"account_number\": \"\",\n    \"bank_name\": \"\",\n    \"fingerprint\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_account_holder_type\": \"\",\n    \"refund_routing_number\": \"\",\n    \"routing_number\": \"\",\n    \"swift_code\": \"\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\",\n    \"type\": \"\"\n  },\n  \"acss_debit\": {\n    \"bank_address_city\": \"\",\n    \"bank_address_line_1\": \"\",\n    \"bank_address_line_2\": \"\",\n    \"bank_address_postal_code\": \"\",\n    \"bank_name\": \"\",\n    \"category\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\"\n  },\n  \"alipay\": {\n    \"data_string\": \"\",\n    \"native_url\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"au_becs_debit\": {\n    \"bsb_number\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\"\n  },\n  \"bancontact\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"\",\n    \"application_preferred_name\": \"\",\n    \"authorization_code\": \"\",\n    \"authorization_response_code\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvm_type\": \"\",\n    \"data_type\": \"\",\n    \"dedicated_file_name\": \"\",\n    \"emv_auth_data\": \"\",\n    \"evidence_customer_signature\": \"\",\n    \"evidence_transaction_certificate\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"pos_device_id\": \"\",\n    \"pos_entry_mode\": \"\",\n    \"read_method\": \"\",\n    \"reader\": \"\",\n    \"terminal_verification_results\": \"\",\n    \"transaction_status_information\": \"\"\n  },\n  \"client_secret\": \"\",\n  \"code_verification\": {\n    \"attempts_remaining\": {{faker 'random.number'}},\n    \"status\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"customer\": \"\",\n  \"eps\": {\n    \"reference\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"flow\": \"\",\n  \"giropay\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"id\": \"\",\n  \"ideal\": {\n    \"bank\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"klarna\": {\n    \"background_image_url\": \"\",\n    \"client_token\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"locale\": \"\",\n    \"logo_url\": \"\",\n    \"page_title\": \"\",\n    \"pay_later_asset_urls_descriptive\": \"\",\n    \"pay_later_asset_urls_standard\": \"\",\n    \"pay_later_name\": \"\",\n    \"pay_later_redirect_url\": \"\",\n    \"pay_now_asset_urls_descriptive\": \"\",\n    \"pay_now_asset_urls_standard\": \"\",\n    \"pay_now_name\": \"\",\n    \"pay_now_redirect_url\": \"\",\n    \"pay_over_time_asset_urls_descriptive\": \"\",\n    \"pay_over_time_asset_urls_standard\": \"\",\n    \"pay_over_time_name\": \"\",\n    \"pay_over_time_redirect_url\": \"\",\n    \"payment_method_categories\": \"\",\n    \"purchase_country\": \"\",\n    \"purchase_type\": \"\",\n    \"redirect_url\": \"\",\n    \"shipping_delay\": {{faker 'random.number'}},\n    \"shipping_first_name\": \"\",\n    \"shipping_last_name\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"multibanco\": {\n    \"entity\": \"\",\n    \"reference\": \"\",\n    \"refund_account_holder_address_city\": \"\",\n    \"refund_account_holder_address_country\": \"\",\n    \"refund_account_holder_address_line1\": \"\",\n    \"refund_account_holder_address_line2\": \"\",\n    \"refund_account_holder_address_postal_code\": \"\",\n    \"refund_account_holder_address_state\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_iban\": \"\"\n  },\n  \"object\": \"{{oneOf (array 'source')}}\",\n  \"owner\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"email\": \"\",\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"verified_address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"verified_email\": \"\",\n    \"verified_name\": \"\",\n    \"verified_phone\": \"\"\n  },\n  \"p24\": {\n    \"reference\": \"\"\n  },\n  \"receiver\": {\n    \"address\": \"\",\n    \"amount_charged\": {{faker 'random.number'}},\n    \"amount_received\": {{faker 'random.number'}},\n    \"amount_returned\": {{faker 'random.number'}},\n    \"refund_attributes_method\": \"\",\n    \"refund_attributes_status\": \"\"\n  },\n  \"redirect\": {\n    \"failure_reason\": \"\",\n    \"return_url\": \"\",\n    \"status\": \"\",\n    \"url\": \"\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"\",\n    \"branch_code\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"mandate_reference\": \"\",\n    \"mandate_url\": \"\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"country\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"source_order\": {\n    \"amount\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"email\": \"\",\n    \"items\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"description\": \"\",\n        \"parent\": \"\",\n        \"quantity\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"shipping\": {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"carrier\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\",\n      \"tracking_number\": \"\"\n    }\n  },\n  \"statement_descriptor\": \"\",\n  \"status\": \"\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"authenticated\": {{faker 'random.boolean'}},\n    \"brand\": \"\",\n    \"card\": \"\",\n    \"country\": \"\",\n    \"customer\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'acss_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\",\n  \"usage\": \"\",\n  \"wechat\": {\n    \"prepay_id\": \"\",\n    \"qr_code_url\": \"\",\n    \"statement_descriptor\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>",
                      "method": "get",
                      "endpoint": "v1/sources/:source",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"ach_credit_transfer\": {\n    \"account_number\": \"\",\n    \"bank_name\": \"\",\n    \"fingerprint\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_account_holder_type\": \"\",\n    \"refund_routing_number\": \"\",\n    \"routing_number\": \"\",\n    \"swift_code\": \"\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\",\n    \"type\": \"\"\n  },\n  \"acss_debit\": {\n    \"bank_address_city\": \"\",\n    \"bank_address_line_1\": \"\",\n    \"bank_address_line_2\": \"\",\n    \"bank_address_postal_code\": \"\",\n    \"bank_name\": \"\",\n    \"category\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\"\n  },\n  \"alipay\": {\n    \"data_string\": \"\",\n    \"native_url\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"au_becs_debit\": {\n    \"bsb_number\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\"\n  },\n  \"bancontact\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"\",\n    \"application_preferred_name\": \"\",\n    \"authorization_code\": \"\",\n    \"authorization_response_code\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvm_type\": \"\",\n    \"data_type\": \"\",\n    \"dedicated_file_name\": \"\",\n    \"emv_auth_data\": \"\",\n    \"evidence_customer_signature\": \"\",\n    \"evidence_transaction_certificate\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"pos_device_id\": \"\",\n    \"pos_entry_mode\": \"\",\n    \"read_method\": \"\",\n    \"reader\": \"\",\n    \"terminal_verification_results\": \"\",\n    \"transaction_status_information\": \"\"\n  },\n  \"client_secret\": \"\",\n  \"code_verification\": {\n    \"attempts_remaining\": {{faker 'random.number'}},\n    \"status\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"customer\": \"\",\n  \"eps\": {\n    \"reference\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"flow\": \"\",\n  \"giropay\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"id\": \"\",\n  \"ideal\": {\n    \"bank\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"klarna\": {\n    \"background_image_url\": \"\",\n    \"client_token\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"locale\": \"\",\n    \"logo_url\": \"\",\n    \"page_title\": \"\",\n    \"pay_later_asset_urls_descriptive\": \"\",\n    \"pay_later_asset_urls_standard\": \"\",\n    \"pay_later_name\": \"\",\n    \"pay_later_redirect_url\": \"\",\n    \"pay_now_asset_urls_descriptive\": \"\",\n    \"pay_now_asset_urls_standard\": \"\",\n    \"pay_now_name\": \"\",\n    \"pay_now_redirect_url\": \"\",\n    \"pay_over_time_asset_urls_descriptive\": \"\",\n    \"pay_over_time_asset_urls_standard\": \"\",\n    \"pay_over_time_name\": \"\",\n    \"pay_over_time_redirect_url\": \"\",\n    \"payment_method_categories\": \"\",\n    \"purchase_country\": \"\",\n    \"purchase_type\": \"\",\n    \"redirect_url\": \"\",\n    \"shipping_delay\": {{faker 'random.number'}},\n    \"shipping_first_name\": \"\",\n    \"shipping_last_name\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"multibanco\": {\n    \"entity\": \"\",\n    \"reference\": \"\",\n    \"refund_account_holder_address_city\": \"\",\n    \"refund_account_holder_address_country\": \"\",\n    \"refund_account_holder_address_line1\": \"\",\n    \"refund_account_holder_address_line2\": \"\",\n    \"refund_account_holder_address_postal_code\": \"\",\n    \"refund_account_holder_address_state\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_iban\": \"\"\n  },\n  \"object\": \"{{oneOf (array 'source')}}\",\n  \"owner\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"email\": \"\",\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"verified_address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"verified_email\": \"\",\n    \"verified_name\": \"\",\n    \"verified_phone\": \"\"\n  },\n  \"p24\": {\n    \"reference\": \"\"\n  },\n  \"receiver\": {\n    \"address\": \"\",\n    \"amount_charged\": {{faker 'random.number'}},\n    \"amount_received\": {{faker 'random.number'}},\n    \"amount_returned\": {{faker 'random.number'}},\n    \"refund_attributes_method\": \"\",\n    \"refund_attributes_status\": \"\"\n  },\n  \"redirect\": {\n    \"failure_reason\": \"\",\n    \"return_url\": \"\",\n    \"status\": \"\",\n    \"url\": \"\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"\",\n    \"branch_code\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"mandate_reference\": \"\",\n    \"mandate_url\": \"\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"country\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"source_order\": {\n    \"amount\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"email\": \"\",\n    \"items\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"description\": \"\",\n        \"parent\": \"\",\n        \"quantity\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"shipping\": {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"carrier\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\",\n      \"tracking_number\": \"\"\n    }\n  },\n  \"statement_descriptor\": \"\",\n  \"status\": \"\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"authenticated\": {{faker 'random.boolean'}},\n    \"brand\": \"\",\n    \"card\": \"\",\n    \"country\": \"\",\n    \"customer\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'acss_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\",\n  \"usage\": \"\",\n  \"wechat\": {\n    \"prepay_id\": \"\",\n    \"qr_code_url\": \"\",\n    \"statement_descriptor\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href=\"/docs/sources\">payment method guides</a> for more detail.</p>",
                      "method": "post",
                      "endpoint": "v1/sources/:source",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"ach_credit_transfer\": {\n    \"account_number\": \"\",\n    \"bank_name\": \"\",\n    \"fingerprint\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_account_holder_type\": \"\",\n    \"refund_routing_number\": \"\",\n    \"routing_number\": \"\",\n    \"swift_code\": \"\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\",\n    \"type\": \"\"\n  },\n  \"acss_debit\": {\n    \"bank_address_city\": \"\",\n    \"bank_address_line_1\": \"\",\n    \"bank_address_line_2\": \"\",\n    \"bank_address_postal_code\": \"\",\n    \"bank_name\": \"\",\n    \"category\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\"\n  },\n  \"alipay\": {\n    \"data_string\": \"\",\n    \"native_url\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"au_becs_debit\": {\n    \"bsb_number\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\"\n  },\n  \"bancontact\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"\",\n    \"application_preferred_name\": \"\",\n    \"authorization_code\": \"\",\n    \"authorization_response_code\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvm_type\": \"\",\n    \"data_type\": \"\",\n    \"dedicated_file_name\": \"\",\n    \"emv_auth_data\": \"\",\n    \"evidence_customer_signature\": \"\",\n    \"evidence_transaction_certificate\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"pos_device_id\": \"\",\n    \"pos_entry_mode\": \"\",\n    \"read_method\": \"\",\n    \"reader\": \"\",\n    \"terminal_verification_results\": \"\",\n    \"transaction_status_information\": \"\"\n  },\n  \"client_secret\": \"\",\n  \"code_verification\": {\n    \"attempts_remaining\": {{faker 'random.number'}},\n    \"status\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"customer\": \"\",\n  \"eps\": {\n    \"reference\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"flow\": \"\",\n  \"giropay\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"id\": \"\",\n  \"ideal\": {\n    \"bank\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"klarna\": {\n    \"background_image_url\": \"\",\n    \"client_token\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"locale\": \"\",\n    \"logo_url\": \"\",\n    \"page_title\": \"\",\n    \"pay_later_asset_urls_descriptive\": \"\",\n    \"pay_later_asset_urls_standard\": \"\",\n    \"pay_later_name\": \"\",\n    \"pay_later_redirect_url\": \"\",\n    \"pay_now_asset_urls_descriptive\": \"\",\n    \"pay_now_asset_urls_standard\": \"\",\n    \"pay_now_name\": \"\",\n    \"pay_now_redirect_url\": \"\",\n    \"pay_over_time_asset_urls_descriptive\": \"\",\n    \"pay_over_time_asset_urls_standard\": \"\",\n    \"pay_over_time_name\": \"\",\n    \"pay_over_time_redirect_url\": \"\",\n    \"payment_method_categories\": \"\",\n    \"purchase_country\": \"\",\n    \"purchase_type\": \"\",\n    \"redirect_url\": \"\",\n    \"shipping_delay\": {{faker 'random.number'}},\n    \"shipping_first_name\": \"\",\n    \"shipping_last_name\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"multibanco\": {\n    \"entity\": \"\",\n    \"reference\": \"\",\n    \"refund_account_holder_address_city\": \"\",\n    \"refund_account_holder_address_country\": \"\",\n    \"refund_account_holder_address_line1\": \"\",\n    \"refund_account_holder_address_line2\": \"\",\n    \"refund_account_holder_address_postal_code\": \"\",\n    \"refund_account_holder_address_state\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_iban\": \"\"\n  },\n  \"object\": \"{{oneOf (array 'source')}}\",\n  \"owner\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"email\": \"\",\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"verified_address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"verified_email\": \"\",\n    \"verified_name\": \"\",\n    \"verified_phone\": \"\"\n  },\n  \"p24\": {\n    \"reference\": \"\"\n  },\n  \"receiver\": {\n    \"address\": \"\",\n    \"amount_charged\": {{faker 'random.number'}},\n    \"amount_received\": {{faker 'random.number'}},\n    \"amount_returned\": {{faker 'random.number'}},\n    \"refund_attributes_method\": \"\",\n    \"refund_attributes_status\": \"\"\n  },\n  \"redirect\": {\n    \"failure_reason\": \"\",\n    \"return_url\": \"\",\n    \"status\": \"\",\n    \"url\": \"\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"\",\n    \"branch_code\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"mandate_reference\": \"\",\n    \"mandate_url\": \"\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"country\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"source_order\": {\n    \"amount\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"email\": \"\",\n    \"items\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"description\": \"\",\n        \"parent\": \"\",\n        \"quantity\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"shipping\": {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"carrier\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\",\n      \"tracking_number\": \"\"\n    }\n  },\n  \"statement_descriptor\": \"\",\n  \"status\": \"\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"authenticated\": {{faker 'random.boolean'}},\n    \"brand\": \"\",\n    \"card\": \"\",\n    \"country\": \"\",\n    \"customer\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'acss_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\",\n  \"usage\": \"\",\n  \"wechat\": {\n    \"prepay_id\": \"\",\n    \"qr_code_url\": \"\",\n    \"statement_descriptor\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a new Source MandateNotification.</p>",
                      "method": "get",
                      "endpoint": "v1/sources/:source/mandate_notifications/:mandate_notification",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"acss_debit\": {\n    \"statement_descriptor\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"bacs_debit\": {\n    \"last4\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'source_mandate_notification')}}\",\n  \"reason\": \"\",\n  \"sepa_debit\": {\n    \"creditor_identifier\": \"\",\n    \"last4\": \"\",\n    \"mandate_reference\": \"\"\n  },\n  \"source\": {\n    \"ach_credit_transfer\": {\n      \"account_number\": \"\",\n      \"bank_name\": \"\",\n      \"fingerprint\": \"\",\n      \"refund_account_holder_name\": \"\",\n      \"refund_account_holder_type\": \"\",\n      \"refund_routing_number\": \"\",\n      \"routing_number\": \"\",\n      \"swift_code\": \"\"\n    },\n    \"ach_debit\": {\n      \"bank_name\": \"\",\n      \"country\": \"\",\n      \"fingerprint\": \"\",\n      \"last4\": \"\",\n      \"routing_number\": \"\",\n      \"type\": \"\"\n    },\n    \"acss_debit\": {\n      \"bank_address_city\": \"\",\n      \"bank_address_line_1\": \"\",\n      \"bank_address_line_2\": \"\",\n      \"bank_address_postal_code\": \"\",\n      \"bank_name\": \"\",\n      \"category\": \"\",\n      \"country\": \"\",\n      \"fingerprint\": \"\",\n      \"last4\": \"\",\n      \"routing_number\": \"\"\n    },\n    \"alipay\": {\n      \"data_string\": \"\",\n      \"native_url\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"amount\": {{faker 'random.number'}},\n    \"au_becs_debit\": {\n      \"bsb_number\": \"\",\n      \"fingerprint\": \"\",\n      \"last4\": \"\"\n    },\n    \"bancontact\": {\n      \"bank_code\": \"\",\n      \"bank_name\": \"\",\n      \"bic\": \"\",\n      \"iban_last4\": \"\",\n      \"preferred_language\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"card\": {\n      \"address_line1_check\": \"\",\n      \"address_zip_check\": \"\",\n      \"brand\": \"\",\n      \"country\": \"\",\n      \"cvc_check\": \"\",\n      \"dynamic_last4\": \"\",\n      \"exp_month\": {{faker 'random.number'}},\n      \"exp_year\": {{faker 'random.number'}},\n      \"fingerprint\": \"\",\n      \"funding\": \"\",\n      \"last4\": \"\",\n      \"name\": \"\",\n      \"three_d_secure\": \"\",\n      \"tokenization_method\": \"\"\n    },\n    \"card_present\": {\n      \"application_cryptogram\": \"\",\n      \"application_preferred_name\": \"\",\n      \"authorization_code\": \"\",\n      \"authorization_response_code\": \"\",\n      \"brand\": \"\",\n      \"country\": \"\",\n      \"cvm_type\": \"\",\n      \"data_type\": \"\",\n      \"dedicated_file_name\": \"\",\n      \"emv_auth_data\": \"\",\n      \"evidence_customer_signature\": \"\",\n      \"evidence_transaction_certificate\": \"\",\n      \"exp_month\": {{faker 'random.number'}},\n      \"exp_year\": {{faker 'random.number'}},\n      \"fingerprint\": \"\",\n      \"funding\": \"\",\n      \"last4\": \"\",\n      \"pos_device_id\": \"\",\n      \"pos_entry_mode\": \"\",\n      \"read_method\": \"\",\n      \"reader\": \"\",\n      \"terminal_verification_results\": \"\",\n      \"transaction_status_information\": \"\"\n    },\n    \"client_secret\": \"\",\n    \"code_verification\": {\n      \"attempts_remaining\": {{faker 'random.number'}},\n      \"status\": \"\"\n    },\n    \"created\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"customer\": \"\",\n    \"eps\": {\n      \"reference\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"flow\": \"\",\n    \"giropay\": {\n      \"bank_code\": \"\",\n      \"bank_name\": \"\",\n      \"bic\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"id\": \"\",\n    \"ideal\": {\n      \"bank\": \"\",\n      \"bic\": \"\",\n      \"iban_last4\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"klarna\": {\n      \"background_image_url\": \"\",\n      \"client_token\": \"\",\n      \"first_name\": \"\",\n      \"last_name\": \"\",\n      \"locale\": \"\",\n      \"logo_url\": \"\",\n      \"page_title\": \"\",\n      \"pay_later_asset_urls_descriptive\": \"\",\n      \"pay_later_asset_urls_standard\": \"\",\n      \"pay_later_name\": \"\",\n      \"pay_later_redirect_url\": \"\",\n      \"pay_now_asset_urls_descriptive\": \"\",\n      \"pay_now_asset_urls_standard\": \"\",\n      \"pay_now_name\": \"\",\n      \"pay_now_redirect_url\": \"\",\n      \"pay_over_time_asset_urls_descriptive\": \"\",\n      \"pay_over_time_asset_urls_standard\": \"\",\n      \"pay_over_time_name\": \"\",\n      \"pay_over_time_redirect_url\": \"\",\n      \"payment_method_categories\": \"\",\n      \"purchase_country\": \"\",\n      \"purchase_type\": \"\",\n      \"redirect_url\": \"\",\n      \"shipping_delay\": {{faker 'random.number'}},\n      \"shipping_first_name\": \"\",\n      \"shipping_last_name\": \"\"\n    },\n    \"livemode\": {{faker 'random.boolean'}},\n    \"metadata\": {},\n    \"multibanco\": {\n      \"entity\": \"\",\n      \"reference\": \"\",\n      \"refund_account_holder_address_city\": \"\",\n      \"refund_account_holder_address_country\": \"\",\n      \"refund_account_holder_address_line1\": \"\",\n      \"refund_account_holder_address_line2\": \"\",\n      \"refund_account_holder_address_postal_code\": \"\",\n      \"refund_account_holder_address_state\": \"\",\n      \"refund_account_holder_name\": \"\",\n      \"refund_iban\": \"\"\n    },\n    \"object\": \"{{oneOf (array 'source')}}\",\n    \"owner\": {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"email\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\",\n      \"verified_address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"verified_email\": \"\",\n      \"verified_name\": \"\",\n      \"verified_phone\": \"\"\n    },\n    \"p24\": {\n      \"reference\": \"\"\n    },\n    \"receiver\": {\n      \"address\": \"\",\n      \"amount_charged\": {{faker 'random.number'}},\n      \"amount_received\": {{faker 'random.number'}},\n      \"amount_returned\": {{faker 'random.number'}},\n      \"refund_attributes_method\": \"\",\n      \"refund_attributes_status\": \"\"\n    },\n    \"redirect\": {\n      \"failure_reason\": \"\",\n      \"return_url\": \"\",\n      \"status\": \"\",\n      \"url\": \"\"\n    },\n    \"sepa_debit\": {\n      \"bank_code\": \"\",\n      \"branch_code\": \"\",\n      \"country\": \"\",\n      \"fingerprint\": \"\",\n      \"last4\": \"\",\n      \"mandate_reference\": \"\",\n      \"mandate_url\": \"\"\n    },\n    \"sofort\": {\n      \"bank_code\": \"\",\n      \"bank_name\": \"\",\n      \"bic\": \"\",\n      \"country\": \"\",\n      \"iban_last4\": \"\",\n      \"preferred_language\": \"\",\n      \"statement_descriptor\": \"\"\n    },\n    \"source_order\": {\n      \"amount\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"email\": \"\",\n      \"items\": [\n        {\n          \"amount\": {{faker 'random.number'}},\n          \"currency\": \"\",\n          \"description\": \"\",\n          \"parent\": \"\",\n          \"quantity\": {{faker 'random.number'}},\n          \"type\": \"\"\n        }\n      ],\n      \"shipping\": {\n        \"address\": {\n          \"city\": \"\",\n          \"country\": \"\",\n          \"line1\": \"\",\n          \"line2\": \"\",\n          \"postal_code\": \"\",\n          \"state\": \"\"\n        },\n        \"carrier\": \"\",\n        \"name\": \"\",\n        \"phone\": \"\",\n        \"tracking_number\": \"\"\n      }\n    },\n    \"statement_descriptor\": \"\",\n    \"status\": \"\",\n    \"three_d_secure\": {\n      \"address_line1_check\": \"\",\n      \"address_zip_check\": \"\",\n      \"authenticated\": {{faker 'random.boolean'}},\n      \"brand\": \"\",\n      \"card\": \"\",\n      \"country\": \"\",\n      \"customer\": \"\",\n      \"cvc_check\": \"\",\n      \"dynamic_last4\": \"\",\n      \"exp_month\": {{faker 'random.number'}},\n      \"exp_year\": {{faker 'random.number'}},\n      \"fingerprint\": \"\",\n      \"funding\": \"\",\n      \"last4\": \"\",\n      \"name\": \"\",\n      \"three_d_secure\": \"\",\n      \"tokenization_method\": \"\"\n    },\n    \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'acss_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\",\n    \"usage\": \"\",\n    \"wechat\": {\n      \"prepay_id\": \"\",\n      \"qr_code_url\": \"\",\n      \"statement_descriptor\": \"\"\n    }\n  },\n  \"status\": \"\",\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>List source transactions for a given source.</p>",
                      "method": "get",
                      "endpoint": "v1/sources/:source/source_transactions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"ach_credit_transfer\": {\n        \"customer_data\": \"\",\n        \"fingerprint\": \"\",\n        \"last4\": \"\",\n        \"routing_number\": \"\"\n      },\n      \"amount\": {{faker 'random.number'}},\n      \"chf_credit_transfer\": {\n        \"reference\": \"\",\n        \"sender_address_country\": \"\",\n        \"sender_address_line1\": \"\",\n        \"sender_iban\": \"\",\n        \"sender_name\": \"\"\n      },\n      \"created\": {{faker 'random.number'}},\n      \"currency\": \"\",\n      \"gbp_credit_transfer\": {\n        \"fingerprint\": \"\",\n        \"funding_method\": \"\",\n        \"last4\": \"\",\n        \"reference\": \"\",\n        \"sender_account_number\": \"\",\n        \"sender_name\": \"\",\n        \"sender_sort_code\": \"\"\n      },\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'source_transaction')}}\",\n      \"paper_check\": {\n        \"available_at\": \"\",\n        \"invoices\": \"\"\n      },\n      \"sepa_credit_transfer\": {\n        \"reference\": \"\",\n        \"sender_iban\": \"\",\n        \"sender_name\": \"\"\n      },\n      \"source\": \"\",\n      \"status\": \"\",\n      \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>",
                      "method": "get",
                      "endpoint": "v1/sources/:source/source_transactions/:source_transaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"ach_credit_transfer\": {\n    \"customer_data\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"chf_credit_transfer\": {\n    \"reference\": \"\",\n    \"sender_address_country\": \"\",\n    \"sender_address_line1\": \"\",\n    \"sender_iban\": \"\",\n    \"sender_name\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"gbp_credit_transfer\": {\n    \"fingerprint\": \"\",\n    \"funding_method\": \"\",\n    \"last4\": \"\",\n    \"reference\": \"\",\n    \"sender_account_number\": \"\",\n    \"sender_name\": \"\",\n    \"sender_sort_code\": \"\"\n  },\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'source_transaction')}}\",\n  \"paper_check\": {\n    \"available_at\": \"\",\n    \"invoices\": \"\"\n  },\n  \"sepa_credit_transfer\": {\n    \"reference\": \"\",\n    \"sender_iban\": \"\",\n    \"sender_name\": \"\"\n  },\n  \"source\": \"\",\n  \"status\": \"\",\n  \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'alipay' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Verify a given source.</p>",
                      "method": "post",
                      "endpoint": "v1/sources/:source/verify",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"ach_credit_transfer\": {\n    \"account_number\": \"\",\n    \"bank_name\": \"\",\n    \"fingerprint\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_account_holder_type\": \"\",\n    \"refund_routing_number\": \"\",\n    \"routing_number\": \"\",\n    \"swift_code\": \"\"\n  },\n  \"ach_debit\": {\n    \"bank_name\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\",\n    \"type\": \"\"\n  },\n  \"acss_debit\": {\n    \"bank_address_city\": \"\",\n    \"bank_address_line_1\": \"\",\n    \"bank_address_line_2\": \"\",\n    \"bank_address_postal_code\": \"\",\n    \"bank_name\": \"\",\n    \"category\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"routing_number\": \"\"\n  },\n  \"alipay\": {\n    \"data_string\": \"\",\n    \"native_url\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"amount\": {{faker 'random.number'}},\n  \"au_becs_debit\": {\n    \"bsb_number\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\"\n  },\n  \"bancontact\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"card\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"card_present\": {\n    \"application_cryptogram\": \"\",\n    \"application_preferred_name\": \"\",\n    \"authorization_code\": \"\",\n    \"authorization_response_code\": \"\",\n    \"brand\": \"\",\n    \"country\": \"\",\n    \"cvm_type\": \"\",\n    \"data_type\": \"\",\n    \"dedicated_file_name\": \"\",\n    \"emv_auth_data\": \"\",\n    \"evidence_customer_signature\": \"\",\n    \"evidence_transaction_certificate\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"pos_device_id\": \"\",\n    \"pos_entry_mode\": \"\",\n    \"read_method\": \"\",\n    \"reader\": \"\",\n    \"terminal_verification_results\": \"\",\n    \"transaction_status_information\": \"\"\n  },\n  \"client_secret\": \"\",\n  \"code_verification\": {\n    \"attempts_remaining\": {{faker 'random.number'}},\n    \"status\": \"\"\n  },\n  \"created\": {{faker 'random.number'}},\n  \"currency\": \"\",\n  \"customer\": \"\",\n  \"eps\": {\n    \"reference\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"flow\": \"\",\n  \"giropay\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"id\": \"\",\n  \"ideal\": {\n    \"bank\": \"\",\n    \"bic\": \"\",\n    \"iban_last4\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"klarna\": {\n    \"background_image_url\": \"\",\n    \"client_token\": \"\",\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"locale\": \"\",\n    \"logo_url\": \"\",\n    \"page_title\": \"\",\n    \"pay_later_asset_urls_descriptive\": \"\",\n    \"pay_later_asset_urls_standard\": \"\",\n    \"pay_later_name\": \"\",\n    \"pay_later_redirect_url\": \"\",\n    \"pay_now_asset_urls_descriptive\": \"\",\n    \"pay_now_asset_urls_standard\": \"\",\n    \"pay_now_name\": \"\",\n    \"pay_now_redirect_url\": \"\",\n    \"pay_over_time_asset_urls_descriptive\": \"\",\n    \"pay_over_time_asset_urls_standard\": \"\",\n    \"pay_over_time_name\": \"\",\n    \"pay_over_time_redirect_url\": \"\",\n    \"payment_method_categories\": \"\",\n    \"purchase_country\": \"\",\n    \"purchase_type\": \"\",\n    \"redirect_url\": \"\",\n    \"shipping_delay\": {{faker 'random.number'}},\n    \"shipping_first_name\": \"\",\n    \"shipping_last_name\": \"\"\n  },\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"multibanco\": {\n    \"entity\": \"\",\n    \"reference\": \"\",\n    \"refund_account_holder_address_city\": \"\",\n    \"refund_account_holder_address_country\": \"\",\n    \"refund_account_holder_address_line1\": \"\",\n    \"refund_account_holder_address_line2\": \"\",\n    \"refund_account_holder_address_postal_code\": \"\",\n    \"refund_account_holder_address_state\": \"\",\n    \"refund_account_holder_name\": \"\",\n    \"refund_iban\": \"\"\n  },\n  \"object\": \"{{oneOf (array 'source')}}\",\n  \"owner\": {\n    \"address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"email\": \"\",\n    \"name\": \"\",\n    \"phone\": \"\",\n    \"verified_address\": {\n      \"city\": \"\",\n      \"country\": \"\",\n      \"line1\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"\",\n      \"state\": \"\"\n    },\n    \"verified_email\": \"\",\n    \"verified_name\": \"\",\n    \"verified_phone\": \"\"\n  },\n  \"p24\": {\n    \"reference\": \"\"\n  },\n  \"receiver\": {\n    \"address\": \"\",\n    \"amount_charged\": {{faker 'random.number'}},\n    \"amount_received\": {{faker 'random.number'}},\n    \"amount_returned\": {{faker 'random.number'}},\n    \"refund_attributes_method\": \"\",\n    \"refund_attributes_status\": \"\"\n  },\n  \"redirect\": {\n    \"failure_reason\": \"\",\n    \"return_url\": \"\",\n    \"status\": \"\",\n    \"url\": \"\"\n  },\n  \"sepa_debit\": {\n    \"bank_code\": \"\",\n    \"branch_code\": \"\",\n    \"country\": \"\",\n    \"fingerprint\": \"\",\n    \"last4\": \"\",\n    \"mandate_reference\": \"\",\n    \"mandate_url\": \"\"\n  },\n  \"sofort\": {\n    \"bank_code\": \"\",\n    \"bank_name\": \"\",\n    \"bic\": \"\",\n    \"country\": \"\",\n    \"iban_last4\": \"\",\n    \"preferred_language\": \"\",\n    \"statement_descriptor\": \"\"\n  },\n  \"source_order\": {\n    \"amount\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"email\": \"\",\n    \"items\": [\n      {\n        \"amount\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"description\": \"\",\n        \"parent\": \"\",\n        \"quantity\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"shipping\": {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"carrier\": \"\",\n      \"name\": \"\",\n      \"phone\": \"\",\n      \"tracking_number\": \"\"\n    }\n  },\n  \"statement_descriptor\": \"\",\n  \"status\": \"\",\n  \"three_d_secure\": {\n    \"address_line1_check\": \"\",\n    \"address_zip_check\": \"\",\n    \"authenticated\": {{faker 'random.boolean'}},\n    \"brand\": \"\",\n    \"card\": \"\",\n    \"country\": \"\",\n    \"customer\": \"\",\n    \"cvc_check\": \"\",\n    \"dynamic_last4\": \"\",\n    \"exp_month\": {{faker 'random.number'}},\n    \"exp_year\": {{faker 'random.number'}},\n    \"fingerprint\": \"\",\n    \"funding\": \"\",\n    \"last4\": \"\",\n    \"name\": \"\",\n    \"three_d_secure\": \"\",\n    \"tokenization_method\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'ach_credit_transfer' 'ach_debit' 'acss_debit' 'alipay' 'au_becs_debit' 'bancontact' 'card' 'card_present' 'eps' 'giropay' 'ideal' 'klarna' 'multibanco' 'p24' 'sepa_debit' 'sofort' 'three_d_secure' 'wechat')}}\",\n  \"usage\": \"\",\n  \"wechat\": {\n    \"prepay_id\": \"\",\n    \"qr_code_url\": \"\",\n    \"statement_descriptor\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your subscription items for a given subscription.</p>",
                      "method": "get",
                      "endpoint": "v1/subscription_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"billing_thresholds\": {\n        \"usage_gte\": {{faker 'random.number'}}\n      },\n      \"created\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'subscription_item')}}\",\n      \"price\": {\n        \"active\": {{faker 'random.boolean'}},\n        \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n        \"created\": {{faker 'random.number'}},\n        \"currency\": \"\",\n        \"id\": \"\",\n        \"livemode\": {{faker 'random.boolean'}},\n        \"lookup_key\": \"\",\n        \"metadata\": {},\n        \"nickname\": \"\",\n        \"object\": \"{{oneOf (array 'price')}}\",\n        \"product\": \"\",\n        \"recurring\": {\n          \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n          \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n          \"interval_count\": {{faker 'random.number'}},\n          \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n        },\n        \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n        \"tiers\": [\n          {\n            \"flat_amount\": {{faker 'random.number'}},\n            \"flat_amount_decimal\": \"\",\n            \"unit_amount\": {{faker 'random.number'}},\n            \"unit_amount_decimal\": \"\",\n            \"up_to\": {{faker 'random.number'}}\n          }\n        ],\n        \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n        \"transform_quantity\": {\n          \"divide_by\": {{faker 'random.number'}},\n          \"round\": \"{{oneOf (array 'down' 'up')}}\"\n        },\n        \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n        \"unit_amount\": {{faker 'random.number'}},\n        \"unit_amount_decimal\": \"\"\n      },\n      \"quantity\": {{faker 'random.number'}},\n      \"subscription\": \"\",\n      \"tax_rates\": [\n        {\n          \"active\": {{faker 'random.boolean'}},\n          \"country\": \"\",\n          \"created\": {{faker 'random.number'}},\n          \"description\": \"\",\n          \"display_name\": \"\",\n          \"id\": \"\",\n          \"inclusive\": {{faker 'random.boolean'}},\n          \"jurisdiction\": \"\",\n          \"livemode\": {{faker 'random.boolean'}},\n          \"metadata\": {},\n          \"object\": \"{{oneOf (array 'tax_rate')}}\",\n          \"percentage\": {{faker 'random.number'}},\n          \"state\": \"\",\n          \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n        }\n      ]\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_items",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"billing_thresholds\": {\n    \"usage_gte\": {{faker 'random.number'}}\n  },\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'subscription_item')}}\",\n  \"price\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n    \"created\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"id\": \"\",\n    \"livemode\": {{faker 'random.boolean'}},\n    \"lookup_key\": \"\",\n    \"metadata\": {},\n    \"nickname\": \"\",\n    \"object\": \"{{oneOf (array 'price')}}\",\n    \"product\": \"\",\n    \"recurring\": {\n      \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n      \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n      \"interval_count\": {{faker 'random.number'}},\n      \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n    },\n    \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n    \"tiers\": [\n      {\n        \"flat_amount\": {{faker 'random.number'}},\n        \"flat_amount_decimal\": \"\",\n        \"unit_amount\": {{faker 'random.number'}},\n        \"unit_amount_decimal\": \"\",\n        \"up_to\": {{faker 'random.number'}}\n      }\n    ],\n    \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n    \"transform_quantity\": {\n      \"divide_by\": {{faker 'random.number'}},\n      \"round\": \"{{oneOf (array 'down' 'up')}}\"\n    },\n    \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n    \"unit_amount\": {{faker 'random.number'}},\n    \"unit_amount_decimal\": \"\"\n  },\n  \"quantity\": {{faker 'random.number'}},\n  \"subscription\": \"\",\n  \"tax_rates\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"inclusive\": {{faker 'random.boolean'}},\n      \"jurisdiction\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'tax_rate')}}\",\n      \"percentage\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>",
                      "method": "delete",
                      "endpoint": "v1/subscription_items/:item",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'subscription_item')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the subscription item with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/subscription_items/:item",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"billing_thresholds\": {\n    \"usage_gte\": {{faker 'random.number'}}\n  },\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'subscription_item')}}\",\n  \"price\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n    \"created\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"id\": \"\",\n    \"livemode\": {{faker 'random.boolean'}},\n    \"lookup_key\": \"\",\n    \"metadata\": {},\n    \"nickname\": \"\",\n    \"object\": \"{{oneOf (array 'price')}}\",\n    \"product\": \"\",\n    \"recurring\": {\n      \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n      \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n      \"interval_count\": {{faker 'random.number'}},\n      \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n    },\n    \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n    \"tiers\": [\n      {\n        \"flat_amount\": {{faker 'random.number'}},\n        \"flat_amount_decimal\": \"\",\n        \"unit_amount\": {{faker 'random.number'}},\n        \"unit_amount_decimal\": \"\",\n        \"up_to\": {{faker 'random.number'}}\n      }\n    ],\n    \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n    \"transform_quantity\": {\n      \"divide_by\": {{faker 'random.number'}},\n      \"round\": \"{{oneOf (array 'down' 'up')}}\"\n    },\n    \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n    \"unit_amount\": {{faker 'random.number'}},\n    \"unit_amount_decimal\": \"\"\n  },\n  \"quantity\": {{faker 'random.number'}},\n  \"subscription\": \"\",\n  \"tax_rates\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"inclusive\": {{faker 'random.boolean'}},\n      \"jurisdiction\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'tax_rate')}}\",\n      \"percentage\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the plan or quantity of an item on a current subscription.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_items/:item",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"billing_thresholds\": {\n    \"usage_gte\": {{faker 'random.number'}}\n  },\n  \"created\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'subscription_item')}}\",\n  \"price\": {\n    \"active\": {{faker 'random.boolean'}},\n    \"billing_scheme\": \"{{oneOf (array 'per_unit' 'tiered')}}\",\n    \"created\": {{faker 'random.number'}},\n    \"currency\": \"\",\n    \"id\": \"\",\n    \"livemode\": {{faker 'random.boolean'}},\n    \"lookup_key\": \"\",\n    \"metadata\": {},\n    \"nickname\": \"\",\n    \"object\": \"{{oneOf (array 'price')}}\",\n    \"product\": \"\",\n    \"recurring\": {\n      \"aggregate_usage\": \"{{oneOf (array 'last_during_period' 'last_ever' 'max' 'sum')}}\",\n      \"interval\": \"{{oneOf (array 'day' 'month' 'week' 'year')}}\",\n      \"interval_count\": {{faker 'random.number'}},\n      \"usage_type\": \"{{oneOf (array 'licensed' 'metered')}}\"\n    },\n    \"tax_behavior\": \"{{oneOf (array 'exclusive' 'inclusive' 'unspecified')}}\",\n    \"tiers\": [\n      {\n        \"flat_amount\": {{faker 'random.number'}},\n        \"flat_amount_decimal\": \"\",\n        \"unit_amount\": {{faker 'random.number'}},\n        \"unit_amount_decimal\": \"\",\n        \"up_to\": {{faker 'random.number'}}\n      }\n    ],\n    \"tiers_mode\": \"{{oneOf (array 'graduated' 'volume')}}\",\n    \"transform_quantity\": {\n      \"divide_by\": {{faker 'random.number'}},\n      \"round\": \"{{oneOf (array 'down' 'up')}}\"\n    },\n    \"type\": \"{{oneOf (array 'one_time' 'recurring')}}\",\n    \"unit_amount\": {{faker 'random.number'}},\n    \"unit_amount_decimal\": \"\"\n  },\n  \"quantity\": {{faker 'random.number'}},\n  \"subscription\": \"\",\n  \"tax_rates\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"inclusive\": {{faker 'random.boolean'}},\n      \"jurisdiction\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'tax_rate')}}\",\n      \"percentage\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that’s been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the month of September).</p>\n\n<p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn’t ended yet. Since new usage records can still be added, the returned summary information for the subscription item’s ID should be seen as unstable until the subscription billing period ends.</p>",
                      "method": "get",
                      "endpoint": "v1/subscription_items/:subscription_item/usage_record_summaries",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"id\": \"\",\n      \"invoice\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"object\": \"{{oneOf (array 'usage_record_summary')}}\",\n      \"period\": {\n        \"end\": {{faker 'random.number'}},\n        \"start\": {{faker 'random.number'}}\n      },\n      \"subscription_item\": \"\",\n      \"total_usage\": {{faker 'random.number'}}\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>\n\n<p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href=\"https://stripe.com/docs/billing/subscriptions/metered-billing\">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>\n\n<p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan’s <code>aggregate_usage</code> <a href=\"/docs/api/plans/create#create_plan-aggregate_usage\">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>\n\n<p>The default pricing model for metered billing is <a href=\"/docs/api/plans/object#plan_object-billing_scheme\">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href=\"https://stripe.com/docs/billing/subscriptions/tiers\">tiered pricing</a> model.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_items/:subscription_item/usage_records",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'usage_record')}}\",\n  \"quantity\": {{faker 'random.number'}},\n  \"subscription_item\": \"\",\n  \"timestamp\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the list of your subscription schedules.</p>",
                      "method": "get",
                      "endpoint": "v1/subscription_schedules",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new subscription schedule object. Each customer can have up to 500 active or scheduled subscriptions.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_schedules",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>",
                      "method": "get",
                      "endpoint": "v1/subscription_schedules/:schedule",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing subscription schedule.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_schedules/:schedule",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_schedules/:schedule/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription’s ID to the <code>released_subscription</code> property.</p>",
                      "method": "post",
                      "endpoint": "v1/subscription_schedules/:schedule/release",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>",
                      "method": "get",
                      "endpoint": "v1/subscriptions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new subscription on an existing customer. Each customer can have up to 500 active or scheduled subscriptions.</p>",
                      "method": "post",
                      "endpoint": "v1/subscriptions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Cancels a customer’s subscription immediately. The customer will not be charged again for the subscription.</p>\n\n<p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href=\"#delete_invoiceitem\">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>\n\n<p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>",
                      "method": "delete",
                      "endpoint": "v1/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the subscription with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href=\"#upcoming_invoice\">upcoming invoice</a> endpoint.</p>",
                      "method": "post",
                      "endpoint": "v1/subscriptions/:subscription_exposed_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Removes the currently applied discount on a subscription.</p>",
                      "method": "delete",
                      "endpoint": "v1/subscriptions/:subscription_exposed_id/discount",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A list of <a href=\"https://stripe.com/docs/tax/tax-codes\">all tax codes available</a> to add to Products in order to allow specific tax calculations.</p>",
                      "method": "get",
                      "endpoint": "v1/tax_codes",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"object\": \"{{oneOf (array 'tax_code')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing tax code. Supply the unique tax code ID and Stripe will return the corresponding tax code information.</p>",
                      "method": "get",
                      "endpoint": "v1/tax_codes/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"object\": \"{{oneOf (array 'tax_code')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/tax_rates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"active\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"inclusive\": {{faker 'random.boolean'}},\n      \"jurisdiction\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'tax_rate')}}\",\n      \"percentage\": {{faker 'random.number'}},\n      \"state\": \"\",\n      \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new tax rate.</p>",
                      "method": "post",
                      "endpoint": "v1/tax_rates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"country\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"inclusive\": {{faker 'random.boolean'}},\n  \"jurisdiction\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'tax_rate')}}\",\n  \"percentage\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a tax rate with the given ID</p>",
                      "method": "get",
                      "endpoint": "v1/tax_rates/:tax_rate",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"country\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"inclusive\": {{faker 'random.boolean'}},\n  \"jurisdiction\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'tax_rate')}}\",\n  \"percentage\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates an existing tax rate.</p>",
                      "method": "post",
                      "endpoint": "v1/tax_rates/:tax_rate",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"active\": {{faker 'random.boolean'}},\n  \"country\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"inclusive\": {{faker 'random.boolean'}},\n  \"jurisdiction\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'tax_rate')}}\",\n  \"percentage\": {{faker 'random.number'}},\n  \"state\": \"\",\n  \"tax_type\": \"{{oneOf (array 'gst' 'hst' 'pst' 'qst' 'sales_tax' 'vat')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>",
                      "method": "post",
                      "endpoint": "v1/terminal/connection_tokens",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"location\": \"\",\n  \"object\": \"{{oneOf (array 'terminal.connection_token')}}\",\n  \"secret\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of <code>Location</code> objects.</p>",
                      "method": "get",
                      "endpoint": "v1/terminal/locations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"address\": {\n        \"city\": \"\",\n        \"country\": \"\",\n        \"line1\": \"\",\n        \"line2\": \"\",\n        \"postal_code\": \"\",\n        \"state\": \"\"\n      },\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'terminal.location')}}\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>Location</code> object.</p>",
                      "method": "post",
                      "endpoint": "v1/terminal/locations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"address\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"line1\": \"\",\n    \"line2\": \"\",\n    \"postal_code\": \"\",\n    \"state\": \"\"\n  },\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.location')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes a <code>Location</code> object.</p>",
                      "method": "delete",
                      "endpoint": "v1/terminal/locations/:location",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'terminal.location')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a <code>Location</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/terminal/locations/:location",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"address\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"line1\": \"\",\n    \"line2\": \"\",\n    \"postal_code\": \"\",\n    \"state\": \"\"\n  },\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.location')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/terminal/locations/:location",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"address\": {\n    \"city\": \"\",\n    \"country\": \"\",\n    \"line1\": \"\",\n    \"line2\": \"\",\n    \"postal_code\": \"\",\n    \"state\": \"\"\n  },\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.location')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of <code>Reader</code> objects.</p>",
                      "method": "get",
                      "endpoint": "v1/terminal/readers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"device_sw_version\": \"\",\n      \"device_type\": \"{{oneOf (array 'bbpos_chipper2x' 'verifone_P400')}}\",\n      \"id\": \"\",\n      \"ip_address\": \"\",\n      \"label\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"location\": \"\",\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'terminal.reader')}}\",\n      \"serial_number\": \"\",\n      \"status\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a new <code>Reader</code> object.</p>",
                      "method": "post",
                      "endpoint": "v1/terminal/readers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device_sw_version\": \"\",\n  \"device_type\": \"{{oneOf (array 'bbpos_chipper2x' 'verifone_P400')}}\",\n  \"id\": \"\",\n  \"ip_address\": \"\",\n  \"label\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"location\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.reader')}}\",\n  \"serial_number\": \"\",\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Deletes a <code>Reader</code> object.</p>",
                      "method": "delete",
                      "endpoint": "v1/terminal/readers/:reader",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'terminal.reader')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves a <code>Reader</code> object.</p>",
                      "method": "get",
                      "endpoint": "v1/terminal/readers/:reader",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device_sw_version\": \"\",\n  \"device_type\": \"{{oneOf (array 'bbpos_chipper2x' 'verifone_P400')}}\",\n  \"id\": \"\",\n  \"ip_address\": \"\",\n  \"label\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"location\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.reader')}}\",\n  \"serial_number\": \"\",\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>",
                      "method": "post",
                      "endpoint": "v1/terminal/readers/:reader",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device_sw_version\": \"\",\n  \"device_type\": \"{{oneOf (array 'bbpos_chipper2x' 'verifone_P400')}}\",\n  \"id\": \"\",\n  \"ip_address\": \"\",\n  \"label\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"location\": \"\",\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'terminal.reader')}}\",\n  \"serial_number\": \"\",\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Creates a single-use token that represents a bank account’s details.\nThis token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a <a href=\"#accounts\">Custom account</a>.</p>",
                      "method": "post",
                      "endpoint": "v1/tokens",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the token with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/tokens/:token",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of top-ups.</p>",
                      "method": "get",
                      "endpoint": "v1/topups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Top up the balance of an account</p>",
                      "method": "post",
                      "endpoint": "v1/topups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>",
                      "method": "get",
                      "endpoint": "v1/topups/:topup",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>",
                      "method": "post",
                      "endpoint": "v1/topups/:topup",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Cancels a top-up. Only pending top-ups can be canceled.</p>",
                      "method": "post",
                      "endpoint": "v1/topups/:topup/cancel",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>",
                      "method": "get",
                      "endpoint": "v1/transfers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href=\"#balance\">Stripe balance</a> must be able to cover the transfer amount, or you’ll receive an “Insufficient Funds” error.</p>",
                      "method": "post",
                      "endpoint": "v1/transfers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>",
                      "method": "get",
                      "endpoint": "v1/transfers/:id/reversals",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    \"\"\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>When you create a new reversal, you must specify a transfer to create it on.</p>\n\n<p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>\n\n<p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>",
                      "method": "post",
                      "endpoint": "v1/transfers/:id/reversals",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>",
                      "method": "get",
                      "endpoint": "v1/transfers/:transfer",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request accepts only metadata as an argument.</p>",
                      "method": "post",
                      "endpoint": "v1/transfers/:transfer",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>",
                      "method": "get",
                      "endpoint": "v1/transfers/:transfer/reversals/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>\n\n<p>This request only accepts metadata and description as arguments.</p>",
                      "method": "post",
                      "endpoint": "v1/transfers/:transfer/reversals/:id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Returns a list of your webhook endpoints.</p>",
                      "method": "get",
                      "endpoint": "v1/webhook_endpoints",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"data\": [\n    {\n      \"api_version\": \"\",\n      \"application\": \"\",\n      \"created\": {{faker 'random.number'}},\n      \"description\": \"\",\n      \"enabled_events\": [\n        \"\"\n      ],\n      \"id\": \"\",\n      \"livemode\": {{faker 'random.boolean'}},\n      \"metadata\": {},\n      \"object\": \"{{oneOf (array 'webhook_endpoint')}}\",\n      \"secret\": \"\",\n      \"status\": \"\",\n      \"url\": \"\"\n    }\n  ],\n  \"has_more\": {{faker 'random.boolean'}},\n  \"object\": \"{{oneOf (array 'list')}}\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhooks settings</a> section of the Dashboard.</p>",
                      "method": "post",
                      "endpoint": "v1/webhook_endpoints",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"api_version\": \"\",\n  \"application\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"enabled_events\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'webhook_endpoint')}}\",\n  \"secret\": \"\",\n  \"status\": \"\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>You can also delete webhook endpoints via the <a href=\"https://dashboard.stripe.com/account/webhooks\">webhook endpoint management</a> page of the Stripe dashboard.</p>",
                      "method": "delete",
                      "endpoint": "v1/webhook_endpoints/:webhook_endpoint",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"deleted\": \"{{oneOf (array 'true')}}\",\n  \"id\": \"\",\n  \"object\": \"{{oneOf (array 'webhook_endpoint')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Retrieves the webhook endpoint with the given ID.</p>",
                      "method": "get",
                      "endpoint": "v1/webhook_endpoints/:webhook_endpoint",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"api_version\": \"\",\n  \"application\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"enabled_events\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'webhook_endpoint')}}\",\n  \"secret\": \"\",\n  \"status\": \"\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "<p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>",
                      "method": "post",
                      "endpoint": "v1/webhook_endpoints/:webhook_endpoint",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"api_version\": \"\",\n  \"application\": \"\",\n  \"created\": {{faker 'random.number'}},\n  \"description\": \"\",\n  \"enabled_events\": [\n    \"\"\n  ],\n  \"id\": \"\",\n  \"livemode\": {{faker 'random.boolean'}},\n  \"metadata\": {},\n  \"object\": \"{{oneOf (array 'webhook_endpoint')}}\",\n  \"secret\": \"\",\n  \"status\": \"\",\n  \"url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Successful response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Error response.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  }
              ],
              "proxyMode": false,
              "proxyHost": "",
              "proxyRemovePrefix": false,
              "https": false,
              "cors": true,
              "headers": [],
              "proxyReqHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ],
              "proxyResHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ]
          }
      }
  ]
}
