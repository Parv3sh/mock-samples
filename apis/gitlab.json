{
    "source": "mockoon:1.15.0",
    "data": [
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 17,
                "name": "Gitlab API v3",
                "endpointPrefix": "api",
                "latency": 0,
                "port": 8093,
                "hostname": "0.0.0.0",
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Get the current application settings",
                        "method": "get",
                        "endpoint": "v3/application/settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"after_sign_out_path\": \"\",\n  \"after_sign_up_text\": \"\",\n  \"container_registry_token_expire_delay\": \"\",\n  \"created_at\": \"\",\n  \"default_branch_protection\": \"\",\n  \"default_group_visibility\": \"\",\n  \"default_project_visibility\": \"\",\n  \"default_projects_limit\": \"\",\n  \"default_snippet_visibility\": \"\",\n  \"domain_blacklist\": \"\",\n  \"domain_blacklist_enabled\": \"\",\n  \"domain_whitelist\": \"\",\n  \"gravatar_enabled\": \"\",\n  \"home_page_url\": \"\",\n  \"id\": \"\",\n  \"koding_enabled\": \"\",\n  \"koding_url\": \"\",\n  \"max_attachment_size\": \"\",\n  \"plantuml_enabled\": \"\",\n  \"plantuml_url\": \"\",\n  \"repository_storage\": \"\",\n  \"repository_storages\": \"\",\n  \"restricted_visibility_levels\": \"\",\n  \"session_expire_delay\": \"\",\n  \"sign_in_text\": \"\",\n  \"signin_enabled\": \"\",\n  \"signup_enabled\": \"\",\n  \"updated_at\": \"\",\n  \"user_oauth_applications\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the current application settings",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Modify application settings",
                        "method": "put",
                        "endpoint": "v3/application/settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"after_sign_out_path\": \"\",\n  \"after_sign_up_text\": \"\",\n  \"container_registry_token_expire_delay\": \"\",\n  \"created_at\": \"\",\n  \"default_branch_protection\": \"\",\n  \"default_group_visibility\": \"\",\n  \"default_project_visibility\": \"\",\n  \"default_projects_limit\": \"\",\n  \"default_snippet_visibility\": \"\",\n  \"domain_blacklist\": \"\",\n  \"domain_blacklist_enabled\": \"\",\n  \"domain_whitelist\": \"\",\n  \"gravatar_enabled\": \"\",\n  \"home_page_url\": \"\",\n  \"id\": \"\",\n  \"koding_enabled\": \"\",\n  \"koding_url\": \"\",\n  \"max_attachment_size\": \"\",\n  \"plantuml_enabled\": \"\",\n  \"plantuml_url\": \"\",\n  \"repository_storage\": \"\",\n  \"repository_storages\": \"\",\n  \"restricted_visibility_levels\": \"\",\n  \"session_expire_delay\": \"\",\n  \"sign_in_text\": \"\",\n  \"signin_enabled\": \"\",\n  \"signup_enabled\": \"\",\n  \"updated_at\": \"\",\n  \"user_oauth_applications\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Modify application settings",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Validation of .gitlab-ci.yml content",
                        "method": "post",
                        "endpoint": "v3/ci/lint",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Validation of .gitlab-ci.yml content",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "v3/deploy_keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "get DeployKey(s)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/dockerfiles",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/dockerfiles/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/gitignores",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/gitignores/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/gitlab_ci_ymls",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/gitlab_ci_ymls/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a groups list",
                        "method": "get",
                        "endpoint": "v3/groups",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"request_access_enabled\": \"\",\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a groups list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a group. Available only for users who can create groups.",
                        "method": "post",
                        "endpoint": "v3/groups",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"request_access_enabled\": \"\",\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a group. Available only for users who can create groups.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get list of owned groups for authenticated user",
                        "method": "get",
                        "endpoint": "v3/groups/owned",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"request_access_enabled\": \"\",\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get list of owned groups for authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a group.",
                        "method": "delete",
                        "endpoint": "v3/groups/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Remove a group.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single group, with containing projects.",
                        "method": "get",
                        "endpoint": "v3/groups/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"projects\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"request_access_enabled\": \"\",\n  \"shared_projects\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single group, with containing projects.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a group. Available only for users who can administrate groups.",
                        "method": "put",
                        "endpoint": "v3/groups/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"request_access_enabled\": \"\",\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update a group. Available only for users who can administrate groups.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a list of access requests for a group.",
                        "method": "get",
                        "endpoint": "v3/groups/:id/access_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"requested_at\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a list of access requests for a group.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Requests access for the authenticated user to a group.",
                        "method": "post",
                        "endpoint": "v3/groups/:id/access_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"requested_at\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Requests access for the authenticated user to a group.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Denies an access request for the given user.",
                        "method": "delete",
                        "endpoint": "v3/groups/:id/access_requests/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Denies an access request for the given user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Approves an access request for the given user.",
                        "method": "put",
                        "endpoint": "v3/groups/:id/access_requests/:user_id/approve",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Approves an access request for the given user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of group issues",
                        "method": "get",
                        "endpoint": "v3/groups/:id/issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of group issues",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a list of group or project members viewable by the authenticated user.",
                        "method": "get",
                        "endpoint": "v3/groups/:id/members",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a list of group or project members viewable by the authenticated user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds a member to a group or project.",
                        "method": "post",
                        "endpoint": "v3/groups/:id/members",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Adds a member to a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Removes a user from a group or project.",
                        "method": "delete",
                        "endpoint": "v3/groups/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Removes a user from a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a member of a group or project.",
                        "method": "get",
                        "endpoint": "v3/groups/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a member of a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates a member of a group or project.",
                        "method": "put",
                        "endpoint": "v3/groups/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Updates a member of a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get group level notification level settings, defaults to Global",
                        "method": "get",
                        "endpoint": "v3/groups/:id/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get group level notification level settings, defaults to Global",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update group level notification level settings, defaults to Global",
                        "method": "put",
                        "endpoint": "v3/groups/:id/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update group level notification level settings, defaults to Global",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of projects in this group.",
                        "method": "get",
                        "endpoint": "v3/groups/:id/projects",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of projects in this group.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Transfer a project to the group namespace. Available only for admin.",
                        "method": "post",
                        "endpoint": "v3/groups/:id/projects/:project_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"lfs_enabled\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"projects\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"request_access_enabled\": \"\",\n  \"shared_projects\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"statistics\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Transfer a project to the group namespace. Available only for admin.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of system hooks",
                        "method": "get",
                        "endpoint": "v3/hooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of system hooks",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new system hook",
                        "method": "post",
                        "endpoint": "v3/hooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new system hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a hook",
                        "method": "delete",
                        "endpoint": "v3/hooks/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Test a hook",
                        "method": "get",
                        "endpoint": "v3/hooks/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Test a hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "v3/internal/allowed",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "created Allowed",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "v3/internal/broadcast_message",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "get BroadcastMessage(s)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "v3/internal/check",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "get Check(s)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "v3/internal/discover",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "get Discover(s)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "v3/internal/lfs_authenticate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "created LfsAuthenticate",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "get",
                        "endpoint": "v3/internal/merge_request_urls",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "get MergeRequestUrl(s)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "post",
                        "endpoint": "v3/internal/two_factor_recovery_codes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "created TwoFactorRecoveryCode",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get currently authenticated user's issues",
                        "method": "get",
                        "endpoint": "v3/issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get currently authenticated user's issues",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get single ssh key by id. Only available to admin users",
                        "method": "get",
                        "endpoint": "v3/keys/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"can_create_group\": \"\",\n    \"can_create_project\": \"\",\n    \"color_scheme_id\": \"\",\n    \"confirmed_at\": \"\",\n    \"created_at\": \"\",\n    \"current_sign_in_at\": \"\",\n    \"email\": \"\",\n    \"external\": \"\",\n    \"id\": \"\",\n    \"identities\": {\n      \"extern_uid\": \"\",\n      \"provider\": \"\"\n    },\n    \"is_admin\": \"\",\n    \"last_sign_in_at\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"projects_limit\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"theme_id\": \"\",\n    \"twitter\": \"\",\n    \"two_factor_enabled\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get single ssh key by id. Only available to admin users",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available license template",
                        "method": "get",
                        "endpoint": "v3/licenses",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"conditions\": \"\",\n  \"content\": \"\",\n  \"description\": \"\",\n  \"html_url\": \"\",\n  \"key\": \"\",\n  \"limitations\": \"\",\n  \"name\": \"\",\n  \"nickname\": \"\",\n  \"permissions\": \"\",\n  \"popular\": \"\",\n  \"source_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available license template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific license",
                        "method": "get",
                        "endpoint": "v3/licenses/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"conditions\": \"\",\n  \"content\": \"\",\n  \"description\": \"\",\n  \"html_url\": \"\",\n  \"key\": \"\",\n  \"limitations\": \"\",\n  \"name\": \"\",\n  \"nickname\": \"\",\n  \"permissions\": \"\",\n  \"popular\": \"\",\n  \"source_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific license",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a namespaces list",
                        "method": "get",
                        "endpoint": "v3/namespaces",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"kind\": \"\",\n  \"name\": \"\",\n  \"path\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a namespaces list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get global notification level settings and email, defaults to Participate",
                        "method": "get",
                        "endpoint": "v3/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\",\n  \"notification_email\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get global notification level settings and email, defaults to Participate",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update global notification level settings and email, defaults to Participate",
                        "method": "put",
                        "endpoint": "v3/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\",\n  \"notification_email\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update global notification level settings and email, defaults to Participate",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a projects list for authenticated user",
                        "method": "get",
                        "endpoint": "v3/projects",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a projects list for authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create new project",
                        "method": "post",
                        "endpoint": "v3/projects",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create new project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all projects for admin user",
                        "method": "get",
                        "endpoint": "v3/projects/all",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all projects for admin user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Fork new project for the current user or provided namespace.",
                        "method": "post",
                        "endpoint": "v3/projects/fork/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Fork new project for the current user or provided namespace.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get an owned projects list for authenticated user",
                        "method": "get",
                        "endpoint": "v3/projects/owned",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get an owned projects list for authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Search for projects the current user has access to",
                        "method": "get",
                        "endpoint": "v3/projects/search/:query",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Search for projects the current user has access to",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets starred project for the authenticated user",
                        "method": "get",
                        "endpoint": "v3/projects/starred",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets starred project for the authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create new project for a specified user. Only available to admin users.",
                        "method": "post",
                        "endpoint": "v3/projects/user/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create new project for a specified user. Only available to admin users.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of visible projects for authenticated user",
                        "method": "get",
                        "endpoint": "v3/projects/visible",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of visible projects for authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Remove a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single project",
                        "method": "get",
                        "endpoint": "v3/projects/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"permissions\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing project",
                        "method": "put",
                        "endpoint": "v3/projects/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Trigger a GitLab project build",
                        "method": "post",
                        "endpoint": "v3/projects/:id/(ref/:ref/)trigger/builds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"variables\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Trigger a GitLab project build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a list of access requests for a project.",
                        "method": "get",
                        "endpoint": "v3/projects/:id/access_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"requested_at\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a list of access requests for a project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Requests access for the authenticated user to a project.",
                        "method": "post",
                        "endpoint": "v3/projects/:id/access_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"requested_at\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Requests access for the authenticated user to a project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Denies an access request for the given user.",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/access_requests/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Denies an access request for the given user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Approves an access request for the given user.",
                        "method": "put",
                        "endpoint": "v3/projects/:id/access_requests/:user_id/approve",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Approves an access request for the given user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Archive a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/archive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Archive a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all project boards",
                        "method": "get",
                        "endpoint": "v3/projects/:id/boards",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"lists\": {\n    \"id\": \"\",\n    \"label\": {\n      \"color\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    },\n    \"position\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all project boards",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the lists of a project board",
                        "method": "get",
                        "endpoint": "v3/projects/:id/boards/:board_id/lists",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"label\": {\n    \"color\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"position\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the lists of a project board",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new board list",
                        "method": "post",
                        "endpoint": "v3/projects/:id/boards/:board_id/lists",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"label\": {\n    \"color\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"position\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new board list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a board list",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/boards/:board_id/lists/:list_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"label\": {\n    \"color\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"position\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a board list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of a project board",
                        "method": "get",
                        "endpoint": "v3/projects/:id/boards/:board_id/lists/:list_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"label\": {\n    \"color\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"position\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of a project board",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Moves a board list to a new position",
                        "method": "put",
                        "endpoint": "v3/projects/:id/boards/:board_id/lists/:list_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"label\": {\n    \"color\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"position\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Moves a board list to a new position",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project builds",
                        "method": "get",
                        "endpoint": "v3/projects/:id/builds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project builds",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Download the artifacts file from build",
                        "method": "get",
                        "endpoint": "v3/projects/:id/builds/artifacts/:ref_name/download",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Download the artifacts file from build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific build of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/builds/:build_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific build of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Download the artifacts file from build",
                        "method": "get",
                        "endpoint": "v3/projects/:id/builds/:build_id/artifacts",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Download the artifacts file from build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Keep the artifacts to prevent them from being deleted",
                        "method": "post",
                        "endpoint": "v3/projects/:id/builds/:build_id/artifacts/keep",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Keep the artifacts to prevent them from being deleted",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cancel a specific build of a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/builds/:build_id/cancel",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Cancel a specific build of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Erase build (remove artifacts and build trace)",
                        "method": "post",
                        "endpoint": "v3/projects/:id/builds/:build_id/erase",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Erase build (remove artifacts and build trace)",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Trigger a manual build",
                        "method": "post",
                        "endpoint": "v3/projects/:id/builds/:build_id/play",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Trigger a manual build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retry a specific build of a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/builds/:build_id/retry",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Retry a specific build of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a trace of a specific build of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/builds/:build_id/trace",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a trace of a specific build of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific project's deploy keys",
                        "method": "get",
                        "endpoint": "v3/projects/:id/deploy_keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific project's deploy keys",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add new deploy key to currently authenticated user",
                        "method": "post",
                        "endpoint": "v3/projects/:id/deploy_keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add new deploy key to currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete deploy key for a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/deploy_keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get single deploy key",
                        "method": "get",
                        "endpoint": "v3/projects/:id/deploy_keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get single deploy key",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Disable a deploy key for a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/deploy_keys/:key_id/disable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Disable a deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enable a deploy key for a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/deploy_keys/:key_id/enable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Enable a deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all deployments of the project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/deployments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deployable\": {\n    \"artifacts_file\": {\n      \"filename\": \"\",\n      \"size\": \"\"\n    },\n    \"commit\": {\n      \"author_email\": \"\",\n      \"author_name\": \"\",\n      \"committer_email\": \"\",\n      \"committer_name\": \"\",\n      \"created_at\": \"\",\n      \"id\": \"\",\n      \"message\": \"\",\n      \"short_id\": \"\",\n      \"title\": \"\"\n    },\n    \"coverage\": \"\",\n    \"created_at\": \"\",\n    \"finished_at\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"pipeline\": {\n      \"id\": \"\",\n      \"ref\": \"\",\n      \"sha\": \"\",\n      \"status\": \"\"\n    },\n    \"ref\": \"\",\n    \"runner\": {\n      \"active\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_shared\": \"\",\n      \"name\": \"\"\n    },\n    \"stage\": \"\",\n    \"started_at\": \"\",\n    \"status\": \"\",\n    \"tag\": \"\",\n    \"user\": {\n      \"avatar_url\": \"\",\n      \"bio\": \"\",\n      \"created_at\": \"\",\n      \"id\": \"\",\n      \"is_admin\": \"\",\n      \"linkedin\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"organization\": \"\",\n      \"skype\": \"\",\n      \"state\": \"\",\n      \"twitter\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\",\n      \"website_url\": \"\"\n    }\n  },\n  \"environment\": {\n    \"external_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"slug\": \"\"\n  },\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all deployments of the project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a specific deployment",
                        "method": "get",
                        "endpoint": "v3/projects/:id/deployments/:deployment_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deployable\": {\n    \"artifacts_file\": {\n      \"filename\": \"\",\n      \"size\": \"\"\n    },\n    \"commit\": {\n      \"author_email\": \"\",\n      \"author_name\": \"\",\n      \"committer_email\": \"\",\n      \"committer_name\": \"\",\n      \"created_at\": \"\",\n      \"id\": \"\",\n      \"message\": \"\",\n      \"short_id\": \"\",\n      \"title\": \"\"\n    },\n    \"coverage\": \"\",\n    \"created_at\": \"\",\n    \"finished_at\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"pipeline\": {\n      \"id\": \"\",\n      \"ref\": \"\",\n      \"sha\": \"\",\n      \"status\": \"\"\n    },\n    \"ref\": \"\",\n    \"runner\": {\n      \"active\": \"\",\n      \"description\": \"\",\n      \"id\": \"\",\n      \"is_shared\": \"\",\n      \"name\": \"\"\n    },\n    \"stage\": \"\",\n    \"started_at\": \"\",\n    \"status\": \"\",\n    \"tag\": \"\",\n    \"user\": {\n      \"avatar_url\": \"\",\n      \"bio\": \"\",\n      \"created_at\": \"\",\n      \"id\": \"\",\n      \"is_admin\": \"\",\n      \"linkedin\": \"\",\n      \"location\": \"\",\n      \"name\": \"\",\n      \"organization\": \"\",\n      \"skype\": \"\",\n      \"state\": \"\",\n      \"twitter\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\",\n      \"website_url\": \"\"\n    }\n  },\n  \"environment\": {\n    \"external_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"slug\": \"\"\n  },\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a specific deployment",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all environments of the project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/environments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"external_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"project\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"slug\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all environments of the project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Creates a new environment",
                        "method": "post",
                        "endpoint": "v3/projects/:id/environments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"external_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"project\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"slug\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Creates a new environment",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes an existing environment",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/environments/:environment_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"external_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"project\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"slug\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Deletes an existing environment",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates an existing environment",
                        "method": "put",
                        "endpoint": "v3/projects/:id/environments/:environment_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"external_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"project\": {\n    \"archived\": \"\",\n    \"avatar_url\": \"\",\n    \"builds_enabled\": \"\",\n    \"container_registry_enabled\": \"\",\n    \"created_at\": \"\",\n    \"creator_id\": \"\",\n    \"default_branch\": \"\",\n    \"description\": \"\",\n    \"forked_from_project\": {\n      \"http_url_to_repo\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"name_with_namespace\": \"\",\n      \"path\": \"\",\n      \"path_with_namespace\": \"\",\n      \"web_url\": \"\"\n    },\n    \"forks_count\": \"\",\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"issues_enabled\": \"\",\n    \"last_activity_at\": \"\",\n    \"lfs_enabled\": \"\",\n    \"merge_requests_enabled\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"namespace\": {\n      \"id\": \"\",\n      \"kind\": \"\",\n      \"name\": \"\",\n      \"path\": \"\"\n    },\n    \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n    \"only_allow_merge_if_build_succeeds\": \"\",\n    \"open_issues_count\": \"\",\n    \"owner\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"public\": \"\",\n    \"public_builds\": \"\",\n    \"request_access_enabled\": \"\",\n    \"runners_token\": \"\",\n    \"shared_runners_enabled\": \"\",\n    \"shared_with_groups\": \"\",\n    \"snippets_enabled\": \"\",\n    \"ssh_url_to_repo\": \"\",\n    \"star_count\": \"\",\n    \"statistics\": {\n      \"build_artifacts_size\": \"\",\n      \"commit_count\": \"\",\n      \"lfs_objects_size\": \"\",\n      \"repository_size\": \"\",\n      \"storage_size\": \"\"\n    },\n    \"tag_list\": \"\",\n    \"visibility_level\": \"\",\n    \"web_url\": \"\",\n    \"wiki_enabled\": \"\"\n  },\n  \"slug\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Updates an existing environment",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get events for a single project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/events",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author_id\": \"\",\n  \"author_username\": \"\",\n  \"created_at\": \"\",\n  \"data\": \"\",\n  \"note\": {\n    \"attachment\": \"\",\n    \"author\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"body\": \"\",\n    \"created_at\": \"\",\n    \"downvote?\": \"\",\n    \"id\": \"\",\n    \"noteable_id\": \"\",\n    \"noteable_type\": \"\",\n    \"system\": \"\",\n    \"updated_at\": \"\",\n    \"upvote?\": \"\"\n  },\n  \"project_id\": \"\",\n  \"target_id\": \"\",\n  \"target_title\": \"\",\n  \"target_type\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get events for a single project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a forked_from relationship",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/fork",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Remove a forked_from relationship",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Mark this project as forked from another",
                        "method": "post",
                        "endpoint": "v3/projects/:id/fork/:forked_from_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Mark this project as forked from another",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get project hooks",
                        "method": "get",
                        "endpoint": "v3/projects/:id/hooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"project_id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\",\n  \"wiki_page_events\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get project hooks",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add hook to project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/hooks",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"project_id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\",\n  \"wiki_page_events\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add hook to project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes project hook",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/hooks/:hook_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"project_id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\",\n  \"wiki_page_events\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Deletes project hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project hook",
                        "method": "get",
                        "endpoint": "v3/projects/:id/hooks/:hook_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"project_id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\",\n  \"wiki_page_events\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing project hook",
                        "method": "put",
                        "endpoint": "v3/projects/:id/hooks/:hook_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"enable_ssl_verification\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"project_id\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"url\": \"\",\n  \"wiki_page_events\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing project hook",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project issues",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project issues",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new project issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a project issue",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/issues/:issue_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single project issue",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing issue",
                        "method": "put",
                        "endpoint": "v3/projects/:id/issues/:issue_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add spent time for a project issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/add_spent_time",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add spent time for a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/issues/:issue_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Move an existing issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/move",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Move an existing issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Reset spent time for a project issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/reset_spent_time",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Reset spent time for a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Reset the time estimate for a project issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/reset_time_estimate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Reset the time estimate for a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set a time estimate for a project issue",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/time_estimate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Set a time estimate for a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Show time stats for a project issue",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:issue_id/time_stats",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Show time stats for a project issue",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a todo on an issuable",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:issue_id/todo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"state\": \"\",\n  \"target\": \"\",\n  \"target_type\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a todo on an issuable",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +noteable+ notes",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +noteable+ notes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new +noteable+ note",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +noteable+ note",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/issues/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single +noteable+ note",
                        "method": "get",
                        "endpoint": "v3/projects/:id/issues/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing +noteable+ note",
                        "method": "put",
                        "endpoint": "v3/projects/:id/issues/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unsubscribe from a resource",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/issues/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unsubscribe from a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Subscribe to a resource",
                        "method": "post",
                        "endpoint": "v3/projects/:id/issues/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Subscribe to a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific project's deploy keys",
                        "method": "get",
                        "endpoint": "v3/projects/:id/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific project's deploy keys",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add new deploy key to currently authenticated user",
                        "method": "post",
                        "endpoint": "v3/projects/:id/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add new deploy key to currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete deploy key for a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get single deploy key",
                        "method": "get",
                        "endpoint": "v3/projects/:id/keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get single deploy key",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Disable a deploy key for a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/keys/:key_id/disable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Disable a deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enable a deploy key for a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/keys/:key_id/enable",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Enable a deploy key for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an existing label",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/labels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete an existing label",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all labels of the project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/labels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all labels of the project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new label",
                        "method": "post",
                        "endpoint": "v3/projects/:id/labels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new label",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing label. At least one optional parameter is required.",
                        "method": "put",
                        "endpoint": "v3/projects/:id/labels",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing label. At least one optional parameter is required.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unsubscribe from a resource",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/labels/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unsubscribe from a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Subscribe to a resource",
                        "method": "post",
                        "endpoint": "v3/projects/:id/labels/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"closed_issues_count\": \"\",\n  \"color\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"open_issues_count\": \"\",\n  \"open_merge_requests_count\": \"\",\n  \"priority\": \"\",\n  \"subscribed\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Subscribe to a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a list of group or project members viewable by the authenticated user.",
                        "method": "get",
                        "endpoint": "v3/projects/:id/members",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a list of group or project members viewable by the authenticated user.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds a member to a group or project.",
                        "method": "post",
                        "endpoint": "v3/projects/:id/members",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Adds a member to a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Removes a user from a group or project.",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Removes a user from a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a member of a group or project.",
                        "method": "get",
                        "endpoint": "v3/projects/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a member of a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Updates a member of a group or project.",
                        "method": "put",
                        "endpoint": "v3/projects/:id/members/:user_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"access_level\": \"\",\n  \"avatar_url\": \"\",\n  \"expires_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Updates a member of a group or project.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a merge request",
                        "method": "put",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/cancel_merge_when_build_succeeds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Show the merge request changes",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/changes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"changes\": {\n    \"a_mode\": \"\",\n    \"b_mode\": \"\",\n    \"deleted_file\": \"\",\n    \"diff\": \"\",\n    \"new_file\": \"\",\n    \"new_path\": \"\",\n    \"old_path\": \"\",\n    \"renamed_file\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Show the merge request changes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List issues that will be closed on merge",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/closes_issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List issues that will be closed on merge",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the comments of a merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the comments of a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Post a comment to a merge request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Post a comment to a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the commits of a merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/commits",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"short_id\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the commits of a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Merge a merge request",
                        "method": "put",
                        "endpoint": "v3/projects/:id/merge_request/:merge_request_id/merge",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Merge a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unsubscribe from a resource",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_request/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unsubscribe from a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Subscribe to a resource",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_request/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Subscribe to a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List merge requests",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List merge requests",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a merge request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a merge request",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a merge request",
                        "method": "put",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add spent time for a project merge_request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/add_spent_time",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add spent time for a project merge_request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/cancel_merge_when_build_succeeds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Show the merge request changes",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/changes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"changes\": {\n    \"a_mode\": \"\",\n    \"b_mode\": \"\",\n    \"deleted_file\": \"\",\n    \"diff\": \"\",\n    \"new_file\": \"\",\n    \"new_path\": \"\",\n    \"old_path\": \"\",\n    \"renamed_file\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Show the merge request changes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List issues that will be closed on merge",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/closes_issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List issues that will be closed on merge",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the comments of a merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the comments of a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Post a comment to a merge request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"note\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Post a comment to a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the commits of a merge request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/commits",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"short_id\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the commits of a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Merge a merge request",
                        "method": "put",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/merge",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Merge a merge request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Reset spent time for a project merge_request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/reset_spent_time",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Reset spent time for a project merge_request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Reset the time estimate for a project merge_request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/reset_time_estimate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Reset the time estimate for a project merge_request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set a time estimate for a project merge_request",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/time_estimate",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Set a time estimate for a project merge_request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Show time stats for a project merge_request",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/time_stats",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Show time stats for a project merge_request",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a todo on an issuable",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/todo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"state\": \"\",\n  \"target\": \"\",\n  \"target_type\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a todo on an issuable",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of merge request diff versions",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/versions",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"base_commit_sha\": \"\",\n  \"created_at\": \"\",\n  \"head_commit_sha\": \"\",\n  \"id\": \"\",\n  \"merge_request_id\": \"\",\n  \"real_size\": \"\",\n  \"start_commit_sha\": \"\",\n  \"state\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of merge request diff versions",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single merge request diff version",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:merge_request_id/versions/:version_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"base_commit_sha\": \"\",\n  \"commits\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"created_at\": \"\",\n  \"diffs\": {\n    \"a_mode\": \"\",\n    \"b_mode\": \"\",\n    \"deleted_file\": \"\",\n    \"diff\": \"\",\n    \"new_file\": \"\",\n    \"new_path\": \"\",\n    \"old_path\": \"\",\n    \"renamed_file\": \"\"\n  },\n  \"head_commit_sha\": \"\",\n  \"id\": \"\",\n  \"merge_request_id\": \"\",\n  \"real_size\": \"\",\n  \"start_commit_sha\": \"\",\n  \"state\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single merge request diff version",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +noteable+ notes",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +noteable+ notes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new +noteable+ note",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +noteable+ note",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single +noteable+ note",
                        "method": "get",
                        "endpoint": "v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing +noteable+ note",
                        "method": "put",
                        "endpoint": "v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unsubscribe from a resource",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/merge_requests/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unsubscribe from a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Subscribe to a resource",
                        "method": "post",
                        "endpoint": "v3/projects/:id/merge_requests/:subscribable_id/subscription",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"force_remove_source_branch\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"merge_commit_sha\": \"\",\n  \"merge_status\": \"\",\n  \"merge_when_build_succeeds\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"sha\": \"\",\n  \"should_remove_source_branch\": \"\",\n  \"source_branch\": \"\",\n  \"source_project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"target_branch\": \"\",\n  \"target_project_id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\",\n  \"work_in_progress\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Subscribe to a resource",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project milestones",
                        "method": "get",
                        "endpoint": "v3/projects/:id/milestones",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"project_id\": \"\",\n  \"start_date\": \"\",\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project milestones",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new project milestone",
                        "method": "post",
                        "endpoint": "v3/projects/:id/milestones",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"project_id\": \"\",\n  \"start_date\": \"\",\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new project milestone",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single project milestone",
                        "method": "get",
                        "endpoint": "v3/projects/:id/milestones/:milestone_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"project_id\": \"\",\n  \"start_date\": \"\",\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single project milestone",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing project milestone",
                        "method": "put",
                        "endpoint": "v3/projects/:id/milestones/:milestone_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"project_id\": \"\",\n  \"start_date\": \"\",\n  \"state\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing project milestone",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all issues for a single project milestone",
                        "method": "get",
                        "endpoint": "v3/projects/:id/milestones/:milestone_id/issues",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"assignee\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"confidential\": \"\",\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"downvotes\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"iid\": \"\",\n  \"labels\": \"\",\n  \"milestone\": {\n    \"created_at\": \"\",\n    \"description\": \"\",\n    \"due_date\": \"\",\n    \"id\": \"\",\n    \"iid\": \"\",\n    \"project_id\": \"\",\n    \"start_date\": \"\",\n    \"state\": \"\",\n    \"title\": \"\",\n    \"updated_at\": \"\"\n  },\n  \"project_id\": \"\",\n  \"state\": \"\",\n  \"subscribed\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"upvotes\": \"\",\n  \"user_notes_count\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all issues for a single project milestone",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get project level notification level settings, defaults to Global",
                        "method": "get",
                        "endpoint": "v3/projects/:id/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get project level notification level settings, defaults to Global",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update project level notification level settings, defaults to Global",
                        "method": "put",
                        "endpoint": "v3/projects/:id/notification_settings",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"events\": \"\",\n  \"level\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update project level notification level settings, defaults to Global",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new pipeline",
                        "method": "post",
                        "endpoint": "v3/projects/:id/pipeline",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"before_sha\": \"\",\n  \"committed_at\": \"\",\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"duration\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"yaml_errors\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new pipeline",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all Pipelines of the project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/pipelines",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"before_sha\": \"\",\n  \"committed_at\": \"\",\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"duration\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"yaml_errors\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all Pipelines of the project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets a specific pipeline for the project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/pipelines/:pipeline_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"before_sha\": \"\",\n  \"committed_at\": \"\",\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"duration\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"yaml_errors\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Gets a specific pipeline for the project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cancel all builds in the pipeline",
                        "method": "post",
                        "endpoint": "v3/projects/:id/pipelines/:pipeline_id/cancel",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"before_sha\": \"\",\n  \"committed_at\": \"\",\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"duration\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"yaml_errors\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Cancel all builds in the pipeline",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retry failed builds in the pipeline",
                        "method": "post",
                        "endpoint": "v3/projects/:id/pipelines/:pipeline_id/retry",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"before_sha\": \"\",\n  \"committed_at\": \"\",\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"duration\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"yaml_errors\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Retry failed builds in the pipeline",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get an archive of the repository",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/archive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get an archive of the repository",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a raw file contents",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/blobs/:sha",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a raw file contents",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project repository branches",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/branches",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"developers_can_merge\": \"\",\n  \"developers_can_push\": \"\",\n  \"merged\": \"\",\n  \"name\": \"\",\n  \"protected\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project repository branches",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create branch",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/branches",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"developers_can_merge\": \"\",\n  \"developers_can_push\": \"\",\n  \"merged\": \"\",\n  \"name\": \"\",\n  \"protected\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a branch",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/repository/branches/:branch",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single branch",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/branches/:branch",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"developers_can_merge\": \"\",\n  \"developers_can_push\": \"\",\n  \"merged\": \"\",\n  \"name\": \"\",\n  \"protected\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Protect a single branch",
                        "method": "put",
                        "endpoint": "v3/projects/:id/repository/branches/:branch/protect",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"developers_can_merge\": \"\",\n  \"developers_can_push\": \"\",\n  \"merged\": \"\",\n  \"name\": \"\",\n  \"protected\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Protect a single branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unprotect a single branch",
                        "method": "put",
                        "endpoint": "v3/projects/:id/repository/branches/:branch/unprotect",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"developers_can_merge\": \"\",\n  \"developers_can_push\": \"\",\n  \"merged\": \"\",\n  \"name\": \"\",\n  \"protected\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unprotect a single branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project repository commits",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"short_id\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project repository commits",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Commit multiple file changes as one commit",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/commits",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"authored_date\": \"\",\n  \"committed_date\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"parent_ids\": \"\",\n  \"short_id\": \"\",\n  \"stats\": {\n    \"additions\": \"\",\n    \"deletions\": \"\",\n    \"total\": \"\"\n  },\n  \"status\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Commit multiple file changes as one commit",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific commit of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"authored_date\": \"\",\n  \"committed_date\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"parent_ids\": \"\",\n  \"short_id\": \"\",\n  \"stats\": {\n    \"additions\": \"\",\n    \"deletions\": \"\",\n    \"total\": \"\"\n  },\n  \"status\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific commit of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Not Found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a raw file contents",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/blob",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a raw file contents",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get builds for a specific commit of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/builds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"artifacts_file\": {\n    \"filename\": \"\",\n    \"size\": \"\"\n  },\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"coverage\": \"\",\n  \"created_at\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"pipeline\": {\n    \"id\": \"\",\n    \"ref\": \"\",\n    \"sha\": \"\",\n    \"status\": \"\"\n  },\n  \"ref\": \"\",\n  \"runner\": {\n    \"active\": \"\",\n    \"description\": \"\",\n    \"id\": \"\",\n    \"is_shared\": \"\",\n    \"name\": \"\"\n  },\n  \"stage\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"tag\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"bio\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"is_admin\": \"\",\n    \"linkedin\": \"\",\n    \"location\": \"\",\n    \"name\": \"\",\n    \"organization\": \"\",\n    \"skype\": \"\",\n    \"state\": \"\",\n    \"twitter\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\",\n    \"website_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get builds for a specific commit of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cherry pick commit into a branch",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/cherry_pick",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author_email\": \"\",\n  \"author_name\": \"\",\n  \"committer_email\": \"\",\n  \"committer_name\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"message\": \"\",\n  \"short_id\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Cherry pick commit into a branch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a commit's comments",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"line\": \"\",\n  \"line_type\": \"\",\n  \"note\": \"\",\n  \"path\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a commit's comments",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Not Found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Post comment to commit",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/comments",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"line\": \"\",\n  \"line_type\": \"\",\n  \"note\": \"\",\n  \"path\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Post comment to commit",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the diff for a specific commit of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/diff",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the diff for a specific commit of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            },
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 404,
                                "label": "Not Found",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a commit's statuses",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/commits/:sha/statuses",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"allow_failure\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a commit's statuses",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Compare two branches, tags, or commits",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/compare",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"commits\": {\n    \"author_email\": \"\",\n    \"author_name\": \"\",\n    \"committer_email\": \"\",\n    \"committer_name\": \"\",\n    \"created_at\": \"\",\n    \"id\": \"\",\n    \"message\": \"\",\n    \"short_id\": \"\",\n    \"title\": \"\"\n  },\n  \"compare_same_ref\": \"\",\n  \"compare_timeout\": \"\",\n  \"diffs\": {\n    \"a_mode\": \"\",\n    \"b_mode\": \"\",\n    \"deleted_file\": \"\",\n    \"diff\": \"\",\n    \"new_file\": \"\",\n    \"new_path\": \"\",\n    \"old_path\": \"\",\n    \"renamed_file\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Compare two branches, tags, or commits",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get repository contributors",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/contributors",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"additions\": \"\",\n  \"commits\": \"\",\n  \"deletions\": \"\",\n  \"email\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get repository contributors",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an existing file in repository",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/repository/files",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete an existing file in repository",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a file from repository",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/files",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a file from repository",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create new file in repository",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/files",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create new file in repository",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update existing file in repository",
                        "method": "put",
                        "endpoint": "v3/projects/:id/repository/files",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update existing file in repository",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/repository/merged_branches",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "deleted MergedBranch",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a raw blob contents by blob sha",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/raw_blobs/:sha",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a raw blob contents by blob sha",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project repository tags",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/tags",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"release\": {\n    \"description\": \"\",\n    \"tag_name\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project repository tags",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new repository tag",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/tags",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"release\": {\n    \"description\": \"\",\n    \"tag_name\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new repository tag",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a repository tag",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/repository/tags/:tag_name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a repository tag",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single repository tag",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/tags/:tag_name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"commit\": \"\",\n  \"message\": \"\",\n  \"name\": \"\",\n  \"release\": {\n    \"description\": \"\",\n    \"tag_name\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single repository tag",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add a release note to a tag",
                        "method": "post",
                        "endpoint": "v3/projects/:id/repository/tags/:tag_name/release",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"description\": \"\",\n  \"tag_name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add a release note to a tag",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a tag's release note",
                        "method": "put",
                        "endpoint": "v3/projects/:id/repository/tags/:tag_name/release",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"description\": \"\",\n  \"tag_name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update a tag's release note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a project repository tree",
                        "method": "get",
                        "endpoint": "v3/projects/:id/repository/tree",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"id\": \"\",\n  \"mode\": \"\",\n  \"name\": \"\",\n  \"path\": \"\",\n  \"type\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a project repository tree",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get runners available for project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/runners",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get runners available for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Enable a runner for a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/runners",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Enable a runner for a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Disable project's runner",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/runners/:runner_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Disable project's runner",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set asana service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/asana",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set asana service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set assembla service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/assembla",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set assembla service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set bamboo service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/bamboo",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set bamboo service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set bugzilla service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/bugzilla",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set bugzilla service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set buildkite service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/buildkite",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set buildkite service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set builds-email service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/builds-email",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set builds-email service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set campfire service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/campfire",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set campfire service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set custom-issue-tracker service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/custom-issue-tracker",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set custom-issue-tracker service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set drone-ci service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/drone-ci",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set drone-ci service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set emails-on-push service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/emails-on-push",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set emails-on-push service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set external-wiki service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/external-wiki",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set external-wiki service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set flowdock service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/flowdock",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set flowdock service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set gemnasium service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/gemnasium",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set gemnasium service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set hipchat service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/hipchat",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set hipchat service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set irker service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/irker",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set irker service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set jira service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/jira",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set jira service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set kubernetes service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/kubernetes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set kubernetes service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set mattermost service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/mattermost",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set mattermost service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set mattermost-slash-commands service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/mattermost-slash-commands",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set mattermost-slash-commands service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Trigger a slash command for mattermost-slash-commands",
                        "method": "post",
                        "endpoint": "v3/projects/:id/services/mattermost_slash_commands/trigger",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Trigger a slash command for mattermost-slash-commands",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set pipelines-email service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/pipelines-email",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set pipelines-email service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set pivotaltracker service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/pivotaltracker",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set pivotaltracker service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set pushover service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/pushover",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set pushover service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set redmine service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/redmine",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set redmine service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set slack service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/slack",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set slack service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set slack-slash-commands service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/slack-slash-commands",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set slack-slash-commands service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Trigger a slash command for slack-slash-commands",
                        "method": "post",
                        "endpoint": "v3/projects/:id/services/slack_slash_commands/trigger",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Trigger a slash command for slack-slash-commands",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Set teamcity service for project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/services/teamcity",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Set teamcity service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a service for project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/services/:service_slug",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a service for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the service settings for project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/services/:service_slug",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"build_events\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"issues_events\": \"\",\n  \"merge_requests_events\": \"\",\n  \"note_events\": \"\",\n  \"pipeline_events\": \"\",\n  \"properties\": \"\",\n  \"push_events\": \"\",\n  \"tag_push_events\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the service settings for project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Share the project with a group",
                        "method": "post",
                        "endpoint": "v3/projects/:id/share",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"expires_at\": \"\",\n  \"group_access\": \"\",\n  \"group_id\": \"\",\n  \"id\": \"\",\n  \"project_id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Share the project with a group",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/share/:group_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "deleted Share",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all project snippets",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"expires_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all project snippets",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new project snippet",
                        "method": "post",
                        "endpoint": "v3/projects/:id/snippets",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"expires_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new project snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +noteable+ notes",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +noteable+ notes",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new +noteable+ note",
                        "method": "post",
                        "endpoint": "v3/projects/:id/snippets/:noteable_id/notes",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +noteable+ note",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/snippets/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single +noteable+ note",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing +noteable+ note",
                        "method": "put",
                        "endpoint": "v3/projects/:id/snippets/:noteable_id/notes/:note_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"attachment\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"downvote?\": \"\",\n  \"id\": \"\",\n  \"noteable_id\": \"\",\n  \"noteable_type\": \"\",\n  \"system\": \"\",\n  \"updated_at\": \"\",\n  \"upvote?\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing +noteable+ note",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a project snippet",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete a project snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single project snippet",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"expires_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single project snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing project snippet",
                        "method": "put",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"expires_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing project snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a list of project +awardable+ award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a list of project +awardable+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Award a new Emoji",
                        "method": "post",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Award a new Emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a +awardables+ award emoji",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a +awardables+ award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific award emoji",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"awardable_id\": \"\",\n  \"awardable_type\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"updated_at\": \"\",\n  \"user\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific award emoji",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a raw project snippet",
                        "method": "get",
                        "endpoint": "v3/projects/:id/snippets/:snippet_id/raw",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a raw project snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unstar a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/star",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unstar a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Star a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/star",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Star a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Post status to a commit",
                        "method": "post",
                        "endpoint": "v3/projects/:id/statuses/:sha",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"allow_failure\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"description\": \"\",\n  \"finished_at\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"ref\": \"\",\n  \"sha\": \"\",\n  \"started_at\": \"\",\n  \"status\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Post status to a commit",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get triggers list",
                        "method": "get",
                        "endpoint": "v3/projects/:id/triggers",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deleted_at\": \"\",\n  \"last_used\": \"\",\n  \"token\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get triggers list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a trigger",
                        "method": "post",
                        "endpoint": "v3/projects/:id/triggers",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deleted_at\": \"\",\n  \"last_used\": \"\",\n  \"token\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a trigger",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a trigger",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/triggers/:token",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deleted_at\": \"\",\n  \"last_used\": \"\",\n  \"token\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a trigger",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get specific trigger of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/triggers/:token",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"created_at\": \"\",\n  \"deleted_at\": \"\",\n  \"last_used\": \"\",\n  \"token\": \"\",\n  \"updated_at\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get specific trigger of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unarchive a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/unarchive",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"archived\": \"\",\n  \"avatar_url\": \"\",\n  \"builds_enabled\": \"\",\n  \"container_registry_enabled\": \"\",\n  \"created_at\": \"\",\n  \"creator_id\": \"\",\n  \"default_branch\": \"\",\n  \"description\": \"\",\n  \"forked_from_project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"forks_count\": \"\",\n  \"http_url_to_repo\": \"\",\n  \"id\": \"\",\n  \"issues_enabled\": \"\",\n  \"last_activity_at\": \"\",\n  \"lfs_enabled\": \"\",\n  \"merge_requests_enabled\": \"\",\n  \"name\": \"\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n    \"id\": \"\",\n    \"kind\": \"\",\n    \"name\": \"\",\n    \"path\": \"\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"\",\n  \"only_allow_merge_if_build_succeeds\": \"\",\n  \"open_issues_count\": \"\",\n  \"owner\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"path\": \"\",\n  \"path_with_namespace\": \"\",\n  \"public\": \"\",\n  \"public_builds\": \"\",\n  \"request_access_enabled\": \"\",\n  \"runners_token\": \"\",\n  \"shared_runners_enabled\": \"\",\n  \"shared_with_groups\": \"\",\n  \"snippets_enabled\": \"\",\n  \"ssh_url_to_repo\": \"\",\n  \"star_count\": \"\",\n  \"statistics\": {\n    \"build_artifacts_size\": \"\",\n    \"commit_count\": \"\",\n    \"lfs_objects_size\": \"\",\n    \"repository_size\": \"\",\n    \"storage_size\": \"\"\n  },\n  \"tag_list\": \"\",\n  \"visibility_level\": \"\",\n  \"web_url\": \"\",\n  \"wiki_enabled\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Unarchive a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Upload a file",
                        "method": "post",
                        "endpoint": "v3/projects/:id/uploads",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Upload a file",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the users list of a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the users list of a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get project variables",
                        "method": "get",
                        "endpoint": "v3/projects/:id/variables",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get project variables",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a new variable in a project",
                        "method": "post",
                        "endpoint": "v3/projects/:id/variables",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a new variable in a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an existing variable from a project",
                        "method": "delete",
                        "endpoint": "v3/projects/:id/variables/:key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete an existing variable from a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a specific variable from a project",
                        "method": "get",
                        "endpoint": "v3/projects/:id/variables/:key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a specific variable from a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing variable from a project",
                        "method": "put",
                        "endpoint": "v3/projects/:id/variables/:key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"key\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing variable from a project",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get runners available for user",
                        "method": "get",
                        "endpoint": "v3/runners",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get runners available for user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get all runners - shared and specific",
                        "method": "get",
                        "endpoint": "v3/runners/all",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get all runners - shared and specific",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove a runner",
                        "method": "delete",
                        "endpoint": "v3/runners/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Remove a runner",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get runner's details",
                        "method": "get",
                        "endpoint": "v3/runners/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"architecture\": \"\",\n  \"contacted_at\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"locked\": \"\",\n  \"name\": \"\",\n  \"platform\": \"\",\n  \"projects\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"revision\": \"\",\n  \"run_untagged\": \"\",\n  \"tag_list\": \"\",\n  \"token\": \"\",\n  \"version\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get runner's details",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update runner's details",
                        "method": "put",
                        "endpoint": "v3/runners/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"active\": \"\",\n  \"architecture\": \"\",\n  \"contacted_at\": \"\",\n  \"description\": \"\",\n  \"id\": \"\",\n  \"is_shared\": \"\",\n  \"locked\": \"\",\n  \"name\": \"\",\n  \"platform\": \"\",\n  \"projects\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"revision\": \"\",\n  \"run_untagged\": \"\",\n  \"tag_list\": \"\",\n  \"token\": \"\",\n  \"version\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update runner's details",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Login to get token",
                        "method": "post",
                        "endpoint": "v3/session",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"bio\": \"\",\n  \"can_create_group\": \"\",\n  \"can_create_project\": \"\",\n  \"color_scheme_id\": \"\",\n  \"confirmed_at\": \"\",\n  \"created_at\": \"\",\n  \"current_sign_in_at\": \"\",\n  \"email\": \"\",\n  \"external\": \"\",\n  \"id\": \"\",\n  \"identities\": {\n    \"extern_uid\": \"\",\n    \"provider\": \"\"\n  },\n  \"is_admin\": \"\",\n  \"last_sign_in_at\": \"\",\n  \"linkedin\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"organization\": \"\",\n  \"private_token\": \"\",\n  \"projects_limit\": \"\",\n  \"skype\": \"\",\n  \"state\": \"\",\n  \"theme_id\": \"\",\n  \"twitter\": \"\",\n  \"two_factor_enabled\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Login to get token",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
                        "method": "get",
                        "endpoint": "v3/sidekiq/compound_metrics",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the Sidekiq job statistics",
                        "method": "get",
                        "endpoint": "v3/sidekiq/job_stats",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the Sidekiq job statistics",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the Sidekiq process metrics",
                        "method": "get",
                        "endpoint": "v3/sidekiq/process_metrics",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the Sidekiq process metrics",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the Sidekiq queue metrics",
                        "method": "get",
                        "endpoint": "v3/sidekiq/queue_metrics",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the Sidekiq queue metrics",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a snippets list for authenticated user",
                        "method": "get",
                        "endpoint": "v3/snippets",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a snippets list for authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create new snippet",
                        "method": "post",
                        "endpoint": "v3/snippets",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create new snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List all public snippets current_user has access to",
                        "method": "get",
                        "endpoint": "v3/snippets/public",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List all public snippets current_user has access to",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Remove snippet",
                        "method": "delete",
                        "endpoint": "v3/snippets/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Remove snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single snippet",
                        "method": "get",
                        "endpoint": "v3/snippets/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update an existing snippet",
                        "method": "put",
                        "endpoint": "v3/snippets/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"created_at\": \"\",\n  \"file_name\": \"\",\n  \"id\": \"\",\n  \"raw_url\": \"\",\n  \"title\": \"\",\n  \"updated_at\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update an existing snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a raw snippet",
                        "method": "get",
                        "endpoint": "v3/snippets/:id/raw",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a raw snippet",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/templates/dockerfiles",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/templates/dockerfiles/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/templates/gitignores",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/templates/gitignores/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available template",
                        "method": "get",
                        "endpoint": "v3/templates/gitlab_ci_ymls",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific template present in local filesystem",
                        "method": "get",
                        "endpoint": "v3/templates/gitlab_ci_ymls/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"content\": \"\",\n  \"name\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific template present in local filesystem",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of the available license template",
                        "method": "get",
                        "endpoint": "v3/templates/licenses",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"conditions\": \"\",\n  \"content\": \"\",\n  \"description\": \"\",\n  \"html_url\": \"\",\n  \"key\": \"\",\n  \"limitations\": \"\",\n  \"name\": \"\",\n  \"nickname\": \"\",\n  \"permissions\": \"\",\n  \"popular\": \"\",\n  \"source_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of the available license template",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the text for a specific license",
                        "method": "get",
                        "endpoint": "v3/templates/licenses/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"conditions\": \"\",\n  \"content\": \"\",\n  \"description\": \"\",\n  \"html_url\": \"\",\n  \"key\": \"\",\n  \"limitations\": \"\",\n  \"name\": \"\",\n  \"nickname\": \"\",\n  \"permissions\": \"\",\n  \"popular\": \"\",\n  \"source_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the text for a specific license",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Mark all todos as done",
                        "method": "delete",
                        "endpoint": "v3/todos",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Mark all todos as done",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a todo list",
                        "method": "get",
                        "endpoint": "v3/todos",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"state\": \"\",\n  \"target\": \"\",\n  \"target_type\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a todo list",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Mark a todo as done",
                        "method": "delete",
                        "endpoint": "v3/todos/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"body\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"project\": {\n    \"http_url_to_repo\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"name_with_namespace\": \"\",\n    \"path\": \"\",\n    \"path_with_namespace\": \"\",\n    \"web_url\": \"\"\n  },\n  \"state\": \"\",\n  \"target\": \"\",\n  \"target_type\": \"\",\n  \"target_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Mark a todo as done",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the currently authenticated user",
                        "method": "get",
                        "endpoint": "v3/user",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"bio\": \"\",\n  \"can_create_group\": \"\",\n  \"can_create_project\": \"\",\n  \"color_scheme_id\": \"\",\n  \"confirmed_at\": \"\",\n  \"created_at\": \"\",\n  \"current_sign_in_at\": \"\",\n  \"email\": \"\",\n  \"external\": \"\",\n  \"id\": \"\",\n  \"identities\": {\n    \"extern_uid\": \"\",\n    \"provider\": \"\"\n  },\n  \"is_admin\": \"\",\n  \"last_sign_in_at\": \"\",\n  \"linkedin\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"organization\": \"\",\n  \"projects_limit\": \"\",\n  \"skype\": \"\",\n  \"state\": \"\",\n  \"theme_id\": \"\",\n  \"twitter\": \"\",\n  \"two_factor_enabled\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the currently authenticated user's email addresses",
                        "method": "get",
                        "endpoint": "v3/user/emails",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the currently authenticated user's email addresses",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add new email address to the currently authenticated user",
                        "method": "post",
                        "endpoint": "v3/user/emails",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add new email address to the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an email address from the currently authenticated user",
                        "method": "delete",
                        "endpoint": "v3/user/emails/:email_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 204,
                                "label": "Delete an email address from the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single email address owned by the currently authenticated user",
                        "method": "get",
                        "endpoint": "v3/user/emails/:email_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single email address owned by the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the currently authenticated user's SSH keys",
                        "method": "get",
                        "endpoint": "v3/user/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the currently authenticated user's SSH keys",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add a new SSH key to the currently authenticated user",
                        "method": "post",
                        "endpoint": "v3/user/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add a new SSH key to the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an SSH key from the currently authenticated user",
                        "method": "delete",
                        "endpoint": "v3/user/keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete an SSH key from the currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single key owned by currently authenticated user",
                        "method": "get",
                        "endpoint": "v3/user/keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single key owned by currently authenticated user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the list of users",
                        "method": "get",
                        "endpoint": "v3/users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the list of users",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create a user. Available only for admins.",
                        "method": "post",
                        "endpoint": "v3/users",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"bio\": \"\",\n  \"can_create_group\": \"\",\n  \"can_create_project\": \"\",\n  \"color_scheme_id\": \"\",\n  \"confirmed_at\": \"\",\n  \"created_at\": \"\",\n  \"current_sign_in_at\": \"\",\n  \"email\": \"\",\n  \"external\": \"\",\n  \"id\": \"\",\n  \"identities\": {\n    \"extern_uid\": \"\",\n    \"provider\": \"\"\n  },\n  \"is_admin\": \"\",\n  \"last_sign_in_at\": \"\",\n  \"linkedin\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"organization\": \"\",\n  \"projects_limit\": \"\",\n  \"skype\": \"\",\n  \"state\": \"\",\n  \"theme_id\": \"\",\n  \"twitter\": \"\",\n  \"two_factor_enabled\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Create a user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a user. Available only for admins.",
                        "method": "delete",
                        "endpoint": "v3/users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete a user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a single user",
                        "method": "get",
                        "endpoint": "v3/users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"state\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get a single user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Update a user. Available only for admins.",
                        "method": "put",
                        "endpoint": "v3/users/:id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"avatar_url\": \"\",\n  \"bio\": \"\",\n  \"can_create_group\": \"\",\n  \"can_create_project\": \"\",\n  \"color_scheme_id\": \"\",\n  \"confirmed_at\": \"\",\n  \"created_at\": \"\",\n  \"current_sign_in_at\": \"\",\n  \"email\": \"\",\n  \"external\": \"\",\n  \"id\": \"\",\n  \"identities\": {\n    \"extern_uid\": \"\",\n    \"provider\": \"\"\n  },\n  \"is_admin\": \"\",\n  \"last_sign_in_at\": \"\",\n  \"linkedin\": \"\",\n  \"location\": \"\",\n  \"name\": \"\",\n  \"organization\": \"\",\n  \"projects_limit\": \"\",\n  \"skype\": \"\",\n  \"state\": \"\",\n  \"theme_id\": \"\",\n  \"twitter\": \"\",\n  \"two_factor_enabled\": \"\",\n  \"username\": \"\",\n  \"web_url\": \"\",\n  \"website_url\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Update a user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Block a user. Available only for admins.",
                        "method": "put",
                        "endpoint": "v3/users/:id/block",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Block a user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the emails addresses of a specified user. Available only for admins.",
                        "method": "get",
                        "endpoint": "v3/users/:id/emails",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the emails addresses of a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an email address to a specified user. Available only for admins.",
                        "method": "post",
                        "endpoint": "v3/users/:id/emails",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add an email address to a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an email address of a specified user. Available only for admins.",
                        "method": "delete",
                        "endpoint": "v3/users/:id/emails/:email_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"email\": \"\",\n  \"id\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete an email address of a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the contribution events of a specified user",
                        "method": "get",
                        "endpoint": "v3/users/:id/events",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"action_name\": \"\",\n  \"author\": {\n    \"avatar_url\": \"\",\n    \"id\": \"\",\n    \"name\": \"\",\n    \"state\": \"\",\n    \"username\": \"\",\n    \"web_url\": \"\"\n  },\n  \"author_id\": \"\",\n  \"author_username\": \"\",\n  \"created_at\": \"\",\n  \"data\": \"\",\n  \"note\": {\n    \"attachment\": \"\",\n    \"author\": {\n      \"avatar_url\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"state\": \"\",\n      \"username\": \"\",\n      \"web_url\": \"\"\n    },\n    \"body\": \"\",\n    \"created_at\": \"\",\n    \"downvote?\": \"\",\n    \"id\": \"\",\n    \"noteable_id\": \"\",\n    \"noteable_type\": \"\",\n    \"system\": \"\",\n    \"updated_at\": \"\",\n    \"upvote?\": \"\"\n  },\n  \"project_id\": \"\",\n  \"target_id\": \"\",\n  \"target_title\": \"\",\n  \"target_type\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the contribution events of a specified user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the SSH keys of a specified user. Available only for admins.",
                        "method": "get",
                        "endpoint": "v3/users/:id/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the SSH keys of a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Add an SSH key to a specified user. Available only for admins.",
                        "method": "post",
                        "endpoint": "v3/users/:id/keys",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "Add an SSH key to a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete an existing SSH key from a specified user. Available only for admins.",
                        "method": "delete",
                        "endpoint": "v3/users/:id/keys/:key_id",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"can_push\": \"\",\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"key\": \"\",\n  \"title\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Delete an existing SSH key from a specified user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Unblock a user. Available only for admins.",
                        "method": "put",
                        "endpoint": "v3/users/:id/unblock",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Unblock a user. Available only for admins.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get the version information of the GitLab instance.",
                        "method": "get",
                        "endpoint": "v3/version",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Get the version information of the GitLab instance.",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "proxyRemovePrefix": false,
                "https": false,
                "cors": true,
                "headers": [],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        }
    ]
}
