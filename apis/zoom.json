{
  "source": "mockoon:1.15.0",
  "data": [
      {
          "type": "environment",
          "item": {
              "uuid": "",
              "lastMigration": 17,
              "name": "Zoom API",
              "endpointPrefix": "v2",
              "latency": 0,
              "port": 3000,
              "hostname": "0.0.0.0",
              "routes": [
                  {
                      "uuid": "",
                      "documentation": "List sub accounts",
                      "method": "get",
                      "endpoint": "accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Account list returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a sub account",
                      "method": "post",
                      "endpoint": "accounts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created_at\": \"\",\n  \"id\": \"\",\n  \"owner_email\": \"\",\n  \"owner_id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Account created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}\n**Error Code:** `1107`<br>\nEmail domain is blocked.<br>\n**Error Code:** `1111`<br>\nPassword should not contain repeated characters such as 'aaaaaa'. <br>\nPassword should not contain consecutive characters such as 'abc','123'.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409`<br>\n**Error Code:** `1005`<br>\nEmail $email has already been used.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Disassociate a sub account",
                      "method": "delete",
                      "endpoint": "accounts/:accountId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code**: `204`<br>Account deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code**: `404` <br> \n**Error Code:** `2000`<br> You cannot disassociate a paid account. <br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get sub account details",
                      "method": "get",
                      "endpoint": "accounts/:accountId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\",\n  \"options\": {\n    \"billing_auto_renew\": {{faker 'random.boolean'}},\n    \"meeting_connector_list\": [\n      \"\"\n    ],\n    \"pay_mode\": \"{{oneOf (array 'master' 'sub')}}\",\n    \"room_connector_list\": [\n      \"\"\n    ],\n    \"share_mc\": {{faker 'random.boolean'}},\n    \"share_rc\": {{faker 'random.boolean'}}\n  },\n  \"owner_email\": \"\",\n  \"owner_id\": \"\",\n  \"vanity_url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code**: `200`<br>\nAccount object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code**: `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get billing information",
                      "method": "get",
                      "endpoint": "accounts/:accountId/billing",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"address\": \"\",\n  \"apt\": \"\",\n  \"city\": \"\",\n  \"country\": \"\",\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"last_name\": \"\",\n  \"phone_number\": \"\",\n  \"state\": \"\",\n  \"zip\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount billing contact information returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update billing information",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/billing",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nPlease subscribe a plan for this sub account first.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nAccount billing contact information updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nInvalid country parameter: {country}.<br>\nInvalid state parameter: {state}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List billing invoices",
                      "method": "get",
                      "endpoint": "accounts/:accountId/billing/invoices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"currency\": \"\",\n  \"invoices\": [\n    {\n      \"balance\": {{faker 'random.float'}},\n      \"due_date\": \"\",\n      \"id\": \"\",\n      \"invoice_date\": \"\",\n      \"invoice_number\": \"\",\n      \"status\": \"\\\"Draft\\\"\",\n      \"target_date\": \"\",\n      \"tax_amount\": {{faker 'random.float'}},\n      \"total_amount\": {{faker 'random.float'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for Paid account: {subAccountId}.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get invoice details",
                      "method": "get",
                      "endpoint": "accounts/:accountId/billing/invoices/:invoiceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"balance\": {{faker 'random.float'}},\n  \"currency\": \"\",\n  \"due_date\": \"\",\n  \"id\": \"\",\n  \"invoice_date\": \"\",\n  \"invoice_items\": [\n    {\n      \"charge_name\": \"\",\n      \"charge_number\": \"\",\n      \"charge_type\": \"\",\n      \"end_date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"quantity\": {{faker 'random.number'}},\n      \"start_date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"tax_amount\": {{faker 'random.float'}},\n      \"total_amount\": {{faker 'random.float'}}\n    }\n  ],\n  \"invoice_number\": \"\",\n  \"status\": \"\\\"Draft\\\"\",\n  \"target_date\": \"\",\n  \"tax_amount\": {{faker 'random.float'}},\n  \"total_amount\": {{faker 'random.float'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice information returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\nInvoiceId does not exist: {invoiceId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get locked settings",
                      "method": "get",
                      "endpoint": "accounts/:accountId/lock_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'random.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'random.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'random.boolean'}},\n    \"jbh_reminder\": {{faker 'random.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'random.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'random.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'random.boolean'}},\n    \"annotation\": {{faker 'random.boolean'}},\n    \"anonymous_question_answer\": {{faker 'random.boolean'}},\n    \"attendee_on_hold\": {{faker 'random.boolean'}},\n    \"auto_answer\": {{faker 'random.boolean'}},\n    \"auto_saving_chat\": {{faker 'random.boolean'}},\n    \"breakout_room\": {{faker 'random.boolean'}},\n    \"chat\": {{faker 'random.boolean'}},\n    \"closed_caption\": {{faker 'random.boolean'}},\n    \"co_host\": {{faker 'random.boolean'}},\n    \"custom_data_center_regions\": {{faker 'random.boolean'}},\n    \"dscp_marking\": {{faker 'random.boolean'}},\n    \"e2e_encryption\": {{faker 'random.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'random.boolean'}},\n    \"feedback\": {{faker 'random.boolean'}},\n    \"file_transfer\": {{faker 'random.boolean'}},\n    \"group_hd\": {{faker 'random.boolean'}},\n    \"original_audio\": {{faker 'random.boolean'}},\n    \"polling\": {{faker 'random.boolean'}},\n    \"post_meeting_feedback\": {{faker 'random.boolean'}},\n    \"private_chat\": {{faker 'random.boolean'}},\n    \"remote_control\": {{faker 'random.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'random.boolean'}},\n    \"screen_sharing\": {{faker 'random.boolean'}},\n    \"sending_default_email_invites\": {{faker 'random.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'random.boolean'}},\n    \"stereo_audio\": {{faker 'random.boolean'}},\n    \"use_html_format_email\": {{faker 'random.boolean'}},\n    \"virtual_background\": {{faker 'random.boolean'}},\n    \"webinar_question_answer\": {{faker 'random.boolean'}},\n    \"whiteboard\": {{faker 'random.boolean'}}\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'random.boolean'}},\n    \"auto_delete_cmr\": {{faker 'random.boolean'}},\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'random.boolean'}},\n    \"cloud_recording_download\": {{faker 'random.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'random.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'random.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'random.boolean'}},\n    \"recording_authentication\": \"\"\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": {{faker 'random.boolean'}},\n    \"embed_password_in_join_link\": {{faker 'random.boolean'}},\n    \"enforce_login\": {{faker 'random.boolean'}},\n    \"enforce_login_domains\": \"\",\n    \"enforce_login_with_domains\": {{faker 'random.boolean'}},\n    \"host_video\": {{faker 'random.boolean'}},\n    \"join_before_host\": {{faker 'random.boolean'}},\n    \"meeting_authentication\": {{faker 'random.boolean'}},\n    \"not_store_meeting_topic\": {{faker 'random.boolean'}},\n    \"participant_video\": {{faker 'random.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_pmi_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'random.boolean'}}\n  },\n  \"telephony\": {\n    \"telephony_regions\": {{faker 'random.boolean'}},\n    \"third_party_audio\": {{faker 'random.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'random.boolean'}},\n    \"show_international_numbers_link\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOnly available for paid account:$accountId.\n\n**HTTP Status Code:** `200`<br>\nLocked settings for the Account returned.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update locked settings",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/lock_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOnly available for Paid account: $accountId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nAccount lock settings updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nTAccount does not exist: $subAccountId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get managed domains",
                      "method": "get",
                      "endpoint": "accounts/:accountId/managed_domains",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"domains\": [\n    {\n      \"domain\": \"\",\n      \"status\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount managed domains returned.\n**Error Code:** `200`<br>\nOnly available for paid account.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `2001`<br>\nAccount does not exist: $subAccountId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update options",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/options",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nThe pay mode cannot be updated for a sub account which already has an existing plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nAccount options updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> The collection method cannot be changed after the purchase is complete.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update the account owner",
                      "method": "put",
                      "endpoint": "accounts/:accountId/owner",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nAccount owner updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `200`<br>\nUser is not an admin or is an API user or doesn’t belong to this account: {accountId}.<br>\nCannot make a user outside of your account an owner.<br>\nCannot update the role of an account owner.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.<br>\n**Error Code:** `3201`<br>\nCannot find a billing account for this: $accountId.<br>\n**Error Code:** `3211`<br>\nCannot find a billing contact for this: $accountId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update BYOC settings",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/phone/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Response HTTP code**: `204` **No Content.**<br>\nUpdated successfully.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set up a Zoom Phone account",
                      "method": "post",
                      "endpoint": "accounts/:accountId/phone/setup",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Codes** `201`<br>\nCreated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\n\n**Error Codes:** `300`<br>\nThe extension number {0} that you entered is a reserved number and can not be used. Provide a different number and try again.<br>\nThis account is not enrolled in a Zoom Phone plan. Subscribe to a Zoom Phone plan and try again.<br>\nThe billing information could not be retrieved at this time. Retry the request again after a few seconds.<br>\nThe country code you entered is invalid. Provide a valid country code and try again.<br>\nThe state code you entered is invalid. Provide a valid state code and try again.<br>\nThe city information you entered is invalid. Provide a valid city name and try again.<br>\nState code is required for this country.<br>\nCity is required for this country.<br>\nZip is required for this country.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\nUnauthorized.<br>\n\n**Error Code:** <br>\n`124` Account does not exist: {accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign SIP trunks",
                      "method": "post",
                      "endpoint": "accounts/:accountId/phone/sip_trunk/trunks",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"sip_trunks\": [\n    {\n      \"carrier_account\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nSIP Trunk does not exist: {sipTruniId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update SIP trunk details",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/phone/sip_trunk/trunks/:sipTrunkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Response Code**: `204` **No Content**<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nSip trunk does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get plan Information",
                      "method": "get",
                      "endpoint": "accounts/:accountId/plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"plan_audio\": {\n    \"callout_countries\": \"\",\n    \"ddi_numbers\": {{faker 'random.number'}},\n    \"next_invoice_date\": \"\",\n    \"premium_countries\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"tollfree_countries\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_base\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  },\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    }\n  ],\n  \"plan_phone\": {\n    \"plan_base\": {\n      \"callout_countries\": \"\",\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    },\n    \"plan_calling\": [\n      {\n        \"hosts\": {{faker 'random.number'}},\n        \"next_invoice_date\": \"\",\n        \"service_effective_date\": \"\",\n        \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n        \"type\": \"\"\n      }\n    ],\n    \"plan_number\": [\n      {\n        \"hosts\": {{faker 'random.number'}},\n        \"next_invoice_date\": \"\",\n        \"service_effective_date\": \"\",\n        \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n        \"type\": \"\"\n      }\n    ]\n  },\n  \"plan_recording\": \"\",\n  \"plan_recording_next_invoice_date\": \"\",\n  \"plan_recording_service_effective_date\": \"\",\n  \"plan_recording_status\": \"{{oneOf (array 'Active' 'Cancelled')}}\",\n  \"plan_room_connector\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"next_invoice_date\": \"\",\n      \"service_effective_date\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n      \"type\": \"\"\n    }\n  ],\n  \"plan_zoom_rooms\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"next_invoice_date\": \"\",\n    \"service_effective_date\": \"\",\n    \"status\": \"{{oneOf (array 'active' 'cancel' 'expired')}}\",\n    \"type\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:**`200`<br>\nAccount's plans returned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:**`404`<br>\nAccount does not exist: {subAccountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Subscribe plans",
                      "method": "post",
                      "endpoint": "accounts/:accountId/plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOne zuora account only can have one active billing subscription.<br>\nCan’t subscribe 25-participants pro plan for this sub-account.<br>\nCan’t subscribe 50-participants pro plan for this sub-account.<br>\nIn order to take advantage of your account’s special pricing, please add Pro host licenses instead and they will be assigned to your Zoom Rooms automatically.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"plan_audio\": {\n    \"callout_countries\": \"\",\n    \"ddi_numbers\": {{faker 'random.number'}},\n    \"premium_countries\": \"\",\n    \"tollfree_countries\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_base\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"type\": \"\"\n  },\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"plan_phone\": {\n    \"plan_base\": {\n      \"callout_countries\": \"\",\n      \"type\": \"\"\n    },\n    \"plan_calling\": [\n      {\n        \"hosts\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ],\n    \"plan_number\": [\n      {\n        \"hosts\": {{faker 'random.number'}},\n        \"type\": \"\"\n      }\n    ]\n  },\n  \"plan_recording\": \"\",\n  \"plan_room_connector\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"type\": \"\"\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\"\n    }\n  ],\n  \"plan_zoom_rooms\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"type\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:**`201`<br>\nAccount plans updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code**: `300`<br>Account can’t buy this plan.<br>\nBuy hosts must equal or larger than {minBuyHost}.<br>\nBuy hosts must equal or smaller than {maxBuyHost}.<br>\nBuy hosts must equal or smaller than 9999.<br>\nActive hosts must be equal or larger than buy hosts.<br>\nBuy hosts/active hosts must be equal or larger than {MinActiveHost}.<br>\nThis bundle plan doesn’t support active host.<br>\nInvalid free trial end date time.<br>\nInvalid free trial start/end time.<br>\nToo long trial duration.\n\t",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> **Error Code:** `2100`<br> Invalid parameter: first_name<br>\nInvalid parameter: last_name<br>Invalid parameter: email<br>Invalid parameter: country<br>Invalid parameter: address\nInvalid parameter: city<br>Invalid parameter: phone_number<br>Invalid parameter: state<br>Invalid parameter: zip<br>Invalid country parameter: {country}<br>Invalid state parameter: {state}<br>Invalid field: plan_bundle<br>Can’t subscribe to base plan and bundle plan at the same time.<br>Cannot add plan for a sub account which is paid by self.<br>Cannot enable free trial again for sub account.<br>You cannot add a sub account because your master account owner prevented you from adding one.<br>\nCannot add plan for Sub account which is not free plan.<br>Error getting bundle.<br>Cannot process account.<br>Invalid host number.<br>Account doesn’t have the permission to purchase this plan.<br>There was a conflict in processing this request. Zoom Room plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Room Connector plan {planCode} is already included in the bundle plan.<br>There was a conflict in processing this request. Large meeting plan {planCode} is already included in bundle plan.<br>There was a conflict in processing this request. Webinar plan {planCode} is already included in the bundle plan.<br>Recording plan {planCode} conflict with bundle plan.<br>Invalid Cloud Recording Plan: {plan_recording}\nAudio conferencing plan {planCode} conflict with bundle plan.<br>Invalid Audio Conferencing Plan: {planCode}<br>At least one option from among the Toll-free, Premium and Call-out must be provided.<br>Failed to add zuora plans<br>Invalid Base Plan: {subAccountId}<br>Master accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br> **Error Code:** `1001`<br> User does not exist.<br> \n**Error Code:** `2001`<br> Account does not exist: {subAccountId}.<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Subscribe additional plan",
                      "method": "post",
                      "endpoint": "accounts/:accountId/plans/addons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Account plans updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot update Additional plan for a sub account under free plan.<br>\nAdditional Zoom Rooms plan cannot be added to a sub account that already has a Zoom Rooms base plan.<br>\nThis sub account already has the additional plan: {planCode}.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> \nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update an additional plan",
                      "method": "put",
                      "endpoint": "accounts/:accountId/plans/addons",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nFree trial and VIP accounts can't update sub plans.<br>\nYou don’t have subscription for ({oldPlanCode}) yet.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nAdditional plan updated for the account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`\n<br>This sub account is on self pay mode.\n<br>Invalid Additional Plan Type: {newPlanCode}.\n<br>Cannot update Additional plan for a sub account under free plan.\n<br>Invalid plan type.\n<br>Account can’t buy this product.\n<br>Can not subscribe/update additional Audio Conferencing Pay As You Go Plan for a sub account whose base plan is not Business/Education plan.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.<br>\n**Error Code:** `3261`<br>\nFailed to change sub plan of account:{accountId}.<br>\nMust subscribe to a major plan first.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>\n**Error Code:** `3200`<br>\nCannot find Zuora subscription for account:{subAccountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Cancel additional plans",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/plans/addons/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nYou cannot cancel plan for a sub account that is under a free plan.<br>\nYou cannot perform this action because you do not have a Zoom Phone subscription for this account.<br>\nFree trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>\nYou don't have a plan subscription for ({planCode}) yet..",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nPlan type is required.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> \n**Error Code:** `2100`<br>\nThis sub account is on self pay mode.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.<br>\n**Error Code:** `2001`<br> \nAccount does not exist: {subAccountId}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a base plan",
                      "method": "put",
                      "endpoint": "accounts/:accountId/plans/base",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`\nFree trial and VIP account can't update sub plan.<br>\nYou do not have a subscription yet.<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTPS Status Code:** `204`<br>\nBase plan updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nInsufficient number of hosts for business plan type.<br>\nInsufficient number of hosts for education plan type.<br>\nPlan types do not match, oldPlanType: {oldPlanType} newPlanType: {newPlanType}.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br> \nThis sub account is on self pay mode.<br>\nCannot makes updates when account is subscribed to a bundle plan.<br>\nThis account is not under a free trial plan.<br>\nThe account currently has {0} paid users, you should change the user type to basic and reduce the number of paid users before performing this action.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist.\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Cancel a base plan",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/plans/base/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nCannot cancel plan for a sub account which is under free plan.<br>\nYou don’t have a major subscription yet.<br>\nYou should first cancel all additional subscriptions.<br>\nFree trial and VIP accounts can not cancel plans of a sub account. Contact the Zoom Support team for details.<br>\nYou don't have a plan subscription for ({planCode}) yet.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nPlan cancelled successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2100`<br>\nThis sub account is paid by self.<br>\nYou cannot make cancellation requests for a bundle plan. Contact the Zoom Support team for details.<br>\nMaster accounts with bulk licenses cannot provision, update, or cancel plans for sub accounts using APIs, please use the billing portal or contact Support.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>User does not exist. <br>\n**Error Code:** `2001`<br>This account does not exist or does not belong to this master account.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get plan usage",
                      "method": "get",
                      "endpoint": "accounts/:accountId/plans/usage",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"plan_base\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'random.number'}}\n    }\n  ],\n  \"plan_large_meeting\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'random.number'}}\n    }\n  ],\n  \"plan_recording\": {\n    \"free_storage\": \"\",\n    \"free_storage_usage\": \"\",\n    \"plan_storage\": \"\",\n    \"plan_storage_exceed\": \"\",\n    \"plan_storage_usage\": \"\",\n    \"type\": \"\"\n  },\n  \"plan_united\": {\n    \"hosts\": {{faker 'random.number'}},\n    \"name\": \"\",\n    \"type\": \"\",\n    \"usage\": {{faker 'random.number'}}\n  },\n  \"plan_webinar\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'random.number'}}\n    }\n  ],\n  \"plan_zoom_rooms\": [\n    {\n      \"hosts\": {{faker 'random.number'}},\n      \"type\": \"\",\n      \"usage\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nPlan Usage returned.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `200` <br>\nOnly available for paid account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List recordings of an account",
                      "method": "get",
                      "endpoint": "accounts/:accountId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{faker 'date.recent' 365}}\",\n  \"meetings\": [\n    {\n      \"duration\": {{faker 'random.number'}},\n      \"host_id\": \"\",\n      \"id\": \"\",\n      \"recording_count\": {{faker 'random.number'}},\n      \"recording_files\": [\n        {\n          \"download_url\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_type\": \"{{oneOf (array 'MP4' 'M4A' 'CHAT' 'TRANSCRIPT' 'CC' 'CSV' 'TB')}}\",\n          \"id\": \"\",\n          \"meeting_id\": \"\",\n          \"play_url\": \"\",\n          \"recording_end\": \"\",\n          \"recording_start\": \"\",\n          \"recording_type\": \"{{oneOf (array 'shared_screen_with_speaker_view(CC)' 'shared_screen_with_speaker_view' 'shared_screen_with_gallery_view' 'active_speaker' 'gallery_view' 'shared_screen' 'audio_only' 'audio_transcript' 'chat_file' 'poll' 'host_video' 'closed_caption' 'timeline' 'thumbnail')}}\",\n          \"status\": \"{{oneOf (array 'completed' 'processing')}}\"\n        }\n      ],\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"topic\": \"\",\n      \"total_size\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"{{faker 'date.recent' 365}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Response Error Code:** `200` <br>\nOnly available for Paid account.\n\n**HTTP Status Code:** `200` <br>\nRecording(s) listed successfully.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `400` <br>\nAccount not found.\n\n**Response Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get settings",
                      "method": "get",
                      "endpoint": "accounts/:accountId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'random.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'random.boolean'}},\n    \"cloud_recording_avaliable_reminder\": {{faker 'random.boolean'}},\n    \"jbh_reminder\": {{faker 'random.boolean'}},\n    \"low_host_count_reminder\": {{faker 'random.boolean'}},\n    \"schedule_for_reminder\": {{faker 'random.boolean'}}\n  },\n  \"feature\": {\n    \"meeting_capacity\": {{faker 'random.number'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'random.boolean'}},\n    \"allow_live_streaming\": {{faker 'random.boolean'}},\n    \"allow_participants_to_rename\": {{faker 'random.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'random.boolean'}},\n    \"annotation\": {{faker 'random.boolean'}},\n    \"anonymous_question_answer\": {{faker 'random.boolean'}},\n    \"attendee_on_hold\": {{faker 'random.boolean'}},\n    \"auto_answer\": {{faker 'random.boolean'}},\n    \"auto_saving_chat\": {{faker 'random.boolean'}},\n    \"breakout_room\": {{faker 'random.boolean'}},\n    \"chat\": {{faker 'random.boolean'}},\n    \"closed_caption\": {{faker 'random.boolean'}},\n    \"co_host\": {{faker 'random.boolean'}},\n    \"custom_data_center_regions\": {{faker 'random.boolean'}},\n    \"custom_live_streaming_service\": {{faker 'random.boolean'}},\n    \"custom_service_instructions\": \"\",\n    \"data_center_regions\": \"{{oneOf (array 'EU' 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA')}}\",\n    \"dscp_audio\": {{faker 'random.number'}},\n    \"dscp_marking\": {{faker 'random.boolean'}},\n    \"dscp_video\": {{faker 'random.number'}},\n    \"e2e_encryption\": {{faker 'random.boolean'}},\n    \"entry_exit_chime\": \"{{oneOf (array 'host' 'all' 'none')}}\",\n    \"far_end_camera_control\": {{faker 'random.boolean'}},\n    \"feedback\": {{faker 'random.boolean'}},\n    \"file_transfer\": {{faker 'random.boolean'}},\n    \"group_hd\": {{faker 'random.boolean'}},\n    \"meeting_reactions\": {{faker 'random.boolean'}},\n    \"original_audio\": {{faker 'random.boolean'}},\n    \"p2p_connetion\": {{faker 'random.boolean'}},\n    \"p2p_ports\": {{faker 'random.boolean'}},\n    \"polling\": {{faker 'random.boolean'}},\n    \"ports_range\": \"\",\n    \"post_meeting_feedback\": {{faker 'random.boolean'}},\n    \"private_chat\": {{faker 'random.boolean'}},\n    \"record_play_own_voice\": {{faker 'random.boolean'}},\n    \"remote_control\": {{faker 'random.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'random.boolean'}},\n    \"screen_sharing\": {{faker 'random.boolean'}},\n    \"sending_default_email_invites\": {{faker 'random.boolean'}},\n    \"show_a_join_from_your_browser_link\": {{faker 'random.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'random.boolean'}},\n    \"stereo_audio\": {{faker 'random.boolean'}},\n    \"use_html_format_email\": {{faker 'random.boolean'}},\n    \"virtual_background\": {{faker 'random.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'random.boolean'}},\n      \"allow_videos\": {{faker 'random.boolean'}},\n      \"enable\": {{faker 'random.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'random.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"watermark\": {{faker 'random.boolean'}},\n    \"webinar_question_answer\": {{faker 'random.boolean'}},\n    \"whiteboard\": {{faker 'random.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\",\n    \"workplace_by_facebook\": {{faker 'random.boolean'}}\n  },\n  \"integration\": {\n    \"box\": {{faker 'random.boolean'}},\n    \"dropbox\": {{faker 'random.boolean'}},\n    \"google_calendar\": {{faker 'random.boolean'}},\n    \"google_drive\": {{faker 'random.boolean'}},\n    \"kubi\": {{faker 'random.boolean'}},\n    \"microsoft_one_drive\": {{faker 'random.boolean'}}\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'random.boolean'}},\n    \"allow_recovery_deleted_cloud_recordings\": {{faker 'random.boolean'}},\n    \"archive\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"settings\": {\n        \"audio_file\": {{faker 'random.boolean'}},\n        \"cc_transcript_file\": {{faker 'random.boolean'}},\n        \"chat_file\": {{faker 'random.boolean'}},\n        \"chat_with_sender_email\": {{faker 'random.boolean'}},\n        \"video_file\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n    },\n    \"auto_delete_cmr\": {{faker 'random.boolean'}},\n    \"auto_delete_cmr_days\": {{faker 'random.number'}},\n    \"auto_recording\": \"{{oneOf (array 'local' 'cloud' 'none')}}\",\n    \"cloud_recording\": {{faker 'random.boolean'}},\n    \"cloud_recording_download\": {{faker 'random.boolean'}},\n    \"cloud_recording_download_host\": {{faker 'random.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'random.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'random.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'random.boolean'}},\n    \"record_audio_file\": {{faker 'random.boolean'}},\n    \"record_gallery_view\": {{faker 'random.boolean'}},\n    \"record_speaker_view\": {{faker 'random.boolean'}},\n    \"recording_audio_transcript\": {{faker 'random.boolean'}},\n    \"recording_disclaimer\": {{faker 'random.boolean'}},\n    \"recording_password_requirement\": {\n      \"have_letter\": {{faker 'random.boolean'}},\n      \"have_number\": {{faker 'random.boolean'}},\n      \"have_special_character\": {{faker 'random.boolean'}},\n      \"length\": {{faker 'random.number'}},\n      \"only_allow_numeric\": {{faker 'random.boolean'}}\n    },\n    \"required_password_for_existing_cloud_recordings\": {{faker 'random.boolean'}},\n    \"save_chat_text\": {{faker 'random.boolean'}},\n    \"show_timestamp\": {{faker 'random.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"{{oneOf (array 'both' 'telephony' 'voip' 'thirdParty')}}\",\n    \"enforce_login\": {{faker 'random.boolean'}},\n    \"enforce_login_domains\": \"\",\n    \"enforce_login_with_domains\": {{faker 'random.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'random.boolean'}},\n    \"host_video\": {{faker 'random.boolean'}},\n    \"join_before_host\": {{faker 'random.boolean'}},\n    \"meeting_password_requirement\": {\n      \"consecutive_characters_length\": \"{{oneOf (array '0' '4' '5' '6' '7' '8')}}\",\n      \"have_letter\": {{faker 'random.boolean'}},\n      \"have_number\": {{faker 'random.boolean'}},\n      \"have_special_character\": {{faker 'random.boolean'}},\n      \"have_upper_and_lower_characters\": {{faker 'random.boolean'}},\n      \"length\": {{faker 'random.number'}},\n      \"only_allow_numeric\": {{faker 'random.boolean'}},\n      \"weak_enhance_detection\": {{faker 'random.boolean'}}\n    },\n    \"not_store_meeting_topic\": {{faker 'random.boolean'}},\n    \"participant_video\": {{faker 'random.boolean'}},\n    \"personal_meeting\": {{faker 'random.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'jbh_only' 'all' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'random.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"use_pmi_for_scheduled_meetings\": {{faker 'random.boolean'}}\n  },\n  \"security\": {\n    \"admin_change_name_pic\": {{faker 'random.boolean'}},\n    \"hide_billing_info\": {{faker 'random.boolean'}},\n    \"import_photos_from_devices\": {{faker 'random.boolean'}},\n    \"password_requirement\": {\n      \"consecutive_characters_length\": {{faker 'random.number'}},\n      \"have_special_character\": {{faker 'random.boolean'}},\n      \"minimum_password_length\": {{faker 'random.number'}},\n      \"weak_enhance_detection\": {{faker 'random.boolean'}}\n    },\n    \"sign_again_period_for_inactivity_on_client\": {{faker 'random.number'}},\n    \"sign_again_period_for_inactivity_on_web\": {{faker 'random.number'}},\n    \"sign_in_with_two_factor_auth\": \"{{oneOf (array 'all' 'group' 'role' 'none')}}\",\n    \"sign_in_with_two_factor_auth_groups\": [\n      \"\"\n    ],\n    \"sign_in_with_two_factor_auth_roles\": [\n      \"\"\n    ]\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"telephony_regions\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'random.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'random.boolean'}},\n    \"call_out_countries\": [\n      \"\"\n    ],\n    \"display_toll_free_numbers\": {{faker 'random.boolean'}},\n    \"show_international_numbers_link\": {{faker 'random.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"auto_start_stop_scheduled_meetings\": {{faker 'random.boolean'}},\n    \"cmr_for_instant_meeting\": {{faker 'random.boolean'}},\n    \"force_private_meeting\": {{faker 'random.boolean'}},\n    \"hide_host_information\": {{faker 'random.boolean'}},\n    \"list_meetings_with_calendar\": {{faker 'random.boolean'}},\n    \"start_airplay_manually\": {{faker 'random.boolean'}},\n    \"ultrasonic\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'random.boolean'}},\n    \"weekly_system_restart\": {{faker 'random.boolean'}},\n    \"zr_post_meeting_feedback\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br> Account settings returned. \n**Error Code:** `200`<br>\nOnly available for Paid account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update settings",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br> Only available for Paid account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>Account settings updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>The domains provided are invalid. If you are providing multiple domains, separate each domain with a comma.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br>Account does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete virtual background files",
                      "method": "delete",
                      "endpoint": "accounts/:accountId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Upload virtual background files",
                      "method": "post",
                      "endpoint": "accounts/:accountId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file can be uploaded.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to you: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List internal call-out countries",
                      "method": "get",
                      "endpoint": "accounts/:accountId/sip_trunk/callout_countries",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"callout_countries\": [\n    {\n      \"code\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>\nList of Internal Callout Countries returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add internal call-out countries",
                      "method": "post",
                      "endpoint": "accounts/:accountId/sip_trunk/callout_countries",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"callout_countries\": [\n    {\n      \"code\": \"\",\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\nCall-out countries created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n*  Invalid parameter: callout_countries.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete internal call-out country",
                      "method": "delete",
                      "endpoint": "accounts/:accountId/sip_trunk/callout_countries/:countryId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nCountry deleted. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n*  Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List internal numbers",
                      "method": "get",
                      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"internal_numbers\": [\n    {\n      \"allow_for_external_meetings\": {{faker 'random.boolean'}},\n      \"allow_join\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"display_number\": \"\",\n      \"labels\": \"\",\n      \"languages\": \"{{oneOf (array 'en-GB' 'en-US' 'de-DE')}}\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array '0' '1')}}\",\n      \"visible\": {{faker 'random.boolean'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nList of internal numbers returned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add internal numbers",
                      "method": "post",
                      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"internal_numbers\": [\n    {\n      \"allow_for_external_meetings\": {{faker 'random.boolean'}},\n      \"allow_join\": {{faker 'random.boolean'}},\n      \"country\": \"\",\n      \"display_number\": \"\",\n      \"id\": \"\",\n      \"labels\": \"\",\n      \"languages\": \"{{oneOf (array 'en-GB' 'en-US' 'de-DE')}}\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array '0' '1')}}\",\n      \"visible\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\nInternal numbers added successfully. \n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n* You can only assign a maximum of {0} phone numbers to this account.\n* The value you provided for the ‘number’ field has already been used. Please provide a unique value for this field.\n* Invalid parameter: internal_numbers.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete an internal number",
                      "method": "delete",
                      "endpoint": "accounts/:accountId/sip_trunk/internal_numbers/:numberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nNumber deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.\n* Request failed because this account is not enrolled in SIP Connected Audio plan.\n* This account is not a master account. To get access to this API, your account must be enrolled in the API Partner Plan and must be a master account.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete all numbers",
                      "method": "delete",
                      "endpoint": "accounts/:accountId/sip_trunk/numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nNumbers deleted successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.<br><br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign numbers",
                      "method": "post",
                      "endpoint": "accounts/:accountId/sip_trunk/numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nNumbers assigned successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.<br><br>\n**Error Code:** `400`<br>\nThis number does not belong to master account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign SIP trunk configuration",
                      "method": "patch",
                      "endpoint": "accounts/:accountId/sip_trunk/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nConfiguration assigned successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.<br>\nThis account does not exist or does not belong to you.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List SIP trunks",
                      "method": "get",
                      "endpoint": "accounts/:accountId/sip_trunk/trunks",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"sip_trunks\": [\n    {\n      \"dnis\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"number_prefix\": \"\",\n      \"outbound_caller_id\": \"\",\n      \"sip_server_address\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nList of SIP Trunks returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> Request failed because this account is not enrolled in SIP Connected Audio plan.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign SIP trunks",
                      "method": "post",
                      "endpoint": "accounts/:accountId/sip_trunk/trunks",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"sip_trunks\": [\n    {\n      \"dnis\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"number_prefix\": \"\",\n      \"sip_server_address\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk assigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* The master account has no sip trunk configs.<br>\n* Invalid parameter: sip_trunks.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a SIP trunk",
                      "method": "delete",
                      "endpoint": "accounts/:accountId/sip_trunk/trunks/:trunkId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSIP Trunk deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br> \n* Request failed because this account is not enrolled in SIP Connected Audio plan.<br>\n* Your account does not have the permission to make updates on this account. Only a master account can perform this action on a sub account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `2001`<br> Account does not exist: {0}.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get trusted domains",
                      "method": "get",
                      "endpoint": "accounts/:accountId/trusted_domains",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"trusted_domains\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount trusted domains returned<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2001`<br> Account does not exist: $subAccountId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Switch a user's account",
                      "method": "put",
                      "endpoint": "accounts/:accountId/users/:userId/account",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code**: `204`<br>\nUser's account switched successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code**: `400` **Bad Request**<br>\n**Error Code:** `1117`<br> Can not disassociate Admin user",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code**: `404` **Not Found**<br>\n\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br><br>\n\n**Error Code:** `1010`<br>\nUser not found on this account.<br>\n\n**Error Code:** `1120`<br> Invite not exist\n\t\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Download an invoice file",
                      "method": "get",
                      "endpoint": "api/download/billing/invoices/:invoiceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount billing invoice PDF returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {subAccountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List archived files",
                      "method": "get",
                      "endpoint": "archive_files",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"\",\n  \"meetings\": [\n    {\n      \"archive_files\": [\n        {\n          \"download_url\": \"\",\n          \"file_extension\": \"\",\n          \"file_size\": {{faker 'random.number'}},\n          \"file_type\": \"\",\n          \"id\": \"\",\n          \"recording_type\": \"\",\n          \"status\": \"\"\n        }\n      ],\n      \"duration\": {{faker 'random.number'}},\n      \"host_id\": \"\",\n      \"id\": {{faker 'random.number'}},\n      \"recording_count\": {{faker 'random.number'}},\n      \"start_time\": \"\",\n      \"timezone\": \"\",\n      \"topic\": \"\",\n      \"total_size\": {{faker 'random.number'}},\n      \"type\": {{faker 'random.number'}},\n      \"uuid\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**\nArchived files returned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request**<br>\n**Error Code:** `2001`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a channel",
                      "method": "delete",
                      "endpoint": "chat/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nChannel deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to delete this user's channel.<br>\n**Error Code:** `5301`<br> Request to delete a channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a channel",
                      "method": "get",
                      "endpoint": "chat/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nChannel returned.<br>\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to access this user's channel information.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nChannel does not exist: $channelId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a channel",
                      "method": "patch",
                      "endpoint": "chat/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204`\nChannel updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to update a channel for this user.<br>\n**Error Code:** `5301`<br>\nRequest to update a channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Leave a channel",
                      "method": "delete",
                      "endpoint": "chat/channels/:channelId/members/me",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nLeft channel successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad Request.<br>\n**Error Code:** `5301`<br> Request to leave the channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Join a channel",
                      "method": "post",
                      "endpoint": "chat/channels/:channelId/members/me",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`\nSuccessfully joined the channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `5301`<br> Request to join the channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove a member",
                      "method": "delete",
                      "endpoint": "chat/channels/:channelId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember removed.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to remove channel members on this user's behalf.<br>\n**Error Code:** `5301`<br>\nUnable to remove channel member.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user's contacts",
                      "method": "get",
                      "endpoint": "chat/users/me/contacts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"contacts\": [\n    {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>List of user's contacts returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nThe next page token is invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's contact details",
                      "method": "get",
                      "endpoint": "chat/users/me/contacts/:contactId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"direct_numbers\": [\n    \"\"\n  ],\n  \"email\": \"{{faker 'internet.email'}}\",\n  \"extension_number\": \"\",\n  \"first_name\": \"\",\n  \"id\": \"\",\n  \"last_name\": \"\",\n  \"phone_number\": \"\",\n  \"presence_status\": \"{{oneOf (array 'Do_Not_Disturb' 'Away' 'Available' 'Offline')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nContact information returned.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `5301`<br>\nRequest to get the presence status of the chat contact failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $contactId",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user's channels",
                      "method": "get",
                      "endpoint": "chat/users/:userId/channels",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"channels\": [\n    {\n      \"channels_settings\": {\n        \"allow_to_add_external_users\": {{faker 'random.number'}},\n        \"new_members_can_see_previous_messages_files\": {{faker 'random.boolean'}},\n        \"posting_permissions\": {{faker 'random.number'}}\n      },\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Status Code**: `200` <br>\nUser's channels returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\nBad request.<br>\n**Error Code**: `300`<br>\nThe next page token is either invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a channel",
                      "method": "post",
                      "endpoint": "chat/users/:userId/channels",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"jid\": \"\",\n  \"name\": \"\",\n  \"type\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**Status Code**: `201` <br>\nChannel created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nNot found.<br>\n**Error Code**: `5301`<br>\nRequest to create a channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $userId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a channel",
                      "method": "delete",
                      "endpoint": "chat/users/:userId/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nChannel deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to delete this user's channel.<br>\n**Error Code:** `5301`<br> Request to delete a channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a channel",
                      "method": "get",
                      "endpoint": "chat/users/:userId/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nChannel returned.<br>\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to access this user's channel information.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nChannel does not exist: $channelId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a channel",
                      "method": "patch",
                      "endpoint": "chat/users/:userId/channels/:channelId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204`\nChannel updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to update a channel for this user.<br>\n**Error Code:** `5301`<br>\nRequest to update a channel failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List channel members",
                      "method": "get",
                      "endpoint": "chat/users/:userId/channels/:channelId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"members\": [\n    {\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"role\": \"{{oneOf (array 'admin' 'owner' 'member')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of channel members returned.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to view channel members on this user's behalf..<br>\n**Error Code:** `300`<br>\nThe next page token is either invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Invite channel members",
                      "method": "post",
                      "endpoint": "chat/users/:userId/channels/:channelId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nMembers invited to the channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`<br>\nRequest to invite channel members failed.<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to invite channel members on this user's behalf.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove a member",
                      "method": "delete",
                      "endpoint": "chat/users/:userId/channels/:channelId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember removed.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\nBad Request<br>\n**Error Code:** `200`<br>\nUnauthorized request. You do not have permission to remove channel members on this user's behalf.<br>\n**Error Code:** `5301`<br>\nUnable to remove channel member.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user's chat messages",
                      "method": "get",
                      "endpoint": "chat/users/:userId/messages",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"messages\": [\n    {\n      \"date_time\": \"\",\n      \"id\": \"\",\n      \"message\": \"\",\n      \"reply_main_message_id\": \"\",\n      \"reply_main_message_timestamp\": {{faker 'random.number'}},\n      \"sender\": \"\",\n      \"status\": \"{{oneOf (array 'Deleted' 'Edited' 'Normal')}}\",\n      \"timestamp\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 10\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:**`200`<br>\nList of chat messages returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad request.<br>\n**Error Code:** `200`<br>Unauthorized request. You do not have permission to access this user's chat messages.<br>\n**Error Code:** `300` <br>The next page token is invalid or expired.<br>\n**Error Code:** `300` <br>Must provide either contact or channel parameter.<br>\n**Error Code:** `300` <br>Only provide past chat messages in recent 6 months.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Send a chat message",
                      "method": "post",
                      "endpoint": "chat/users/:userId/messages",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**Status Code:** `201`<br>\nMessage sent.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `5301`<br>\nMessage sending failed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a message",
                      "method": "delete",
                      "endpoint": "chat/users/:userId/messages/:messageId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMessage deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br>\nThe contact or the channel parameter provided is invalid.<br>\nOnly the sender of this message can make updates.<br>\n**Error Code:** `300`<br>Channel does not exist: $messageId<br>Must provide either contact or channel parameter.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a message",
                      "method": "put",
                      "endpoint": "chat/users/:userId/messages/:messageId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMessage updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBar request<br>\n**Error Code:** `200`<br>\nOnly the sender of this message can make updates.<br>\n**Error Code:** `300`<br>\nMessage does not exist: $messageId <br> Must provide either contact or channel parameter.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `1001`<br>\nUser does not exist: $to_contact.<br>\n**Error Code**: `4130`<br>\nChannel does not exist: $to_channel.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Search company contacts",
                      "method": "get",
                      "endpoint": "contacts",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"contacts\": [\n    {\n      \"dept\": \"\",\n      \"direct_numbers\": [\n        \"\"\n      ],\n      \"email\": \"\",\n      \"extension_number\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"im_group_id\": \"\",\n      \"im_group_name\": \"\",\n      \"job_title\": \"\",\n      \"last_name\": \"\",\n      \"location\": \"\",\n      \"phone_number\": \"\",\n      \"presence_status\": \"{{oneOf (array 'Do_Not_Disturb' 'Away' 'Available' 'Offline')}}\",\n      \"sip_phone_number\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nContact returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List groups",
                      "method": "get",
                      "endpoint": "groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"groups\": [\n    {\n      \"id\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of groups returned.<br>\n**Error Code:** `200`\nOnly available for paid accounts.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a group",
                      "method": "post",
                      "endpoint": "groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"total_members\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nGroup created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nMissing field: name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>**Error Code:** `4130`<br>A group with this {groupId} does not exist.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409`<br> **Error Code:** `4132`<br> Group name {groupName} is already in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 429,
                              "label": "**HTTP Status Code:** `429`<br>\nYou have exceeded the daily rate limit ({0}) of Create a Group API request for this account. This limit resets at GMT 00:00:00.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a group",
                      "method": "delete",
                      "endpoint": "groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nGroup deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nGroup member not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a group",
                      "method": "get",
                      "endpoint": "groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"total_members\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br> Group returned.<br>\n**Error Code:** `200`<br>\nOnly available for Paid account,{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nGroup does not belong to your account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nGroup not found.<br>\n**Error Code:** `4130`<br> A group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a group",
                      "method": "patch",
                      "endpoint": "groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "The group does not belong to this account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Group updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**Status Code:** `409`<br>\nConflict<br>\n**Error Code:** `4132`<br>\nGroup name {groupName} is already in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get locked settings",
                      "method": "get",
                      "endpoint": "groups/:groupId/lock_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'random.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'random.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'random.boolean'}},\n    \"jbh_reminder\": {{faker 'random.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'random.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'random.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'random.boolean'}},\n    \"annotation\": {{faker 'random.boolean'}},\n    \"attendee_on_hold\": {{faker 'random.boolean'}},\n    \"auto_answer\": {{faker 'random.boolean'}},\n    \"auto_saving_chat\": {{faker 'random.boolean'}},\n    \"breakout_room\": {{faker 'random.boolean'}},\n    \"chat\": {{faker 'random.boolean'}},\n    \"closed_caption\": {{faker 'random.boolean'}},\n    \"co_host\": {{faker 'random.boolean'}},\n    \"custom_data_center_regions\": {{faker 'random.boolean'}},\n    \"e2e_encryption\": {{faker 'random.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'random.boolean'}},\n    \"feedback\": {{faker 'random.boolean'}},\n    \"file_transfer\": {{faker 'random.boolean'}},\n    \"group_hd\": {{faker 'random.boolean'}},\n    \"non_verbal_feedback\": {{faker 'random.boolean'}},\n    \"original_audio\": {{faker 'random.boolean'}},\n    \"polling\": {{faker 'random.boolean'}},\n    \"post_meeting_feedback\": {{faker 'random.boolean'}},\n    \"private_chat\": {{faker 'random.boolean'}},\n    \"remote_control\": {{faker 'random.boolean'}},\n    \"remote_support\": {{faker 'random.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'random.boolean'}},\n    \"screen_sharing\": {{faker 'random.boolean'}},\n    \"sending_default_email_invites\": {{faker 'random.boolean'}},\n    \"show_browser_join_link\": {{faker 'random.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'random.boolean'}},\n    \"stereo_audio\": {{faker 'random.boolean'}},\n    \"use_html_format_email\": {{faker 'random.boolean'}},\n    \"virtual_background\": {{faker 'random.boolean'}},\n    \"waiting_room\": {{faker 'random.boolean'}},\n    \"whiteboard\": {{faker 'random.boolean'}}\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'random.boolean'}},\n    \"auto_delete_cmr\": {{faker 'random.boolean'}},\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'random.boolean'}},\n    \"cloud_recording_download\": {{faker 'random.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'random.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'random.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'random.boolean'}},\n    \"recording_authentication\": {{faker 'random.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": {{faker 'random.boolean'}},\n    \"embed_password_in_join_link\": {{faker 'random.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'random.boolean'}},\n    \"host_video\": {{faker 'random.boolean'}},\n    \"join_before_host\": {{faker 'random.boolean'}},\n    \"meeting_authentication\": {{faker 'random.boolean'}},\n    \"mute_upon_entry\": {{faker 'random.boolean'}},\n    \"participant_video\": {{faker 'random.boolean'}},\n    \"pstn_password_protected\": {{faker 'random.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_pmi_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_reminder\": {{faker 'random.boolean'}}\n  },\n  \"telephony\": {\n    \"telephony_regions\": {{faker 'random.boolean'}},\n    \"third_party_audio\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nOnly available for paid account.\n\n**Status Code:** `200`<br>\nLocked settings of group returned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update locked settings",
                      "method": "patch",
                      "endpoint": "groups/:groupId/lock_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204`<br>\nGroup's locked settings updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nOnly available for paid account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nThis group does not exist.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List group members ",
                      "method": "get",
                      "endpoint": "groups/:groupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"members\": [\n    {\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br> Only available for paid account,{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add group members",
                      "method": "post",
                      "endpoint": "groups/:groupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Only available for paid account,{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "Member added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a group member",
                      "method": "delete",
                      "endpoint": "groups/:groupId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Only available for paid account,{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Group member deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `1010`<br>\nGroup does not belong to this account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Status Code:** `404`<br>\nNot found.<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a group member",
                      "method": "patch",
                      "endpoint": "groups/:groupId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nGroup member updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\n Only available for Paid account, {accountId}.<br><br>\n **Error Code:** `300`<br>\n The target_group_id can not be empty.<br><br>\n **Error Code:** `1010`<br>\n Group does not belong to this account:{accountId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a group's settings",
                      "method": "get",
                      "endpoint": "groups/:groupId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'random.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'random.boolean'}},\n    \"cloud_recording_available_reminder\": {{faker 'random.boolean'}},\n    \"jbh_reminder\": {{faker 'random.boolean'}},\n    \"schedule_for_host_reminder\": {{faker 'random.boolean'}}\n  },\n  \"in_meeting\": {\n    \"alert_guest_join\": {{faker 'random.boolean'}},\n    \"allow_show_zoom_windows\": {{faker 'random.boolean'}},\n    \"annotation\": {{faker 'random.boolean'}},\n    \"attendee_on_hold\": {{faker 'random.boolean'}},\n    \"auto_answer\": {{faker 'random.boolean'}},\n    \"auto_saving_chat\": {{faker 'random.boolean'}},\n    \"breakout_room\": {{faker 'random.boolean'}},\n    \"chat\": {{faker 'random.boolean'}},\n    \"closed_caption\": {{faker 'random.boolean'}},\n    \"co_host\": {{faker 'random.boolean'}},\n    \"custom_data_center_regions\": {{faker 'random.boolean'}},\n    \"data_center_regions\": \"{{oneOf (array 'EU' 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA')}}\",\n    \"e2e_encryption\": {{faker 'random.boolean'}},\n    \"entry_exit_chime\": \"\",\n    \"far_end_camera_control\": {{faker 'random.boolean'}},\n    \"feedback\": {{faker 'random.boolean'}},\n    \"file_transfer\": {{faker 'random.boolean'}},\n    \"group_hd\": {{faker 'random.boolean'}},\n    \"non_verbal_feedback\": {{faker 'random.boolean'}},\n    \"only_host_view_device_list\": {{faker 'random.boolean'}},\n    \"original_audio\": {{faker 'random.boolean'}},\n    \"polling\": {{faker 'random.boolean'}},\n    \"post_meeting_feedback\": {{faker 'random.boolean'}},\n    \"private_chat\": {{faker 'random.boolean'}},\n    \"record_play_own_voice\": {{faker 'random.boolean'}},\n    \"remote_control\": {{faker 'random.boolean'}},\n    \"remote_support\": {{faker 'random.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'random.boolean'}},\n    \"screen_sharing\": {{faker 'random.boolean'}},\n    \"sending_default_email_invites\": {{faker 'random.boolean'}},\n    \"show_browser_join_link\": {{faker 'random.boolean'}},\n    \"show_device_list\": {{faker 'random.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'random.boolean'}},\n    \"stereo_audio\": {{faker 'random.boolean'}},\n    \"use_html_format_email\": {{faker 'random.boolean'}},\n    \"virtual_background\": {{faker 'random.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'random.boolean'}},\n      \"allow_videos\": {{faker 'random.boolean'}},\n      \"enable\": {{faker 'random.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'random.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"waiting_room\": {{faker 'random.boolean'}},\n    \"whiteboard\": {{faker 'random.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\"\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"account_user_access_recording\": {{faker 'random.boolean'}},\n    \"archive\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"settings\": {\n        \"audio_file\": {{faker 'random.boolean'}},\n        \"cc_transcript_file\": {{faker 'random.boolean'}},\n        \"chat_file\": {{faker 'random.boolean'}},\n        \"chat_with_sender_email\": {{faker 'random.boolean'}},\n        \"video_file\": {{faker 'random.boolean'}}\n      },\n      \"type\": \"{{oneOf (array '1' '2' '3')}}\"\n    },\n    \"auto_recording\": \"\",\n    \"cloud_recording\": {{faker 'random.boolean'}},\n    \"cloud_recording_download\": {{faker 'random.boolean'}},\n    \"cloud_recording_download_host\": {{faker 'random.boolean'}},\n    \"host_delete_cloud_recording\": {{faker 'random.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'random.boolean'}},\n    \"prevent_host_access_recording\": {{faker 'random.boolean'}},\n    \"record_audio_file\": {{faker 'random.boolean'}},\n    \"record_gallery_view\": {{faker 'random.boolean'}},\n    \"record_speaker_view\": {{faker 'random.boolean'}},\n    \"recording_audio_transcript\": {{faker 'random.boolean'}},\n    \"save_chat_text\": {{faker 'random.boolean'}},\n    \"show_timestamp\": {{faker 'random.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"\",\n    \"embed_password_in_join_link\": {{faker 'random.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'random.boolean'}},\n    \"host_video\": {{faker 'random.boolean'}},\n    \"join_before_host\": {{faker 'random.boolean'}},\n    \"mute_upon_entry\": {{faker 'random.boolean'}},\n    \"participant_video\": {{faker 'random.boolean'}},\n    \"personal_meeting\": {{faker 'random.boolean'}},\n    \"pstn_password_protected\": {{faker 'random.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'all' 'jbh_only' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_reminder\": {{faker 'random.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"use_pmi_for_schedule_meetings\": {{faker 'random.boolean'}}\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"telephony_regions\": {\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code**: `200` <br>\nOnly available for paid account.\n\n**HTTP Status Code**: `200` <br>\nGroup Settings Returned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist: {groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a group's settings",
                      "method": "patch",
                      "endpoint": "groups/:groupId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error code:** `200`<br>\nOnly available for Paid account, {accountId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nSettings updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `4130`<br>\nGroup does not exist: {groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete virtual background files",
                      "method": "delete",
                      "endpoint": "groups/:groupId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\nGroup member not found.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `4130`<br>\nA group with this {groupId} does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Upload virtual background files",
                      "method": "post",
                      "endpoint": "groups/:groupId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg or png image file can be uploaded.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {email} not exist or not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List H.323/SIP devices",
                      "method": "get",
                      "endpoint": "h323/devices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of H.323/SIP devices returned.<br>\n**Error Code:** `200`<br>\nNo permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a H.323/SIP device",
                      "method": "post",
                      "endpoint": "h323/devices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nNo permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nH.323/SIP device created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a H.323/SIP device",
                      "method": "delete",
                      "endpoint": "h323/devices/:deviceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "You do not have the permission to delete this device.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "H.323/SIP device deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "H.323 device does not exist: {deviceId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "H.323/SIP device not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a H.323/SIP device",
                      "method": "patch",
                      "endpoint": "h323/devices/:deviceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nH.323/SIP device updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nH.323 Device does not exist: {deviceId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `2020`<br>\nH.323 device's display name:{displayName} is already in use.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Send chatbot messages",
                      "method": "post",
                      "endpoint": "im/chat/messages",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage Sent.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `7001`<br>\nLink does not support markdown format.<br>\nEdit message does not support markdown format.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a chatbot message",
                      "method": "delete",
                      "endpoint": "im/chat/messages/:message_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"message_id\": \"\",\n  \"robot_jid\": \"\",\n  \"sent_time\": \"\",\n  \"to_jid\": \"\",\n  \"user_jid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Edit a chatbot message",
                      "method": "put",
                      "endpoint": "im/chat/messages/:message_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"message_id\": \"\",\n  \"robot_jid\": \"\",\n  \"sent_time\": \"{{faker 'date.recent' 365}}\",\n  \"to_jid\": \"\",\n  \"user_jid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nMessage updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get IM chat sessions",
                      "method": "get",
                      "endpoint": "im/chat/sessions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nArchived IM chat sessions returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nThe next page token is invalid or expired. <br>\nReport requested exceeds 6 month limit.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get IM chat messages",
                      "method": "get",
                      "endpoint": "im/chat/sessions/:sessionId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"session_id\": \"\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nArchived IM chat messages returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:**`300` <br>\nThe next page token is either invalid or has expired.<br>\nReport requested exceeds 6 month limit.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List IM directory groups",
                      "method": "get",
                      "endpoint": "im/groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nList of groups returned.\n**Error Code:** `200` <br>\nList of IM groups returned.<br>\nOnly available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create an IM directory group",
                      "method": "post",
                      "endpoint": "im/groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"search_by_account\": {{faker 'random.boolean'}},\n  \"search_by_domain\": {{faker 'random.boolean'}},\n  \"search_by_ma_account\": {{faker 'random.boolean'}},\n  \"total_members\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nIM Group created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409` <br>\n**Error Code:** `4132` <br>\nGroup name {groupName} is already in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete an IM directory group",
                      "method": "delete",
                      "endpoint": "im/groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nIM group deleted.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Retrieve an IM directory group",
                      "method": "get",
                      "endpoint": "im/groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nIM group object returned.<br>\n**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** <br>\nIM Group not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update an IM directory group",
                      "method": "patch",
                      "endpoint": "im/groups/:groupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nIM group updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.\n**Error Code:** `4130`<br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List IM directory group members",
                      "method": "get",
                      "endpoint": "im/groups/:groupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nIM group member list returned.<br>\n**Error Code:** `200` <br> \nOnly available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nIM Group not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add IM directory group members",
                      "method": "post",
                      "endpoint": "im/groups/:groupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200` <br>\nOnly available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` <br>\nMember added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nIM Group not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete an IM directory group member",
                      "method": "delete",
                      "endpoint": "im/groups/:groupId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200` <br>\nOnly available for paid account, {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nIM group member deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing field: name.<br>\nCan not delete account from default group:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nIM Group or IM Group member not found.<br>\n**Error Code:** `4130` <br>\nGroup does not exist:{groupId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Send IM messages",
                      "method": "post",
                      "endpoint": "im/users/me/chat/messages",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nMessage Sent.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user’s IM messages",
                      "method": "get",
                      "endpoint": "im/users/:userId/chat/messages",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"date\": \"{{faker 'date.recent' 365}}\",\n  \"messages\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"id\": \"{{faker 'random.uuid'}}\",\n      \"message\": \"\",\n      \"sender\": \"\",\n      \"timstamp\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser's IM messages returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Use in-Meeting recording controls",
                      "method": "patch",
                      "endpoint": "live_meetings/:meetingId/events",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 202,
                              "label": "**HTTP Status:** `202` **Accepted**\nRequest processed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br>\n* Meeting id does not exist.<br>\n* Invalid meeting id.<br>\n* Meeting does not exist.<br>\n* No permission.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001` <br> Meeting {meetingId} is not found or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a meeting",
                      "method": "delete",
                      "endpoint": "meetings/:meetingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code**: `204` <br>\nMeeting deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code**: `400` <br>\n**Error Code**: `1010` <br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code**: `3000` <br>Cannot access meeting information.<br>Invalid occurrence_id.<br>\n**Error Code**: `3002` <br>\nSorry, you cannot delete this meeting since it is in progress.<br>**Error Code**: `3003` <br>You are not the meeting host.<br>\n**Error Code**: `3007` <br>Sorry, you cannot delete this meeting since it has ended.<br>**Error Code**: `3018` <br>\nNot allowed to delete PMI.<br>**Error Code**: `3037` <br>Not allowed to delete PAC.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code**: `404` <br>\nMeeting not found.\n**Error Code**: `1001` <br>\nUser does not exist: {userId}.<br>\n**Error Code**: `3001` <br>\nMeeting with this {meetingId} is not found or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a meeting",
                      "method": "get",
                      "endpoint": "meetings/:meetingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assistant_id\": \"\",\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>**Error Code:** `3000`<br>\nCannot access webinar info.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser not exist: {userId}.<br>**Error Code:** `3001`<br>\nMeeting {meetingId} is not found or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a meeting",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nA meeting with this {meetingId} is not found or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Perform batch poll creation",
                      "method": "post",
                      "endpoint": "meetings/:meetingId/batch_polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"questions\": [\n        {\n          \"answers\": [\n            \"\"\n          ],\n          \"name\": \"\",\n          \"type\": \"{{oneOf (array 'single' 'multiple')}}\"\n        }\n      ],\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\",\n      \"title\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `300` <br>\nInvalid Meeting ID.\n**Error Code:** `300` <br>\nMeeting id does not exist.\n**Error Code:** `3000` <br>\nCannot access meeting information.\n**Error Code:** `3001`<br>\nMeeting does not exist: {meetingId}.<br>\n**Error Code:** `4400`<br>\nPolling has not been enabled for this meeting: {meetingId}.\n**Error Code:** `4400`<br>\nYou can add a maximum of 25 polls.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting invitation",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/invitation",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"invitation\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting invitation returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get live stream details",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/livestream",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"page_url\": \"\",\n  \"stream_key\": \"\",\n  \"stream_url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nLive Stream details returned.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nMissing meetingId<br>\nInvalid meetingId<br><br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a live stream",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId/livestream",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMeeting live stream updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>Missing meetingId <br> Invalid meetingId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>**Error Code:** `1010` <br>\n User does not belong to this account: {accountId}.<br>\n **Error Code:** `3000` Cannot access webinar info.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>**Error Code:** `1001` <br>User {userId} does not exist.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Live Stream Status",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId/livestream/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting live stream updated.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nMissing meetingId.<br>\nInvalid meetingId",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n**Error Code:**`3000`<br>\nCannot access webinar info.<br>\n**Error Code:**`1010`<br>User does not belong to this account: {accountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:**`1001`<br>\nUser {userId} does not exist.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 429,
                              "label": "**HTTP Status Code:** `429`<br>Too many requests submitted to start the live stream of this meeting: {meetingId}. If the live stream has not already started, retry making a new request after 30 seconds.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meeting polls",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** <br>\nList polls of a Meeting  returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Error Code:** `404`\nMeeting Poll not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a meeting poll",
                      "method": "post",
                      "endpoint": "meetings/:meetingId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` <br>\nMeeting Poll Created",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Error Code:** `404` <br>\nMeeting not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a meeting poll",
                      "method": "delete",
                      "endpoint": "meetings/:meetingId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting Poll deleted",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Error Code:** `404`\nMeeting Poll not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a meeting poll",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nMeeting Poll object returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Error Code:** `404` <br>\nMeeting Poll not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a meeting poll",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting Poll Updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**Error Code:** `404` <br>\nMeeting Poll not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete meeting recordings",
                      "method": "delete",
                      "endpoint": "meetings/:meetingId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200` <br>\nYou do not have the right permission.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting recording deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting recordings",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200` <br>\nYou do not have the right permissions.\n**HTTP Status Code:** `200`<br>\nRecording object returned.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser not found on this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting recording not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`<br>\nThere is no recording for this meeting.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List recording registrants",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/recordings/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nRegistrants returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting recording not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a recording registrant",
                      "method": "post",
                      "endpoint": "meetings/:meetingId/recordings/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"registrant_id\": \"\",\n  \"share_url\": \"\",\n  \"topic\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` <br>\nRegistration submitted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get registration questions",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/recordings/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'random.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single' 'multiple')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'last_name' 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nRecording Registrant Question object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or registrant not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registration questions",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId/recordings/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `200`<br>\nRecording Registrant Questions Updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registrant's status",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/recordings/registrants/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nRegistrant status updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting recording or Registrant not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting recording settings",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/recordings/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"approval_type\": \"{{oneOf (array '0' '1' '2')}}\",\n  \"authentication_domains\": \"\",\n  \"authentication_option\": \"\",\n  \"on_demand\": {{faker 'random.boolean'}},\n  \"password\": \"\",\n  \"recording_authentication\": {{faker 'random.boolean'}},\n  \"send_email_to_host\": {{faker 'random.boolean'}},\n  \"share_recording\": \"{{oneOf (array 'publicly' 'internally' 'none')}}\",\n  \"show_social_share_buttons\": {{faker 'random.boolean'}},\n  \"topic\": \"\",\n  \"viewer_download\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nMeeting recording settings returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update meeting recording settings",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId/recordings/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting recording setting's updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Recover meeting recordings",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/recordings/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nYou do not have the right permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nDeleted recordings of the meeting recovered.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording not found.<br> **Error Code:** `1001`<br>  User does not exist: {userId}.<br>\n**Error Code:** `3301`<br>There is no recording for this meeting.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a meeting recording file",
                      "method": "delete",
                      "endpoint": "meetings/:meetingId/recordings/:recordingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nYou do not have the right permissions.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nMeeting recording file deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br> **Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.<br> \n**Error Code:** `3303` <br>\nYou can not delete an uncompleted meeting.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nMeeting recording file not found<br>\n**Error Code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301` <br> There is no recording for this meeting.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Recover a single recording",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/recordings/:recordingId/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br> Meeting recording recovered.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n**Error Code:** `1010` <br>\nUser does not belong to this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>Meeting recording not found.<br>\n**Error Code:** `1001` <br> User {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3301`There is no recording for this meeting.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meeting registrants",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccessfully listedd meeting registrants.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.<br>\nThis meeting has not set registration as required: {meetingId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add meeting registrant",
                      "method": "post",
                      "endpoint": "meetings/:meetingId/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"join_url\": \"\",\n  \"registrant_id\": \"\",\n  \"start_time\": \"\",\n  \"topic\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nRegistration created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nMeeting {meetingId} is not found or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3043`<br>\nMeeting has reached maximum attendee capacity.<br>\n**Error Code:** `3000`<br>\nCannot access meeting info.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List registration questions ",
                      "method": "get",
                      "endpoint": "meetings/:meetingId/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'random.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting Registrant Question object returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registration questions",
                      "method": "patch",
                      "endpoint": "meetings/:meetingId/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMeeting Registrant Questions Updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registrant's status",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/registrants/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nRegistrant status updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nThis meeting has not set registration as required:{meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.<br>\n**Error Code:** `3000`<br>\nCannot access meeting information.<br>\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting or registrant not found.\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a meeting registrant",
                      "method": "delete",
                      "endpoint": "meetings/:meetingId/registrants/:registrantId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP status code:** `204` <br>\nOK",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nOnly available for paid users: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this meeting: {0}.<br>\n\n**Error code:** `1001` <br>\nUser {userId} does not exist or does not belong to this account.<br>\n\n**Error code:** `3000` <br>\nCannot access webinar info. ***Note:** Zoom throws this error when the meetingId is a webinarId.*<br>\nRegistrant {0} was not found.\n\n**Error code:** `3001` <br>\nMeeting does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update meeting status",
                      "method": "put",
                      "endpoint": "meetings/:meetingId/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nMeeting updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.\n**Error Code:** `3000`<br>\nCannot access meeting info.\n**Error Code:** `3003`<br>\nYou're not the meeting host.\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting: {meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.<br>\n**Error Code:** `1001`<br>\nMeeting host does not exist: {userId}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Zoom meetings client feedback",
                      "method": "get",
                      "endpoint": "metrics/client/feedback",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_feedbacks\": [\n    {\n      \"feedback_id\": \"\",\n      \"feedback_name\": \"\",\n      \"participants_count\": {{faker 'random.number'}}\n    }\n  ],\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get zoom meetings client feedback",
                      "method": "get",
                      "endpoint": "metrics/client/feedback/:feedbackId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nClient Feedback details returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List client meeting satisfaction",
                      "method": "get",
                      "endpoint": "metrics/client/satisfaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"client_satisfaction\": [\n    {\n      \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"good_count\": {{faker 'random.number'}},\n      \"none_count\": {{faker 'random.number'}},\n      \"not_good_count\": {{faker 'random.number'}},\n      \"satisfaction_percent\": {{faker 'random.number'}}\n    }\n  ],\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nClient satisfaction data returned. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get CRC port usage",
                      "method": "get",
                      "endpoint": "metrics/crc",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nCRC usage returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get IM metrics",
                      "method": "get",
                      "endpoint": "metrics/im",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nIM details returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get top 25 Zoom Rooms with issues",
                      "method": "get",
                      "endpoint": "metrics/issues/zoomrooms",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get issues of Zoom Rooms",
                      "method": "get",
                      "endpoint": "metrics/issues/zoomrooms/:zoomroomId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nZoom Room with issue details returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meetings",
                      "method": "get",
                      "endpoint": "metrics/meetings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have dashboard feature enabled.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nThe next page token is invalid or expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting details",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": \"\",\n  \"email\": \"\",\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"has_3rd_party_audio\": {{faker 'random.boolean'}},\n  \"has_pstn\": {{faker 'random.boolean'}},\n  \"has_recording\": {{faker 'random.boolean'}},\n  \"has_screen_share\": {{faker 'random.boolean'}},\n  \"has_sip\": {{faker 'random.boolean'}},\n  \"has_video\": {{faker 'random.boolean'}},\n  \"has_voip\": {{faker 'random.boolean'}},\n  \"host\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"in_room_participants\": {{faker 'random.number'}},\n  \"participants\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"user_type\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or the meeting has not ended yet.<br>\nThis meeting's details are not available.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meeting participants",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info.<br>\n{meetingId} or the next page token is either invalid or expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or has not ended.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meeting participants QoS",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId/participants/qos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 1,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.<br>\nOnly available for paid accounts that have enabled the dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.<br>\nThe next page token is either invalid or expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThe Meeting ID is not valid or the meeting has not ended yet.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get post meeting feedback",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId/participants/satisfaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"participants\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"quality\": \"{{oneOf (array 'GOOD' 'NOT GOOD')}}\",\n      \"user_id\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get sharing/recording details",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId/participants/sharing",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available or ID is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting participant QoS",
                      "method": "get",
                      "endpoint": "metrics/meetings/:meetingId/participants/:participantId/qos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device\": \"\",\n  \"domain\": \"\",\n  \"harddisk_id\": \"\",\n  \"ip_address\": \"\",\n  \"join_time\": \"{{faker 'date.recent' 365}}\",\n  \"leave_time\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"mac_addr\": \"\",\n  \"pc_name\": \"\",\n  \"user_id\": \"{{faker 'random.uuid'}}\",\n  \"user_name\": \"\",\n  \"user_qos\": [\n    {\n      \"as_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"cpu_usage\": {\n        \"system_max_cpu_usage\": \"\",\n        \"zoom_avg_cpu_usage\": \"\",\n        \"zoom_max_cpu_usage\": \"\",\n        \"zoom_min_cpu_usage\": \"\"\n      },\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"video_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      }\n    }\n  ],\n  \"version\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participant QOS returned.<br>\nOnly available for paid account that have enabled the dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis meeting's detail info is not available.<br>\nThis meeting has not ended yet or the Meeting ID is invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinars",
                      "method": "get",
                      "endpoint": "metrics/webinars",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeetings returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `200`<br>\nThe next page token is invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar details",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": \"\",\n  \"email\": \"\",\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"has_3rd_party_audio\": {{faker 'random.boolean'}},\n  \"has_pstn\": {{faker 'random.boolean'}},\n  \"has_recording\": {{faker 'random.boolean'}},\n  \"has_screen_share\": {{faker 'random.boolean'}},\n  \"has_sip\": {{faker 'random.boolean'}},\n  \"has_video\": {{faker 'random.boolean'}},\n  \"has_voip\": {{faker 'random.boolean'}},\n  \"host\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"participants\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"user_type\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `200`<br>\nCan not access webinar info, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThe webinar has not ended yet or the Webinar ID is not valid.<br>\nThis webinar's detail is not available.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar participants",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinar participant QoS",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId/participants/qos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 1,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail is not available or the Webinar ID is not valid.<br>\nThis webinar has not ended yet.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get post webinar feedback",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId/participants/satisfaction",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"participants\": [\n    {\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"quality\": \"{{oneOf (array 'GOOD' 'NOT GOOD')}}\",\n      \"user_id\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `200`<br>\nOnly available for paid accounts that have dashboard feature enabled.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get sharing/recording details",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId/participants/sharing",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar participants returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.<br>\nThis webinar has not ended yet.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar participant QoS",
                      "method": "get",
                      "endpoint": "metrics/webinars/:webinarId/participants/:participantId/qos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device\": \"\",\n  \"domain\": \"\",\n  \"harddisk_id\": \"\",\n  \"ip_address\": \"\",\n  \"join_time\": \"{{faker 'date.recent' 365}}\",\n  \"leave_time\": \"{{faker 'date.recent' 365}}\",\n  \"location\": \"\",\n  \"mac_addr\": \"\",\n  \"pc_name\": \"\",\n  \"user_id\": \"{{faker 'random.uuid'}}\",\n  \"user_name\": \"\",\n  \"user_qos\": [\n    {\n      \"as_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"as_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"audio_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"cpu_usage\": {\n        \"system_max_cpu_usage\": \"\",\n        \"zoom_avg_cpu_usage\": \"\",\n        \"zoom_max_cpu_usage\": \"\",\n        \"zoom_min_cpu_usage\": \"\"\n      },\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"video_device_from_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_device_to_crc\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_input\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      },\n      \"video_output\": {\n        \"avg_loss\": \"\",\n        \"bitrate\": \"\",\n        \"jitter\": \"\",\n        \"latency\": \"\",\n        \"max_loss\": \"\"\n      }\n    }\n  ],\n  \"version\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar participant QOS returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nCan not access webinar info, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nThis webinar's detail info is not available or ID is not valid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Zoom Rooms",
                      "method": "get",
                      "endpoint": "metrics/zoomrooms",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of Zoom rooms returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get top 25 issues of Zoom Rooms",
                      "method": "get",
                      "endpoint": "metrics/zoomrooms/issues",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nZoom Room Issue details returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Rooms details",
                      "method": "get",
                      "endpoint": "metrics/zoomrooms/:zoomroomId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"account_type\": \"\",\n  \"calender_name\": \"\",\n  \"camera\": \"\",\n  \"device_ip\": \"\",\n  \"email\": \"\",\n  \"health\": \"\",\n  \"id\": \"\",\n  \"issues\": [\n    \"\"\n  ],\n  \"last_start_time\": \"\",\n  \"location\": \"\",\n  \"microphone\": \"\",\n  \"room_name\": \"\",\n  \"speaker\": \"\",\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nZoom room returned.<br>\nOnly available for paid accounts that have enabled the Dashboard feature.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nThe next page token is either invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List past meeting's files",
                      "method": "get",
                      "endpoint": "past_meetings/:meetingId/files",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"in_meeting_files\": [\n    {\n      \"download_url\": \"\",\n      \"file_name\": \"\",\n      \"file_size\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nMeeting ID is invalid or not end.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List ended meeting instances",
                      "method": "get",
                      "endpoint": "past_meetings/:meetingId/instances",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"meetings\": [\n    {\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"uuid\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of ended meeting instances returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List past meeting's poll results",
                      "method": "get",
                      "endpoint": "past_meetings/:meetingId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get past meeting details",
                      "method": "get",
                      "endpoint": "past_meetings/:meetingUUID",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"duration\": {{faker 'random.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"participants_count\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'random.number'}},\n  \"type\": {{faker 'random.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting details returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nMeeting not found<br><br>\n**Error Code:** `1010`<br>\nUser not exist: {userId}<br><br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting info.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get past meeting participants",
                      "method": "get",
                      "endpoint": "past_meetings/:meetingUUID/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants' report returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser {userId} not exist or not belong to this account.<br><br>\n**Error Code:** `300`<br>\nCannot access meeting information.<br><br>\n**Error Code:** `200`<br>\nOnly available for paid account: {accountId}\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting not found<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>\nUser not exist: {userId}<br><br>\n**Error Code:** `3001`<br>\nThis meeting is not available or ID is not valid.<br>\nMeeting ID is invalid or not end.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar absentees",
                      "method": "get",
                      "endpoint": "past_webinars/:WebinarUUID/absentees",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess.<br>**Error Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>Invalid webinar UUID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe request could not be completed because you have provided an invalid occurence ID: {occurenceId}<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis Webinar has not registration required: {webinarUUID}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>Meeting ID is invalid or not end.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List past webinar files",
                      "method": "get",
                      "endpoint": "past_webinars/:webinarId/files",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"in_meeting_files\": [\n    {\n      \"download_url\": \"\",\n      \"file_name\": \"\",\n      \"file_size\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nFiles retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List past webinar instances",
                      "method": "get",
                      "endpoint": "past_webinars/:webinarId/instances",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"webinars\": [\n    {\n      \"start_time\": \"{{faker 'date.recent' 365}}\",\n      \"uuid\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of past webinar instances returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nInvalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinar participants",
                      "method": "get",
                      "endpoint": "past_webinars/:webinarId/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"participants\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"user_email\": \"{{faker 'internet.email'}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nParticipants list returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request**<br>\n\n**Error Code:** `200`<br>\nNo permission.<br>\nOnly available for paid account: {accountId}.<br><br>\n**Error Code:**  `300`<br>\nThe next page token is invalid or expired.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`\n**Error Code:**`3001`<br>\nWebinar does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List past webinar poll results",
                      "method": "get",
                      "endpoint": "past_webinars/:webinarId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPolls returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Q&A of past webinar",
                      "method": "get",
                      "endpoint": "past_webinars/:webinarId/qa",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nQ&A returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `1010`<br>  User does not belong to this account:{accountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not found**<br>\nWebinar not found.<br>\n\n**Error Code:** `3001`<br>\nWebinar ID is invalid or not end.<br>\nThis webinar id does not belong to you:{webinarId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add an auto receptionist",
                      "method": "post",
                      "endpoint": "phone/auto_receptionists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"extension_number\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**\n\nAuto receptionist added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation failed.**<br>\n* Multiple Site is disabled.<br>\n* Site does not exist.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update auto receptionist details",
                      "method": "patch",
                      "endpoint": "phone/auto_receptionists/:autoReceptionistId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br> **No Content**<br>\nAuto Receptionist details updated sucessfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nExtension Number must be {min} to {max} digits<br>\nValidation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}<br><br>\n**Error Code:** `400`<br>\nInvalid short number length.<br>\nInvalid full extension number length.<br><br>\n**Error Code:** `10001`<br>\nNumber {extensionNumber} is a reserved extension number.<br>\nExtension number {extensionNumber} is already used.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign all phone numbers",
                      "method": "delete",
                      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign phone numbers",
                      "method": "post",
                      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers assigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "\n**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point.<br>\nPhone number does not exist, phonenumberId:{phonenumberId}<br>\nphoneNumber is used, phonenumberId:{phonenumberId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nAutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a phone number",
                      "method": "delete",
                      "endpoint": "phone/auto_receptionists/:autoReceptionistId/phone_numbers/:phoneNumberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone number unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not belong to auto receptionist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Bad Request**<br>\n**Error Code:** `404`<br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List blocked lists",
                      "method": "get",
                      "endpoint": "phone/blocked_list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"blocked_list\": [\n    {\n      \"block_type\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n      \"comment\": \"\",\n      \"id\": \"\",\n      \"match_type\": \"{{oneOf (array 'phoneNumber' 'prefix')}}\",\n      \"phone_number\": \"\",\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a blocked list",
                      "method": "post",
                      "endpoint": "phone/blocked_list",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nNumber added to the blocked list successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a blocked list",
                      "method": "delete",
                      "endpoint": "phone/blocked_list/:blockedListId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list deleted successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. Blocked number (Id: {blockedListId}) does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get blocked list details",
                      "method": "get",
                      "endpoint": "phone/blocked_list/:blockedListId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"block_type\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n  \"comment\": \"\",\n  \"id\": \"\",\n  \"match_type\": \"{{oneOf (array 'phoneNumber' 'prefix')}}\",\n  \"phone_number\": \"\",\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nBlocked list retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nBlocked number (Id: {blockedListId}) does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a blocked list",
                      "method": "patch",
                      "endpoint": "phone/blocked_list/:blockedListId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nBlocked list updated successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\nBlocked number (Id: {blockedListId}) does not exist.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\nBlocked number already exists.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add BYOC phone numbers",
                      "method": "post",
                      "endpoint": "phone/byoc_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`\n\nValidation failed. Adding batch phone numbers are limited to 50 per request.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request**\n\nBYOC phone numbers are not enabled for this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**\n\n**Error Code:** `124` Account does not exist: {accountId}. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**\n\nThe following account carrier does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 429,
                              "label": "**HTTP Status Code:** `429` **Too Many Requests**\n\n You have reached the maximum number of concurrent requests for this account’s BYOC phone numbers.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get account's call logs",
                      "method": "get",
                      "endpoint": "phone/call_logs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_logs\": [\n    {\n      \"answer_start_time\": \"{{faker 'date.recent' 365}}\",\n      \"call_id\": \"\",\n      \"call_type\": \"{{oneOf (array 'voip' 'pstn' 'tollfree' 'international' 'contactCenter')}}\",\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"charge\": \"\",\n      \"client_code\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"owner\": {\n        \"extension_number\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone' 'sharedLineGroup')}}\"\n      },\n      \"path\": \"\",\n      \"rate\": \"\",\n      \"recording_id\": \"\",\n      \"recording_type\": \"{{oneOf (array '1' '2')}}\",\n      \"result\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"user_id\": \"\",\n      \"waiting_time\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nAccount's call logs returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `3001`<br>\nError retrieving call logs.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List call queues",
                      "method": "get",
                      "endpoint": "phone/call_queues",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_queues\": [\n    {\n      \"extension_number\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nCall Queues listed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a call queue",
                      "method": "post",
                      "endpoint": "phone/call_queues",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"extension_number\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"name\": \"\",\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nCall Queue created successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed.<br>\nMultiple Site is disabled.<br>\nSite does not exist.<br> {extensionNumber} is out of range<br> Exceeded the maximum number to add members per time<br><br>\n**Error Code:** `400`<br> Invalid short number length.<br> Extension number {extensionNumber} is already used.<br>\n**Error Code:** `412` The maximum number of Call Queue members is up to {maxSize}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\n User not found: {userId}\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a call queue",
                      "method": "delete",
                      "endpoint": "phone/call_queues/:callQueueId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue deleted successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nThe group does not exist, groupId:{callQueueId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get call queue details",
                      "method": "get",
                      "endpoint": "phone/call_queues/:callQueueId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"extension_number\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"members\": {\n    \"common_area_phones\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"\",\n        \"level\": \"{{oneOf (array 'manager' 'user')}}\",\n        \"name\": \"\",\n        \"receive_call\": {{faker 'random.boolean'}}\n      }\n    ]\n  },\n  \"name\": \"\",\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\",\n      \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n    }\n  ],\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nCall Queue details retrieved successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\n The group does not exist, groupId:{callQueueId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update call queue details",
                      "method": "patch",
                      "endpoint": "phone/call_queues/:callQueueId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall Queue details updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{groupId}<br>\nTimezone not found in the system.<br><br>\n**Error Code:** `400`<br>\nUnable to update this call queue as it is used for internal safety response team.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change call queue manager",
                      "method": "put",
                      "endpoint": "phone/call_queues/:callQueueId/manager",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nCall queue manager changed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign all members",
                      "method": "delete",
                      "endpoint": "phone/call_queues/:callQueueId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add members to a call queue",
                      "method": "post",
                      "endpoint": "phone/call_queues/:callQueueId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nMembers added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.<br>\nExceeded the maximum number to add members per time.<br><br>\n**Error Code:** `412`<br>\nThe maximum number of Call Queue members is up to {maxSize}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser not found: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a member",
                      "method": "delete",
                      "endpoint": "phone/call_queues/:callQueueId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nMember unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n**Error Code:** `400`<br>Unable to delete manager<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\nUnable to find group member",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign all phone numbers",
                      "method": "delete",
                      "endpoint": "phone/call_queues/:callQueueId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone numbers unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. The group does not exist, groupId:{callQueueId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign numbers to a call queue",
                      "method": "post",
                      "endpoint": "phone/call_queues/:callQueueId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a phone number",
                      "method": "delete",
                      "endpoint": "phone/call_queues/:callQueueId/phone_numbers/:phoneNumberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone Number unassigned successfuly.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation failed. The group does not exist, groupId:{callQueueId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`<br>\nPhone number not belong to call queue.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get call queue recordings",
                      "method": "get",
                      "endpoint": "phone/call_queues/:callQueueId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"direction\": \"\",\n      \"download_url\": \"\",\n      \"duration\": {{faker 'random.number'}},\n      \"id\": \"\"\n    }\n  ],\n  \"to\": \"\",\n  \"total_records\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List calling plans",
                      "method": "get",
                      "endpoint": "phone/calling_plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"calling_plans\": [\n    {\n      \"assigned\": {{faker 'random.number'}},\n      \"available\": {{faker 'random.number'}},\n      \"name\": \"\",\n      \"subscribed\": {{faker 'random.number'}},\n      \"type\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nCalling plans listed successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List common area phones",
                      "method": "get",
                      "endpoint": "phone/common_area_phones",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"common_area_phones\": [\n    {\n      \"calling_plans\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"device_type\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"mac_address\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"source\": \"{{oneOf (array 'internal' 'external')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"total_records\": 30\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nList of Common Area Phones retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a common area phone",
                      "method": "post",
                      "endpoint": "phone/common_area_phones",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"display_name\": \"\",\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\n\nCommon area phone added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation failed.<br>\n* Phone manufacturer does not exist.\n* Phone model does not exist.\n* Phone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409`<br>\n**Error Code:** `409`<br>\nThe MAC Address already exists in the system.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a common area phone",
                      "method": "delete",
                      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone deleted successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\nValidation Failed<br>\nDevice does not exist in the system.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get common area phone details",
                      "method": "get",
                      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"device_type\": \"\",\n  \"id\": \"\",\n  \"mac_address\": \"\",\n  \"name\": \"\",\n  \"provision\": {\n    \"sip_accounts\": [\n      {\n        \"authorization_id\": \"\",\n        \"outbound_proxy\": \"\",\n        \"password\": \"\",\n        \"sip_domain\": \"\",\n        \"user_name\": \"\"\n      }\n    ],\n    \"type\": \"{{oneOf (array 'assisted' 'ztp' 'manual')}}\",\n    \"url\": \"\"\n  },\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nCommon Area Phone details returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update common area phone",
                      "method": "patch",
                      "endpoint": "phone/common_area_phones/:commonAreaPhoneId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nCommon Area Phone information updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Device does not exist in the system.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change main company number",
                      "method": "put",
                      "endpoint": "phone/company_number",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nMain company number updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br><br>\nTarget phone number can not be set as main company number.<br>\nUnable to update this number as it is used for outbound caller ID to public safety answering point.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `404`\nphoneNumber does not exist, phonenumberId:{phonenumberId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List devices",
                      "method": "get",
                      "endpoint": "phone/devices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"devices\": [\n    {\n      \"assignee\": {\n        \"extension_number\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"device_type\": \"\",\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"mac_address\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"total_records\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nDevices listed successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a device",
                      "method": "post",
                      "endpoint": "phone/devices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nDevice added successfully.  ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation failed.**<br>\nPhone manufacturer does not exist.<br>\nPhone model does not exist.<br>\nPhone manufacturer is not supported.<br><br>\n**Error Code:** `400`<br>\nThe MAC Address is invalid.<br>\nThe MAC Address already exists in the system.<br>\nEach user can be assigned up to three desk phones.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a device",
                      "method": "delete",
                      "endpoint": "phone/devices/:deviceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nDevice deleted successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Vaidation Failed.**<br>\nDevice does not exist in the system.\nOnly unassigned device can be deleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get device details",
                      "method": "get",
                      "endpoint": "phone/devices/:deviceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assignee\": {\n    \"extension_number\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"device_type\": \"\",\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"mac_address\": \"\",\n  \"provision\": {\n    \"sip_accounts\": [\n      {\n        \"authorization_id\": \"\",\n        \"outbound_proxy\": \"\",\n        \"password\": \"\",\n        \"shared_line\": {\n          \"alias\": \"\",\n          \"line_subscription\": {\n            \"display_name\": \"\",\n            \"extension_number\": {{faker 'random.number'}},\n            \"phone_number\": \"\"\n          },\n          \"outbound_caller_id\": \"\"\n        },\n        \"sip_domain\": \"\",\n        \"user_name\": \"\"\n      }\n    ],\n    \"type\": \"{{oneOf (array 'assisted' 'ztp' 'manual')}}\",\n    \"url\": \"\"\n  },\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'online' 'offline')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nDevice information retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nDevice does not exist in the system.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a device",
                      "method": "patch",
                      "endpoint": "phone/devices/:deviceId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nDevice updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` <br>\nValidation failed. Device does not exist in the system.<br>\nInvalid userId.<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser not found: {userId}<br>\nThe user extension does not exist, extensionId: {extensionId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 429,
                              "label": "**HTTP Status Code:** `429` **Too Many Requests**<br>\n**Error Code:** `429`<br>\nEach user can be assigned up to three desk phones.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List call logs",
                      "method": "get",
                      "endpoint": "phone/metrics/call_logs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_logs\": [\n    {\n      \"call_id\": \"\",\n      \"callee\": {\n        \"codec\": \"\",\n        \"device_type\": \"\",\n        \"extension_number\": \"\",\n        \"headset\": \"\",\n        \"isp\": \"\",\n        \"microphone\": \"\",\n        \"phone_number\": \"\",\n        \"site_id\": \"\"\n      },\n      \"caller\": {\n        \"codec\": \"\",\n        \"device_type\": \"\",\n        \"extension_number\": \"\",\n        \"headset\": \"\",\n        \"isp\": \"\",\n        \"microphone\": \"\",\n        \"phone_number\": \"\",\n        \"site_id\": \"\"\n      },\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'random.number'}},\n      \"mos\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get call QoS",
                      "method": "get",
                      "endpoint": "phone/metrics/call_logs/:callId/qos",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_id\": \"\",\n  \"callee_qos\": {\n    \"receiving\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ],\n    \"sending\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ]\n  },\n  \"caller_qos\": {\n    \"receiving\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ],\n    \"sending\": [\n      {\n        \"date_time\": \"{{faker 'date.recent' 365}}\",\n        \"qos\": {\n          \"avg_loss\": \"\",\n          \"bitrate\": \"\",\n          \"jitter\": \"\",\n          \"max_loss\": \"\",\n          \"mos\": \"\",\n          \"network_delay\": \"\"\n        }\n      }\n    ]\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get call details from call log",
                      "method": "get",
                      "endpoint": "phone/metrics/call_logs/:call_id",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_id\": \"\",\n  \"callee\": {\n    \"codec\": \"\",\n    \"device_type\": \"\",\n    \"extension_number\": \"\",\n    \"headset\": \"\",\n    \"isp\": \"\",\n    \"microphone\": \"\",\n    \"phone_number\": \"\",\n    \"site_id\": \"\"\n  },\n  \"caller\": {\n    \"codec\": \"\",\n    \"device_type\": \"\",\n    \"extension_number\": \"\",\n    \"headset\": \"\",\n    \"isp\": \"\",\n    \"microphone\": \"\",\n    \"phone_number\": \"\",\n    \"site_id\": \"\"\n  },\n  \"date_time\": \"\",\n  \"direction\": \"\",\n  \"duration\": {{faker 'random.number'}},\n  \"mos\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List phone numbers",
                      "method": "get",
                      "endpoint": "phone/numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"phone_numbers\": [\n    {\n      \"assignee\": {\n        \"extension_number\": {{faker 'random.number'}},\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone')}}\"\n      },\n      \"capability\": [\n        \"\"\n      ],\n      \"carrier\": {\n        \"code\": \"\",\n        \"name\": \"\"\n      },\n      \"display_name\": \"\",\n      \"id\": \"\",\n      \"location\": \"\",\n      \"number\": \"\",\n      \"number_type\": \"{{oneOf (array 'toll' 'tollfree')}}\",\n      \"sip_group\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"source\": \"{{oneOf (array 'internal' 'external')}}\",\n      \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone numbers listed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get phone number details",
                      "method": "get",
                      "endpoint": "phone/numbers/:numberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assignee\": {\n    \"extension_number\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"name\": \"\",\n    \"type\": \"{{oneOf (array 'user' 'callQueue' 'autoReceptionist' 'commonAreaPhone')}}\"\n  },\n  \"capability\": [\n    \"\"\n  ],\n  \"display_name\": \"\",\n  \"id\": \"\",\n  \"location\": \"\",\n  \"number\": \"\",\n  \"number_type\": \"{{oneOf (array 'toll' 'tollfree')}}\",\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"source\": \"{{oneOf (array 'internal' 'external')}}\",\n  \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone number details retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist, phonenumberId:{phoneNumberId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update phone number details",
                      "method": "patch",
                      "endpoint": "phone/numbers/:numberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nNo Content",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\n\n**Error Code:** `300`<br>\nThe value of capability is invalid. Provide a valid capability and try again.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nPhone number does not exist: {numberId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get call recordings",
                      "method": "get",
                      "endpoint": "phone/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"{{oneOf (array '1' '2')}}\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"{{oneOf (array '1' '2')}}\",\n      \"date_time\": \"{{faker 'date.recent' 365}}\",\n      \"direction\": \"{{oneOf (array 'inbound' 'outbound')}}\",\n      \"download_url\": \"\",\n      \"duration\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"owner\": {\n        \"extension_number\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"type\": \"{{oneOf (array 'user' 'call queue')}}\"\n      },\n      \"recording_type\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code** `200`<br>\nOK.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\nThe template name you entered already exists. Provide a new name for the template and try again.<br>\n\n**Error Code:** `300`<br>\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get operation logs report",
                      "method": "get",
                      "endpoint": "phone/reports/operationlogs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nReport returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code**: `124`<br> Account does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List setting templates",
                      "method": "get",
                      "endpoint": "phone/setting_templates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"templates\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": \"{{oneOf (array 'user' 'group' 'autReceptionist' 'commonArea' 'zr' 'interop')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nOK",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\n\n**Error Code:** `300`<br>\nMultiple Sites option has been disabled. Enable it and try again.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nSite does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a setting template",
                      "method": "post",
                      "endpoint": "phone/setting_templates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nCreated Successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\nThe template name you entered already exists. Provide a new name for the template and try again.<br>\n\n**Error Code:** `300`<br>\nValidation failed. You provided an incorrect value for the template type. Provide a valid value and try again.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get setting template details",
                      "method": "get",
                      "endpoint": "phone/setting_templates/:templateId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"policy\": {\n    \"ad_hoc_call_recording\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"recording_start_prompt\": {{faker 'random.boolean'}},\n      \"recording_transcription\": {{faker 'random.boolean'}}\n    },\n    \"auto_call_recording\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"recording_calls\": \"\",\n      \"recording_start_prompt\": {{faker 'random.boolean'}},\n      \"recording_transcription\": {{faker 'random.boolean'}}\n    },\n    \"sms\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"international_sms\": {{faker 'random.boolean'}}\n    },\n    \"voicemail\": {\n      \"allow_transcription\": {{faker 'random.boolean'}},\n      \"enable\": {{faker 'random.boolean'}}\n    }\n  },\n  \"profile\": {\n    \"area_code\": \"\",\n    \"country\": \"\"\n  },\n  \"type\": \"{{oneOf (array 'user' 'group' 'autoReceptionist' 'commonArea' 'zr' 'interop')}}\",\n  \"user_settings\": {\n    \"audio_prompt_language\": \"\",\n    \"block_calls_without_caller_id\": {{faker 'random.boolean'}},\n    \"call_handling\": {\n      \"business_hours\": {\n        \"business_hour_action\": \"{{oneOf (array '0' '1' '9' '26' '50')}}\",\n        \"connect_to_operator\": {\n          \"enable\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"type\": \"{{oneOf (array 'user' 'zoomRoom' 'commonAreaPhone' 'autoReceptionist' 'callQueue' 'sharedLineGroup')}}\"\n        },\n        \"custom_hours\": [\n          {\n            \"from\": \"\",\n            \"to\": \"\",\n            \"type\": \"{{oneOf (array '1' '2')}}\",\n            \"weekday\": \"{{oneOf (array '1' '2' '3' '4' '5' '6' '7')}}\"\n          }\n        ],\n        \"ring_type\": \"{{oneOf (array '0' '1')}}\",\n        \"ringing_duration\": \"{{oneOf (array '15' '20' '25' '30' '35' '40' '45' '50' '55' '60')}}\",\n        \"type\": \"{{oneOf (array '1' '2')}}\"\n      },\n      \"close_hours\": {\n        \"close_hour_action\": \"{{oneOf (array '0' '1' '9' '26' '50')}}\",\n        \"connect_to_operator\": {\n          \"enable\": {{faker 'random.boolean'}},\n          \"id\": \"\",\n          \"type\": \"{{oneOf (array 'user' 'zoomRoom' 'commonAreaPhone' 'autoReceptionist' 'callQueue' 'sharedLineGroup')}}\"\n        },\n        \"max_wait_time\": \"{{oneOf (array '15' '20' '25' '30' '35' '40' '45' '50' '55' '60')}}\"\n      }\n    },\n    \"desk_phone\": {\n      \"pin_code\": \"\"\n    },\n    \"hold_music\": \"{{oneOf (array 'default' 'disable')}}\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nOK",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nSite does not exist. Settings template does not exist: {templateId}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a setting template",
                      "method": "patch",
                      "endpoint": "phone/setting_templates/:templateId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nNo Content. Request was successful.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br>\nThe country code you entered is invalid. Provide a valid country code and try again.<br>\nThe area code you entered is invalid. Provide a valid area code with a length between 0 to 6 digits and try again.<br>\nThe value you entered for the audio prompt language code is invalid.\nPIN code could only include numbers.<br>\nInvalid PIN code. PIN code must be {0} digits long.<br>\nInvalid PIN code. PIN code must be {0} to {1} digits long.<br>\nInvalid PIN code. Your PIN code must not be the same as the extension number.<br>\nInvalid PIN code. The PIN code must not contain a group of repeated digits.<br>\nPIN code cannot be an ascending or descending group of digits.\nConnect to operator type error.<br>\nYou provided an invalid value for call handling ring type. The value of this field must either be “simultaneous” or “sequential”.<br>\nYou provided an invalid value for business hours type field. The value of this field must either be 1 or 2.<br>\nYou provided an invalid value for the business hours action field.<br>\nYou provided an invalid value for the close hours action field.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401`<br>\n\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nSite does not exist. Settings template does not exist: {templateId}.\nOperator was not found for the following id: {0}.\nExternal contact was not found for the following id: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List shared line groups",
                      "method": "get",
                      "endpoint": "phone/shared_line_groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"shared_line_groups\": [\n    {\n      \"display_name\": \"\",\n      \"extension_number\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"phone_numbers\": [\n        {\n          \"id\": \"\",\n          \"number\": \"\",\n          \"status\": \"{{oneOf (array 'pending' 'available')}}\"\n        }\n      ],\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"{{oneOf (array 'active' 'inactive')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>\nShared Line Groups returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a shared line group",
                      "method": "post",
                      "endpoint": "phone/shared_line_groups",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>\nShared Line Group created successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed** <br>\n* Multiple Site has not been enabled for this account.<br>\n* Site does not exist. <br><br>\n**Error Code:** `400` <br>\nExtension number {extensionNumber} is already used.<br><br>\n**Error Code:** `409` <br>\nInvalid short number length. <br>\nNumber {extensionNumber} is a reserved extension number.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a shared line group",
                      "method": "delete",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nShared Line Group Deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed.**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a shared line group",
                      "method": "get",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"display_name\": \"\",\n  \"extension_number\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"members\": {\n    \"common_area_phones\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ],\n    \"users\": [\n      {\n        \"id\": \"\",\n        \"name\": \"\"\n      }\n    ]\n  },\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"primary_number\": \"\",\n  \"site\": {\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"status\": \"{{oneOf (array 'active' 'inactive')}}\",\n  \"timezone\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a shared line group",
                      "method": "patch",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** \n\nShared Line Group Updated Successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `300` **Validation Failed** <br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.<br>\n* Timezone not found in the system.<br><br>\n**Error Code:** `409` <br>\n* Invalid short number length.<br>\n* Number {extensionNumber} is a reserved extension number.<br><br>\n**Error Code:** `400` <br>\nExtension number {extensionNumber} is already used.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n* No phone numbers have been assigned to this Shared Line Group.<br>\n* Primary phone number was not found in the list of numbers assigned to this Shared Line Group.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign members of a shared line group",
                      "method": "delete",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\n\nMembers unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add members to a shared line group",
                      "method": "post",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** \nMembers added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\nMembers of a shared line group should come from same site.<br>\nA shared line group can only contain {0} members at most.<br><br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\nDevice does not exist in the system.\n\n**Error Code:** `1001`<br>\nUser not found: {userId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a member from a shared line group",
                      "method": "delete",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\n\nMembers unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300` **Validation Failed**<br>\n* Shared line group (id: {sharedLingGroupId}) does not exist.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign phone numbers",
                      "method": "post",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nPhone number(s) assigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist<br><br>\n**Error Code:** `300` **Validation Failed.**<br>\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`\nPhone number does not belong to this account",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a phone number",
                      "method": "delete",
                      "endpoint": "phone/shared_line_groups/:sharedLineGroupId/phone_numbers/:phoneNumberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nPhone Numbers unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nPhone number does not exist<br><br>\n**Error Code:** `300` **Validation Failed.**<br>\nShared line group (id: {sharedLingGroupId}) does not exist.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`\nPhone number does not belong to this account",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List BYOC SIP trunks",
                      "method": "get",
                      "endpoint": "phone/sip_trunk/trunks",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"byoc_sip_trunk\": [\n    {\n      \"carrier\": \"\",\n      \"carrier_account\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"region\": \"\",\n      \"sbc_label\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Codes**: `200`<br>\nOK.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List phone sites",
                      "method": "get",
                      "endpoint": "phone/sites",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": \"\",\n  \"sites\": [\n    {\n      \"country\": {\n        \"code\": \"\",\n        \"name\": \"\"\n      },\n      \"id\": \"\",\n      \"main_auto_receptionist\": {\n        \"extension_id\": \"\",\n        \"extension_number\": \"\",\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"name\": \"\",\n      \"site_code\": \"\"\n    }\n  ],\n  \"total_records\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a phone site",
                      "method": "post",
                      "endpoint": "phone/sites",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSite created successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `400`<br>\nInvalid site code length.<br>\nCountry information is invalid.<br>\nThis address could not be validated / geocoded.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a phone site",
                      "method": "delete",
                      "endpoint": "phone/sites/:siteId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nPhone Site deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `400`<br>\nUnable to transfer to the same site.<br>\nMain company number can not change {phoneNumber}.<br>\nSite does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409` **Conflict**<br><br>\n**Error Code:** `409`<br>\nConflict target extension number, try later.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get phone site details",
                      "method": "get",
                      "endpoint": "phone/sites/:siteId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"country\": {\n    \"code\": \"\",\n    \"name\": \"\"\n  },\n  \"id\": \"\",\n  \"main_auto_receptionist\": {\n    \"extension_id\": \"\",\n    \"extension_number\": {{faker 'random.number'}},\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"name\": \"\",\n  \"short_extension\": {\n    \"length\": 3\n  },\n  \"site_code\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSite information retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**Error Code:** `400`<br>\nSite does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update phone site details",
                      "method": "patch",
                      "endpoint": "phone/sites/:siteId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSite details updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "\n**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>\nValidation Failed. Site does not exist.<br><br>\n**Error Code:** `400`<br>\nSite Code is disabled.<br>\nInvalid site code length.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List phone users",
                      "method": "get",
                      "endpoint": "phone/users",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}},\n  \"users\": [\n    {\n      \"calling_plans\": [\n        {\n          \"name\": \"\",\n          \"type\": \"\"\n        }\n      ],\n      \"email\": \"{{faker 'internet.email'}}\",\n      \"extension_number\": {{faker 'random.number'}},\n      \"id\": \"\",\n      \"name\": \"\",\n      \"phone_user_id\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"status\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPhone users retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's profile",
                      "method": "get",
                      "endpoint": "phone/users/:userId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"calling_plan\": [\n    {\n      \"type\": {{faker 'random.number'}}\n    }\n  ],\n  \"email\": \"\",\n  \"extension_number\": {{faker 'random.number'}},\n  \"id\": \"\",\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"phone_user_id\": \"\",\n  \"site_admin\": {{faker 'random.boolean'}},\n  \"site_id\": \"\",\n  \"status\": \"{{oneOf (array 'activate' 'deactivate')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>User profile object returned. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error code:** `300` <br> User does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error code**: `1001` <br>User does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update user's profile",
                      "method": "patch",
                      "endpoint": "phone/users/:userId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nProfile updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code**: `300`<br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nExtension number {extensionNumber} is already in use.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's call logs",
                      "method": "get",
                      "endpoint": "phone/users/:userId/call_logs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"call_logs\": [\n    {\n      \"accepted_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"call_id\": \"\",\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"charge\": \"\",\n      \"client_code\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"duration\": {{faker 'random.number'}},\n      \"forwarded_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"forwarded_to\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"has_recording\": {{faker 'random.boolean'}},\n      \"has_voicemail\": {{faker 'random.boolean'}},\n      \"id\": \"\",\n      \"outgoing_by\": {\n        \"extension_number\": \"\",\n        \"location\": \"\",\n        \"name\": \"\",\n        \"number_type\": \"\",\n        \"phone_number\": \"\"\n      },\n      \"path\": \"\",\n      \"rate\": \"\",\n      \"recording_type\": \"\",\n      \"result\": \"\",\n      \"site\": {\n        \"id\": \"\",\n        \"name\": \"\"\n      },\n      \"user_id\": \"\",\n      \"waiting_time\": {{faker 'random.number'}}\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status code:** `200`\nUser's call logs returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status code:** `404`\n**Error Code:** `300`<br>\nUser does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a user's call log",
                      "method": "delete",
                      "endpoint": "phone/users/:userId/call_logs/:callLogId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code**: `204` <br>\nLog deleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code**: `404` <br>\n**Error Code**: `124` <br>\nAccount does not exist: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code**: `404` <br>\nCall log information was not found for the following callLogId: {callLogId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign calling plan to a user",
                      "method": "post",
                      "endpoint": "phone/users/:userId/calling_plans",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status code:** `200`<br>\nCalling plan assigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status code:** `404`<br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign user's calling plan",
                      "method": "delete",
                      "endpoint": "phone/users/:userId/calling_plans/:type",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br>\nCalling plan unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300` <br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>\nUser does not exist:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign phone number to user",
                      "method": "post",
                      "endpoint": "phone/users/:userId/phone_numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"phone_numbers\": [\n    {\n      \"id\": \"\",\n      \"number\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` <br>\nPhone number assigned successfully. \n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nUser does not belong to this account.<br>\nValidation Failed. Phone number has already been assigned.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nUser does not have a calling plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001` <br>This user does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign phone number",
                      "method": "delete",
                      "endpoint": "phone/users/:userId/phone_numbers/:phoneNumberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's recordings",
                      "method": "get",
                      "endpoint": "phone/users/:userId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"recordings\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"\",\n      \"direction\": \"\",\n      \"download_url\": \"\",\n      \"duration\": \"\",\n      \"id\": \"\"\n    }\n  ],\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error code:** `300`\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error code:** `1001`<br>\nUser does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's settings",
                      "method": "get",
                      "endpoint": "phone/users/:userId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"area_code\": \"\",\n  \"company_number\": \"\",\n  \"desk_phone\": {\n    \"keys_positions\": {\n      \"primary_number\": \"\"\n    }\n  },\n  \"outbound_caller\": {\n    \"number\": \"\"\n  },\n  \"outbound_caller_ids\": {\n    \"is_default\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"number\": \"\"\n  },\n  \"voice_mail\": {\n    \"access_user_id\": \"\",\n    \"delete\": {{faker 'random.boolean'}},\n    \"download\": {{faker 'random.boolean'}},\n    \"shared_id\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser Setting object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nUser does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove shared access",
                      "method": "delete",
                      "endpoint": "phone/users/:userId/settings/:settingType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nNo Content<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Codes** `404`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user sub setting type.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Codes** `404`<br>\nShared voicemail does not exist:{shared_id}<br>\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update shared access",
                      "method": "patch",
                      "endpoint": "phone/users/:userId/settings/:settingType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nNo Content<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user setting Type: {settingType}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\nShared voicemail does not exist: {shared_id}.\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set up shared access",
                      "method": "post",
                      "endpoint": "phone/users/:userId/settings/:settingType",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"voice_mail\": {\n    \"access_user_id\": \"\",\n    \"delete\": {{faker 'random.boolean'}},\n    \"download\": {{faker 'random.boolean'}},\n    \"shared_id\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code** `201` <br>\nCreated Successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Response Code:** `400`<br>\nVoicemail option has been disabled.<br>\n\n**Error Code:** `300`<br>\nInvalid user sub setting type.<br>\nVoicemail has already been shared to the user.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's voicemails",
                      "method": "get",
                      "endpoint": "phone/users/:userId/voice_mails",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}},\n  \"voice_mails\": [\n    {\n      \"callee_name\": \"\",\n      \"callee_number\": \"\",\n      \"callee_number_type\": \"\",\n      \"caller_name\": \"\",\n      \"caller_number\": \"\",\n      \"caller_number_type\": \"\",\n      \"date_time\": \"\",\n      \"download_url\": \"\",\n      \"duration\": \"\",\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'read' 'unread')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** 300<br>\nUser does not belong to account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` <br>\n**Error Code:** 1001<br>\nUser does not exist: {userId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a voicemail",
                      "method": "delete",
                      "endpoint": "phone/voice_mails/:voicemailId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**\n\nVoicemail deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 401,
                              "label": "**HTTP Status Code:** `401` **Unauthorized**<br>\n**Error Code:** `124`<br>\nAccount does not exist: {accountId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**\n\nVoice mail does not exist: {voicemailId}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get sign In / sign out activity report",
                      "method": "get",
                      "endpoint": "report/activities",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"activity_logs\": [\n    {\n      \"client_type\": \"\",\n      \"email\": \"\",\n      \"ip_address\": \"\",\n      \"time\": \"{{faker 'date.recent' 365}}\",\n      \"type\": \"\",\n      \"version\": \"\"\n    }\n  ],\n  \"from\": \"\",\n  \"next_page_token\": \"\",\n  \"page_size\": \"\",\n  \"to\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get cloud recording usage report",
                      "method": "get",
                      "endpoint": "report/cloud_recording",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nCloud Recording Report Returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nOnly provide report in recent 6 months",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get daily usage report",
                      "method": "get",
                      "endpoint": "report/daily",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"dates\": [\n    {\n      \"date\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n      \"meeting_minutes\": {{faker 'random.number'}},\n      \"meetings\": {{faker 'random.number'}},\n      \"new_users\": {{faker 'random.number'}},\n      \"participants\": {{faker 'random.number'}}\n    }\n  ],\n  \"month\": {{faker 'random.number'}},\n  \"year\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nDaily report retrieved.<br>\nThis is only available for paid accounts:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n**Error Code:** `300`<br> \nDaily report can only be provided for a month that falls within the recent 6 months.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting detail reports",
                      "method": "get",
                      "endpoint": "report/meetings/:meetingId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": {{faker 'random.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"participants_count\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'random.number'}},\n  \"tracking_fields\": [\n    {\n      \"field\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"type\": {{faker 'random.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting details returned.<br>\nThis is only available for paid account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nCan not access meeting information:{meetingId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting {meetingId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting participant reports",
                      "method": "get",
                      "endpoint": "report/meetings/:meetingId/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Cannot access meeting information:{meetingId}.<br>\nThe next page token is either invalid or has expired.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {MeetingId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting poll reports",
                      "method": "get",
                      "endpoint": "report/meetings/:meetingId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting polls report returned.<br>\nThis is only available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nMeeting ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get operation logs report",
                      "method": "get",
                      "endpoint": "report/operationlogs",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": 30\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nOperation Logs Report Returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Only provide report in recent 6 months",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get telephone reports",
                      "method": "get",
                      "endpoint": "report/telephone",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": 1,\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nTelephone report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nThe requested report cannot be generated for this account because this account has not subscribed to toll-free audio conference plan.<br>\nToll Report feature must be enabled to perform this action. Contact the Zoom Support team for help.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get active/inactive host reports",
                      "method": "get",
                      "endpoint": "report/users",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\nThis is only available for paid account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get meeting reports",
                      "method": "get",
                      "endpoint": "report/users/:userId/meetings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nActive or inactive hosts report returned.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nThis is only available for paid account:{accountId}.<br>\n\n**Error Code:** `300`<br>\nThe next page token is invalid or expired.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**\n<br>**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar detail reports",
                      "method": "get",
                      "endpoint": "report/webinars/:webinarId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_keys\": [\n    {\n      \"key\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"dept\": \"\",\n  \"duration\": {{faker 'random.number'}},\n  \"end_time\": \"{{faker 'date.recent' 365}}\",\n  \"id\": {{faker 'random.number'}},\n  \"participants_count\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\",\n  \"total_minutes\": {{faker 'random.number'}},\n  \"tracking_fields\": [\n    {\n      \"field\": \"\",\n      \"value\": \"\"\n    }\n  ],\n  \"type\": {{faker 'random.number'}},\n  \"user_email\": \"\",\n  \"user_name\": \"\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar details returned.<br>\nThis is only available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nCan not access webinar information:{webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nMeeting  {meetingId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar participant reports",
                      "method": "get",
                      "endpoint": "report/webinars/:webinarId/participants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nMeeting participants report returned.<br>\nThis is only available for paid account: {accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nThe next page token is invalid or has expired.<br>\nCan not access the webinar information, {webinarId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar poll reports",
                      "method": "get",
                      "endpoint": "report/webinars/:webinarId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"date_time\": \"{{faker 'date.recent' 365}}\",\n          \"polling_id\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar polls report returned.<br>\nMissing webinar subscription plan.<br>\nThis is only available for paid account:{accountId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar Q&A report",
                      "method": "get",
                      "endpoint": "report/webinars/:webinarId/qa",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": {{faker 'random.number'}},\n  \"questions\": [\n    {\n      \"email\": \"\",\n      \"name\": \"\",\n      \"question_details\": [\n        {\n          \"answer\": \"\",\n          \"question\": \"\"\n        }\n      ]\n    }\n  ],\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"uuid\": \"{{faker 'random.uuid'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar Q&A report returned.<br>\nThis is only available for paid account:{accountId}.<br>\nA report cannot be generated for this account because this account has not subscribed to a webinar plan.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar ID not found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.<br>\n**Error Code:** `3001`<br>\nWebinar  {webinarId} not found or has expired.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List roles",
                      "method": "get",
                      "endpoint": "roles",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"roles\": [\n    {\n      \"description\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"total_members\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of roles returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>**Error Code:** `4700`<br>Invalid access token, does not contain role:read:admin scope.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a role",
                      "method": "post",
                      "endpoint": "roles",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Status Code:** `200`<br>\nYou do not have the permission to create a role.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"privileges\": [\n    \"\"\n  ],\n  \"total_members\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**Status Code:** `201`<br>\nRole created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nThe name field cannot be empty.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a role",
                      "method": "delete",
                      "endpoint": "roles/:roleId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nRole not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204`<br>\nRole deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nRole not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get role information",
                      "method": "get",
                      "endpoint": "roles/:roleId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"description\": \"\",\n  \"id\": \"\",\n  \"name\": \"\",\n  \"privileges\": [\n    \"\"\n  ],\n  \"sub_account_privileges\": {\n    \"second_level\": {{faker 'random.number'}}\n  },\n  \"total_members\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Status Code:** `200`<br>\nInformation about a specific role returned.\n\n**Error Code:** `200`<br>\nYou do not have the permission to retrieve role information.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\nRole not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update role information",
                      "method": "patch",
                      "endpoint": "roles/:roleId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nThe account must be a paid account to update the role.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `400`<br>\nRole updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`\nThis role cannot be updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List members in a role",
                      "method": "get",
                      "endpoint": "roles/:roleId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"members\": [\n    {\n      \"department\": \"\",\n      \"email\": \"\",\n      \"first_name\": \"\",\n      \"id\": \"\",\n      \"last_name\": \"\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>Role not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Assign a role",
                      "method": "post",
                      "endpoint": "roles/:roleId/members",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"add_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>Members Added",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\n\n**Error Code:** `1034`\nRole does not exist.<br><br>\n**Error Code:** `300`<br>\nRoleId required.<br>\nCan’t delete or add members for Normal/Owner roles.<br><br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Unassign a role",
                      "method": "delete",
                      "endpoint": "roles/:roleId/members/:memberId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nRole withdrawn from user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>Role or Member not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Zoom Rooms",
                      "method": "get",
                      "endpoint": "rooms",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}},\n  \"rooms\": [\n    {\n      \"activation_code\": \"\",\n      \"id\": \"\",\n      \"location_id\": \"\",\n      \"name\": \"\",\n      \"room_id\": \"\",\n      \"status\": \"{{oneOf (array 'Offline' 'Available' 'InMeeting' 'UnderConstruction')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nA list of Zoom Rooms returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a Zoom Room",
                      "method": "post",
                      "endpoint": "rooms",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"location_id\": \"\",\n  \"name\": \"\",\n  \"room_id\": \"\",\n  \"type\": \"{{oneOf (array 'ZoomRoom' 'SchedulingDisplayOnly' 'DigitalSignageOnly')}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created**<br>\nZoom Room added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAt least one normal Zoom Rooms required.<br><br>\n**Error Code:** `300`<br>\nInvalid parent location id {location_id}.<br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n\n**Error Code:** `4801`<br>\nLocation not found:{location_id}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room account profile",
                      "method": "get",
                      "endpoint": "rooms/account_profile",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"basic\": {\n    \"required_code_to_ext\": {{faker 'random.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nZoom Room Account Profile returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Zoom Room account profile",
                      "method": "patch",
                      "endpoint": "rooms/account_profile",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nProfile updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room account settings",
                      "method": "get",
                      "endpoint": "rooms/account_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'random.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'random.boolean'}},\n    \"auto_direct_sharing\": {{faker 'random.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'random.boolean'}},\n    \"display_feedback_survey\": {{faker 'random.boolean'}},\n    \"display_meeting_list\": {{faker 'random.boolean'}},\n    \"display_top_banner\": {{faker 'random.boolean'}},\n    \"email_address_prompt_before_recording\": {{faker 'random.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'random.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'random.boolean'}},\n    \"make_room_alternative_host\": {{faker 'random.boolean'}},\n    \"secure_connection_channel\": {{faker 'random.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'random.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'random.boolean'}},\n    \"show_call_history_in_room\": {{faker 'random.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'random.boolean'}},\n    \"show_non_video_participants\": {{faker 'random.boolean'}},\n    \"start_airplay_manually\": {{faker 'random.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'random.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'random.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'random.boolean'}},\n    \"weekly_system_restart\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZR Account Settings returned successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Zoom Room account settings",
                      "method": "patch",
                      "endpoint": "rooms/account_settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List digital signage contents",
                      "method": "get",
                      "endpoint": "rooms/digital_signage",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"contents\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nList returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n* Zoom Room subscription was not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update E911 digital signage",
                      "method": "patch",
                      "endpoint": "rooms/events",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"event_id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 202,
                              "label": "**HTTP Status Code:** `202` <br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` <br>\n\n**Error Code:** `200` <br> Access restricted. <br><br>\n**Error Code:** `300`\nEvent id is required.<br>\nInvalid value submitted for Target Ids. Provide a valid Target Id associated with the Target type.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Zoom Room locations",
                      "method": "get",
                      "endpoint": "rooms/locations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"locations\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"parent_location_id\": \"\",\n      \"type\": \"{{oneOf (array 'country' 'states' 'city' 'campus' 'building' 'floor')}}\"\n    }\n  ],\n  \"next_page_token\": \"\",\n  \"page_size\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room locations listed successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br>\nLocation type not exist.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\n Location not found:{parent_location_id}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a location",
                      "method": "post",
                      "endpoint": "rooms/locations",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"name\": \"\",\n  \"parent_location_id\": \"\",\n  \"type\": \"{{oneOf (array 'country' 'states' 'city' 'campus' 'building' 'floor')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nLocation added successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br><br>\n**Error Code:** `300`<br>\nLocation name already exists. Try a different location name.<br>\nInvalid parent location id {parent_location_id}\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not exist {parent_location_id}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room location structure",
                      "method": "get",
                      "endpoint": "rooms/locations/structure",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"structures\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms location structure returned successfully.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Zoom Rooms location structure",
                      "method": "patch",
                      "endpoint": "rooms/locations/structure",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation Structure updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2100`<br>\nThis sub account has no sip trunk plan",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001` This account does not exist or does not belong to this master account.<br>This account does not exist or does not belong to you.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room location profile",
                      "method": "get",
                      "endpoint": "rooms/locations/:locationId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"basic\": {\n    \"address\": \"\",\n    \"description \": \"\",\n    \"name\": \"\",\n    \"required_code_to_ext\": {{faker 'random.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\",\n    \"timezone\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Rooms Location Profile returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Zoom Room location profile",
                      "method": "patch",
                      "endpoint": "rooms/locations/:locationId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change the assigned parent location",
                      "method": "put",
                      "endpoint": "rooms/locations/:locationId/location",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation assigned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br> Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\n**Error Code:** `300`<br> Invalid parent location id {parent_location_id}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br> Location not found:{parent_location_id}.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get location settings",
                      "method": "get",
                      "endpoint": "rooms/locations/:locationId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"meeting_security\": {\n    \"encryption_type\": \"{{oneOf (array 'enhanced_encryption' 'e2ee')}}\",\n    \"end_to_end_encrypted_meetings\": {{faker 'random.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'random.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'random.boolean'}},\n    \"auto_accept_incoming_call_and_fecc\": {{faker 'random.boolean'}},\n    \"auto_direct_sharing\": {{faker 'random.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'random.boolean'}},\n    \"display_feedback_survey\": {{faker 'random.boolean'}},\n    \"display_meeting_list\": {{faker 'random.boolean'}},\n    \"display_top_banner\": {{faker 'random.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'random.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'random.boolean'}},\n    \"hide_self_view\": {{faker 'random.boolean'}},\n    \"lock_speaker_volume_control\": {{faker 'random.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'random.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'random.boolean'}},\n    \"show_call_history_in_room\": {{faker 'random.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'random.boolean'}},\n    \"show_non_video_participants\": {{faker 'random.boolean'}},\n    \"start_airplay_manually\": {{faker 'random.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'random.boolean'}},\n    \"start_hdmi_content_share_manualy\": {{faker 'random.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'random.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'random.boolean'}},\n    \"voice_commands\": {{faker 'random.boolean'}},\n    \"weekly_system_restart\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room location settings returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess Restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `4801`<br>\nLocation not found: {locationId}\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update location settings",
                      "method": "patch",
                      "endpoint": "rooms/locations/:locationId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation settings updated successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found: {locationId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Check-in or check-out of a Zoom Room",
                      "method": "patch",
                      "endpoint": "rooms/:id/events",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 202,
                              "label": "**HTTP Status Code:** `202` **Accepted**<br>\nRequest processed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `300`<br>\n* Zoom Room is offline. Please ensure that the Zoom Room is online before checking in or checking out.\n* Invalid parameters.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1012` <br>\nRoom does not exist: {roomId}.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a Zoom Room",
                      "method": "delete",
                      "endpoint": "rooms/:roomId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nZoom Room deleted successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br>\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room profile",
                      "method": "get",
                      "endpoint": "rooms/:roomId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"basic\": {\n    \"activation_code\": \"\",\n    \"hide_room_in_contacts\": {{faker 'random.boolean'}},\n    \"name\": \"\",\n    \"required_code_to_ext\": {{faker 'random.boolean'}},\n    \"room_passcode\": \"\",\n    \"support_email\": \"{{faker 'internet.email'}}\",\n    \"support_phone\": \"\"\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room profile returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\n* Zoom Room subscription not found. Try again after purchasing a Zoom Room subscription.\n* Access restricted.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a Zoom Room profile",
                      "method": "patch",
                      "endpoint": "rooms/:roomId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nRoom Profile information updated successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.<br><br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1012`<br>\nRoom not found:{roomId}\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List Zoom Room devices",
                      "method": "get",
                      "endpoint": "rooms/:roomId/devices",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"devices\": [\n    {\n      \"app_version\": \"\",\n      \"device_system\": \"\",\n      \"device_type\": \"{{oneOf (array 'Zoom Rooms Computer' 'Controller' 'Scheduling Display' 'Zoom Rooms Control System' 'Companion Whiteboard')}}\",\n      \"id\": \"\",\n      \"room_name\": \"\",\n      \"status\": \"{{oneOf (array 'Online' 'Offline')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**\nDevices listed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change Zoom Rooms' app version",
                      "method": "put",
                      "endpoint": "rooms/:roomId/devices/:deviceId/app_version",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nRequest processed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `8001` <br> Cannot process this upgrade request. The Zoom Rooms Software in this device is either already up to date or is currently being updated.  <br>  <br> \n**Error Code:** `8002` <br> Cannot process the downgrade request. The target version for downgrading is not available or the downgrade process has already been initiated. <br>  <br> \n**Error Code:** `8003` <br>  The cancel request could not be processed because the Zoom Rooms Software in this device is not being downgraded or upgraded at the moment. The cancel action should only be used to cancel an ongoing upgrade or downgrade process. <br>  <br> \n**Error Code:** `8004` <br> A device with the provided Device ID: {deviceId} does not belong to the current room: {roomId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Change a Zoom Room's location",
                      "method": "put",
                      "endpoint": "rooms/:roomId/location",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nLocation of the Zoom Room changed successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4801`<br>\nLocation not found:{location_id}",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get Zoom Room settings",
                      "method": "get",
                      "endpoint": "rooms/:roomId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"meeting_security\": {\n    \"encryption_type\": \"{{oneOf (array 'enhanced_encryption' 'e2ee')}}\",\n    \"end_to_end_encrypted_meetings\": {{faker 'random.boolean'}}\n  },\n  \"zoom_rooms\": {\n    \"allow_multiple_content_sharing\": {{faker 'random.boolean'}},\n    \"audio_device_daily_auto_test\": {{faker 'random.boolean'}},\n    \"auto_direct_sharing\": {{faker 'random.boolean'}},\n    \"auto_start_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"auto_stop_scheduled_meeting\": {{faker 'random.boolean'}},\n    \"count_attendees_number_in_room\": {{faker 'random.boolean'}},\n    \"display_feedback_survey\": {{faker 'random.boolean'}},\n    \"display_meeting_list\": {{faker 'random.boolean'}},\n    \"display_top_banner\": {{faker 'random.boolean'}},\n    \"encrypt_shared_screen_content\": {{faker 'random.boolean'}},\n    \"hide_id_for_private_meeting\": {{faker 'random.boolean'}},\n    \"hide_share_instruction\": {{faker 'random.boolean'}},\n    \"send_whiteboard_to_internal_contact_only\": {{faker 'random.boolean'}},\n    \"show_alert_before_meeting\": {{faker 'random.boolean'}},\n    \"show_call_history_in_room\": {{faker 'random.boolean'}},\n    \"show_contact_list_on_controller\": {{faker 'random.boolean'}},\n    \"show_non_video_participants\": {{faker 'random.boolean'}},\n    \"start_airplay_manually\": {{faker 'random.boolean'}},\n    \"start_airplay_mirroring\": {{faker 'random.boolean'}},\n    \"support_join_3rd_party_meeting\": {{faker 'random.boolean'}},\n    \"transform_meeting_to_private\": {{faker 'random.boolean'}},\n    \"upcoming_meeting_alert\": {{faker 'random.boolean'}},\n    \"weekly_system_restart\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nZoom Room settings returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n\n**Error Code:** `1012`<br>\nRoom not found:{roomId}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update Zoom Room settings",
                      "method": "patch",
                      "endpoint": "rooms/:roomId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nSettings updated successfully. ",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room subscription not found. Try again after purchasing a Zoom Room subscription.<br>\nAccess restricted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List SIP phones",
                      "method": "get",
                      "endpoint": "sip_phones",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": {{faker 'random.number'}},\n  \"page_size\": {{faker 'random.number'}},\n  \"phones\": [\n    {\n      \"authorization_name\": \"\",\n      \"domain\": \"\",\n      \"id\": \"\",\n      \"password\": \"\",\n      \"proxy_server\": \"\",\n      \"proxy_server2\": \"\",\n      \"proxy_server3\": \"\",\n      \"register_server\": \"\",\n      \"register_server2\": \"\",\n      \"register_server3\": \"\",\n      \"registration_expire_time\": {{faker 'random.number'}},\n      \"transport_protocol\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"transport_protocol2\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"transport_protocol3\": \"{{oneOf (array 'UDP' 'TCP' 'TLS' 'AUTO')}}\",\n      \"user_email\": \"{{faker 'internet.email'}}\",\n      \"user_name\": \"\",\n      \"voice_mail\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSIP Phones listed successfully.\n\n**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br> Bad Request\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Enable SIP phone",
                      "method": "post",
                      "endpoint": "sip_phones",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nSIP Phone Created.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `200`<br> Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.<br>\n**Error Code:** `300`<br>SIP Phone with the same email already exists.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete SIP phone",
                      "method": "delete",
                      "endpoint": "sip_phones/:phoneId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nSIP Phone deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`The SIP phone with this phoneId was not found on this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update SIP phone",
                      "method": "patch",
                      "endpoint": "sip_phones/:phoneId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**Error Code:** `200`<br>\nPermission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nSIP Phone information updated successfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**Error Code:** `300`<br>\n SIP phone not found: phoneId.<br>\n The SIP phone with this phoneId was not found on this account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List SIP trunk numbers",
                      "method": "get",
                      "endpoint": "sip_trunk/numbers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"phone_numbers\": [\n    {\n      \"country\": \"\",\n      \"number\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "* **HTTP Status Code:** `200` **OK**<br>\nList of numbers returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `2001`<br>\nThis account does not exist or does not belong to this master account.\nThis account does not exist or does not belong to you.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List tracking fields",
                      "method": "get",
                      "endpoint": "tracking_fields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"total_records\": {{faker 'random.number'}},\n  \"tracking_fields\": [\n    {\n      \"id\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of Tracking Fields returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a tracking field",
                      "method": "post",
                      "endpoint": "tracking_fields",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nTracking Field created",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a tracking field",
                      "method": "delete",
                      "endpoint": "tracking_fields/:fieldId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nTracking Field deleted",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a tracking field",
                      "method": "get",
                      "endpoint": "tracking_fields/:fieldId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nTracking Field object returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a tracking field",
                      "method": "patch",
                      "endpoint": "tracking_fields/:fieldId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nTracking Field updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nTracking Field not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get account's TSP information",
                      "method": "get",
                      "endpoint": "tsp",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"dial_in_number_unrestricted\": {{faker 'random.boolean'}},\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"number\": \"\",\n      \"type\": \"\"\n    }\n  ],\n  \"enable\": {{faker 'random.boolean'}},\n  \"master_account_setting_extended\": {{faker 'random.boolean'}},\n  \"modify_credential_forbidden\": {{faker 'random.boolean'}},\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\",\n  \"tsp_enabled\": {{faker 'random.boolean'}},\n  \"tsp_provider\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nTSP account detail returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update account's TSP information",
                      "method": "patch",
                      "endpoint": "tsp",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nTSP Account updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n\n**Error Code:** `300`<br>\nInvalid parameter: tsp_bridge.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List users",
                      "method": "get",
                      "endpoint": "users",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}},\n  \"users\": [\n    {\n      \"created_at\": \"{{faker 'date.recent' 365}}\",\n      \"custom_attributes\": [\n        {\n          \"key\": \"\",\n          \"name\": \"\",\n          \"value\": \"\"\n        }\n      ],\n      \"dept\": \"\",\n      \"email\": \"john.doe@gmail.com\",\n      \"first_name\": \"\",\n      \"group_ids\": [\n        \"\"\n      ],\n      \"host_key\": \"\",\n      \"id\": \"\",\n      \"im_group_ids\": [\n        \"\"\n      ],\n      \"last_client_version\": \"\",\n      \"last_login_time\": \"{{faker 'date.recent' 365}}\",\n      \"last_name\": \"\",\n      \"plan_united_type\": \"\",\n      \"pmi\": {{faker 'random.number'}},\n      \"role_id\": \"\",\n      \"status\": \"active\",\n      \"timezone\": \"\",\n      \"type\": 1,\n      \"verified\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser list returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create users",
                      "method": "post",
                      "endpoint": "users",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email\": \"\",\n  \"first_name\": \"\",\n  \"id\": \"\",\n  \"last_name\": \"\",\n  \"type\": \"{{oneOf (array '1' '2' '3' '99')}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nUser created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>\nInvalid parameter: password<br><br>\n**Error Code:** `200`<br>No privilege. <br>No permission, please contact Zoom customer support.<br><br>**Error Code:** `1000`<br>The user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>\n**Error Code:** `1009`<br>The user $email already holds an active account.<br><br>**Error Code:** `1107`<br>Email domain is blocked<br>**Error Code:** `2034` <br>Your request to add a new {0} user could not be approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>**Error Code:** `2033`<br>\nYour request to add a basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>\n**Error Code:** `3412`<br>Your request to add a basic user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to add another user.\n<br>Your request to add a new $userType user could not be approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.<br><br>\n**Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>\n**Error Code:** `1116`<br>Email address $email doesn't match limited domains: $domains<br><br>\n**Error Code:** `2002`<br>SSO has not been enabled for this account. Contact the Zoom support team to enable this option.<br><br>\n**Error Code:** `2032`<br>The ssoCreate option is only available for SSO Partners that have enabled the pre-provision option. Contact the Zoom Support team to learn more.<br><br>\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `4130`<br>\nGroup does not exist: $groupId<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 409,
                              "label": "**HTTP Status Code:** `409`<br>User with that email already exists<br>\n**Error Code:** `1005`<br>Email $email has already been used.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Check a user email",
                      "method": "get",
                      "endpoint": "users/email",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"existed_email\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `300`<br> Email is required.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user's ZAK",
                      "method": "get",
                      "endpoint": "users/me/zak",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"token\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "OK",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `404` <br>\n\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Check a user's PM room",
                      "method": "get",
                      "endpoint": "users/vanity_name",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"existed\": {{faker 'random.boolean'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `300`<br>Vanity name is required.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a user",
                      "method": "delete",
                      "endpoint": "users/:userId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nUser deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300`<br>The transfer-to email address cannot be the same as the unlinked or deleted user’s email address.<br> Unable to unlink API user(s).<br><br>\n**Error Code:** `200`<br>Cannot delete a user out of your account. <br>Cannot delete a Zoom Rooms user. <br>Unable to delete this deactivated user. Please contact Zoom support team for more information. <br><br>\n**Error Code:** `1000`<br>\nThe user cannot be changed because they are a Call-queue manager or Auto-receptionist operator.<br><br>\n**Error Code:** `1107`<br>You can not disassociate a user with managed domain.<br><br>\n**Error Code:** `1117`<br>You can not disassociate an Admin user.<br><br>\n**Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a user",
                      "method": "get",
                      "endpoint": "users/:userId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nUser object returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\nBad request<br>\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a user",
                      "method": "patch",
                      "endpoint": "users/:userId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` <br> \nUser updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>A Zoom Room user cannot be updated to a free user type: $userId<br><br>\n**Error Code:**`300`<br> Your request could not be completed because the name contains an invalid word: {name}<br>Invalid parameter: password<br>The value provided for plan_united_type parameter is invalid. Try again with a valid value.<br><br>\n**Error Code:** `1108`<br>Permission requirements to change the user type of this user were not met.<br><br>\n**Error Code:** `1109`<br>Host is not a paid user.\n**Error Code:** `1120`<br>A valid invitation to join the Zoom account was not found for this user. <br>This error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br>**Error Code:** `2034`<br>Your request to convert the plan type of this user to {0} was not approved at this time because your account has reached the permitted maximum number of {1} users. Please purchase additional licenses or contact the Zoom support team to provision additional users in your account.\n<br><br>**Error Code:** `2033`<br>Your request to convert the user type to basic was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.<br>\n**Error Code:** `3412`<br>Your request to convert the user type of this $userType user to a basic user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to convert a paying user to a basic user.\n<br>Your request to convert the user type of this basic user to a $userType user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber paying users. Please purchase additional licenses or remove existing paying user(s) from your Users list or the Pending Users list before attempting to convert a basic user to a paying user.<br><br>\n**Error Code:** `4100`<br>\nUser is already taken by a user from your account. Choose another Personal Link Name and try again.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete user assistants",
                      "method": "delete",
                      "endpoint": "users/:userId/assistants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nAssistants deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user assistants",
                      "method": "get",
                      "endpoint": "users/:userId/assistants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assistants\": [\n    {\n      \"email\": \"\",\n      \"id\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add assistants",
                      "method": "post",
                      "endpoint": "users/:userId/assistants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"add_at\": \"{{faker 'date.recent' 365}}\",\n  \"ids\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nAssistant added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nCurrent account must be paid account: $userId <br>\nThe user must either be a Licensed user or an On-prem user : $userId. <br>\nCan't assign scheduling privilege to yourself.<br>\nCan't find user $email.<br>\nUser $email has already granted scheduling privilege.<br>\nThe user must either be a Licensed user or an On-prem user : $email.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a user assistant",
                      "method": "delete",
                      "endpoint": "users/:userId/assistants/:assistantId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **OK**<br>\nAssistant deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a user's email",
                      "method": "put",
                      "endpoint": "users/:userId/email",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content**<br>\nEmail updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n<br>**Error Code:** `1001`<br>\nUser does not exist: $email.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meeting templates",
                      "method": "get",
                      "endpoint": "users/:userId/meeting_templates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"templates\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\",\n      \"type\": {{faker 'random.number'}}\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br> User not exist: {userId}.<br>\nUser {userId} does not exist or does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List meetings",
                      "method": "get",
                      "endpoint": "users/:userId/meetings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of meeting objects returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a meeting",
                      "method": "post",
                      "endpoint": "users/:userId/meetings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"assistant_id\": \"\",\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"id\": {{faker 'random.number'}},\n  \"registration_url\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nMeeting created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>\nInvalid enforce_login_domains, separate multiple domains by semicolon.<br>\nA maximum of {rateLimitNumber} meetings can be created/updated for a single user in one day.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\nUser not found.<br>\n\n**Error Code:** `1001`<br> User {userId} not exist or not belong to this account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List a user's PAC accounts",
                      "method": "get",
                      "endpoint": "users/:userId/pac",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"pac_accounts\": [\n    {\n      \"conference_id\": {{faker 'random.number'}},\n      \"dedicated_dial_in_number\": [\n        {\n          \"country\": \"\",\n          \"number\": \"\"\n        }\n      ],\n      \"global_dial_in_numbers\": [\n        {\n          \"country\": \"\",\n          \"number\": \"\"\n        }\n      ],\n      \"listen_only_password\": \"\",\n      \"participant_password\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nPAC account list returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `2024`<br>\nUser does not have PAC enabled.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a user's password",
                      "method": "put",
                      "endpoint": "users/:userId/password",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **OK**<br>\nPassword updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br> **Error Code:** `300` <br>Your new password can not match the old password.<br>This password cannot be changed because it has already been changed the maximum number of times over the past 24 hours.<br><br> **Error Code:** `1117` <br>Can not update Admin’s password<br><br> **Error Code:** `1123`<br>Can only update password of Zoom work email account<br><br> **Error Code:** `1124` <br>Minimum of 6 characters.<br> Have at least {lengthRule} characters<br><br> **Error Code:** `1125` <br>Have at least 1 letter (a, b, c…)<br><br> **Error Code:** `1126` <br>Have at least 1 number (1, 2, 3…)<br><br> **Error Code:** `1127` <br>Have at least 1 special character (!, @, #…)<br><br>\n**Error Code:** `1128` <br>Include both Upper case and Lower case characters<br><br>**Error Code:** `1129` Users cannot reuse any of the last $formerPwdCount passwords created.<br><br> **Error Code:** `1130`<br>Password can’t use the same character.<br><br>\n**Error Code:** `1131`<br>Password can’t use continuation character.Such as 'abcdef’,’123456’.<br><br>\n**Error Code:** `1136`<br>\nYour password is too easy to guess. Try another one.\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user permissions",
                      "method": "get",
                      "endpoint": "users/:userId/permissions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"permissions\": [\n    \"\"\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser permissions returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Upload a user's profile picture",
                      "method": "post",
                      "endpoint": "users/:userId/picture",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>Picture uploaded.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `300`<br>\nYour request was not accepted because the profile picture contains invalid or explicit content.<br>\n**Error Code:** `120`<br>\nFile is empty.<br>\nFile size cannot exceed 2M.<br>\nOnly jpg/jpeg or png image file can be uploaded.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a user's presence status",
                      "method": "put",
                      "endpoint": "users/:userId/presence_status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "\"\"",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\n\nStatus updated succesfully.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `5301`<br>\nRequest to update the presence status of this user failed.<br>\n**Error Code:** `5411`<br>\nUnauthorized request. You do not have permission to update the presence status of this user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br>\n**Error Code:** `1001`<br>\nUser does not exist: {userId}.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 429,
                              "label": "**HTTP Status Code:** `429` **Too Many Requests**<br>\nToo many requests submitted to update the presence status of this user. Please wait for the request to be processed and try again later.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List all recordings",
                      "method": "get",
                      "endpoint": "users/:userId/recordings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"from\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\",\n  \"to\": \"{{date '2019' (now) 'yyyy-MM-dd'}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of recording objects returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete user schedulers",
                      "method": "delete",
                      "endpoint": "users/:userId/schedulers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br> All schedulers deleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user schedulers",
                      "method": "get",
                      "endpoint": "users/:userId/schedulers",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"schedulers\": [\n    {\n      \"email\": \"\",\n      \"id\": \"\",\n      \"pmi\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>Successfully listed all schedulers of the user.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a scheduler",
                      "method": "delete",
                      "endpoint": "users/:userId/schedulers/:schedulerId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nScheduler deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get user settings",
                      "method": "get",
                      "endpoint": "users/:userId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"email_notification\": {\n    \"alternative_host_reminder\": {{faker 'random.boolean'}},\n    \"cancel_meeting_reminder\": {{faker 'random.boolean'}},\n    \"jbh_reminder\": {{faker 'random.boolean'}},\n    \"schedule_for_reminder\": {{faker 'random.boolean'}}\n  },\n  \"feature\": {\n    \"cn_meeting\": {{faker 'random.boolean'}},\n    \"in_meeting\": {{faker 'random.boolean'}},\n    \"large_meeting\": {{faker 'random.boolean'}},\n    \"large_meeting_capacity\": {{faker 'random.number'}},\n    \"meeting_capacity\": {{faker 'random.number'}},\n    \"webinar\": {{faker 'random.boolean'}},\n    \"webinar_capacity\": {{faker 'random.number'}},\n    \"zoom_phone\": {{faker 'random.boolean'}}\n  },\n  \"in_meeting\": {\n    \"allow_live_streaming\": {{faker 'random.boolean'}},\n    \"annotation\": {{faker 'random.boolean'}},\n    \"attendee_on_hold\": {{faker 'random.boolean'}},\n    \"auto_saving_chat\": {{faker 'random.boolean'}},\n    \"breakout_room\": {{faker 'random.boolean'}},\n    \"chat\": {{faker 'random.boolean'}},\n    \"closed_caption\": {{faker 'random.boolean'}},\n    \"co_host\": {{faker 'random.boolean'}},\n    \"custom_data_center_regions\": {{faker 'random.boolean'}},\n    \"custom_live_streaming_service\": {{faker 'random.boolean'}},\n    \"custom_service_instructions\": \"\",\n    \"data_center_regions\": \"{{oneOf (array 'HK' 'AU' 'IN' 'TY' 'CN' 'US' 'CA' 'DE' 'NL' 'LA')}}\",\n    \"e2e_encryption\": {{faker 'random.boolean'}},\n    \"entry_exit_chime\": \"{{oneOf (array 'host' 'all' 'none')}}\",\n    \"far_end_camera_control\": {{faker 'random.boolean'}},\n    \"feedback\": {{faker 'random.boolean'}},\n    \"file_transfer\": {{faker 'random.boolean'}},\n    \"group_hd\": {{faker 'random.boolean'}},\n    \"non_verbal_feedback\": {{faker 'random.boolean'}},\n    \"polling\": {{faker 'random.boolean'}},\n    \"private_chat\": {{faker 'random.boolean'}},\n    \"record_play_voice\": {{faker 'random.boolean'}},\n    \"remote_control\": {{faker 'random.boolean'}},\n    \"remote_support\": {{faker 'random.boolean'}},\n    \"request_permission_to_unmute\": {{faker 'random.boolean'}},\n    \"screen_sharing\": {{faker 'random.boolean'}},\n    \"share_dual_camera\": {{faker 'random.boolean'}},\n    \"show_meeting_control_toolbar\": {{faker 'random.boolean'}},\n    \"virtual_background\": {{faker 'random.boolean'}},\n    \"virtual_background_settings\": {\n      \"allow_upload_custom\": {{faker 'random.boolean'}},\n      \"allow_videos\": {{faker 'random.boolean'}},\n      \"enable\": {{faker 'random.boolean'}},\n      \"files\": [\n        {\n          \"id\": \"\",\n          \"is_default\": {{faker 'random.boolean'}},\n          \"name\": \"\",\n          \"size\": \"\",\n          \"type\": \"\"\n        }\n      ]\n    },\n    \"waiting_room\": {{faker 'random.boolean'}},\n    \"who_can_share_screen\": \"{{oneOf (array 'host' 'all')}}\",\n    \"who_can_share_screen_when_someone_is_sharing\": \"{{oneOf (array 'host' 'all')}}\",\n    \"workplace_by_facebook\": {{faker 'random.boolean'}}\n  },\n  \"profile\": {\n    \"recording_storage_location\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"value\": \"\"\n    }\n  },\n  \"recording\": {\n    \"ask_host_to_confirm_disclaimer\": {{faker 'random.boolean'}},\n    \"ask_participants_to_consent_disclaimer\": {{faker 'random.boolean'}},\n    \"auto_delete_cmr\": {{faker 'random.boolean'}},\n    \"auto_delete_cmr_days\": {{faker 'random.number'}},\n    \"auto_recording\": \"{{oneOf (array 'local' 'cloud' 'none')}}\",\n    \"cloud_recording\": {{faker 'random.boolean'}},\n    \"host_pause_stop_recording\": {{faker 'random.boolean'}},\n    \"ip_address_access_control\": {\n      \"enable\": {{faker 'random.boolean'}},\n      \"ip_addresses_or_ranges\": \"\"\n    },\n    \"local_recording\": {{faker 'random.boolean'}},\n    \"record_audio_file\": {{faker 'random.boolean'}},\n    \"record_gallery_view\": {{faker 'random.boolean'}},\n    \"record_speaker_view\": {{faker 'random.boolean'}},\n    \"recording_audio_transcript\": {{faker 'random.boolean'}},\n    \"recording_disclaimer\": {{faker 'random.boolean'}},\n    \"recording_password_requirement\": {\n      \"have_letter\": {{faker 'random.boolean'}},\n      \"have_number\": {{faker 'random.boolean'}},\n      \"have_special_character\": {{faker 'random.boolean'}},\n      \"length\": {{faker 'random.number'}},\n      \"only_allow_numeric\": {{faker 'random.boolean'}}\n    },\n    \"save_chat_text\": {{faker 'random.boolean'}},\n    \"show_timestamp\": {{faker 'random.boolean'}}\n  },\n  \"schedule_meeting\": {\n    \"audio_type\": \"{{oneOf (array 'both' 'telephony' 'voip' 'thirdParty')}}\",\n    \"default_password_for_scheduled_meetings\": \"\",\n    \"embed_password_in_join_link\": {{faker 'random.boolean'}},\n    \"force_pmi_jbh_password\": {{faker 'random.boolean'}},\n    \"host_video\": {{faker 'random.boolean'}},\n    \"join_before_host\": {{faker 'random.boolean'}},\n    \"meeting_password_requirement\": {\n      \"consecutive_characters_length\": \"{{oneOf (array '0' '4' '5' '6' '7' '8')}}\",\n      \"have_letter\": {{faker 'random.boolean'}},\n      \"have_number\": {{faker 'random.boolean'}},\n      \"have_special_character\": {{faker 'random.boolean'}},\n      \"have_upper_and_lower_characters\": {{faker 'random.boolean'}},\n      \"length\": {{faker 'random.number'}},\n      \"only_allow_numeric\": {{faker 'random.boolean'}},\n      \"weak_enhance_detection\": {{faker 'random.boolean'}}\n    },\n    \"participants_video\": {{faker 'random.boolean'}},\n    \"personal_meeting\": {{faker 'random.boolean'}},\n    \"pmi_password\": \"\",\n    \"pstn_password_protected\": {{faker 'random.boolean'}},\n    \"require_password_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_pmi_meetings\": \"{{oneOf (array 'jbh_only' 'all' 'none')}}\",\n    \"require_password_for_scheduled_meetings\": {{faker 'random.boolean'}},\n    \"require_password_for_scheduling_new_meetings\": {{faker 'random.boolean'}},\n    \"use_pmi_for_instant_meetings\": {{faker 'random.boolean'}},\n    \"use_pmi_for_scheduled_meetings\": {{faker 'random.boolean'}}\n  },\n  \"telephony\": {\n    \"audio_conference_info\": \"\",\n    \"show_international_numbers_link\": {{faker 'random.boolean'}},\n    \"telephony_regions\": {\n      \"allowed_values\": [\n        \"\"\n      ],\n      \"selection_values\": [\n        \"\"\n      ]\n    },\n    \"third_party_audio\": {{faker 'random.boolean'}}\n  },\n  \"tsp\": {\n    \"call_out\": {{faker 'random.boolean'}},\n    \"call_out_countries\": [\n      \"\"\n    ],\n    \"show_international_numbers_link\": {{faker 'random.boolean'}}\n  }\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nUser settings returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n\n**Error Code:** `1120`<br>\nA valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update user settings",
                      "method": "patch",
                      "endpoint": "users/:userId/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `200`<br>\nUser settings updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code:** `1108`<br> Only Licensed or On-prem users can enable the large meeting feature.<br><br>\n**Error Code:** `1120`<br> A valid invitation to join the Zoom account was not found for this user. <br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.<br><br>**Error Code:** `1122`<br>\nWebinar feature can only be enabled for Licensed or On-prem users.<br><br>\n**Error Code:** `200`<br>\nYou can't add paid users.<br>\nYou can add max $maxNumber paid users.<br>\nYou can add max $maxNumber free users.<br>\nYou can add max $maxNumber Webinar 100 users.<br>\nYou can add max $maxNumber Webinar 500 users.<br>\nYou can add max $maxNumber Webinar 1000 users.<br>\nYou can add max $maxNumber Webinar 3000 users.<br>\nYou can add max $maxNumber Webinar 5000 users.<br>\nYou can add max $maxNumber Webinar 10000 users.<br>\nYou can add max $maxNumber Large 100 users.<br>\nYou can add max $maxNumber Large 200 users.<br>\nYou can add max $maxNumber Large 300 users.<br>\nYou can add max $maxNumber Large 500 users.<br>\nYou can add max $maxNumber Large 1000 users.<br>\nYou can add max $maxNumber paid users.<br>\n\n\n\n\n\n\n\n\n\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete virtual background files",
                      "method": "delete",
                      "endpoint": "users/:userId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204` **No Content** <br>\nDeleted.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad request** <br>\n**Error Code:** `300`<br>\nInvalid parameter: file_ids. <br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `1001`<br>\nUser not exist.<br>\nUser {userId} does not exist or does not belong to this account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Upload virtual background files",
                      "method": "post",
                      "endpoint": "users/:userId/settings/virtual_backgrounds",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"is_default\": {{faker 'random.boolean'}},\n  \"name\": \"\",\n  \"size\": \"\",\n  \"type\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201` **Created** <br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `120`<br>\nNo file uploaded, verify that a file has been uploaded.<br>\nFile size cannot exceed 15M.<br>\nA maximum of 10 files are allowed for a user.<br>\nOnly jpg/jpeg, gif or png image file can be uploaded.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\nGroup not found.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update user status",
                      "method": "put",
                      "endpoint": "users/:userId/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nStatus updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br><br>\n**Error Code:** `200`<br>\nZoom Room and Admin users' status can not be activated or deactivated.<br><br>\n**Error Code:** `3412`<br>Your request to activate the user was not approved at this time because your account has reached the permitted maximum number of $maxAllowedNumber basic users. Please remove existing basic user(s) from your Users list or the Pending Users list before attempting to activate this user.<br>\n**Error Code:** `2033`<br>Your request to activate the basic user was not approved because you have already reached the maximum basic user limit allowed in your account. For additional help regarding this issue, contact the Zoom Customer Support team.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Revoke a user's SSO token",
                      "method": "delete",
                      "endpoint": "users/:userId/token",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nToken deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a user token",
                      "method": "get",
                      "endpoint": "users/:userId/token",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"token\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nToken returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List user's TSP accounts",
                      "method": "get",
                      "endpoint": "users/:userId/tsp",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"tsp_accounts\": [\n    {\n      \"conference_code\": \"\",\n      \"dial_in_numbers\": [\n        {\n          \"code\": \"\",\n          \"country_label\": \"\",\n          \"number\": \"\",\n          \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n        }\n      ],\n      \"id\": \"{{oneOf (array '1' '2')}}\",\n      \"leader_pin\": \"\",\n      \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK**<br>\nTSP account list returned successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `2024`<br>\nAccount has not enabled TSP.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a user's TSP account",
                      "method": "post",
                      "endpoint": "users/:userId/tsp",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"conference_code\": \"\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"country_label\": \"\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n    }\n  ],\n  \"leader_pin\": \"\",\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nTSP account added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad Request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.<br>\n**Error Code:** `300`<br>\nYou can add a max of two tsp configs.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Set global dial-in URL for a TSP user",
                      "method": "patch",
                      "endpoint": "users/:userId/tsp/settings",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204` **No Content** <br>\nURL set successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br><br>\n**Error Code**: `2000`<br>\nNot TSP special account.<br>\n\nThs error means that the account does not have special TSP privilege. Contact Zoom Developer Support for details.<br>\n**Error Code**: `2024`<br>\n Account not enable TSP",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nUser ID not found.<br>\n**Error Code**: `1001`<br>\nUser {userId} not exist or not belong to this account.\n**Error Code**: `1120`<br>\nInvite not exist.\n\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a user's TSP account",
                      "method": "delete",
                      "endpoint": "users/:userId/tsp/:tspId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**Status Code:** `204` **No Content**<br>\nTSP account deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount not enable TSP.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:** `300`<br>\nAt least one tsp config must be available.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a user's TSP account",
                      "method": "get",
                      "endpoint": "users/:userId/tsp/:tspId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"conference_code\": \"\",\n  \"dial_in_numbers\": [\n    {\n      \"code\": \"\",\n      \"country_label\": \"\",\n      \"number\": \"\",\n      \"type\": \"{{oneOf (array 'toll' 'tollfree' 'media_link')}}\"\n    }\n  ],\n  \"id\": {{faker 'random.number'}},\n  \"leader_pin\": \"\",\n  \"tsp_bridge\": \"{{oneOf (array 'US_TSP_TB' 'EU_TSP_TB')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nTSP account retrieved successfully.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:** `300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:** `300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a TSP account",
                      "method": "patch",
                      "endpoint": "users/:userId/tsp/:tspId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:**`204` **No Content**<br>\nTSP account updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request.<br>\n**Error Code:**`2024`<br>\nAccount has not enabled TSP.<br>\n**Error Code:**`300`<br>\nThe TSP id provided does not exist.<br>\n**Error Code:**`300`<br>\nTSP Config does not exist.<br>\n**Error Code:**`300`<br>\nAt least one tsp config must be available.<br>\n**Error Code:**`300`<br>\nMedia link is required for AT&T TSP accounts.\n**Error Code:**`300`<br>\nInvalid parameter: tsp_bridge.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nNot Found.<br>\n**Error Code:** `1001`<br>\nUser does not exist: $userId.<br>\n**Error Code:**`1120`<br>\nA valid invitation to join the Zoom account was not found for this user.<br>\nThis error is thrown if you added a user in your account but the user did not accept the invitation on time and the invitation expired - thus making the userId invalid.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinar templates",
                      "method": "get",
                      "endpoint": "users/:userId/webinar_templates",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"templates\": [\n    {\n      \"id\": \"\",\n      \"name\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>\nList of existing templates returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Cannot use webinar API, you need to subscribe webinar plan and then enable webinar for this user:{userId}.<br>\n**Error Code:** `1001`<br>\n* User not exist: {userId}.\n* User {userId} does not exist or does not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinars",
                      "method": "get",
                      "endpoint": "users/:userId/webinars",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"next_page_token\": \"\",\n  \"page_count\": {{faker 'random.number'}},\n  \"page_number\": 1,\n  \"page_size\": 30,\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList of webinar objects returned.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a webinar",
                      "method": "post",
                      "endpoint": "users/:userId/webinars",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"registrants_confirmation_email\": {{faker 'random.boolean'}},\n  \"template_id\": \"\",\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nWebinar created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request**<br>\n**Error Code:** `200`\nSubscription plan for webinar is missing. Enable webinar for this user once the subscription plan is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found**<br><br>\n**Error Code:** `1001`<br>\nUser {userId} not exist or not belong to this account.\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a webinar",
                      "method": "delete",
                      "endpoint": "webinars/:webinarId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nWebinar deleted.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3002`<br>\nSorry, you cannot delete this webinar since it is in progress.<br>\n**Error Code:** `3003`<br>\nYou are not the webinar host.<br>\n**Error Code:** `3007`<br>\nSorry, you cannot delete this webinar since it has ended.<br>\n**Error Code:** `3018`<br>\nNot allowed to delete PMI.<br>\n**Error Code:** `3037`<br>\nNot allowed to delete PAC.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a webinar",
                      "method": "get",
                      "endpoint": "webinars/:webinarId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"host_email\": \"{{faker 'internet.email'}}\",\n  \"host_id\": \"\",\n  \"id\": {{faker 'random.number'}},\n  \"uuid\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nSuccess",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a webinar",
                      "method": "patch",
                      "endpoint": "webinars/:webinarId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar subscription plan is missing. Enable webinar for this user once the subscription is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nWebinar updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar Id.<br>\nInvalid recurrence settings.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Perform batch registration",
                      "method": "post",
                      "endpoint": "webinars/:webinarId/batch_registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"registrants\": [\n    {\n      \"email\": \"\",\n      \"join_url\": \"\",\n      \"registrant_id\": \"\"\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200` **OK** <br>\nRegistrants added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400` **Bad Request** <br>\n**Error Code:** `200`<br> Webinar plan is missing. You must subscribe to the webinar plan and enable webinar for this user: {0} in order to perform this action.<br><br>\n**Error Code:** `300`<br> \nThis API can only be used for scheduled webinar(webinar type: 5). Batch registration is not supported for other webinar types.<br><br>\n**Error Code:** `3038`<br>\nThis webinar is over, you can no longer register for this webinar. If you have any questions, please contact the webinar host.<br><br>\n**Error Code:** `3000`<br> Registration has not been enabled for this webinar: {0}.\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404` **Not Found** <br>\n**Error Code:** `3001`<br>\nWebinar does not exist: {0}.<br><br>\n**Error Code:** `3043`<br>\nWebinar has reached maximum attendee capacity.<br><br>\n**Error Code:** `404`<br>\nRegistration has not been enabled for this meeting: {meetingId}.\n\n\n\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove panelists",
                      "method": "delete",
                      "endpoint": "webinars/:webinarId/panelists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nPanelists removed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List panelists",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/panelists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"panelists\": [\n    {\n      \"id\": \"\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add panelists",
                      "method": "post",
                      "endpoint": "webinars/:webinarId/panelists",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription missing. Enable webinar for this user once the subscription is added.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"updated_at\": \"{{faker 'date.recent' 365}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nPanelist created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Remove a panelist",
                      "method": "delete",
                      "endpoint": "webinars/:webinarId/panelists/:panelistId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nPanelists removed.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {email} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List a webinar's polls ",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"polls\": [\n    {\n      \"id\": \"\",\n      \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n    }\n  ],\n  \"total_records\": {{faker 'random.number'}}\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nList polls of a Webinar  returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Create a webinar's poll",
                      "method": "post",
                      "endpoint": "webinars/:webinarId/polls",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nWebinar Poll Created",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  },
                                  {
                                      "key": "Content-Location",
                                      "value": ""
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinarId.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a webinar poll",
                      "method": "delete",
                      "endpoint": "webinars/:webinarId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nWebinar Poll deleted",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a webinar poll",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"status\": \"{{oneOf (array 'notstart' 'started' 'ended' 'sharing')}}\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar Poll object returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update a webinar poll",
                      "method": "put",
                      "endpoint": "webinars/:webinarId/polls/:pollId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>\nWebinar Poll Updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar poll not found.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List webinar registrants",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Add a webinar registrant",
                      "method": "post",
                      "endpoint": "webinars/:webinarId/registrants",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\",\n  \"join_url\": \"\",\n  \"registrant_id\": \"\",\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"topic\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 201,
                              "label": "**HTTP Status Code:** `201`<br>\nRegistration created.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID. <br>\nInvalid parameter: occurrence_ids.<br>\nInvalid user name.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3000`<br>\nThis webinar does not have registration as required:{webinarId}.<br>\n**Error Code:** `3027`<br>\nHost can not register.<br>\n**Error Code:** `3034`<br>\nIf you have been invited, please input your work email address.<br>\n**Error Code:** `3038`<br>\nWebinar is over, you can not register now. If you have any questions, please contact Webinar host.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>\n",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "List registration questions",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"custom_questions\": [\n    {\n      \"answers\": [\n        \"\"\n      ],\n      \"required\": {{faker 'random.boolean'}},\n      \"title\": \"\",\n      \"type\": \"{{oneOf (array 'short' 'single_radio' 'single_dropdown' 'multiple')}}\"\n    }\n  ],\n  \"questions\": [\n    {\n      \"field_name\": \"{{oneOf (array 'last_name' 'address' 'city' 'country' 'zip' 'state' 'phone' 'industry' 'org' 'job_title' 'purchasing_time_frame' 'role_in_purchase_process' 'no_of_employees' 'comments')}}\",\n      \"required\": {{faker 'random.boolean'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nWebinar Registrant Question object returned",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>Webinar not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registration questions",
                      "method": "patch",
                      "endpoint": "webinars/:webinarId/registrants/questions",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP Status Code:** `204`<br>Webinar Registrant Questions Updated",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>Webinar not found",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update registrant's status",
                      "method": "put",
                      "endpoint": "webinars/:webinarId/registrants/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`<br>\nThe webinar plan subscription is missing. Enable webinar for this user once the subscription is added: {userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "**HTTP Status Code:** `300`<br>Invalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3035`<br>\nWebinar has reached maximum attendee capacity.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Delete a webinar registrant",
                      "method": "delete",
                      "endpoint": "webinars/:webinarId/registrants/:registrantId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "**HTTP status code:** `204` <br>\nOK",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP status code:** `400` <br>\nBad Request<br>\n\n**Error code:** `200`<br>\nWebinar plan is missing. You must subscribe to the webinar plan and enable webinars for this user in order to perform this action: {0}.<br>\n\n**Error code:** `300`<br>\nThe value that you entered for the Registrant ID field is invalid. Enter a valid value and try again.<br>\n\n**Error code:** `404` <br>\nRegistration has not been enabled for this webinar: {0}.<br>\n\n**Error code:** `3000` <br>\nRegistrant {0} was not found.<br>\n\n**Error code:** `3001` <br>\nWebinar does not exist: {0}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get a webinar registrant",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/registrants/:registrantId",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"id\": \"\"\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Success.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 300,
                              "label": "Invalid webinar ID.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Update webinar status",
                      "method": "put",
                      "endpoint": "webinars/:webinarId/status",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 204,
                              "label": "Webinar's status updated.",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 400,
                              "label": "**HTTP Status Code:** `400`<br>\nBad request<br>\n**Error Code:** `1010`<br>\nUser does not belong to this account:{accountId}.<br>\n**Error Code:** `3003`<br>\nYou are not the meeting host.<br>\n**Error Code:** `3063`<br>\nCan not end on-premise user's meeting:{meetingId}.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          },
                          {
                              "uuid": "",
                              "body": "",
                              "latency": 0,
                              "statusCode": 404,
                              "label": "**HTTP Status Code:** `404`<br>\nWebinar not found.<br>\n**Error Code:** `1001`<br>\nUser {userId} does not exist or does not belong to this account.<br>\n**Error Code:** `3001`<br>\nWebinar {webinarId} not found or has expired.<br>",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  },
                  {
                      "uuid": "",
                      "documentation": "Get webinar tracking sources",
                      "method": "get",
                      "endpoint": "webinars/:webinarId/tracking_sources",
                      "responses": [
                          {
                              "uuid": "",
                              "body": "{\n  \"total_records\": {{faker 'random.number'}},\n  \"tracking_sources\": [\n    {\n      \"id\": \"\",\n      \"registration_count\": {{faker 'random.number'}},\n      \"source_name\": \"\",\n      \"tracking_url\": \"\",\n      \"visitor_count\": {{faker 'random.number'}}\n    }\n  ]\n}",
                              "latency": 0,
                              "statusCode": 200,
                              "label": "**HTTP Status Code:** `200`",
                              "headers": [
                                  {
                                      "key": "Content-Type",
                                      "value": "application/json"
                                  }
                              ],
                              "filePath": "",
                              "sendFileAsBody": false,
                              "rules": [],
                              "rulesOperator": "OR",
                              "disableTemplating": false,
                              "fallbackTo404": false
                          }
                      ],
                      "enabled": true,
                      "randomResponse": false,
                      "sequentialResponse": false
                  }
              ],
              "proxyMode": false,
              "proxyHost": "",
              "proxyRemovePrefix": false,
              "https": false,
              "cors": true,
              "headers": [],
              "proxyReqHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ],
              "proxyResHeaders": [
                  {
                      "key": "",
                      "value": ""
                  }
              ]
          }
      }
  ]
}
