{
    "source": "mockoon:1.15.0",
    "data": [
        {
            "type": "environment",
            "item": {
                "uuid": "",
                "lastMigration": 17,
                "name": "CircleCI REST API",
                "endpointPrefix": "api/v1",
                "latency": 0,
                "port": 3000,
                "hostname": "0.0.0.0",
                "routes": [
                    {
                        "uuid": "",
                        "documentation": "Provides information about the signed in user.\n",
                        "method": "get",
                        "endpoint": "me",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"admin\": {{faker 'random.boolean'}},\n  \"all_emails\": [\n    \"{{faker 'internet.email'}}\"\n  ],\n  \"analytics_id\": \"\",\n  \"avatar_url\": \"\",\n  \"basic_email_prefs\": \"\",\n  \"bitbucket\": {{faker 'random.number'}},\n  \"bitbucket_authorized\": {{faker 'random.boolean'}},\n  \"containers\": {{faker 'random.number'}},\n  \"created_at\": \"{{faker 'date.recent' 365}}\",\n  \"days_left_in_trial\": {{faker 'random.number'}},\n  \"dev_admin\": {{faker 'random.boolean'}},\n  \"enrolled_betas\": [\n    \"\"\n  ],\n  \"github_id\": {{faker 'random.number'}},\n  \"github_oauth_scopes\": [\n    \"\"\n  ],\n  \"gravatar_id\": {{faker 'random.number'}},\n  \"heroku_api_key\": \"\",\n  \"in_beta_program\": {{faker 'random.boolean'}},\n  \"login\": \"\",\n  \"name\": \"\",\n  \"organization_prefs\": {},\n  \"parallelism\": {{faker 'random.number'}},\n  \"plan\": \"\",\n  \"projects\": {},\n  \"pusher_id\": \"\",\n  \"selected_email\": \"{{faker 'internet.email'}}\",\n  \"sign_in_count\": {{faker 'random.number'}},\n  \"trial_end\": \"{{faker 'date.recent' 365}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "signed in user",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Build summary for each of the last 30 builds for a single git repo.\n",
                        "method": "get",
                        "endpoint": "project/:username/:project",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body\": \"\",\n    \"branch\": \"\",\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"build_url\": \"\",\n    \"committer_email\": \"{{faker 'internet.email'}}\",\n    \"committer_name\": \"\",\n    \"dont_build\": \"\",\n    \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n    \"previous\": {\n      \"build_num\": {{faker 'random.number'}},\n      \"build_time_millis\": {{faker 'random.number'}},\n      \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n    },\n    \"queued_at\": \"{{faker 'date.recent' 365}}\",\n    \"reponame\": \"\",\n    \"retry_of\": {{faker 'random.number'}},\n    \"start_time\": \"{{faker 'date.recent' 365}}\",\n    \"stop_time\": \"{{faker 'date.recent' 365}}\",\n    \"subject\": \"\",\n    \"username\": \"\",\n    \"vcs_url\": \"\",\n    \"why\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Build summary for each of the last 30 builds",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Triggers a new build, returns a summary of the build.\n",
                        "method": "post",
                        "endpoint": "project/:username/:project",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"added_at\": \"{{faker 'date.recent' 365}}\",\n  \"build_num\": {{faker 'random.number'}},\n  \"outcome\": \"{{oneOf (array 'canceled' 'infrastructure_fail' 'timedout' 'failed' 'no_tests' 'success')}}\",\n  \"pushed_at\": \"{{faker 'date.recent' 365}}\",\n  \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\",\n  \"vcs_revision\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "returns a summary of the build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Clears the cache for a project.\n",
                        "method": "delete",
                        "endpoint": "project/:username/:project/build-cache",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"status\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "status message",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists checkout keys.\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/checkout-key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"fingerprint\": \"\",\n    \"preferred\": {{faker 'random.boolean'}},\n    \"public_key\": \"\",\n    \"time\": \"{{faker 'date.recent' 365}}\",\n    \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "checkout keys",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Creates a new checkout key.\nOnly usable with a user API token.\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/checkout-key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"fingerprint\": \"\",\n  \"preferred\": {{faker 'random.boolean'}},\n  \"public_key\": \"\",\n  \"time\": \"{{faker 'date.recent' 365}}\",\n  \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "checkout key",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Delete a checkout key.\n",
                        "method": "delete",
                        "endpoint": "project/:username/:project/checkout-key/:fingerprint",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"message\": \"{{oneOf (array 'OK')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "status message",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Get a checkout key.\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/checkout-key/:fingerprint",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"fingerprint\": \"\",\n  \"preferred\": {{faker 'random.boolean'}},\n  \"public_key\": \"\",\n  \"time\": \"{{faker 'date.recent' 365}}\",\n  \"type\": \"{{oneOf (array 'deploy-key' 'github-user-key')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "checkout key",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Lists the environment variables for :project\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/envvar",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"name\": \"\",\n    \"value\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "XXX",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Creates a new environment variable\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/envvar",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "XXX",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Deletes the environment variable named ':name'\n",
                        "method": "delete",
                        "endpoint": "project/:username/:project/envvar/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"message\": \"{{oneOf (array 'OK')}}\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Deletes the environment variable named ':name'\n",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Gets the hidden value of environment variable :name\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/envvar/:name",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"name\": \"\",\n  \"value\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "XXX",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Create an ssh key used to access external systems that require SSH key-based authentication\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/ssh-key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"message\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "no response expected",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Triggers a new build, returns a summary of the build.\nOptional build parameters can be set using an experimental API.\n\nNote: For more about build parameters, read about [using parameterized builds](https://circleci.com/docs/parameterized-builds/)\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/tree/:branch",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'random.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'random.number'}},\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 201,
                                "label": "returns a summary of the build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    },
                                    {
                                        "key": "Location",
                                        "value": ""
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Full details for a single build. The response includes all of the fields from the build summary.\nThis is also the payload for the [notification webhooks](/docs/configuration/#notify), in which case this object is the value to a key named 'payload'.\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/:build_num",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"all_commit_details\": [\n    {\n      \"author_date\": \"{{faker 'date.recent' 365}}\",\n      \"author_email\": \"{{faker 'internet.email'}}\",\n      \"author_login\": \"\",\n      \"author_name\": \"\",\n      \"body\": \"\",\n      \"commit\": \"\",\n      \"commit_url\": \"\",\n      \"committer_date\": \"{{faker 'date.recent' 365}}\",\n      \"committer_email\": \"{{faker 'internet.email'}}\",\n      \"committer_login\": \"\",\n      \"committer_name\": \"\",\n      \"subject\": \"\"\n    }\n  ],\n  \"compare\": \"\",\n  \"job_name\": \"\",\n  \"node\": \"\",\n  \"previous_successful_build\": {\n    \"build_num\": {{faker 'random.number'}},\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"retries\": {{faker 'random.boolean'}},\n  \"ssh_enabled\": {{faker 'random.boolean'}},\n  \"timedout\": {{faker 'random.boolean'}},\n  \"usage_queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"user\": {\n    \"admin\": {{faker 'random.boolean'}},\n    \"all_emails\": [\n      \"{{faker 'internet.email'}}\"\n    ],\n    \"analytics_id\": \"\",\n    \"avatar_url\": \"\",\n    \"basic_email_prefs\": \"\",\n    \"bitbucket\": {{faker 'random.number'}},\n    \"bitbucket_authorized\": {{faker 'random.boolean'}},\n    \"containers\": {{faker 'random.number'}},\n    \"created_at\": \"{{faker 'date.recent' 365}}\",\n    \"days_left_in_trial\": {{faker 'random.number'}},\n    \"dev_admin\": {{faker 'random.boolean'}},\n    \"enrolled_betas\": [\n      \"\"\n    ],\n    \"github_id\": {{faker 'random.number'}},\n    \"github_oauth_scopes\": [\n      \"\"\n    ],\n    \"gravatar_id\": {{faker 'random.number'}},\n    \"heroku_api_key\": \"\",\n    \"in_beta_program\": {{faker 'random.boolean'}},\n    \"login\": \"\",\n    \"name\": \"\",\n    \"organization_prefs\": {},\n    \"parallelism\": {{faker 'random.number'}},\n    \"plan\": \"\",\n    \"projects\": {},\n    \"pusher_id\": \"\",\n    \"selected_email\": \"{{faker 'internet.email'}}\",\n    \"sign_in_count\": {{faker 'random.number'}},\n    \"trial_end\": \"{{faker 'date.recent' 365}}\"\n  }\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Full details for a single build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List the artifacts produced by a given build.\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/:build_num/artifacts",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"node_index\": {{faker 'random.number'}},\n    \"path\": \"\",\n    \"pretty_path\": \"\",\n    \"url\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List the artifacts produced by a given build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Cancels the build, returns a summary of the build.\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/:build_num/cancel",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'random.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'random.number'}},\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "returns a summary of the build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Retries the build, returns a summary of the new build.\n",
                        "method": "post",
                        "endpoint": "project/:username/:project/:build_num/retry",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"body\": \"\",\n  \"branch\": \"\",\n  \"build_time_millis\": {{faker 'random.number'}},\n  \"build_url\": \"\",\n  \"committer_email\": \"{{faker 'internet.email'}}\",\n  \"committer_name\": \"\",\n  \"dont_build\": \"\",\n  \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n  \"previous\": {\n    \"build_num\": {{faker 'random.number'}},\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n  },\n  \"queued_at\": \"{{faker 'date.recent' 365}}\",\n  \"reponame\": \"\",\n  \"retry_of\": {{faker 'random.number'}},\n  \"start_time\": \"{{faker 'date.recent' 365}}\",\n  \"stop_time\": \"{{faker 'date.recent' 365}}\",\n  \"subject\": \"\",\n  \"username\": \"\",\n  \"vcs_url\": \"\",\n  \"why\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "returns a summary of the new build",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Provides test metadata for a build\nNote: [Learn how to set up your builds to collect test metadata](https://circleci.com/docs/test-metadata/)\n",
                        "method": "get",
                        "endpoint": "project/:username/:project/:build_num/tests",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"tests\": [\n    {\n      \"classname\": \"\",\n      \"file\": \"\",\n      \"message\": \"\",\n      \"name\": \"\",\n      \"result\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\",\n      \"run_time\": {{faker 'random.number'}},\n      \"source\": \"\"\n    }\n  ]\n}",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "test metadata for a build\n",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "List of all the projects you're following on CircleCI, with build information organized by branch.\n",
                        "method": "get",
                        "endpoint": "projects",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"aws\": {\n      \"keypair\": \"\"\n    },\n    \"branches\": {},\n    \"campfire_notify_prefs\": \"\",\n    \"campfire_room\": \"\",\n    \"campfire_subdomain\": \"\",\n    \"campfire_token\": \"\",\n    \"compile\": \"\",\n    \"default_branch\": \"\",\n    \"dependencies\": \"\",\n    \"extra\": \"\",\n    \"feature_flags\": {\n      \"build-fork-prs\": {{faker 'random.boolean'}},\n      \"fleet\": {{faker 'random.boolean'}},\n      \"junit\": {{faker 'random.boolean'}},\n      \"oss\": {{faker 'random.boolean'}},\n      \"osx\": {{faker 'random.boolean'}},\n      \"set-github-status\": {{faker 'random.boolean'}},\n      \"trusty-beta\": {{faker 'random.boolean'}}\n    },\n    \"flowdock_api_token\": \"\",\n    \"followed\": {{faker 'random.boolean'}},\n    \"has_usable_key\": {{faker 'random.boolean'}},\n    \"heroku_deploy_user\": \"\",\n    \"hipchat_api_token\": \"\",\n    \"hipchat_notify\": \"\",\n    \"hipchat_notify_prefs\": \"\",\n    \"hipchat_room\": \"\",\n    \"irc_channel\": \"\",\n    \"irc_keyword\": \"\",\n    \"irc_notify_prefs\": \"\",\n    \"irc_password\": \"\",\n    \"irc_server\": \"\",\n    \"irc_username\": \"\",\n    \"language\": \"\",\n    \"oss\": {{faker 'random.boolean'}},\n    \"parallel\": {{faker 'random.number'}},\n    \"reponame\": \"\",\n    \"scopes\": [\n      \"{{oneOf (array 'write-settings' 'view-builds' 'read-settings' 'trigger-builds' 'all' 'status' 'none')}}\"\n    ],\n    \"setup\": \"\",\n    \"slack_api_token\": \"\",\n    \"slack_channel\": \"\",\n    \"slack_channel_override\": \"\",\n    \"slack_notify_prefs\": \"\",\n    \"slack_subdomain\": \"\",\n    \"slack_webhook_url\": \"\",\n    \"ssh_keys\": [\n      \"\"\n    ],\n    \"test\": \"\",\n    \"username\": \"\",\n    \"vcs_type\": \"\",\n    \"vcs_url\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "List of all the projects you're following on CircleCI\n",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Build summary for each of the last 30 recent builds, ordered by build_num.\n",
                        "method": "get",
                        "endpoint": "recent-builds",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "[\n  {\n    \"body\": \"\",\n    \"branch\": \"\",\n    \"build_time_millis\": {{faker 'random.number'}},\n    \"build_url\": \"\",\n    \"committer_email\": \"{{faker 'internet.email'}}\",\n    \"committer_name\": \"\",\n    \"dont_build\": \"\",\n    \"lifecycle\": \"{{oneOf (array 'queued' 'scheduled' 'not_run' 'not_running' 'running' 'finished')}}\",\n    \"previous\": {\n      \"build_num\": {{faker 'random.number'}},\n      \"build_time_millis\": {{faker 'random.number'}},\n      \"status\": \"{{oneOf (array 'retried' 'canceled' 'infrastructure_fail' 'timedout' 'not_run' 'running' 'failed' 'queued' 'scheduled' 'not_running' 'no_tests' 'fixed' 'success')}}\"\n    },\n    \"queued_at\": \"{{faker 'date.recent' 365}}\",\n    \"reponame\": \"\",\n    \"retry_of\": {{faker 'random.number'}},\n    \"start_time\": \"{{faker 'date.recent' 365}}\",\n    \"stop_time\": \"{{faker 'date.recent' 365}}\",\n    \"subject\": \"\",\n    \"username\": \"\",\n    \"vcs_url\": \"\",\n    \"why\": \"\"\n  }\n]",
                                "latency": 0,
                                "statusCode": 200,
                                "label": "Build summary for each of the last 30 recent builds",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    },
                    {
                        "uuid": "",
                        "documentation": "Adds your Heroku API key to CircleCI, takes apikey as form param name.\n",
                        "method": "post",
                        "endpoint": "user/heroku-key",
                        "responses": [
                            {
                                "uuid": "",
                                "body": "{\n  \"message\": \"\"\n}",
                                "latency": 0,
                                "statusCode": 403,
                                "label": "Your Heroku API key is invalid.\n",
                                "headers": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "filePath": "",
                                "sendFileAsBody": false,
                                "rules": [],
                                "rulesOperator": "OR",
                                "disableTemplating": false,
                                "fallbackTo404": false
                            }
                        ],
                        "enabled": true,
                        "randomResponse": false,
                        "sequentialResponse": false
                    }
                ],
                "proxyMode": false,
                "proxyHost": "",
                "proxyRemovePrefix": false,
                "https": false,
                "cors": true,
                "headers": [],
                "proxyReqHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ],
                "proxyResHeaders": [
                    {
                        "key": "",
                        "value": ""
                    }
                ]
            }
        }
    ]
}
